diff --git a/.github/CONTRIBUTING.md b/.github/CONTRIBUTING.md
new file mode 100644
index 000000000..72b3cc280
--- /dev/null
+++ b/.github/CONTRIBUTING.md
@@ -0,0 +1,65 @@
+# Contributing Guidelines
+
+Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional
+documentation, we greatly value feedback and contributions from our community.
+
+Please read through this document before submitting any issues or pull requests to ensure we have all the necessary
+information to effectively respond to your bug report or contribution.
+
+
+## Reporting Bugs/Feature Requests
+
+We welcome you to use the GitHub issue tracker to report bugs or suggest features.
+
+When filing an issue, please check existing open, or recently closed, issues to make sure somebody else hasn't already
+reported the issue. Please try to include as much information as you can. Details like these are incredibly useful:
+
+* A reproducible test case or series of steps
+* The version of our code being used
+* Any modifications you've made relevant to the bug
+* Anything unusual about your environment or deployment
+
+
+## Contributing via Pull Requests
+Contributions via pull requests are much appreciated. Before sending us a pull request, please ensure that:
+
+1. You are working against the latest source on the *master* branch.
+2. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already.
+3. You open an issue to discuss any significant work - we would hate for your time to be wasted.
+
+To send us a pull request, please:
+
+1. Ensure you are considering a change to AWS source code (FreeRTOS kernel, AWS libraries).  Proposed changes to 3rd party code should be submitted instead to the 3rd party.
+2. Fork the repository.
+3. Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change.
+4. Ensure local tests pass.
+5. Commit to your fork using clear commit messages.
+6. Send us a pull request, answering any default questions in the pull request interface.
+7. Pay attention to any automated CI failures reported in the pull request, and stay involved in the conversation.
+
+GitHub provides additional document on [forking a repository](https://help.github.com/articles/fork-a-repo/) and
+[creating a pull request](https://help.github.com/articles/creating-a-pull-request/).
+
+## Getting Your Pull Request Merged
+All Pull Requests must be approved by our review team before it can be merged in. We appreciate your patience while pull requests are reviewed as the time taken will depend on its complexity and wider implications.
+
+
+## Finding contributions to work on
+Looking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.
+
+
+## Code of Conduct
+This project has adopted the [Amazon Open Source Code of Conduct](https://aws.github.io/code-of-conduct).
+For more information see the [Code of Conduct FAQ](https://aws.github.io/code-of-conduct-faq) or contact
+opensource-codeofconduct@amazon.com with any additional questions or comments.
+
+
+## Security issue notifications
+If you discover a potential security issue in this project we ask that you notify AWS/Amazon Security via our [vulnerability reporting page](http://aws.amazon.com/security/vulnerability-reporting/). Please do **not** create a public github issue.
+
+
+## Licensing
+
+See the LICENSE file for our project's licensing. We will ask you to confirm the licensing of your contribution.
+
+We may ask you to sign a [Contributor License Agreement (CLA)](http://en.wikipedia.org/wiki/Contributor_License_Agreement) for larger changes.
diff --git a/.gitignore b/.gitignore
index a33170daf..d5b2947be 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,6 +1,8 @@
 # Ignore uncrustify backups
 *.unc*
 doc/html/*
+doc/output/*
+doc/tag/*
 /.metadata/
 .vscode/*
 *.o
diff --git a/CHANGELOG.md b/CHANGELOG.md
index 12b246aa6..771cdb2d3 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,11 +1,22 @@
 # Change Log for Amazon FreeRTOS
 
+## 201908.00 08/26/2019
+
 ### New Features
+#### New Board:Nuvoton NuMaker-IoT-M487
+- Nuvoton NuMaker-IoT-M487 is now qualified for Amazon FreeRTOS.
+- Disclaimer on RNG: The random number generation solution in this port is for demonstration purposes only. 
+
 #### FreeRTOS Kernel V10.2.1
 - Kernel version for Amazon FreeRTOS is updated to V10.2.1.
 - Add ARM Cortex-M23 (ARMv8-M) GCC/ARMclang and IAR ports.
 - Add support to automatically switch between 32-bit and 64-bit cores to RISC-V port.
 
+#### HTTPS Client Library V1.0.0
+- The HTTPS Client library for Amazon FreeRTOS supports the HTTP/1.1 protocol over TLS. 
+- The current request methods supported are GET and HEAD.
+- Examples demonstrate downloading a file from S3 using GET with a pre-signed URL.
+
 ### Updates
 #### PKCS #11
 - Update the Amazon FreeRTOS mbedTLS-based PKCS #11 implementation, tests, demos, and PKCS #11 consuming libraries for compliance with standard.
@@ -21,6 +32,9 @@
 ### Test Updates
 - Remove elliptic curve tests from "quarantine" test group and add them back to the TLS test group.
 
+#### AWS OTA Agent
+- OTA Callback changes for custom and secondary processor jobs. Modifying the OTA Agent to use callback structure instead of directly calling PAL functions. This allows users to pass in custom callbacks for the PAL functions.
+
 ## 201906.00 Major 06/17/2019
 ### Release Versioning
 - Move Amazon FreeRTOS to a new versioning scheme (YYYYMM.NN [optional "Major" tag]), while retaining semantic versioning (x.y.z) used for individual libraries within Amazon FreeRTOS. This release contains multiple major version updates for individual libraries. See below for details.
@@ -319,13 +333,13 @@ Applications calling into PKCS #11 functions directly (rather than indirectly vi
 - C_Initialize handles initialization of randomness in an effort to minimize entropy generation (or seed access) every time sessions are created and destroyed.  To protect random values, thread safety has been enabled in mbedTLS.
 - C_SignInit and C_VerifyInit utilize the key handle that is passed in, rather than the first key found in order to comply with the PKCS #11 standard
 - C_FindObject APIs no longer instantiate keys from the aws_clientcredential_keys.h header file if keys are not found. This removes the dependency of PKCS #11 on values that will be unique per-device (a transition step for enabling production-scale provisioning). Note that calling vDevModeKeyProvisioning() is now necessary to provision the device.
-- C_FindObject PKCS #11 objects can be looked up by CKA_LABEL, in order to provide a standard-compliant object lookup.  Note that pkcs11configFILE_NAME_* configurations have been removed from aws_pkcs11_config.h, see iot_pkcs11.h for pkcs11configLABEL_* defines to access labels, and iot_pkcs11_pal.c for pkcs11palFILE_NAME_* defines.
+- C_FindObject PKCS #11 objects can be looked up by CKA_LABEL, in order to provide a standard-compliant object lookup.  Note that pkcs11configFILE_NAME_* configurations have been removed from aws_pkcs11_config.h, see aws_pkcs11.h for pkcs11configLABEL_* defines to access labels, and aws_pkcs11_pal.c for pkcs11palFILE_NAME_* defines.
 - C_FindObject and C_GetAttributeValue accept different attribute arguments.
 - C_CreateObject requires DER encoded certificates and keys instead of PEM formatted and object attributes required for creating objects have changed.  Note that vDevModeKeyProvisioning() has been updated to supply required attributes and convert inputs from DER to PEM if necessary.
 - C_GenerateKeyPair now stores keys in non-volatile memory.
 - C_Finalize is no longer invoked by helper functions to prevent threads from interfering with each other's PKCS #11 instances.
 - Some error codes have been changes to better match the PKCS #11 standard.
-- iot_tls.c and PKCS #11 AFQP tests have updates to reflect these changes.
+- aws_tls.c and PKCS #11 AFQP tests have updates to reflect these changes.
     - mbedTLS-based PKCS #11 V1.0.5
     - TLS V1.1.3
 
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4c33e3f7a..8e607090c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -6,8 +6,8 @@ if("${CMAKE_SOURCE_DIR}" STREQUAL "${CMAKE_BINARY_DIR}")
 endif()
 
 project(amazon-freertos)
-set(PROJECT_VERSION "201906.00 Major")
-set(PROJECT_VERSION_MAJOR "201906")
+set(PROJECT_VERSION "201908.00")
+set(PROJECT_VERSION_MAJOR "201908")
 set(PROJECT_VERSION_MINOR "00")
 
 # Import global configurations.
diff --git a/README.md b/README.md
index 2b2a33bf5..d1ce14181 100644
--- a/README.md
+++ b/README.md
@@ -46,8 +46,14 @@ The following MCU boards are supported for Amazon FreeRTOS:
 13. **Marvell MW322** - [Marvell MW322 AWS IoT Starter Kit](https://www.marvell.com/microcontrollers/aws-iot-starter-kit/)
     * [Getting Started Guide](https://docs.aws.amazon.com/freertos/latest/userguide/getting_started_marvell322.html)
 14. **Nordic nRF52840 DK** - [nRF52840 DK Development kit](https://www.nordicsemi.com/Software-and-Tools/Development-Kits/nRF52840-DK/)
-    * [Getting Started Guide](https://docs.aws.amazon.com/freertos/latest/userguide/getting_started_nordic.html)
-15. **Windows Simulator** - To evaluate Amazon FreeRTOS without using MCU-based hardware, you can use the Windows Simulator.
+    * [Getting Started Guide](https://docs.aws.amazon.com/freertos/latest/userguide/getting_started_nordic.html)  
+15. **Nuvoton** - [NuMaker-IoT-M487](https://direct.nuvoton.com/en/numaker-iot-m487)
+    * [Getting Started Guide](https://docs.aws.amazon.com/freertos/latest/userguide/getting-started-nuvoton-m487.html)
+16. **Windows Simulator** - To evaluate Amazon FreeRTOS without using MCU-based hardware, you can use the Windows Simulator.
     * Requirements: Microsoft Windows 7 or newer, with at least a dual core and a hard-wired Ethernet connection
     * [Getting Started Guide](https://docs.aws.amazon.com/freertos/latest/userguide/getting_started_windows.html)
     * IDE: [Visual Studio Community Edition](https://www.visualstudio.com/downloads/)
+
+
+## amazon-freeRTOS/projects
+The ```./projects``` folder contains the IDE test and demo projects for each vendor and their boards. The majority of boards can be built with both IDE and cmake (there are some exceptions!). Please refer to the Getting Started Guides above for board specific instructions.
diff --git a/checksums.json b/checksums.json
index 27e7fa896..5df584815 100644
--- a/checksums.json
+++ b/checksums.json
@@ -1,1086 +1,1189 @@
 {
-    "demos/CMakeLists.txt": "339fd13a5cd71bffcd277797bf8a70d765d9c842c7904a7c6977c900c789ef0c", 
-    "demos/README.md": "0bcf0fe45efb3156a87860cda18eb9d219679310b08469db3631983843785252", 
-    "demos/ble/CMakeLists.txt": "f7fed40866933cf3adf7d518b252b5b362d7155b4b776bd31402cfb14764950f", 
-    "demos/ble/README.md": "74470be4344309d26227c7bd63f21e63d41a3a9dd61db6c255364b96d52cf802", 
-    "demos/ble/aws_ble_gatt_server_demo.c": "fd00e8c6177f8398465435d3cd36d4233f83eaaf3595fb8d5fc86060b4feeed4", 
-    "demos/ble/iot_ble_numericComparison.c": "0675c89ee8332cf2a489958a8b9068b56516df9975c7c7503a2f11a8a5abd599", 
-    "demos/defender/CMakeLists.txt": "b3f4010fd23f131d054f5167aba38f466bc360b351e16ba2add61be2451d5357", 
-    "demos/defender/aws_iot_demo_defender.c": "bba423ade353f537754f547ff0b13044b1cacbb3d5ca93cce2fb9b8eb1d02ab8", 
-    "demos/demo_runner/aws_demo.c": "fc9e8a4c19b20cf9ce3d3f45e3c2b231b0fa60f3691adf9b53cb3002047ca7b5", 
-    "demos/demo_runner/aws_demo_network_addr.c": "1a341231a798cedc8df80cec4cd009965b60e3067bdc34c216e6d41b0fa5dbe8", 
-    "demos/demo_runner/aws_demo_version.c": "3bf45bd213d52ea60dc9da0ed96b1010f4316a1eee516787bf3b4ac7c35b1b9e", 
-    "demos/demo_runner/iot_demo_freertos.c": "b3ca11f447194203baad58b7ebad4cfa840354e0245f9fb027bbff304d00d16b", 
-    "demos/demo_runner/iot_demo_runner.c": "938cd83e991e32ddb4cb18407a357451b1ee68ef7559bb5ade1fb93e1dc7d267", 
-    "demos/dev_mode_key_provisioning/CMakeLists.txt": "9fb8f3b0f23ff95f7327b1e171b1dfc20ace857418ef057b1fde36ab43ceeef0", 
-    "demos/dev_mode_key_provisioning/include/aws_dev_mode_key_provisioning.h": "d55db1a942d47dda6ad02679b9d4ba658a03b1561d4fb071e76467f6fad4b8ed", 
-    "demos/dev_mode_key_provisioning/src/aws_dev_mode_key_provisioning.c": "1940bea5ee7b4f586d3b71e55dfe407c94c20ae508802935091ead56743089aa", 
-    "demos/dev_mode_key_provisioning/src/pem2der.c": "ac3c7900f2642651f833a8a114b73300e4a8e281b74fa5289e4c85482d0a64cc", 
-    "demos/directories.txt": "0ed33bbd11f35946b344ce5d5f9b0feadd6e6cb16ab7cd6aa21f4402b53d39f4", 
-    "demos/greengrass_connectivity/CMakeLists.txt": "91eaa38c6c8e1bb474f3a16b7d88e6cf0c3f67a10ea4577488991f57208214b9", 
-    "demos/greengrass_connectivity/README.md": "a417c7405549c3ffc096945d1128d1ab874304a8bba38777bb2db369e1b42287", 
-    "demos/greengrass_connectivity/aws_greengrass_discovery_demo.c": "71635884750fc78de5000a855ea391f0702dc804c374377ad0bb9ac3ca6c690d", 
-    "demos/include/aws_application_version.h": "df1a824b2b300e39c9cb9c7fe62348c927716c26bbe026530a7b2f95a46a27f5", 
-    "demos/include/aws_ble_gatt_server_demo.h": "035b596c8f3c3277e9b8419bc2bc8b567bb8cea5198ab6498a2a8d0498b22eec", 
-    "demos/include/aws_clientcredential.h": "bff2dae6e4920551e533abbbb7b434f141125adb2bf52952dcbaf98e8e1123b4", 
-    "demos/include/aws_clientcredential_keys.h": "aefa5915437a648241fc7c3b5eb640697cf3f5238e1788ca0eb46fa2b6b98dac", 
-    "demos/include/aws_demo.h": "d16945a9524d743851bb7258d0488b26ee0a4dd70506b25adeedb07a93e59466", 
-    "demos/include/aws_iot_demo_network.h": "33cd447aeed2631fb57048472c077ac848e520403247a42c03d5a49bdbf88655", 
-    "demos/include/aws_ota_codesigner_certificate.h": "6d30ed4207b7ec1c39535760a0cb880e9613b6813901e4825cfb91ff1c4765b6", 
-    "demos/include/aws_wifi_connect_task.h": "b69268779cf9c81588a3f6bd9731370b6ed4d7d0dc4feb7aad4e709d62f1a8d3", 
-    "demos/include/iot_ble_numericComparison.h": "d33b1112fd6716f59e998cf9d5d77dad5e87005e17405835feb55d0eac298bd8", 
-    "demos/include/iot_config_common.h": "aee15d611f02ed25e59a50e1cb87a33fbf0e7580924f802f93741cbebea97ccf", 
-    "demos/include/iot_demo_logging.h": "a17e3185886361b14ebc2f7bcfb7d79c176a2b0cbbfbc08bf99199cf51873ee6", 
-    "demos/include/iot_demo_runner.h": "bdc3c6accacff8b4d66538124271de0b3072d9fa2aa20cec0077ec7f04368607", 
-    "demos/mqtt/CMakeLists.txt": "f9437bd68ed1d15877153eb2a56646745ff7f87ef876b4016b201c34699a97a5", 
-    "demos/mqtt/iot_demo_mqtt.c": "ead58e5355a379a99a09d7060818e0ce39b5ff1e98273f723a79cc20d11f80cf", 
-    "demos/network_manager/aws_iot_demo_network.c": "ce48d6d06f0a5c4f7a32cd8725a0c539a39422ba04c8d124f9bb1dabf4cafee2", 
-    "demos/network_manager/aws_iot_network_manager.c": "7297492dc14ff8111df7ef8f51d510bf36d7f53d8e1634a575cf1ee5e5216a17", 
-    "demos/network_manager/iot_network_manager_private.h": "1a65896d703e120b3a85a25f25ee803adb8fbdaa5f325bfc532fcc12129acba8", 
-    "demos/ota/CMakeLists.txt": "2aba153577b863ce3ba38bc81f5425aa622e394a887261408ec58d796baccb91", 
-    "demos/ota/aws_iot_ota_update_demo.c": "ce3bd2d06ab940a64b54af77036faf983792053facdff673c088ddf23b75c8e8", 
-    "demos/posix/CMakeLists.txt": "2ebbf9aac42e713a1b851c61fa9307be255528911ab3067e62064257a5ba6dc0", 
-    "demos/posix/aws_posix_demo.c": "16320bf8f99cd83540e7fdf10a0f06e0ee51ad7d81f61f96ec83082f6b920edc", 
-    "demos/shadow/CMakeLists.txt": "7fe4bafa91f34e62b2d7b7678ac4df5e8e8de30159eda8cae0f05977739c16f3", 
-    "demos/shadow/aws_iot_demo_shadow.c": "35bea71a30185f829d92ed937606ebafbc52061b7a1249396f1066eb27cde878", 
-    "demos/tcp/CMakeLists.txt": "99e72686738645dc71be2b6f87ff5ed5e7ac320c3a2073e8be9598c5bd9110e4", 
-    "demos/tcp/aws_tcp_echo_client_single_task.c": "71dd915f834b298a62299f7f8941e05391e194f400512f056a932cd0553211e8", 
-    "demos/tcp/aws_tcp_echo_client_single_tasks.h": "88fe2aec36460a144c76bf5a7364044cd14651148dbcb67ea4c0290e6f541d00", 
-    "demos/wifi_provisioning/CMakeLists.txt": "daf58d954ac6f1bcdba29c56cdf51d79af41b17279a93f5602465363008b156b", 
-    "demos/wifi_provisioning/README.md": "c6a995048dcd1f6d7ba6665f9b86389979a1812f49411bb5508dbb3cb9593168", 
-    "demos/wifi_provisioning/aws_wifi_connect_task.c": "27479442166aae579c1a8c4c8f1595642d6bc2f60a05ce5791e0eaf389c0742a", 
-    "freertos_kernel/event_groups.c": "a49aee77923f713372ef29ba4d1a8872cea29034c664168b2f07420bc938c916", 
-    "freertos_kernel/include/FreeRTOS.h": "1ff966e0cbb0cb9aac5f4ba7d37ea235db2ea9b75a9544b41126f8a8438e3d78", 
-    "freertos_kernel/include/atomic.h": "9373cc0cddac586e70ff51cf6228f99eee02adc957d019b90422dbbfc8622a64", 
-    "freertos_kernel/include/deprecated_definitions.h": "6048d7266b25380fb37de0ff7a8647aa7d0ebb37bed4715f39e9c36cfb850df8", 
-    "freertos_kernel/include/event_groups.h": "84e98399dd4ba93cc9245e01ca3d9bce1ff4f0254373f54d420f913f79afbabf", 
-    "freertos_kernel/include/list.h": "5f3027c7c550dc772f63e6b8910959e5a4bb8c846e96b746306932a32327736c", 
-    "freertos_kernel/include/message_buffer.h": "a1fd80d22e96a7b4e4f0278fd884e04c23a48cc5a773b60783a8012e4b69bade", 
-    "freertos_kernel/include/mpu_prototypes.h": "a9dc3cab7a6f0553680f239b41d28acb87afd5d62718ff245be43ab39de2d836", 
-    "freertos_kernel/include/mpu_wrappers.h": "be860558ab5b18dbc6feeffb8e21294a774f78ae2d8d80656b3c9d06221d4455", 
-    "freertos_kernel/include/portable.h": "c133e014e93fc9acd479e2840d966c6118acbdea519ce7633183c5debfec379d", 
-    "freertos_kernel/include/projdefs.h": "383315d66e78736012441e0483b8195133238b47bb8deeea75c0db5385ffa760", 
-    "freertos_kernel/include/queue.h": "a9ee001a540121b07c72cc0698c29786b9056809696eb2c8ab5e1d201dff9c8f", 
-    "freertos_kernel/include/semphr.h": "88ae3df4aa9c85454d3d5c96f4f0c9947e03d59b34fd641d7b3d4e96b3474c5d", 
-    "freertos_kernel/include/stack_macros.h": "acedcef4a097480d6860f5a7049b9a5e5613e9dcefcea2fad372351b1a6cb3c5", 
-    "freertos_kernel/include/stream_buffer.h": "0a1cc93ab026272db13c466be048484dc49d626ec3522c1c2e2f004a1aba6cb5", 
-    "freertos_kernel/include/task.h": "16acab855fde31c35bce27e946853b26d28ffc4f1e75eccec380eadb91ecd4ea", 
-    "freertos_kernel/include/timers.h": "2545329c12b4f8d3cd680713e830a6ddfbec12efce3a78b82d924474c5addcef", 
-    "freertos_kernel/list.c": "efe2d7cfbd6012ce6802d6d653f0d1485c1f4447d0680af8781bb068670fe184", 
-    "freertos_kernel/queue.c": "642483ffa88d8594e7a927ac520a9a59f5e26f925e5319701d0b1c784374e30c", 
-    "freertos_kernel/stream_buffer.c": "11658523e4d5a43d0c339133971639a00aabc619085293b0af6f0ab8693fcb65", 
-    "freertos_kernel/tasks.c": "1a62b873dbd63a127b05ff452d2eb0bd2aac1d0430f53e44c1deb3697d38fb7d", 
-    "freertos_kernel/timers.c": "44c6aae06a26ccfa7da4caaf8abf87c0fe03a56af5a1588540949194ad384d09", 
-    "libraries/3rdparty/CMakeLists.txt": "9ed22856339ed326b7cd6de962def7bb82463649738ff640990f5480ebd42e57", 
-    "libraries/3rdparty/jsmn/jsmn.c": "f91533b8c65ffe13d3389f18e6f74a09aec61c23bc44318f40135bc004b075fa", 
-    "libraries/3rdparty/jsmn/jsmn.h": "f24904f8e9df0be61cd26430851f026ebbf7d85a4c856ef2c975e85f1cb304b7", 
-    "libraries/3rdparty/lwip/CHANGELOG": "c629e3a5f0686174e16749506e3ed975066fb0cc21e1dc1bb2377a355f12b9fc", 
-    "libraries/3rdparty/lwip/COPYING": "8fb15ebdb19eb669e1d37fcd8e57a44c477fcc0e93a9ab0d181760965f94d5ed", 
-    "libraries/3rdparty/lwip/FILES": "82080537659a53c105b86286001498fc03c16a3e232e926b0061a284081dfc1b", 
-    "libraries/3rdparty/lwip/README": "68b6f381fecf5d35568285219fca96297d25ae2c8790115388cd8ad9a6f610f6", 
-    "libraries/3rdparty/lwip/UPGRADING": "4185d4a3e733fdd6396b71645357d3ef2de50f1187dfbfe83a2a3f01eeb2ac1b", 
-    "libraries/3rdparty/lwip/doc/FILES": "7e411f98dd0b535f78f1cc4ca81bbd596ce704a233c24933c247d11eb4a07662", 
-    "libraries/3rdparty/lwip/doc/NO_SYS_SampleCode.c": "3b6e1d23979e98aab4ce0f6d2a3f50a4cdb23a1b6f7aa80dcc6ed8dd3ce57d9d", 
-    "libraries/3rdparty/lwip/doc/contrib.txt": "91ab1d4cfd18d786c3db74403b2a92465678f88fc13a284b9664d60c78b1ce7c", 
-    "libraries/3rdparty/lwip/doc/doxygen/generate.bat": "edc28fe50dc150fe0ddba1369f05511a5437a4b873233d75677a9930dbf580be", 
-    "libraries/3rdparty/lwip/doc/doxygen/generate.sh": "d5134949019de866042b12d7855892036790036b5f12a3d53ea477babc3e8a7b", 
-    "libraries/3rdparty/lwip/doc/doxygen/lwip.Doxyfile": "584af553c70388fde9b391e4dd9d224842d88eb9d574d620818e82f0c9c7507b", 
-    "libraries/3rdparty/lwip/doc/doxygen/main_page.h": "500d7373e6f1952ada9ccac9a2c95e4c836b245183a7c5320c40f397778a79ec", 
-    "libraries/3rdparty/lwip/doc/doxygen/output/index.html": "65219746dcce33cff1833a9629610bcce0ce9aa100ec5d54fc808d143f54ba2c", 
-    "libraries/3rdparty/lwip/doc/doxygen_docs.zip": "57e22b20f872ce25601cccfb88891ba071149a26ecb559abd7d80a0419676529", 
-    "libraries/3rdparty/lwip/doc/mdns.txt": "03e83c838eb9a7852250fdc39e3df1efe34afe522eee215db1382176aed750fe", 
-    "libraries/3rdparty/lwip/doc/mqtt_client.txt": "8a1a7d041bec7b6fd4bced952b4de8002619e817050715aecf2a5ccc0c9cafbe", 
-    "libraries/3rdparty/lwip/doc/ppp.txt": "a7b55cc1c17b4177bc43bd0769ad5a0a795046c4ef5717fd63655229eb9100ea", 
-    "libraries/3rdparty/lwip/doc/rawapi.txt": "108fe92af397d4c75134c0974896a89714770a69a3dcf608f930a070143abd3f", 
-    "libraries/3rdparty/lwip/doc/savannah.txt": "87604197198dd07582a1b9f7fee4e25f64f3702775cf755090ab902132f7a9cd", 
-    "libraries/3rdparty/lwip/doc/sys_arch.txt": "954b7428c4e3ef98a4be3584e4c67c1474b554c0deefc47bd7d0384b1fdce6c3", 
-    "libraries/3rdparty/lwip/src/FILES": "05faeb3c86d87e76ba9366ea01db86c00977e5d811c57c6dde081ca9ec6fec2e", 
-    "libraries/3rdparty/lwip/src/Filelists.mk": "03c211e3f54c8f4ee60cb8917592d48880145f4436b7b3c6cbe48da530593685", 
-    "libraries/3rdparty/lwip/src/api/api_lib.c": "ff49eed7d376d5c16cf17e521b6c454349b0b508f39faf7ca32eb0df5a090241", 
-    "libraries/3rdparty/lwip/src/api/api_msg.c": "affb5ce311a894d807808e5d48808a84808a98d0e7791d28be57bc91a4674518", 
-    "libraries/3rdparty/lwip/src/api/err.c": "7675d73a83c1af9a8a16639cfab0fc4fccf33f49f25e7294afbb521748913db9", 
-    "libraries/3rdparty/lwip/src/api/netbuf.c": "73f2b7eb9dde903fe34052effc1ade4d926eea91071ca20de2ce5dad6c86aa95", 
-    "libraries/3rdparty/lwip/src/api/netdb.c": "e7a2ea5cf33839eca3b05bfbaab17fc69d53ad6b0f724d1fad22d4de74efc610", 
-    "libraries/3rdparty/lwip/src/api/netifapi.c": "39e8481b8136994dbd871bd833b6fa846c72675cab45fe5a9cb5241a0de4637d", 
-    "libraries/3rdparty/lwip/src/api/sockets.c": "7c33d2f2e5564c387c0b2849d72f6964c5f6950cb40f59bd8018b0ee63ad5d8c", 
-    "libraries/3rdparty/lwip/src/api/tcpip.c": "9a66527ee20fdfa146af13e089291cf6d2ffd3b6bca51a0215ef9895aafbdeff", 
-    "libraries/3rdparty/lwip/src/apps/httpd/fs.c": "700629242aa1f74dc6b353b9df903514513c48e7eeb947c8169bf008c9d99fee", 
-    "libraries/3rdparty/lwip/src/apps/httpd/fs/404.html": "093f7768e78b045d8bee613880ada36c5af27e738ce906e5ab35bde33ad2c55b", 
-    "libraries/3rdparty/lwip/src/apps/httpd/fs/img/sics.gif": "3b4eb378fdefac1e7dd6dbb6c84db20e1512463457626f5d991bf7c1ccb7cf63", 
-    "libraries/3rdparty/lwip/src/apps/httpd/fs/index.html": "d34254865305f1f175294b4b1591f1f4a54145c28937f4e3fcb7f771d0a5e9a7", 
-    "libraries/3rdparty/lwip/src/apps/httpd/fsdata.c": "bdd2b61a0f207c526cbf65e3214596736adba96fe0fa525212d35e40fea0f3fe", 
-    "libraries/3rdparty/lwip/src/apps/httpd/fsdata.h": "be8b2a4230b58a2eb2a0205a66b937311dd49c640e774953f9b2640aa1a82856", 
-    "libraries/3rdparty/lwip/src/apps/httpd/httpd.c": "84bb44210edc336a3c867cee0ecc867a26b44d76a5663757f71ed5cbf9343fde", 
-    "libraries/3rdparty/lwip/src/apps/httpd/httpd_structs.h": "27feb1bc06939d1fe17716e2a30c908bea4caa184d45d8fc188cf35f963dc1a9", 
-    "libraries/3rdparty/lwip/src/apps/httpd/makefsdata/makefsdata": "660649c3cd0b5fa548baba63db7c8218aa13269825d3cdec0d4ad577d1338b20", 
-    "libraries/3rdparty/lwip/src/apps/httpd/makefsdata/makefsdata.c": "e37df901da231e3810fa8de0cf15c746a9c7d4c6c76782bed6ad7e98fabfdac2", 
-    "libraries/3rdparty/lwip/src/apps/httpd/makefsdata/readme.txt": "033f3db7c66384b1da4c0f3251b6f7e21342655a9a3996edbc0fe87d37296838", 
-    "libraries/3rdparty/lwip/src/apps/lwiperf/lwiperf.c": "a61bf216dc9bf3966071ebd013b2e51109371119a2af2e86a52c043ad94fe897", 
-    "libraries/3rdparty/lwip/src/apps/mdns/mdns.c": "3e2eeb48d9042a44568d8ea4d1643f81414a84749d54baef381e8afb7e10c864", 
-    "libraries/3rdparty/lwip/src/apps/mqtt/mqtt.c": "7c9b4f077304a6222b51812e41bb14a3b2db64593e56af56b82f9b0826f121d1", 
-    "libraries/3rdparty/lwip/src/apps/netbiosns/netbiosns.c": "318700d4fb95b113b2b721c16c5cfeaa86672404d6d3df2d472144c257de2c54", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_asn1.c": "e499567ae701f2c09d3d3220d61a85c5e0dd51da14faf3839b6ae5e33e5506b1", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_asn1.h": "f389dc3434e28e5dacfb0a696a203b1f8ab070dfeefbeb963e3a809aaae3c15e", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_core.c": "cb109173a21d325b1ce35fe59f35089eea88f87e15da676d1b3b96db3098124d", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_core_priv.h": "7c8b8d4db00db413fbcecd49fc76797ee1724bc6d0147e93836f329a1dd48b32", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_mib2.c": "c96c2a36d1f421a6653e62835b9b6246aa63b70de6bc9ae27b5cc93f0aaf7022", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_mib2_icmp.c": "74935cdbf8cba6850dd08f69b9762ffbe8c098a152cbfdc2377d4c10d2f288b7", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_mib2_interfaces.c": "5e116510c6d436709567ed52476925b7fbf05d1f7cffa030a302c96279b02e76", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_mib2_ip.c": "99e87677f4865b07b01608fec848fda06d19d9b3940109b80571f71d6860209b", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_mib2_snmp.c": "8d494564b1e8fa8c8566d8d6225ed8ce8053627f1b29e220ce42f6f1a45205ea", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_mib2_system.c": "e1ef964e322993da7a15bf8aa4be62c21700dfa7215b5ad49b0ab065f04c89b9", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_mib2_tcp.c": "7c0956569864bd12169327476fa08bf6b70670d4f3662c6384e53a6f0f3c5815", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_mib2_udp.c": "3f1551f33085b37f0215be02eb0d745f3c8c8a6387c2fd33c6337f6c569fdf40", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_msg.c": "9ebc0b17b9097ab9827acd06e4c1da6cbae30f9e2e6f8d9f3abec84167b16e46", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_msg.h": "d864222c3682af286107655ab41518fa30f5406d94b6c62bc09911e5ebeadd4f", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_netconn.c": "9832d65fac9413d65912f194250d41b92f1c33a1ffb902b85d62a3219b0f357d", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_pbuf_stream.c": "7d6764617377069b10bac38a0680ed483d1db9ffa0a5759e10b8e59cd0eeed06", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_pbuf_stream.h": "865b7b9924897f547d0d3816c711548edf1c36299f602eb0d76cacab5c190243", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_raw.c": "6764e49fe216d62f99a5d528d0004f5490a17f477eadf71aeb1dd65673f2841a", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_scalar.c": "4a9965b8a968da4b4a4e3d1d960c61a027a3eea7967ebbfc7362dab16a3fae7f", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_table.c": "9148539771abf4c262e7cece727e1b1f1e6ef61aa8c00145330ed4ccc5018e8a", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_threadsync.c": "8102be57949569af3fcd09aff59958a1a46692f1cefd1ddd4cc8bf5127b7e1fa", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmp_traps.c": "31e449f3165a9c0dc595696509209991fe6db4461b81687b1dc8356ac0e3395e", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmpv3.c": "b94c951bd348081602188586f4c0318c5c42b33e9747bcfe5ce79e38f800e849", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmpv3_dummy.c": "a2d5637d22a9e8f4e99b3aa4d8233c237fb59d060ad8f444388b788d2150f994", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmpv3_mbedtls.c": "5b7eeda989323d4154b5a352baf8666cbe5017a8d388f94bc7481210d8325792", 
-    "libraries/3rdparty/lwip/src/apps/snmp/snmpv3_priv.h": "1d4d2bfa9a90d71e191333f5f1fcbb37998fe0ef0bcaeec2594639ce275e44df", 
-    "libraries/3rdparty/lwip/src/apps/sntp/sntp.c": "b4a9eb6f6e54cd149371905c73d6f0716eed40505cffae523b8359eccb1a405b", 
-    "libraries/3rdparty/lwip/src/apps/tftp/tftp_server.c": "4978262019b8e2af667e78def5df643c054df498de713d29f040689864bc5b58", 
-    "libraries/3rdparty/lwip/src/core/def.c": "ee22aced0ce43be7c45e6efe22fa8065f72f90d10770e59332b7777823ab73ce", 
-    "libraries/3rdparty/lwip/src/core/dns.c": "bddeadf2826b8ce00f1de7c969bf9883e27303f8166ec07bb3c346655cdb6e1e", 
-    "libraries/3rdparty/lwip/src/core/inet_chksum.c": "3e722022ccf01af730f91ecb096c58175c84a3b6f9c992a9e03eb3613d06ca2f", 
-    "libraries/3rdparty/lwip/src/core/init.c": "adfb1ccdd0e89fb11b6421368cc679a4049a45e6c64c7c6c133149bfdde1fb8e", 
-    "libraries/3rdparty/lwip/src/core/ip.c": "c9ddd994f304bacf66fd7aab4bce1bd1ab6dc2e9c2757e1f2717214b4cd5281f", 
-    "libraries/3rdparty/lwip/src/core/ipv4/autoip.c": "f1fdb2bc22713332d96b29d52f6b6e9658f7f566df175d3c8d7fc4c31e9a10e3", 
-    "libraries/3rdparty/lwip/src/core/ipv4/dhcp.c": "8c74b698903d1e9e19c4769b343cc07403176e54c55e7ef02689d6e1d92acc4d", 
-    "libraries/3rdparty/lwip/src/core/ipv4/etharp.c": "a4b0a31adffb53234208663a3c24f00070263a4aded2ccf2b286ffcb5b9fe85f", 
-    "libraries/3rdparty/lwip/src/core/ipv4/icmp.c": "1856a4d4e0a9151757907802ab9ce374979c4c27aca583ef6495984a3a3fc555", 
-    "libraries/3rdparty/lwip/src/core/ipv4/igmp.c": "10d2595919e9db2657ba2966084c7d7fd0d561e9fdbf426b7426f3b3d6cd13c8", 
-    "libraries/3rdparty/lwip/src/core/ipv4/ip4.c": "b5a8888798f2a50fbe0df42db5d8c0f93bbf0319fadcaf58e49fc210728d2712", 
-    "libraries/3rdparty/lwip/src/core/ipv4/ip4_addr.c": "8b1019b0e51c6467dcdaaa402bf92d668171b2b8347df43ce2ca4dbc23166255", 
-    "libraries/3rdparty/lwip/src/core/ipv4/ip4_frag.c": "aeba1faaa700bd36f937a18fadaffe93049cf6ed723f20990ad7d2012d085d86", 
-    "libraries/3rdparty/lwip/src/core/ipv6/dhcp6.c": "394fb03333e7d375eef76dab23888238d4be6bc3e1f2ade16f488b7d112b4191", 
-    "libraries/3rdparty/lwip/src/core/ipv6/ethip6.c": "126431752915965a04e877463dd3b4dc5109f9355b402134ddac4ae93051263f", 
-    "libraries/3rdparty/lwip/src/core/ipv6/icmp6.c": "cec4232000fb6b36e639a591dfcb1037d4b5c3ebf7c83e222b0c9107d487e2bf", 
-    "libraries/3rdparty/lwip/src/core/ipv6/inet6.c": "3f7676e46413586fc3d07438b51c0dcd46bb3ba24644892362cf47f84fc15390", 
-    "libraries/3rdparty/lwip/src/core/ipv6/ip6.c": "f9c469b7d06004baf502ead91b8a5d6ee2d461831b82c1354594f27d4c886343", 
-    "libraries/3rdparty/lwip/src/core/ipv6/ip6_addr.c": "985670e423f00a3da8b5682fc9128a47d18a920abe6d2e5ff891bc1265af7608", 
-    "libraries/3rdparty/lwip/src/core/ipv6/ip6_frag.c": "c00de96f135da849c13caba14fc07f81a48f80482651f345347d10c9ae49802b", 
-    "libraries/3rdparty/lwip/src/core/ipv6/mld6.c": "0ad41383a94e915a536b2183e7baea7e210be0e5b315122c98afe93676c10ee4", 
-    "libraries/3rdparty/lwip/src/core/ipv6/nd6.c": "25da18111f0f2d2ea3d68b636aa45aebccacfc833ce69361bd55be163238eb57", 
-    "libraries/3rdparty/lwip/src/core/mem.c": "a73640f820252cfaf3b4d620d5776a009c1f95ebded4d6d87f22a65b8a6fbfea", 
-    "libraries/3rdparty/lwip/src/core/memp.c": "976ba128220c87d4bb8e6b6e37f327a68a4e53b22aa0976513fbaee033fbb56d", 
-    "libraries/3rdparty/lwip/src/core/netif.c": "03e4c52e192f621f907b870944f0cc6580fd8df57396d65b791aa41d6c25665a", 
-    "libraries/3rdparty/lwip/src/core/pbuf.c": "07b9c1ca48ced2966be1221e5e269851940bdd82a4f9cb26067edc4b26bf5af7", 
-    "libraries/3rdparty/lwip/src/core/raw.c": "8dc141c808d88f4ae648aed02bb39fa9429e9e1433e111f1eec0b62dac754e5d", 
-    "libraries/3rdparty/lwip/src/core/stats.c": "81aaa60af9ce98a5ab93b666f40892454bc5e557238c13c617acfd0aa82ae0dd", 
-    "libraries/3rdparty/lwip/src/core/sys.c": "f822ddd3b1088cf22b5ea0abce52aa501c88f72618418266ddc81ea2e28297c6", 
-    "libraries/3rdparty/lwip/src/core/tcp.c": "c0cf4b150144667ffef04b202e99646bd0f8b7c9007304b76b5c1d46a650cdc1", 
-    "libraries/3rdparty/lwip/src/core/tcp_in.c": "5d638f5b5366e06048312b3e6f13a366bf68077fdf5da74f768a39f91ad71c66", 
-    "libraries/3rdparty/lwip/src/core/tcp_out.c": "8efcde1ccb743448c85411990c2a4e092d0711da32e75bb919433fd5e874f4f6", 
-    "libraries/3rdparty/lwip/src/core/timeouts.c": "3cc86e714704d315b1b88e3db0ef595b7236d82666f23456691bf7a2d950bba6", 
-    "libraries/3rdparty/lwip/src/core/udp.c": "051b8a26c903e06aa384b864bfe9294af1402b8513232e794de6ec519cdfadaa", 
-    "libraries/3rdparty/lwip/src/include/lwip/api.h": "852efada30d7caeffb055972f978b15144eae151ea820bb9114e11b005dcd843", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/FILES": "1baacff539b72c79be4fb5491be4963f0103557286405b3b4b4dd3396bdb0196", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/fs.h": "476e7c86b05382d3111c0c5ba8570c79d095056ccf678db8071ebc26672ee7b2", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/httpd.h": "523e3d976be26df1719c3c2a1de4d5273e587f909556736142a2f90ac72f9fad", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/httpd_opts.h": "d345eb6335f078d8cf184ee5fae4b1a60337f44b422851bb3465bf3db1cd987d", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/lwiperf.h": "8fdcc6eff27ef94193d50ad8c7e311ed23bef75ec51cb38ad3bda6b4031708fd", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/mdns.h": "3431894a35ee1023ad9b76c1a7c2097f0801d72ccd761d89a62f2130751305ab", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/mdns_opts.h": "307d74300e5cc31302f7fe7183035e1957fbcdf799917ec6c1898564ef2a43e6", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/mdns_priv.h": "fed40182e60df88884a51eec4e8fda781007180749a19890522d87be6549fa66", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/mqtt.h": "273d132801dcbded088399e9f7a8f1a0d70c3759e12c0fd9173dac95469020db", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/mqtt_opts.h": "61c5c72905e18b04daccdd305a9400e1bc5c03a605dd5bd912dea36c6e007d78", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/netbiosns.h": "12ca2f9657c72468117af983bd7980598dd49b36d770cddef0418d59b7980871", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/netbiosns_opts.h": "95e9d2cfb2d474a0c9c9f64f361f98a8fb24ac07ac2f66f504511c59d5b3c61e", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/snmp.h": "920e1aef045060b023ede54bda83d00c62e0e783d5875c86b53a24bd748a32a1", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/snmp_core.h": "bb54fc4dd1066246d2b5b7dc07f52d28faeea141c7e4b1494815249cd6a39e1d", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/snmp_mib2.h": "dbc21ede7c6c4ac282b845aaf40961993a94b3ddb80a85e8aea66c9f6c5cae03", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/snmp_opts.h": "340c1a210ac6389859923138203a2feffc15568c61b69204534ae6e71d2fab6e", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/snmp_scalar.h": "f88ed96f2010bb383af723c50f8e0b93a9a5d566599ef0f35c11102124805c09", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/snmp_table.h": "1d0ef0508b2a00f55e6a90c27d484e526a2db5cde41c13b2aafcc6f2c8d7e25b", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/snmp_threadsync.h": "cca3712f8a796bc481ca8be54c61407f5be5661acc10c95234ba4c31ef6a4996", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/snmpv3.h": "1910b8357616f7392faa633b84d2a2b0dc388736217f86a64d9302d6c11c3a47", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/sntp.h": "a502b2c502329b71307684d722f38a75f623db96fb8d16037499ced0d7dba0e1", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/sntp_opts.h": "78aba6e408cb14d464eceedd84ceda9584a3b9b4888355b29d79aed7d4271800", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/tftp_opts.h": "00d242f796e11cdb4cc708721743130c98b628a5f2309567edaa0d6b6f65dc97", 
-    "libraries/3rdparty/lwip/src/include/lwip/apps/tftp_server.h": "23e2880896ae2a2875db23711500012652de30eb25c966df6f692a1c6b807015", 
-    "libraries/3rdparty/lwip/src/include/lwip/arch.h": "46c5d2a4493e782d48ed6ab3d3903efa5e30a10568c8a5910648cd9d4af51660", 
-    "libraries/3rdparty/lwip/src/include/lwip/autoip.h": "92960cb246d41791ac2e9fee69055b406b9dae0c011614ab001ddf49466190db", 
-    "libraries/3rdparty/lwip/src/include/lwip/debug.h": "27fbf6f7830c8e31d90c1806f380c3277eb7977d5cb573fa539e5970971c0415", 
-    "libraries/3rdparty/lwip/src/include/lwip/def.h": "a79c71e0358dd3942a4871869d7a1882cc64cb51e4c995318ccb21865ce6f705", 
-    "libraries/3rdparty/lwip/src/include/lwip/dhcp.h": "115ef1edc76493b36193b237c32b9ed73d8cc45c7ba473ba71d9ae870bcd4f23", 
-    "libraries/3rdparty/lwip/src/include/lwip/dhcp6.h": "fa8b917c2cd23409ace82c7604ed66a3cf51f5cf7ab3e4a21fe0718bb2a926b6", 
-    "libraries/3rdparty/lwip/src/include/lwip/dns.h": "e752a1b25197b4d892445a4309c4446bff6b74fc43f5c2f4db95cb43da9879f4", 
-    "libraries/3rdparty/lwip/src/include/lwip/err.h": "5e3546546bb18de47927263b10ee515b5b671a1305c4daf7158a4ac669158a33", 
-    "libraries/3rdparty/lwip/src/include/lwip/errno.h": "a07ed4d6fcbf49501bdc3f91454e8434e16f8b329e2faced7e0947098656cc94", 
-    "libraries/3rdparty/lwip/src/include/lwip/etharp.h": "2631db976159e47df3fba1258f91b73d5dfb112c5c58d52cfe1e859f2320323c", 
-    "libraries/3rdparty/lwip/src/include/lwip/ethip6.h": "7a7e744ae373a720261be3651adaa0f35ff00ebb1bcf38e5330e371ddfd162b7", 
-    "libraries/3rdparty/lwip/src/include/lwip/icmp.h": "84f63c9fbc6f6d66ef437f834279c25c20bfa78834eb0ee347c70377f7f8d8c8", 
-    "libraries/3rdparty/lwip/src/include/lwip/icmp6.h": "8d6f23f3051d34653835b35825bab7a8b4b9c31a78c513ea2864eaa159161982", 
-    "libraries/3rdparty/lwip/src/include/lwip/igmp.h": "de409719975a9e81349d90ed6e09a8d832f12c216d6b9e42de580be9ff546daa", 
-    "libraries/3rdparty/lwip/src/include/lwip/inet.h": "cc2405ac08c8de5fada177b35bdb819eeccfd90acf391905e86308c3eadb2baa", 
-    "libraries/3rdparty/lwip/src/include/lwip/inet_chksum.h": "0fe4c51239d48faa2fb3517a4227c797842d02f49ce1965b4d25abff6d1d68e2", 
-    "libraries/3rdparty/lwip/src/include/lwip/init.h": "476f883f9d7ec22901f8986c3f6967a3d6b93a86da6419970f2d094985df4fd7", 
-    "libraries/3rdparty/lwip/src/include/lwip/ip.h": "5b45d66c3f9e08bf32aaef218bdb9306845e9436fbadc78290c6b3a977fd97c2", 
-    "libraries/3rdparty/lwip/src/include/lwip/ip4.h": "92e08719ac77947e925aada9d11fde196cb80b823916d0def537acb851b071a8", 
-    "libraries/3rdparty/lwip/src/include/lwip/ip4_addr.h": "7e181dd4d1c1e13156085256be83e64aae9ac7f017ce1f610bc62af5e253b45c", 
-    "libraries/3rdparty/lwip/src/include/lwip/ip4_frag.h": "8b0bb67655cba6da8cddc360e655c711553ad35e6306dbae618637e80be9911c", 
-    "libraries/3rdparty/lwip/src/include/lwip/ip6.h": "bd43af8155961eeefaf1c0b4752068063b42643e4d41f823c888df44b6a6e8a2", 
-    "libraries/3rdparty/lwip/src/include/lwip/ip6_addr.h": "c340b49e4ddb6b02610c002f7218c9a5b8e671ce0366f8ace501418906c922d7", 
-    "libraries/3rdparty/lwip/src/include/lwip/ip6_frag.h": "c390c1d7a848749ae78c15893ef0671733e7b986425f255fb40a1a5a564b3c39", 
-    "libraries/3rdparty/lwip/src/include/lwip/ip_addr.h": "23683c0ead08d79b11bd2f7ea8b4391306535eed6f248af058583ab5cfc687aa", 
-    "libraries/3rdparty/lwip/src/include/lwip/mem.h": "416f961f338a0cba460494ebfe2527b7cc1fc5c18f489711e66af7dd76b7a223", 
-    "libraries/3rdparty/lwip/src/include/lwip/memp.h": "aacb9d92f80c53195ca2f78b5ab5f478ebc1381e2389d7b6c988a83375c76145", 
-    "libraries/3rdparty/lwip/src/include/lwip/mld6.h": "00c0404c74f162df93ceadc13a49897bc6124f4ae6a9fe251969b45df7f8fe23", 
-    "libraries/3rdparty/lwip/src/include/lwip/nd6.h": "eb853c9385e5bafd1ae0dcd49517d3e91c9b9b056d5225b79ae119295d455f36", 
-    "libraries/3rdparty/lwip/src/include/lwip/netbuf.h": "175d714a61c4ca30da54e2e4d2f96f2f01995ca586ba987583d0ca27fa61ed72", 
-    "libraries/3rdparty/lwip/src/include/lwip/netdb.h": "582518497fefd57cd1d227947965c71b1dc16846add471af0fddfbb461c7aca0", 
-    "libraries/3rdparty/lwip/src/include/lwip/netif.h": "e150b53ce0d0e62f0090285a174cb4161971cb158257d9cfa21070e628511885", 
-    "libraries/3rdparty/lwip/src/include/lwip/netifapi.h": "3aa22d0f082c8a37d9a2ba834f8b429330b6e6562bc0160d454a5e686c8803b8", 
-    "libraries/3rdparty/lwip/src/include/lwip/opt.h": "13cfa62d1732d9e269514a3425754072d0cac7067356e62a89535d413551ed47", 
-    "libraries/3rdparty/lwip/src/include/lwip/pbuf.h": "725872b07b907b472cbd753c449831d6a19705a897a6ece77cb3142abae6bed6", 
-    "libraries/3rdparty/lwip/src/include/lwip/priv/api_msg.h": "9f8c796e335952c76a67cc43870ee9979bafb354652c7bee2c76a3ed56fd4174", 
-    "libraries/3rdparty/lwip/src/include/lwip/priv/memp_priv.h": "55afcd9f7269f2bc10898082382bd4391c71a2c9720dee0b030cd9ebd6a190b3", 
-    "libraries/3rdparty/lwip/src/include/lwip/priv/memp_std.h": "da872a28d6eafc449c5625326e3d74fdb9412dac74fcd895af70280439b17868", 
-    "libraries/3rdparty/lwip/src/include/lwip/priv/nd6_priv.h": "83665c76c1afc7448df85f0fb052192912f433bcad575cf12b6a0125440ba0d7", 
-    "libraries/3rdparty/lwip/src/include/lwip/priv/tcp_priv.h": "d317a6a67a2eb3b969e35719ab823575de59605dfd13cfd073b98c40cf1fff22", 
-    "libraries/3rdparty/lwip/src/include/lwip/priv/tcpip_priv.h": "2894a4d7e907436847e9a110002837801760fdcd218431f436109a7de796d33e", 
-    "libraries/3rdparty/lwip/src/include/lwip/prot/autoip.h": "9b88bc52c97db0f6c57864b65f423010aaff8d433a4b5d4dc45fb1177a085d03", 
-    "libraries/3rdparty/lwip/src/include/lwip/prot/dhcp.h": "434b3e9103f09da811028c4e5780af164ecc72b4e5058ba1fd99db11d09ec06a", 
-    "libraries/3rdparty/lwip/src/include/lwip/prot/dns.h": "34049c0f7f489aaec12d0589dc51ecfb24408dba422f605d8deb207c44d02b8f", 
-    "libraries/3rdparty/lwip/src/include/lwip/prot/etharp.h": "e29d94206c44f80713d1255b48dcea70e903e98ebcdebbed376d5b614b94df57", 
-    "libraries/3rdparty/lwip/src/include/lwip/prot/ethernet.h": "603ef2a7399d77d2499f2c3f5b64d7b56cefc346a2098e98e01710f8a69fc3b4", 
-    "libraries/3rdparty/lwip/src/include/lwip/prot/icmp.h": "931d46a3e775efcd6076263e23eb564b612913b7c11f7b5d009e94fefeb20f28", 
-    "libraries/3rdparty/lwip/src/include/lwip/prot/icmp6.h": "8d3bcb5d37b0ad3f73102ed2ab3c2b52a42492508d012d41d5b2233827232fdd", 
-    "libraries/3rdparty/lwip/src/include/lwip/prot/igmp.h": "fb5d987e66c6843694a0cb96a8fb60f62b9e7f6daff743c2d461a19057823c14", 
-    "libraries/3rdparty/lwip/src/include/lwip/prot/ip.h": "04dbfd8f29d52cf9381dd57c8421665a77821275b109636799e07cdf7ab242ec", 
-    "libraries/3rdparty/lwip/src/include/lwip/prot/ip4.h": "eb28315bbf755a0a9b047f6f1d967d74593bd0f0c54d63dfac7ccb293e344f45", 
-    "libraries/3rdparty/lwip/src/include/lwip/prot/ip6.h": "ac29d7c38652194fa72881006785a983cf89bef1f7fb228ad57bc973b3aa8d26", 
-    "libraries/3rdparty/lwip/src/include/lwip/prot/mld6.h": "2f81ab3c3255d9bfaeae2213e0334ebc10ae69bc5312698846f2ef104fd7a338", 
-    "libraries/3rdparty/lwip/src/include/lwip/prot/nd6.h": "52956bc575dd9cc12075fbbd7151a15d99494964d34403f1c9a0c9672f51bb80", 
-    "libraries/3rdparty/lwip/src/include/lwip/prot/tcp.h": "19083269517cd19e949fa8d9ffb1b5dc574723d27de04e63dfb3a6af2bc4f59c", 
-    "libraries/3rdparty/lwip/src/include/lwip/prot/udp.h": "b56daa8ff1e8e52cdd4f720297f07af2a96feea254db86768e20e157d7ce2784", 
-    "libraries/3rdparty/lwip/src/include/lwip/raw.h": "0e0a107574284a5a5e3b3cae539caf48171bfa5f663274d5e2e2b50854a05e71", 
-    "libraries/3rdparty/lwip/src/include/lwip/sio.h": "b6555ae90164d0b66e2772ec3444ebba0133927e4f47b512b570819b66912ce3", 
-    "libraries/3rdparty/lwip/src/include/lwip/snmp.h": "1f90da65829c29545e9562ce5355d1799ea36cd901ed8ea9faa8e1ef3d7c2ece", 
-    "libraries/3rdparty/lwip/src/include/lwip/sockets.h": "10a2e1b74457e6275c7f6878680c395159ebfebea32fa0746158f932fdbaee3e", 
-    "libraries/3rdparty/lwip/src/include/lwip/stats.h": "e434465ae96a1d8225624c04182e2a54454a4faa3e8bf390d086688a1b13fe0d", 
-    "libraries/3rdparty/lwip/src/include/lwip/sys.h": "6c11aae3791a266e8a14d3f634fb9b3ede68d07e3de07d020b1bf94999839e12", 
-    "libraries/3rdparty/lwip/src/include/lwip/tcp.h": "eed60a585511e0d4d7fc57f8d5c9032e9a09b54f70502b32b6c5f29d72217cd1", 
-    "libraries/3rdparty/lwip/src/include/lwip/tcpip.h": "a0ca690f3db68abf9ddff1ccaf57e4fd81581794f69af28ccc1302f514658eb7", 
-    "libraries/3rdparty/lwip/src/include/lwip/timeouts.h": "2efe33a7a36ff6c7abbf4c724c4516142e404f7b8821b2582edefb27caf37122", 
-    "libraries/3rdparty/lwip/src/include/lwip/udp.h": "cf222290e68fd832b8efec67b1f1739c610133dd9326117ad687e0a8ca1b3f9d", 
-    "libraries/3rdparty/lwip/src/include/netif/etharp.h": "2e1ab81eced65420cdee5940d2e547cae7b0fa70088f452692363676ecfc66dc", 
-    "libraries/3rdparty/lwip/src/include/netif/ethernet.h": "1dd88263e583593e47f7c891680d67838287160551b8c06562c9feca1ddee443", 
-    "libraries/3rdparty/lwip/src/include/netif/lowpan6.h": "73cf045eea292af72afde9018df4012905174a1ffb6900f6f74e7ec1545da2f5", 
-    "libraries/3rdparty/lwip/src/include/netif/lowpan6_opts.h": "db7e9555f2bae8865258d4be80a10b7f93e137d49f9cba31e4c051b8d0cab1a2", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/ccp.h": "ffeda281c4c2b49af1839a9a4811d31a530a13df17799bc49a19b0e6709401bb", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/chap-md5.h": "f67cd93664262575ded862c17bac7c1003e2eb690224b89ba2b0cdd221c2f725", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/chap-new.h": "20440474ee3de1513f665499ce4450f743ba935734e47763744a14fc0c423a1a", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/chap_ms.h": "77316bd6366248a0d0715e19e231667c1564f3ef081dc3ba839cd673a5d4984e", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/eap.h": "42589e98b4ff8470c0e9a1cecc45fa30e79e2c1c3452fc46e2a88b6ac617dfe8", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/ecp.h": "3162f541c68a43e7c7b8b18381b00b4769fa8baee57dd4eb58e8bf5874a970f3", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/eui64.h": "0814eaf3803401d6f566319a5cf046cff9147c11475f127dca73e4be0a5c2d27", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/fsm.h": "56e98aa46f2b630a73f7023daa0e2a861707fcb66dbf2e3120f3f54c33dedbea", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/ipcp.h": "738c2ff6360e1a0ecbcaa61d3f7d3802ad5a78ffb93369fcebbf1b5575aba27f", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/ipv6cp.h": "45e16a3669e696707b1c9498339c02795ae875028ed95f82d916e235cb061917", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/lcp.h": "95ac5ef5646328af9c1cb6042649e5016e159f648128429111663603128e8f8a", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/magic.h": "48fcf14e39a6a6f29507c08080150effbff18586b307d574c2b5176ad70dfeee", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/mppe.h": "78e8d25a50a6d76f779425ffa1fb74c439f6de717a71c0f7e423d8cf7022d0e6", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/polarssl/arc4.h": "970bc9075bf7aef36f4a225ba8a3dcb89c16a1948016f3521ca4a7609b7ba284", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/polarssl/des.h": "f0a3ea812ead16f7d8fba08115429b5bd7deed1d9ffc6dddf66ec44b1d95ef0a", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/polarssl/md4.h": "d1982ff627c1176d03c60fa8ae307af09626a2655e08525a146019276edb9058", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/polarssl/md5.h": "1962ff0d88f8a7efbb6c8592eb13154129cfc7012c8cc22be7981df35e3c8ba4", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/polarssl/sha1.h": "2951ad6ae5b5797112ae1899cd814536c445334bf59cbd91bf5414db0613980d", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/ppp.h": "007e9685759f263ec07a97270ce90c106514779714987e888816e8b4f473d4d5", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/ppp_impl.h": "e1ca97703859ed36b2ac7c920c85da0f366ed4476b37d5409a50b800e2ce7b79", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/ppp_opts.h": "aa80a9ebc0e74cb10b0a136fc5e29d3fa440b19daaef99984b75f2661669b12e", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/pppapi.h": "f1520293792605ad0f0c78c93a5907d478affbebea8d6be1b0f8a8bdc9c4b427", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/pppcrypt.h": "d986ec75c193290a9ff12cc829abd643d9064230f65dd959e0e31a983ca2c823", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/pppdebug.h": "6120e23e69e1cd163603282bb4b46431452d3de8559cd61057fcb5dced41799b", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/pppoe.h": "489ff667ee3f00c708be66cb42bae326e25542a82ed268288cab81befd7848b8", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/pppol2tp.h": "d340a51c9a727906c251eedb650fd2899d54d70e060bfcf6f9e85335d2847601", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/pppos.h": "0836480d2c54ca462d073b32e988102a69170aa5b69b2f5b655e2cbddd6b9b26", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/upap.h": "659f2861b621c4b0db534042a470e04ff14419942f783c69dc65aa29a57bb88d", 
-    "libraries/3rdparty/lwip/src/include/netif/ppp/vj.h": "77e285bd0231b8ef11382ae527b366a9082625cc61b476b7f9cf171e3c4e6d15", 
-    "libraries/3rdparty/lwip/src/include/netif/slipif.h": "abd68f98455683a96feeb1d7b2f83aa62acbba23b63d7974bef26382342909e3", 
-    "libraries/3rdparty/lwip/src/include/posix/errno.h": "73b5fb6266c707535e0a3b9ca4cd9f2d559f736f1fbcd6f6e034238b8ca5dc41", 
-    "libraries/3rdparty/lwip/src/include/posix/netdb.h": "ec3cb99596ef6bf11b39870541bf6607a7cff6011cfef99bf5d53f2abed05948", 
-    "libraries/3rdparty/lwip/src/include/posix/sys/socket.h": "8b3edc25121de40cd1c3338d5d68be93091f0713ee8a23eba9789f14d41e0f6d", 
-    "libraries/3rdparty/lwip/src/netif/FILES": "b46a923c55de7e4ac6981252e960482e32bf77346539b5887d37f695dafcb327", 
-    "libraries/3rdparty/lwip/src/netif/ethernet.c": "f167b2b850f2a43253aed107a761aac80055bfef63731a4242463a0bec00b368", 
-    "libraries/3rdparty/lwip/src/netif/ethernetif.c": "0353b4a468659db173204ee2861a854d45306d036a138642d2e6948549a0e6aa", 
-    "libraries/3rdparty/lwip/src/netif/lowpan6.c": "c0aacc2c2539d570bab1b788b441228010a69ff1fc244708fe418edf3bb856a3", 
-    "libraries/3rdparty/lwip/src/netif/ppp/PPPD_FOLLOWUP": "d4e0485a2936de3201dca8dc10068534fff399f8eadbd31684f36babc4b094b7", 
-    "libraries/3rdparty/lwip/src/netif/ppp/auth.c": "fe2afed36bdba441463e4e5211395614e9d7685eb1760d5d84137baf58a42dc7", 
-    "libraries/3rdparty/lwip/src/netif/ppp/ccp.c": "88165e63b1a7b6c56f4e952544a2375c6033ac4c2e0ec4779d145322d951ee94", 
-    "libraries/3rdparty/lwip/src/netif/ppp/chap-md5.c": "9f099cddf6fa7931b962fda6dc1d1df5eecf8c94881eda29a63d1abafe317ec2", 
-    "libraries/3rdparty/lwip/src/netif/ppp/chap-new.c": "658070df33b3242b150efce6059a9998c15f5f9192ae06b4cd5e7cffa55384a8", 
-    "libraries/3rdparty/lwip/src/netif/ppp/chap_ms.c": "d3940e2add91c8a721b32f1e04bbc88add012d7146dda03744608f31ba6666ec", 
-    "libraries/3rdparty/lwip/src/netif/ppp/demand.c": "b07dc6e971fffe70cd73f4ff6733655989e34dbee3fc6c2dfa164fadb6578975", 
-    "libraries/3rdparty/lwip/src/netif/ppp/eap.c": "74d26511e05f8b39b4b5fa04722da2bb620e661ec630a5c8d7cc433b5bef702a", 
-    "libraries/3rdparty/lwip/src/netif/ppp/ecp.c": "b6736696754a289ea5464f7386d05790365b873c0ed0123692bebc4ebb18e6eb", 
-    "libraries/3rdparty/lwip/src/netif/ppp/eui64.c": "531be9bfa9c33e0abc4452b976ca4ab60f8f0ecc92d9af91121551250810cd4b", 
-    "libraries/3rdparty/lwip/src/netif/ppp/fsm.c": "aeb4bdabd16a173e74dcb5fc03e6d041dd05d336088028a063e5aed468bf5e4f", 
-    "libraries/3rdparty/lwip/src/netif/ppp/ipcp.c": "9ea7ec074416030a39589392d62adc451ab2c78c61c506cec7674436f085fa90", 
-    "libraries/3rdparty/lwip/src/netif/ppp/ipv6cp.c": "707b3687113f9e8fdf4230a1a750be60aa05deb081e0ece81317cd49b718831f", 
-    "libraries/3rdparty/lwip/src/netif/ppp/lcp.c": "dc39acf562d7df70fb1eac8d7f8218dfb9d592498638325e9fcd4d206f97eb06", 
-    "libraries/3rdparty/lwip/src/netif/ppp/magic.c": "aad196f6945d3b80b158b5011d4eb216a3e1766b73abcd9c19728bb8b8e3e3bb", 
-    "libraries/3rdparty/lwip/src/netif/ppp/mppe.c": "28cafe9da81305067d1e4bc6be6d267c2d6fdecd0c76d8a9f3ff76e6dc073c0e", 
-    "libraries/3rdparty/lwip/src/netif/ppp/multilink.c": "78920d813d0b638e287e5f15527886cfd53d5ea9a61cb6b325b6f8b3841e4bc5", 
-    "libraries/3rdparty/lwip/src/netif/ppp/polarssl/README": "242dd0f7c45dd7fafc37e2caa4b1e0609e1cd9a61512d7772d58c41f7a7e7c95", 
-    "libraries/3rdparty/lwip/src/netif/ppp/polarssl/arc4.c": "7d844ec4f6e88a788e17419d4525a07611851fe793e0bb52c7e24a1db5d2d6df", 
-    "libraries/3rdparty/lwip/src/netif/ppp/polarssl/des.c": "4b2c48659036ad89adb2d08a2b54dc30fba73759a6a5ce810e9c794f7b4aacf4", 
-    "libraries/3rdparty/lwip/src/netif/ppp/polarssl/md4.c": "9110b56e9b926edf560933b76d1bb1ca7e9532134773ddcb04bbd57db646e209", 
-    "libraries/3rdparty/lwip/src/netif/ppp/polarssl/md5.c": "9bd07f764f9104538474c69838de131538f0a500952b8b24f32b758e23d91b4d", 
-    "libraries/3rdparty/lwip/src/netif/ppp/polarssl/sha1.c": "844114b4c45f689aaef64df2bf8b445e6dcea9c52bb4cb485c18d0fb68e04d5b", 
-    "libraries/3rdparty/lwip/src/netif/ppp/ppp.c": "420d714fdff71469929fa80d4d5fffd5feedcb523334c8f3232dfc6b6ae52d48", 
-    "libraries/3rdparty/lwip/src/netif/ppp/pppapi.c": "269bade48fe467119d59b3c33f8f42423c1b162d9e4cdb4c4da36bd87bcbd246", 
-    "libraries/3rdparty/lwip/src/netif/ppp/pppcrypt.c": "02b12e7626078be9591237fe84ae000514a2cfd6f0653c890b7b75ce20cada8b", 
-    "libraries/3rdparty/lwip/src/netif/ppp/pppoe.c": "4d9d17301944ba7b4959694ab7426d14903b031f2cfb9f5ab594ca37712fa64f", 
-    "libraries/3rdparty/lwip/src/netif/ppp/pppol2tp.c": "4de4738f270fea4417e0396c4bab435e86afa7f672d74e04093716c94cf99666", 
-    "libraries/3rdparty/lwip/src/netif/ppp/pppos.c": "9cbb8366265a64f7be93ceee85fc7c7e51aea307c025f59a927f4dbae994c6c6", 
-    "libraries/3rdparty/lwip/src/netif/ppp/upap.c": "1aaba196e2d9ab3dfe332498c95f0cdd0e2556f450796f1f9ec7c06cf18e73ee", 
-    "libraries/3rdparty/lwip/src/netif/ppp/utils.c": "ae56d448a7a89095c718cdb60da79e04b377c1f99b6f8daff4df7ab2fe973a72", 
-    "libraries/3rdparty/lwip/src/netif/ppp/vj.c": "6aa0e5d85dfa251cc64eca193494e245310f972d21c395f4a150e908b84e6afd", 
-    "libraries/3rdparty/lwip/src/netif/slipif.c": "ea41de8f92c71adc7ae5c2079df8e657f493bd275cb71fc35b9582a1b8655920", 
-    "libraries/3rdparty/lwip/test/fuzz/Makefile": "6f21b23fb2d653d622df3233094d881f97daec56f35804cf03edb20785a6856f", 
-    "libraries/3rdparty/lwip/test/fuzz/README": "22549b9142f85d4999eedb7651fec4756b2e46f2548cfea07bba9076ad89348d", 
-    "libraries/3rdparty/lwip/test/fuzz/config.h": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", 
-    "libraries/3rdparty/lwip/test/fuzz/fuzz.c": "e4263eaba9ff0e9d2dac2d398e161dab0dc75f10d627d0bc3a605e92dd032422", 
-    "libraries/3rdparty/lwip/test/fuzz/inputs/arp/arp_req.bin": "90136462593149d9a7367a3ff8224baed060c562464aed70fd73a3a2eb56e054", 
-    "libraries/3rdparty/lwip/test/fuzz/inputs/icmp/icmp_ping.bin": "8b136902714d3318066a465c6bbb659fb53290ffde7b4e44ce91cb51f8457cf3", 
-    "libraries/3rdparty/lwip/test/fuzz/inputs/ipv6/neighbor_solicitation.bin": "2c4c8e93785f654e678a9309d7f8f142df493b5d923fc1d9770da99143e7166f", 
-    "libraries/3rdparty/lwip/test/fuzz/inputs/ipv6/router_adv.bin": "efe0fa3a120d28ef1f8242fbf6e32722f072922cdf323268c7563c6f553192f1", 
-    "libraries/3rdparty/lwip/test/fuzz/inputs/tcp/tcp_syn.bin": "f45051b6f9215e7c539982b1f3ada384c5d87da7f98aabc891c4aa069cc8fc73", 
-    "libraries/3rdparty/lwip/test/fuzz/inputs/udp/udp_port_5000.bin": "1f061bca04aed291a4cc2212f925804c59fa1f0a4057931ae1b909b5723e27d7", 
-    "libraries/3rdparty/lwip/test/fuzz/lwipopts.h": "90f6db64d31a1c8d025a7cb6526b113ffb3bf59082676b2fd97332187284714e", 
-    "libraries/3rdparty/lwip/test/fuzz/output_to_pcap.sh": "3ada800dd24ae2cf4cb41f0065aca8a78c29c6ae21271129ad8fe8fcf7f9dd25", 
-    "libraries/3rdparty/lwip/test/unit/core/test_mem.c": "b26609fa52b8f2148ab26353118197b65fcbe89a2fe265cdde207b70a293dd4c", 
-    "libraries/3rdparty/lwip/test/unit/core/test_mem.h": "54e2e3a94257fdfdbb31dbd686aff96032976894f9002188c3817f14d2ca1d00", 
-    "libraries/3rdparty/lwip/test/unit/core/test_pbuf.c": "067901e42cc96fb21844be89f416517972b75e37bd5957bd7bdf1b5eb46b2928", 
-    "libraries/3rdparty/lwip/test/unit/core/test_pbuf.h": "5eb3d4655112e690f0f1ccf1f7e7dcdde85a87d28fc903a1d89c8df14e738e73", 
-    "libraries/3rdparty/lwip/test/unit/dhcp/test_dhcp.c": "9a326487d86e197b795d5f9a3567812686649f4e2e526756d3c4719c734617c0", 
-    "libraries/3rdparty/lwip/test/unit/dhcp/test_dhcp.h": "8a2dac3d647bb143830666306cd87761c32f2ff033e11a58faff86a8e9a09a41", 
-    "libraries/3rdparty/lwip/test/unit/etharp/test_etharp.c": "5fa65561457587e1c677590ed8c74f697c27ca6172976a6d89febb93aa6aa357", 
-    "libraries/3rdparty/lwip/test/unit/etharp/test_etharp.h": "b146eedd105d24070de6c9c42520120922cec7ed31e1b7c93305b471b9f9dcd8", 
-    "libraries/3rdparty/lwip/test/unit/ip4/test_ip4.c": "0234df11fc6c95af6365b437ab02022c895fd494c30e4f9d2bf6d25e18df843b", 
-    "libraries/3rdparty/lwip/test/unit/ip4/test_ip4.h": "7638fa112bc0b0557aa87f5877b86d60c08a6675e456c834d67a579e9d8b372a", 
-    "libraries/3rdparty/lwip/test/unit/lwip_check.h": "8abc6234c07e50a913e5c9ffecd9077c6e385f5f47c6d89f06a2b731950f0691", 
-    "libraries/3rdparty/lwip/test/unit/lwip_unittests.c": "7cfed8c14d45aa87fe0270165ed4652f70fa6a437501dacfffa6dbeec9aa57a0", 
-    "libraries/3rdparty/lwip/test/unit/lwipopts.h": "2167e38d939f0971e2a38c99e877a61fe86983fe9b53b4e9eddeb7cc15f973d7", 
-    "libraries/3rdparty/lwip/test/unit/mdns/test_mdns.c": "2e44f52ad4223d6019f33ed76f6f86dd18684604d232f330a3e4ec262e2b6ddf", 
-    "libraries/3rdparty/lwip/test/unit/mdns/test_mdns.h": "4226b64bfb4d48147cfa72df6dde6be9bd4a8e5e6a8e9aac8969840bdb9f87a9", 
-    "libraries/3rdparty/lwip/test/unit/tcp/tcp_helper.c": "55c676c11de4d143457359329d6155c7a9de994cea412265b5af9c9003c99f75", 
-    "libraries/3rdparty/lwip/test/unit/tcp/tcp_helper.h": "85030a12b40a7325d71bdf5f4b65732446c24e05f15e4b20f969a07112fc2dbf", 
-    "libraries/3rdparty/lwip/test/unit/tcp/test_tcp.c": "e8866da8cdf957b20abdf45607df49a89ddb714edc7534691cb0ecb40b5f0060", 
-    "libraries/3rdparty/lwip/test/unit/tcp/test_tcp.h": "831ecc56ea4f5d6a4af9ae1e38fececcce696a51557c4a88618ca935fdac9690", 
-    "libraries/3rdparty/lwip/test/unit/tcp/test_tcp_oos.c": "1ab21c684abc850db60fb9c9e1b430e087e806794e8f449332c51627f156cac5", 
-    "libraries/3rdparty/lwip/test/unit/tcp/test_tcp_oos.h": "219807f25b0116f12b3c852c8ad5d00c52b2920a220555a3388880b3a20220fa", 
-    "libraries/3rdparty/lwip/test/unit/udp/test_udp.c": "3aef52e8962a1ee757638585e12a826c0a3ed22a73e4ed174e5e5ee59bfe25c0", 
-    "libraries/3rdparty/lwip/test/unit/udp/test_udp.h": "6d311b4a541280aa4573fd0483556d9f3b05c20907a0b297d1e3a6de1f945563", 
-    "libraries/3rdparty/mbedtls/LICENSE": "d4412d97a34e5dd3263394d02f14be1c4a99794ef66669a3a8b4b87dce31aa9f", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/aes.h": "4840d70d70d99fb74d00dc6fe54b8f3ffbed69cf85f47db858e17096b0e40815", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/aesni.h": "66cf7fe9147ead60856f38baefc9cb6323f712ec1e34ec0f47ac288e31d055c5", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/arc4.h": "df65eb92a6f22606a50aa06018622c2299d01ed5dc6bcab9974051c7e8d29dac", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/asn1.h": "1de3e2901d12396764d8edb984893eaf0f573cfe47f8b50beae3cf39a5b2654b", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/asn1write.h": "2fc0061a09824e655f853d1cfe3f2b680d90e6a40245278e9f7cb1d55696ee4e", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/base64.h": "5be8b6a6a7c7d78d27e8f12e1457194fad63d3374aad67000d72df5fcfd23b43", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/bignum.h": "18f82e75df7adde18f37420e1b4d334e55cfcc50a87d9bd7e05cb85c407ff4e6", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/blowfish.h": "cfb03cf458a1b1be6b7fdf3fb471dd9f9d608712c456e27c9672a915a82c2728", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/bn_mul.h": "c0c32fe95442f1a1ae2636e889059f5c9db49162c159facbcf742d09d4e3dcee", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/camellia.h": "ea83240778e0bcb99beefed2f73237167eaae76b0994f8127a8bee092707ddd7", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/ccm.h": "6d79f0ebb89278b830fed1237a0877c4c2226713094c4735a97735275e9c0d83", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/certs.h": "bfd4c30c295b2b503390c856bd3d0cccda0e9daf2f7dc1507721f2fff41f2510", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/check_config.h": "68ab1859bfcff02186a5714efc3b2ea2b00f0cda762cdba56f6dc757c38eabe4", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/cipher.h": "a81b31c6cfacd6299d2359c377dbbc795659708b20d08334ea2db589cc6133a6", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/cipher_internal.h": "aaa7c0786798a86474f719d073a940653e61734f0d136a4603321bf41290b0d8", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/cmac.h": "5036276230e6aa35006baeb9a4436f12979fa24a183e17466ea68f41f0aa2f4f", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/compat-1.3.h": "8ea7c265dfd891bb30b5b3ac37b320504a1cf4b81c143e0a1e24b87b2056b867", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/config.h": "144b7fe287b02a8ae4a01b3b247cdcf1269c832acd5c679bd6bdbe28ff67f2a5", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/ctr_drbg.h": "b3a74263fd3ef46f7c74986c7ba4929a3f196d075d694069590fdd819507cd5e", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/debug.h": "6b2cfab54ff48fbe39127efec01ac0b75820b11ab96c8341675fe2007659522c", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/des.h": "7eab904020da56efbccdedfac2f5e46ab6a6570092f15b9d6e72bebf7bdfafda", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/dhm.h": "e90ce742801ddd9741d45287386cb75221e2e6c16348b2cd8708176bc1819f8d", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/ecdh.h": "5e1dcc2112819ece940bad3649620618f82eee4edc99a18d2014a4582db9350f", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/ecdsa.h": "83dc93236244f575f781bc23cef8a04eb1376c339ebbb5669204267677438a53", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/ecjpake.h": "5b704d68507d226d6ff61374d7abcd5a3190e027a31f135fdbc11d266e794f01", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/ecp.h": "972b3c8f5d50e752160a6529607028efe87563add390668f5408109862ce1d7d", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/ecp_internal.h": "c9405a97aa2b214dc180492b94420b0828a00be8f11d5d856e5bbd00d6e3c7d2", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/entropy.h": "377d60374c275105b8c33362b26c5405eabe868f5e14ad0c3596b2ed7b023e69", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/entropy_poll.h": "e1b77dd92b244e09064923aae8f31fdd334b158a3c15b0df5bdcabe3a9fce3d9", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/error.h": "23f71377a17b8c1ab653d983c1061a01dda9d5ddf988a7f61f2ee92fb3a89598", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/gcm.h": "d5b916153e68a02800e93282c4ae25ee3cfe7cfb3195e509a4cae909b946b40a", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/havege.h": "8b74f6c754de5954fc1707c6883e9f9806f4588e4dd7ef8cdbde7965a13def6f", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/hmac_drbg.h": "99dd7c16aa16571a1854e1023c05970b5d1f4d35f678951723b10f12c8913a77", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/md.h": "013d571eda06d5892094a2f343c2e6ec1328dcbe56a4027b51b7aa4f2f672457", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/md2.h": "cbbb0ed6502a5d3ffd3ffd5bd59259b2ac01615685e1991b512e05d8c11d1279", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/md4.h": "8631594d2ba4459a01cbdb1c5214e519c1c80b2986a3d6cb2e3fbcac453564c4", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/md5.h": "a67974f33d62e23d49f2a0b0d82d2de538149606e16050f686c25baf9553ba31", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/md_internal.h": "40f2ad9b420c61c093ee975ad5585703c9f077a194847facf58ab125fff0c889", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/memory_buffer_alloc.h": "cf6ec674bcb187bcdeb8e66efeeae783634ccf9663d6362224cc07341c788c1c", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/net.h": "11af1502a0d6936a3d6987324369442881036d49f6a14a836b84f302f626b700", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/net_sockets.h": "1876b5a4328f662e2a65a1f02f8fb6199628360e5fdd4f5e8bdec902f3419872", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/oid.h": "25fbe809d3f5750f31e3e33691a8b09d58a2f970ca80c8f5a25c266344dfc429", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/padlock.h": "bdd6741d09e7f6ca3d61acb025c9be36865e6f4cf1ebe34225490b7b4f33dbb8", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/pem.h": "1095e578f01f690b5afb9f0fe38d769355b1a05c00e4c2db2d476d44dc3b6d58", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/pk.h": "5781003304166d2765b5853a18fbc87410b17da2ee342517ac476d38788b3af0", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/pk_internal.h": "4a3be081a1a59ee9987bc869b6b262f13148ad8b9da96ade76fa07d223b72506", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/pkcs12.h": "98085ce58f75dced06f39029ce6427dfd82702d5d544876d0e8ed6ae8311b09c", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/pkcs5.h": "da15460b74d4203688399722238046afd46a4aa12d69c4ee2dba4c4c81838cd8", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/platform.h": "535631375b86ebe52d60f7162b2a8bbe75bfd8ce377d8a8c6558bd641e920c2f", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/platform_time.h": "551d9aa3782cbe2142ba11f483f39c82596d1f14a941d181345d66bd9f1c10b2", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/platform_util.h": "66ab4e3c708d30d70aac03e70bcecc88b01491e6f1bc988eca6c615a42f12fcd", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/ripemd160.h": "ecba783ae6034f57018d7f541c2fb7cd47621ce29f14749df8715a66a41d86f4", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/rsa.h": "26dfc2e091328d598afbc0ec23f82f57fcf4bc25e5a8dcb6424dce44547fb7b0", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/rsa_internal.h": "2b2f8229f76f319ee9105d03bc5c9ba9da596eb57e374fb83f7cc932f230f087", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/sha1.h": "23e74b0ad7d0cd728f5300f10bf7c5a0a1f4ae332d99134a913d9d4ff6e27305", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/sha256.h": "af95f3dc439cd85f4aa4fbf0a1aed45b39b28d0a31f03f98e5949c5980518139", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/sha512.h": "2e3a79a2fcd4ea2d5ad4b2854a0e902a20af21f1e6cb987e0152ea1fb90abd92", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/ssl.h": "1dbfd979d3f3045e4da5894ebd1ba4ba27427a7e7221b399bb19706eecb91efa", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/ssl_cache.h": "1439f1aba35d65a8941540bdc1785a2f32776cd503115774ed806fbdf16d7fa7", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/ssl_ciphersuites.h": "1b0ef8df0a120e4e07c5b7ad015e48ec74c4c8ef1e1ec50779b90d2b1b5fbda4", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/ssl_cookie.h": "6a0f9043e653835995de5eb674e9372bfc313baefb00c1f7e8ac934a995e22ce", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/ssl_internal.h": "5c840bb982a4767f8ab0abc4aba883cd5701cda60ea2a8182dc23d0969f3f1c1", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/ssl_ticket.h": "ad6c79dec8ef889bf26945e502ed8cc53ed1e28fa0029c36cef74f859f038dca", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/threading.h": "696ea6ca05c60daf4c55403be67c4f6c5f3263eeda9033f72b76a99194f88a99", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/timing.h": "64c2b3b1d9c788530eea5377ba1aa4ecb795623be51257c036145249097643ba", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/version.h": "66830fee57673629b3c4d8a8682e7092a25b3f60422d5f72e0654f3fe0c304ac", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/x509.h": "eec17239a457372216e213bb1cb19f8b12bf08a053c139f72a3e8836c2c30311", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/x509_crl.h": "c218c7b3b9a183ad8452eccc6c4cf565179a92471faa0907afe051f2e8667e57", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/x509_crt.h": "fe951251afe6f73eda48ddbc8d78241c7d2edde5daaf470b8334edaba301d6c1", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/x509_csr.h": "90f566a0e2afc1d4973e71bffad5ebacfb3d2dce6b6080d620b9d3a406b13634", 
-    "libraries/3rdparty/mbedtls/include/mbedtls/xtea.h": "55661af82cb9f7584d6dafc8286d1b109eb00adc07b5b1e98dfa5f708e6fe19a", 
-    "libraries/3rdparty/mbedtls/library/aes.c": "d7fe9241614d45530ac272e5cc64402156d7e4273e772643abc9ac3fc4f57783", 
-    "libraries/3rdparty/mbedtls/library/aesni.c": "ac233a03ee4debff36c6a59d29500a21f7f21175e24a95ec6aaa52777a0f6fe5", 
-    "libraries/3rdparty/mbedtls/library/arc4.c": "c235cbe0680663d9b1d7fc2348fed6305297ad0ee33bddb571f00d4bd2c5c1c5", 
-    "libraries/3rdparty/mbedtls/library/asn1parse.c": "518b1da2068c92a27609b0e93eafca43ffd54f4d073451a2d2067146491fab2e", 
-    "libraries/3rdparty/mbedtls/library/asn1write.c": "2895b46daa16827e5210908d16004f70935ba83df5aa9ba80d89862930426410", 
-    "libraries/3rdparty/mbedtls/library/base64.c": "5bcfc75aae4849eac312476cbad90b2f65d1b6a27d67e25ee669214ed8eccfe1", 
-    "libraries/3rdparty/mbedtls/library/bignum.c": "0df504815a5d9d06e98e5db8ac2c5dec56a962f3fde26fb45380694a046cb3e7", 
-    "libraries/3rdparty/mbedtls/library/blowfish.c": "38d876ab2cfe51d2612d4fa06bea4c1f599b2594ca52a4b2438131e71a030c56", 
-    "libraries/3rdparty/mbedtls/library/camellia.c": "42517d76e1457641937c5cf63ae82e557463ddf1a325eb33462f92eb25c6f37d", 
-    "libraries/3rdparty/mbedtls/library/ccm.c": "897e5833ef14277f4135026bb20dc8a80e6a4eb49ebaaaa7ac3f1acc321724bd", 
-    "libraries/3rdparty/mbedtls/library/certs.c": "1b5d302088832002318f5f6af3ab07dd72ad0599395b6c53b12cb12964654451", 
-    "libraries/3rdparty/mbedtls/library/cipher.c": "c002534c4b103d21b05bdb11f82f16d2b77efd7f51fb94b5a2050ecacb56e647", 
-    "libraries/3rdparty/mbedtls/library/cipher_wrap.c": "262c0e973911e9c6b980163efb1fa6e67f7ab59f2622c8dc7e74b027a0ea644a", 
-    "libraries/3rdparty/mbedtls/library/cmac.c": "0657d31f2e648105f13e210d582d474f3049155e495857ec71ef2545d1e3f9cc", 
-    "libraries/3rdparty/mbedtls/library/ctr_drbg.c": "69be14f4c7757352fba77d3ba16242d11a47ff872ab529986886740242b32c34", 
-    "libraries/3rdparty/mbedtls/library/debug.c": "bba82c96c751bbb6ea0aff5abff39c00f78811fc4cc78fcfbcf46a1381cc6fbd", 
-    "libraries/3rdparty/mbedtls/library/des.c": "1c2e16f4f93f41d139faff511b08d6064efb9d83b9bcaf71bfa5ed6a555f3686", 
-    "libraries/3rdparty/mbedtls/library/dhm.c": "258a0d7572668f1aed5a431e1728986b073510876e13a2fa598c7b4b044a23da", 
-    "libraries/3rdparty/mbedtls/library/ecdh.c": "dc31847040da6eecd4a379ad40d287fd285a667ba4fbed7b7fb42ec155241cd8", 
-    "libraries/3rdparty/mbedtls/library/ecdsa.c": "64eed30fd2c864ec8aeee1b19a5cb9cdc090b9baaa4b01f9a69491043e0990d7", 
-    "libraries/3rdparty/mbedtls/library/ecjpake.c": "38d81e934976a39b0d53e97966b4eb383f5415de71625f2fa7be8f0c9d9d164c", 
-    "libraries/3rdparty/mbedtls/library/ecp.c": "6eeac94b03af0e99b95d8845cd9c18f03ca0d9445612f099796d85d0db85f8ab", 
-    "libraries/3rdparty/mbedtls/library/ecp_curves.c": "64d5fded095233eefd3a9b7600c2a6bbbc84501344f6306e643857feceb0b46a", 
-    "libraries/3rdparty/mbedtls/library/entropy.c": "190d381d604d65cc7a8db64903561fc5b08d4de51e5c063751e43e1e371d2a71", 
-    "libraries/3rdparty/mbedtls/library/entropy_poll.c": "31ee1b1ff4b606c659d80d1bde9a41be0ba0bb6d269208ffcbc97fe14ed6f51f", 
-    "libraries/3rdparty/mbedtls/library/error.c": "73b905a3a58ff80428c8bd36fd612090df12f14585c469ccbfafcf194ff1465b", 
-    "libraries/3rdparty/mbedtls/library/gcm.c": "834bca591aa2737e4f1ccc72da4c2b58f7187f1cc8a0bfe34ee28a180c7967db", 
-    "libraries/3rdparty/mbedtls/library/havege.c": "876de72ca12ff76d4cd2383f58f19f6066ec6cefbdc217f226e804a5dba4fa64", 
-    "libraries/3rdparty/mbedtls/library/hmac_drbg.c": "8eae554686db22c4182302a3fd3947d0c52c9c16b3cc3a2d785ba0e97e55299c", 
-    "libraries/3rdparty/mbedtls/library/md.c": "5b25ced71d96512eb150a58b6fd0ef73e3dcb976535f5c1dd29f2321d3894631", 
-    "libraries/3rdparty/mbedtls/library/md2.c": "a918ed2d2b070481cc39c7bc1dc26c9c384f549fe4976c474ae99767ee44088b", 
-    "libraries/3rdparty/mbedtls/library/md4.c": "1b064dfae3eea15abc9863d74afd75a949f3a8ec656c84fa88c4c264996517bb", 
-    "libraries/3rdparty/mbedtls/library/md5.c": "5868dfdd79832f3f1f5944584f7b62e589d8d9dc3681f76be221e715ac63df4d", 
-    "libraries/3rdparty/mbedtls/library/md_wrap.c": "08ef9f8bfa604f28d104f37cc99de7dba75eaf0994f08ae8f2e3b4160a88f571", 
-    "libraries/3rdparty/mbedtls/library/memory_buffer_alloc.c": "a0d14b7395dacf6972aca9670dc1e136f2e54003b21b98b3219d25d04c332093", 
-    "libraries/3rdparty/mbedtls/library/net_sockets.c": "8925cd9bd4bf46c5695a5fee6239ed6e87a48cec2bad5f14ed7b0bd23ba1d8b9", 
-    "libraries/3rdparty/mbedtls/library/oid.c": "2128b76a3b28983419a118a21e6870f1cce4949ac68bb265ac54ca1aaccade13", 
-    "libraries/3rdparty/mbedtls/library/padlock.c": "939466486a82f88213069b9fb3ae5c648c0d2e360d681e07ae96339b3aefb7fd", 
-    "libraries/3rdparty/mbedtls/library/pem.c": "69df3ed689732f9fbba7873a74ccc3f7240cf1927d7b8a4bee6637415e5ef476", 
-    "libraries/3rdparty/mbedtls/library/pk.c": "7a0e7fc17ba3b9a6050e130020fcd508caec03b60d18db671ff1040b91ecfaa0", 
-    "libraries/3rdparty/mbedtls/library/pk_wrap.c": "6fb2d3fd433a3d69703647c5e4a2f0182c1c64b7c2e5b4d4a5d5a5d65fd87b83", 
-    "libraries/3rdparty/mbedtls/library/pkcs12.c": "24a3969895c9109c913b60133c521fc35d757ce40405d37fbc71a4aec155ad18", 
-    "libraries/3rdparty/mbedtls/library/pkcs5.c": "fa24de08d9667ff045c590879fc5c4ccbf4bd26c395eb2d3637fd185ac5636d3", 
-    "libraries/3rdparty/mbedtls/library/pkparse.c": "e6b62789e95092d140f59b5fa6c38233f5da7861b327cf5ec40857a5dd4c91b5", 
-    "libraries/3rdparty/mbedtls/library/pkwrite.c": "f108bfb213fd740b8531fce960dc9324ce061bc2d0765ddc9a3d3c699e9c6499", 
-    "libraries/3rdparty/mbedtls/library/platform.c": "c16a7cf20f0d82f34af79a653e8ff644b19a1735bedbdd5e740fd43337a085a6", 
-    "libraries/3rdparty/mbedtls/library/platform_util.c": "1d9bd1b2343871390e8c16f2f5e538d79cbb6c1ceb45deb4d9480fa2fffbf590", 
-    "libraries/3rdparty/mbedtls/library/ripemd160.c": "8ab0d397ff51627c1cff9ad8de7a774327e09bf4ed6e81953bb198eac496df1c", 
-    "libraries/3rdparty/mbedtls/library/rsa.c": "bd900bd6e436b94ddfac5f5932025da8a110c32e5c54093c75cf8f16ff5be17e", 
-    "libraries/3rdparty/mbedtls/library/rsa_internal.c": "793f895c7e63b7cb15581aa6f35de50dfe268d2c2673eaa183d80c218a460fd7", 
-    "libraries/3rdparty/mbedtls/library/sha1.c": "e8e24468c8ad614260091c3fcfec0ca6fc7c7bdb5c2554d1b97c897b5faf7888", 
-    "libraries/3rdparty/mbedtls/library/sha256.c": "dc86f50b8b8c5541fafb8bdfe81fec0bc50f5b5ff11d424646543b06d2cc5e39", 
-    "libraries/3rdparty/mbedtls/library/sha512.c": "da9004628b4ef4f89af824db206444e2da21fdca43d2f02e1de968c2e03cd7b1", 
-    "libraries/3rdparty/mbedtls/library/ssl_cache.c": "f07b18ace4b0625e5c9a39bed28feb88de71e1a93b3dd37a7ab044bd917197f5", 
-    "libraries/3rdparty/mbedtls/library/ssl_ciphersuites.c": "8c3ac196b7462e873f310eaa194c7a91fbea30d6bd30efe3c13669d00b7f1da6", 
-    "libraries/3rdparty/mbedtls/library/ssl_cli.c": "1ed7a2cb50b4d783753bbea8a15fd997defb450b71fd3a42e2cee4e785889878", 
-    "libraries/3rdparty/mbedtls/library/ssl_cookie.c": "5e30840620c1864ca2967b3438e129e5298a565fff08217d0f3899951abd1317", 
-    "libraries/3rdparty/mbedtls/library/ssl_srv.c": "a16812cd7ebd080ebdfcd08e815c8a4a5473da7f07fe472437c7c6fdfcb3e026", 
-    "libraries/3rdparty/mbedtls/library/ssl_ticket.c": "4a3caf780643fdaa7dab1513c55a2ffebc523e1ab462062b3803222f4efc9161", 
-    "libraries/3rdparty/mbedtls/library/ssl_tls.c": "2a0b6d209b92e8c125998be58f522e7ba313ca30104edb0a4127c947b18b7ca6", 
-    "libraries/3rdparty/mbedtls/library/threading.c": "f197bfd062adc6b6e11171f7bf2223df29e6c83dc37e9f2181f5173285a8c955", 
-    "libraries/3rdparty/mbedtls/library/timing.c": "4e52e21127d310f3e282e032a399800f90fb8c08bda98acc91640612ee685fb6", 
-    "libraries/3rdparty/mbedtls/library/version.c": "8a28d4a63334849cad218d20ef90f913a8c32da3e5d52b7f4378614451936316", 
-    "libraries/3rdparty/mbedtls/library/version_features.c": "e1d8a35b22b66ea14a77d0fbdaf081fe3aa3f9dfe2122a81200ffb65bacba42c", 
-    "libraries/3rdparty/mbedtls/library/x509.c": "4ffecf162fdd16d01b7152129776618766395008bb71cc52ce7130d460d7ccb2", 
-    "libraries/3rdparty/mbedtls/library/x509_create.c": "ac48ac042b97be42d7068c137cdc4b2038a8d5a08f61ee9810f2ad7ecc15ed5f", 
-    "libraries/3rdparty/mbedtls/library/x509_crl.c": "2b3f46280e59f9f11bba00e80a6b4e48960e686f9980f15d5c6449269e2645ad", 
-    "libraries/3rdparty/mbedtls/library/x509_crt.c": "4d4b8313f7a9304e017d56e962eb121e2983d683f9004b0f60cef2b68ac4803b", 
-    "libraries/3rdparty/mbedtls/library/x509_csr.c": "c976aaeded3df5235f5e28cc69ff971cb23d0bb49e74036cb64bcd8c389084ea", 
-    "libraries/3rdparty/mbedtls/library/x509write_crt.c": "0e83aef8d18e8ce87914559d5cc2ed456b5e7bb8839065f8c4bbf526e479ad9e", 
-    "libraries/3rdparty/mbedtls/library/x509write_csr.c": "5f2aba65549a08bcf67dee1d514e9d02c23ae7d7e92dd3f3d1cdc4ecd72d0834", 
-    "libraries/3rdparty/mbedtls/library/xtea.c": "dbc644b0e314747fda550617f30fe3fbc676e5f75768a4266261d42b1a75bdd1", 
-    "libraries/3rdparty/pkcs11/pkcs11.h": "973a7d8bdd801747022f0cc1fd22a48ef9df7f5fa1283d8f746d811652c0fa12", 
-    "libraries/3rdparty/pkcs11/pkcs11f.h": "79fd5dffc79a5f9d3c42ea3ac2eee8c7cc702559969d63db7e35ab743d021798", 
-    "libraries/3rdparty/pkcs11/pkcs11t.h": "21c9595f21a363b0dd247eb5af97dec441c81854eda177a7edf18a358cb383cb", 
-    "libraries/3rdparty/tinycbor/LICENSE": "3c6ba0b5bfa7830505301ffb336a17b0748e0d61c4d34216e9dc98f10e40395e", 
-    "libraries/3rdparty/tinycbor/assert_p.h": "f0999746406acff4f276c83b5a54a0917089ddee02b5635a57f62632e16dbf29", 
-    "libraries/3rdparty/tinycbor/cbor.h": "af2dda196401b991cfa421209917a3311bf349909953f6c1fb9905908a3a6dd8", 
-    "libraries/3rdparty/tinycbor/cborconstants_p.h": "fbf4cce31a466af7c7de3598676080dd6fe95feb72210719fc932d06eac6b2a3", 
-    "libraries/3rdparty/tinycbor/cborencoder.c": "ecf4fb6fb5fdf0c250d312ae36b91b2d3b49ce67ba7398040b66b19dedce2bad", 
-    "libraries/3rdparty/tinycbor/cborencoder_close_container_checked.c": "39b7419baa36b03c709694d0d7659db2a0a07d195bb240b6b9f789d0bbc39f2d", 
-    "libraries/3rdparty/tinycbor/cborerrorstrings.c": "5a048ee00db41540bb8bb2502003a2e6964427660ae01c3b8c92e61dec45aaad", 
-    "libraries/3rdparty/tinycbor/cborparser.c": "0ada9a4d86644e0079bea6fb7cbce5ec29b9d03f642fe4e1914f240b49e0b3ec", 
-    "libraries/3rdparty/tinycbor/cborparser_dup_string.c": "93159a920a941edc44221d7a08e3af33fbe25056b484523504c63257b5aca890", 
-    "libraries/3rdparty/tinycbor/cborpretty.c": "2f909458e42562e34c1c8eae07fcabe23b10ae4f310ad19746f9bdf0b2b01eb0", 
-    "libraries/3rdparty/tinycbor/compilersupport_p.h": "e2a38b452a131be71526d592ad2dbd6fcf29459c7655c45bfa180f6fc194b688", 
-    "libraries/3rdparty/tinycbor/extract_number_p.h": "aa09961a551afca91df9c2b9b5e6c7fd2fa37e9c44b8151568d9b11d56537571", 
-    "libraries/3rdparty/tinycbor/math_support_p.h": "36ed6a744fd989657c882ace8d9d08f7a4aad94f1d120ccaff6dec27f11235a9", 
-    "libraries/3rdparty/tinycrypt/AUTHORS": "478b050e66ce46564c1d081590edc7f3db7fcf1894430d20a9b6b550029d4ab8", 
-    "libraries/3rdparty/tinycrypt/LICENSE": "b2d451fcba3577b118741d733d37ebd15bdd0b6b381e554a7345bdbfa3743108", 
-    "libraries/3rdparty/tinycrypt/Makefile": "7c3c3e1913882fbc6e9ef5c567505704fbe7f12cf55a842eca5b19df8c868ef5", 
-    "libraries/3rdparty/tinycrypt/README": "d795d171058c36cdb8ce718fd615846f345815465efe011aa0b215df86e53a38", 
-    "libraries/3rdparty/tinycrypt/VERSION": "283571d2642fc7b3befd294f45d53b896a1d54d34c86235b13151192b380606a", 
-    "libraries/3rdparty/tinycrypt/asn1/asn1.h": "89499b4d992a8a347ac4805fe01af0c5977ce6237ccb628589b6f885b2e1423a", 
-    "libraries/3rdparty/tinycrypt/asn1/asn1parse.c": "fa021fe9c65c28090e841387b71f59484f62abebf5cafceb0fb555c0dcd572da", 
-    "libraries/3rdparty/tinycrypt/config.mk": "ce91366509d78906308eb30de2f85bfb894b48146ea01d644c734e1a8ca346d1", 
-    "libraries/3rdparty/tinycrypt/documentation/tinycrypt.rst": "8d5716676abf2f0036d58ee7691da44953d8efe97020ed4a5edd4afbea5c054d", 
-    "libraries/3rdparty/tinycrypt/lib/Makefile": "b6bde2680a639927714b1db0cab6c038101d0432d45a08fa6da157aaeff21ec1", 
-    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/aes.h": "bd9e1ea99ec9717aa68f8c2b9b8844c11a7557017dde19c0ea7ca9599ce28c8e", 
-    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/cbc_mode.h": "9d04a528294793b47541cb70fe4e83f5c0a70b4c550fb49bce90a22dc863a191", 
-    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ccm_mode.h": "79347427c642f708ae10f24784236a5e5a328f807b100a5b0fe90db70bc6432e", 
-    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/cmac_mode.h": "6f9727d78078f9ae016f18b2ec420f3e6f8afc60e0ea5fa0fbc8e8a646e8f53d", 
-    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/constants.h": "89c80a6d5f468ebde82fb525a6dd72685cb27720fd385da6e3f3f2a19fba48ec", 
-    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ctr_mode.h": "1f3fe4a524a86e9c659643e608e81287b4e898e58316f28ca51b19c212e4bd72", 
-    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ctr_prng.h": "8d0f25e6cf23cdd8634778fcba10af888d24fd0d11c496f1b9a0440cd45b2509", 
-    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ecc.h": "ab1904e162dc994ef0b0174dcee9e708d57d58828dc5d819ba71713ac443fee4", 
-    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ecc_dh.h": "1e8bda76ea0f2673d371a752ea57f3e5da621a3007fd891fa28d4ed555227185", 
-    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ecc_dsa.h": "c6545de8ba4490efbde181189b999938b43c36cc1e905d0a12decf1b526b4769", 
-    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ecc_platform_specific.h": "ed890b375c177e7abad7b188ac0a737e87d43224325cd1ed944bad3d25c470cf", 
-    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/hmac.h": "c981663602ae9c4df8f7c2fe5d6e1d2cb1132fc0b90beb4e4eef536d9f54b82b", 
-    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/hmac_prng.h": "c7d780c4bf3fb23f45ec1225f31f0c8a851c5693f47adf76fb76b7f140ce136a", 
-    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/sha256.h": "90eb15d8cd82f81ba163c53b199c04eb9e5fda52a41901bb380dd80097f57902", 
-    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/utils.h": "c5c169e0ae15e394588d7d6797a28af9ab251b1ed1169b3207625752d8d8fc8a", 
-    "libraries/3rdparty/tinycrypt/lib/source/aes_decrypt.c": "edad5e3570012bcc1da57869fdb2bc4e0c6e733fb67f7b362bcc71f88d0af017", 
-    "libraries/3rdparty/tinycrypt/lib/source/aes_encrypt.c": "90957c91a22214b18653bae4ef4abeca8bc6674051c48fe0c97c413a6d65e555", 
-    "libraries/3rdparty/tinycrypt/lib/source/cbc_mode.c": "e09c83712a618ba08a60fef3e5ba2ed5bf712fa6b8c79a074cbf5731665f7ffa", 
-    "libraries/3rdparty/tinycrypt/lib/source/ccm_mode.c": "089fb37565150785cf67c20457fb95409d860cb0b572348148fb09d3d11ac6fd", 
-    "libraries/3rdparty/tinycrypt/lib/source/cmac_mode.c": "67e2a2ac539ed72bd5ee80cd377b1b5f5148f6c743bd8c89904a393d39a5a8d7", 
-    "libraries/3rdparty/tinycrypt/lib/source/ctr_mode.c": "30ce4835f928dc331ed74f86de26b9839ae50e703e6086434edaf3ba5a87473a", 
-    "libraries/3rdparty/tinycrypt/lib/source/ctr_prng.c": "c0a2de479ae4bb72b89236a44058d387e14670f24e114298ee14173c41bd5315", 
-    "libraries/3rdparty/tinycrypt/lib/source/ecc.c": "1c56234ff29708c712d07f864ed498eb6b0ab8475b5b5824079ed0c77070ea1b", 
-    "libraries/3rdparty/tinycrypt/lib/source/ecc_dh.c": "bf6a6ba824721d9fa781b594ade96cbb97d47f65dd7fe5b431dc0ac6eaf335a1", 
-    "libraries/3rdparty/tinycrypt/lib/source/ecc_dsa.c": "f80751d74bc9be544308f5b7495492b68e552b7283540cd50f9d0f295df13591", 
-    "libraries/3rdparty/tinycrypt/lib/source/ecc_platform_specific.c": "17f454ecc206f2ac532c517b13beb56ff730e71efb93eb70b20ee71617a8eb7b", 
-    "libraries/3rdparty/tinycrypt/lib/source/hmac.c": "6c9141de8af68822f611b4213801eda5a8695ece071b3bef34dbb6e52ffdd709", 
-    "libraries/3rdparty/tinycrypt/lib/source/hmac_prng.c": "3a64017e98bd7b25f33819cbcd597d48e9ae00478201a68a485cf7e04f400274", 
-    "libraries/3rdparty/tinycrypt/lib/source/sha256.c": "a8ad4bb2c09e31e4ab86c1b4f8fa073937a42e2694afb4dde6cb1b3c7a4b5ffd", 
-    "libraries/3rdparty/tinycrypt/lib/source/utils.c": "2cf7cd3ee3b48d05b925dc005c1b12ead098f3939e948f55e278e16c180e8d8d", 
-    "libraries/3rdparty/tinycrypt/tests/Makefile": "5d72dc2308dc2cdf16a6565b700d931a9b2ab72550af58a890993f301002c6f2", 
-    "libraries/3rdparty/tinycrypt/tests/include/test_ecc_utils.h": "f793eb6066f90db4222a4d95d47e5f6b2e480bc07e1766e05cd091ccf8cc565c", 
-    "libraries/3rdparty/tinycrypt/tests/include/test_utils.h": "bf74d9342f08637b56652c599b2956a21c56d32e80ec1e9d74b4909bd12b4122", 
-    "libraries/3rdparty/tinycrypt/tests/pseudo-random-data.bin": "f9b0a11a6612bfc0a12ed0924ff5c5141b1f3ee3ba573249d973619283b483ed", 
-    "libraries/3rdparty/tinycrypt/tests/test_aes.c": "27060817b7a6b0646aa5c4d55bf51586b976326bf165ae9ebdde7f5b26cf5f6b", 
-    "libraries/3rdparty/tinycrypt/tests/test_cbc_mode.c": "59dfe4f51a60b38bb5d6cbc0be5db9ae795c993e58663e58f5fd9998e71f88aa", 
-    "libraries/3rdparty/tinycrypt/tests/test_ccm_mode.c": "32249f37c22a339f6e1b0140fdee83402226a70726fb7beeab225a0989120073", 
-    "libraries/3rdparty/tinycrypt/tests/test_cmac_mode.c": "1b48ae8a493e009e09d9ea9829353a4b90a71c21a297373c242215a67f2b683a", 
-    "libraries/3rdparty/tinycrypt/tests/test_ctr_mode.c": "be4ae7b236ea863937b6091aa1f3717df196a333fbf39ff922d7da0c8eacc512", 
-    "libraries/3rdparty/tinycrypt/tests/test_ctr_prng.c": "f745a4d272810460c85f8c1781da7977e7fdcf02e02d25f34e363b60c8291c9e", 
-    "libraries/3rdparty/tinycrypt/tests/test_ecc_dh.c": "28d253afaa2f1e329ba5ccd4266b34d45346e77235fecc593a78a360ef6195e9", 
-    "libraries/3rdparty/tinycrypt/tests/test_ecc_dsa.c": "55533e65df9e3c7e2e792c92ca5a567b692b92c289c21f12b3cfd75b385fef93", 
-    "libraries/3rdparty/tinycrypt/tests/test_ecc_utils.c": "4ff6a5f2f5465f485ab2333cc4dd15b2244ca875cc016b6e646510d218ba3be8", 
-    "libraries/3rdparty/tinycrypt/tests/test_hmac.c": "c0bca5221fbb587f5c29477fa062d7e30297914c1010102b5f6f47f2cb37e143", 
-    "libraries/3rdparty/tinycrypt/tests/test_hmac_prng.c": "bbdabde91a268dc6b3a20f0efdff63e2d099848a013edfa7e956358ef3a9caf8", 
-    "libraries/3rdparty/tinycrypt/tests/test_sha256.c": "b154011602efffd7319ca8eb6a0a04b9476efe2c1abb42f09748c3ed766197bc", 
-    "libraries/3rdparty/tracealyzer_recorder/Include/trcHardwarePort.h": "ef58f17d172dbadadd7ffda7101afbb6da23699e35b78a115ff51732abee3653", 
-    "libraries/3rdparty/tracealyzer_recorder/Include/trcKernelPort.h": "ef98c725ee37b6ae0e5728fe8f872b8e1b0ab5d844a8fc05149c8dc46f2de3f6", 
-    "libraries/3rdparty/tracealyzer_recorder/Include/trcPortDefines.h": "4f3f22e309390bf5baba641c550ca780f3aaa5eedc4f7d2d2e132beb74e91950", 
-    "libraries/3rdparty/tracealyzer_recorder/Include/trcRecorder.h": "3632e05f7ac35ffaa97b94d623aacf947d9c59475dea47bec28183160d31ccfc", 
-    "libraries/3rdparty/tracealyzer_recorder/ReadMe.url": "3fbfd84c715d8e6d3df562c3019b2892139b098641d42d3f5b91781704bf2bfb", 
-    "libraries/3rdparty/tracealyzer_recorder/config/trcConfig.h": "bad67bd4338e8db73bc97c13f695a9317ac0d85c15d385a500d513009b46b6fe", 
-    "libraries/3rdparty/tracealyzer_recorder/config/trcSnapshotConfig.h": "a77f2fe9f1b273ed537440c7ea252224fac17e4dabfef2bb98270481e586c77b", 
-    "libraries/3rdparty/tracealyzer_recorder/config/trcStreamingConfig.h": "e8353c79d184a8a4080f54a7ed2e15d0eae1b19221e47221dcea5d94a98806c1", 
-    "libraries/3rdparty/tracealyzer_recorder/readme.txt": "607e810b5ab8d1dcc6101c4af4d5212cb9eb905dec8611361395085198c7becb", 
-    "libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT/Readme-Streamport.txt": "09c5ddedff88c85b1acb667dd53627f663df8831a710d7d5a62fc7db4db79ded", 
-    "libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT/SEGGER_RTT.c": "7373709c2e587cd1abd221a6f249f9a6e14d8c11ee0b3d75d701b973586f7369", 
-    "libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT/SEGGER_RTT_Printf.c": "ee399915fdbdb91901d825b3c1696f9add8936c354064ff4dc3e69a0dac6ccbe", 
-    "libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT/include/SEGGER_RTT.h": "5da6bbb8b2d11faf2b948b00da9af146bd68dbb51245578e7167a1cb77ef9e5c", 
-    "libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT/include/SEGGER_RTT_Conf.h": "dcca2e3fd6457929af4f8c36c64f67a5af6090451bcc042a047ef7760843e5a7", 
-    "libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT/include/trcStreamingPort.h": "a24894b8299e94f93f53057f5ff59b77e46f65b55e33d807787c94e774ed08ec", 
-    "libraries/3rdparty/tracealyzer_recorder/streamports/TCPIP/Readme-Streamport.txt": "d83a96df2e87ae6b179b646eeb27956885d675856b193f4d71404e9738aeb645", 
-    "libraries/3rdparty/tracealyzer_recorder/streamports/TCPIP/include/trcStreamingPort.h": "a34c3856159e734c160e3aa9d7c6f4b45909fc7c414f2b6b9f7c1c26b6e1f446", 
-    "libraries/3rdparty/tracealyzer_recorder/streamports/TCPIP/trcStreamingPort.c": "1781c54614a22d70449e3bd936757f66f9213ccbb9a7126b8788f4dfb0293765", 
-    "libraries/3rdparty/tracealyzer_recorder/streamports/USB_CDC/Readme-Streamport.txt": "a283d5e083e1a231cfb3bc17b30bbc01f4547dc740865d3cd9aa2b5878cbd531", 
-    "libraries/3rdparty/tracealyzer_recorder/streamports/USB_CDC/include/trcStreamingPort.h": "d55706cb951de3d3f586862de7451babb26b3d382841c35747ec6cc5989065b1", 
-    "libraries/3rdparty/tracealyzer_recorder/streamports/USB_CDC/trcStreamingPort.c": "199c4caae5fee2bca8bf4c59993427912fa53006413aeb646b48492039b434a7", 
-    "libraries/3rdparty/tracealyzer_recorder/trcKernelPort.c": "b03213e347ff166e23dd666676a3dcc3ea0043a2bbdb6f7d920488a511546a05", 
-    "libraries/3rdparty/tracealyzer_recorder/trcSnapshotRecorder.c": "b5d1e5873ec98b748216b1dae9f25fc8ae532165dd2d06615b115b3ed39cb9cf", 
-    "libraries/3rdparty/tracealyzer_recorder/trcStreamingRecorder.c": "a5fbaac9a48fba932f6e50214b0913fc4add1a50071e164877a0aac35b66a7cc", 
-    "libraries/3rdparty/unity/README.md": "c8922237978b31ecfeb41ea90c93946310cccd60068d1c8772726266fc3e0a2f", 
-    "libraries/3rdparty/unity/auto/colour_prompt.rb": "b25f12cab00233838cc1ec2478b78868d8cb380aff93479db855cfc73a6a5d6f", 
-    "libraries/3rdparty/unity/auto/colour_reporter.rb": "825b4b4bfc28449c6b24c804d9ffc2d1f1f5855a6655f6101debbeb69d461e64", 
-    "libraries/3rdparty/unity/auto/generate_config.yml": "85c5702a168e366148e8ec89df416eae888278a526c79459162c0f37641a02fe", 
-    "libraries/3rdparty/unity/auto/generate_module.rb": "40a016ee8a8c53f1bbaa8b47026318e14fec1e3742ef55e0eb1b81c11250c4b1", 
-    "libraries/3rdparty/unity/auto/generate_test_runner.rb": "04d326d6232da5844c7be86ff0d60c41c4656b31efa10711800b0e350d371d64", 
-    "libraries/3rdparty/unity/auto/parse_output.rb": "539ed21febcc6246680fafbf661a2a695ac1e9ee9837a365857ea3d4ef285155", 
-    "libraries/3rdparty/unity/auto/stylize_as_junit.rb": "8350efa8dac6ea49c460dd0125c979bd011b992528571e640ae8d03fce703a2b", 
-    "libraries/3rdparty/unity/auto/test_file_filter.rb": "3797fd7cfcc40c643f0b66555e751fbba36ba0c7517c01e3537ffc659af4ea37", 
-    "libraries/3rdparty/unity/auto/type_sanitizer.rb": "ecc5677ac9820f343aca50893463602fca940c24daf07a4784b4e9e0801c3f4b", 
-    "libraries/3rdparty/unity/auto/unity_test_summary.py": "8912c5cacee70c5be95e35ff4c48746e5ecdc31819ff528f076f6fd64a32dd69", 
-    "libraries/3rdparty/unity/auto/unity_test_summary.rb": "ba1e76115ebc4d4221a919c682fb3faae6d0e375a1d7910c199f2abff9caa736", 
-    "libraries/3rdparty/unity/auto/unity_to_junit.py": "0743f26b5ae67af204981293337f9cc9a8cb46c90aaa3f46f31fd9658ab65990", 
-    "libraries/3rdparty/unity/docs/ThrowTheSwitchCodingStandard.md": "a1838b8c9e20ac3c15bf96742b716b6621c0607c9273ae0f92a6769e3aa45f41", 
-    "libraries/3rdparty/unity/docs/UnityAssertionsCheatSheetSuitableforPrintingandPossiblyFraming.pdf": "251fcb21ea66444941a34f8b932a3baf0c47aed4c7827215e027006f06013bea", 
-    "libraries/3rdparty/unity/docs/UnityAssertionsReference.md": "2d72b94d517b22ff743245145ed8bb0ab0a6b72c37a5314810d7ff3cabb7af37", 
-    "libraries/3rdparty/unity/docs/UnityConfigurationGuide.md": "64d48b148c09da6b883e696ea91cd2219b719bc8de99d36b7d18fe83163383f3", 
-    "libraries/3rdparty/unity/docs/UnityGettingStartedGuide.md": "6d960fda02e07839a4e45e4ee5f1e6297005f5595cb882c460f0c9c52237f634", 
-    "libraries/3rdparty/unity/docs/UnityHelperScriptsGuide.md": "701e4d8df692c93f7a37e284827f83c619003959c3c29ad0b6d03e77c072e7d7", 
-    "libraries/3rdparty/unity/docs/license.txt": "3ed9b51da86f52c729c96cc99fdde6444b2297c788a9cf4ad1d3649dc34c4985", 
-    "libraries/3rdparty/unity/examples/example_1/makefile": "367e10ef968648ec5c531f144bb0ee257a619091a76fcc17516c220bf20539e6", 
-    "libraries/3rdparty/unity/examples/example_1/readme.txt": "4d72d51f1a385cd4aeb594e4485ca2439d5b86247523cd2d2b89acc2173d8a24", 
-    "libraries/3rdparty/unity/examples/example_1/src/ProductionCode.c": "29d42fce2d89d95fb2b14b649d3b2d7406d225a071e01e86d6ec0cdb04c7e614", 
-    "libraries/3rdparty/unity/examples/example_1/src/ProductionCode.h": "25cfcc42b79140f4c399363e0ef10a6e518a1831e10c61cc138d6d9a230425ce", 
-    "libraries/3rdparty/unity/examples/example_1/src/ProductionCode2.c": "c2cc0a76cb2ea145d3861bd9ccc467ac45ad3e8230d5075ed174ce3a5cd50a76", 
-    "libraries/3rdparty/unity/examples/example_1/src/ProductionCode2.h": "d4db1a4eea2bee3d668a203d4953f415f23be64a826c5a73059ef221f61b3882", 
-    "libraries/3rdparty/unity/examples/example_1/test/TestProductionCode.c": "2cc1611df09a030abb8ec11569d200dc313645662577b6a6eb32065a193b4343", 
-    "libraries/3rdparty/unity/examples/example_1/test/TestProductionCode2.c": "11387f2ecdc97ee3344c0df42123e73cae899702b348d5597e09e9760db267aa", 
-    "libraries/3rdparty/unity/examples/example_1/test/test_runners/TestProductionCode2_Runner.c": "2c84d6b954a6810a7c509dc861ee0c18a562dd23a5dd7747ea524f0c1467d9a4", 
-    "libraries/3rdparty/unity/examples/example_1/test/test_runners/TestProductionCode_Runner.c": "b6ec7bb984eddea80c178ecb30f6f772325a745ff9812a5e3f41f236c43e19e0", 
-    "libraries/3rdparty/unity/examples/example_2/makefile": "9c925a4b80f11ce51cb65fef51f8e1279113dc67838c71b5bc8b0c31009e65bb", 
-    "libraries/3rdparty/unity/examples/example_2/readme.txt": "a03bf4ac2d294a037189b42f7bf8fdff0bf50524857e3f8933eba76085f22f04", 
-    "libraries/3rdparty/unity/examples/example_2/src/ProductionCode.c": "75136eec7a43d0dbe980dea19ec46f6e16c0da92093686e59f6143d8ae8b5bb7", 
-    "libraries/3rdparty/unity/examples/example_2/src/ProductionCode.h": "25cfcc42b79140f4c399363e0ef10a6e518a1831e10c61cc138d6d9a230425ce", 
-    "libraries/3rdparty/unity/examples/example_2/src/ProductionCode2.c": "a929e7ef393ec5ccc53e3f885d663a1c8fbe5cc5f72a0fcad5c0d2f6cbc8b210", 
-    "libraries/3rdparty/unity/examples/example_2/src/ProductionCode2.h": "d4db1a4eea2bee3d668a203d4953f415f23be64a826c5a73059ef221f61b3882", 
-    "libraries/3rdparty/unity/examples/example_2/test/TestProductionCode.c": "cae04759fdca5834d1c2f926c0bfdb222da048069470722361bbdfcc3017233c", 
-    "libraries/3rdparty/unity/examples/example_2/test/TestProductionCode2.c": "332f23e940a9676504c84dc92d1a6cf72cd9204afe7f664c16b58ee7dbff312d", 
-    "libraries/3rdparty/unity/examples/example_2/test/test_runners/TestProductionCode2_Runner.c": "14aef95de310f1e1381feaaf256ea94d0905a538311b5e3fdc944f927e75b287", 
-    "libraries/3rdparty/unity/examples/example_2/test/test_runners/TestProductionCode_Runner.c": "a782491bcd8dd857b26a62df58e8671f1cb7641d6c0fe7f7853c079732ccd8e9", 
-    "libraries/3rdparty/unity/examples/example_2/test/test_runners/all_tests.c": "fe5c0418201d70dc696b0db6acf60b2ea0069d74fa94fb96d7169b8752e00d17", 
-    "libraries/3rdparty/unity/examples/example_3/helper/UnityHelper.c": "091c2466d25deffd8958332ad03d393ca1ec1b1f6150c16626d57d5901eb1b21", 
-    "libraries/3rdparty/unity/examples/example_3/helper/UnityHelper.h": "a95bb6d3704c51637bb0855787236b41229e3836601ba97e88768f95779f3d4d", 
-    "libraries/3rdparty/unity/examples/example_3/rakefile.rb": "7a1113adb71787b2ae7cd29fe9a5c7b50dec87c041aa6500aaa836ae2c4a0d4f", 
-    "libraries/3rdparty/unity/examples/example_3/rakefile_helper.rb": "a545c40149bdaeb2592322771b5e180bc103d67c783b23c74dcb8b0fb619a5aa", 
-    "libraries/3rdparty/unity/examples/example_3/readme.txt": "2af5e731fb1db0ddf5c739f0b08fb2724e4acc7efb7ee0a02fe474a3e69d284a", 
-    "libraries/3rdparty/unity/examples/example_3/src/ProductionCode.c": "75136eec7a43d0dbe980dea19ec46f6e16c0da92093686e59f6143d8ae8b5bb7", 
-    "libraries/3rdparty/unity/examples/example_3/src/ProductionCode.h": "25cfcc42b79140f4c399363e0ef10a6e518a1831e10c61cc138d6d9a230425ce", 
-    "libraries/3rdparty/unity/examples/example_3/src/ProductionCode2.c": "a929e7ef393ec5ccc53e3f885d663a1c8fbe5cc5f72a0fcad5c0d2f6cbc8b210", 
-    "libraries/3rdparty/unity/examples/example_3/src/ProductionCode2.h": "d4db1a4eea2bee3d668a203d4953f415f23be64a826c5a73059ef221f61b3882", 
-    "libraries/3rdparty/unity/examples/example_3/target_gcc_32.yml": "d7ab74bbff3a1b2a50432636ffbd4d7d7e87df592bf5a5754de56275f44ca521", 
-    "libraries/3rdparty/unity/examples/example_3/test/TestProductionCode.c": "b0e815e2285b1730d7dcd24b400d15b4efccfe5e4776d96248a2165c2f0caec6", 
-    "libraries/3rdparty/unity/examples/example_3/test/TestProductionCode2.c": "895f437abd40bd461fd86a3b8ed6bc02c5c283fc3926aafe53b473e477fa0a5a", 
-    "libraries/3rdparty/unity/examples/unity_config.h": "2ccfc9bc436d651c4f5e11e999acc3052d6afe8005c5816d82c14d6535c8b6f3", 
-    "libraries/3rdparty/unity/extras/eclipse/error_parsers.txt": "67e309b5e803a22ba22c347aa5123cbbe73edcbfe9950aa0fd74576a4add1a12", 
-    "libraries/3rdparty/unity/extras/fixture/rakefile.rb": "52800d045e67262e1bd53f9867417b6fc1f56eb7cf446bcbaa20dba0c41f10a8", 
-    "libraries/3rdparty/unity/extras/fixture/rakefile_helper.rb": "3e9ccb2a4370fbc68d1228a115e5a6a5d6ab689db1805266206a261cdc04f58c", 
-    "libraries/3rdparty/unity/extras/fixture/readme.txt": "5692862a5fbc1910978be7ea4751899bafb6b913ce34cffa5517c0eba1fe40e3", 
-    "libraries/3rdparty/unity/extras/fixture/src/unity_fixture.c": "cf55816ca47f37c29ee446468ca076c96860ca506d47c6832e81cb1d82b48c4c", 
-    "libraries/3rdparty/unity/extras/fixture/src/unity_fixture.h": "d99045365d5fc89535b283b9608631883bf5aa35d41665889f25c9bfcb925b29", 
-    "libraries/3rdparty/unity/extras/fixture/src/unity_fixture_internals.h": "fbdafda4dd395e08ff7503180022c074947d622f4e83256256297ce05c154e73", 
-    "libraries/3rdparty/unity/extras/fixture/src/unity_fixture_malloc_overrides.h": "446d4a58dd88ce0bceba6e095ac4f26a4c55898e67265d688450fa3aacc7741c", 
-    "libraries/3rdparty/unity/extras/fixture/test/Makefile": "665bba3afaf6ebd289432b039e40b03a24c7fee6f4dde8f82b1a7468fe82a7e7", 
-    "libraries/3rdparty/unity/extras/fixture/test/main/AllTests.c": "1ec0a0e004f8a70d03dc76e28f38f09519bbaf7306d48d17d5bf0573d34c87c0", 
-    "libraries/3rdparty/unity/extras/fixture/test/template_fixture_tests.c": "3ca4c500397fc3dd7370b419e7d4f7abb3a8b05deacaf72a4e2ccb396669003a", 
-    "libraries/3rdparty/unity/extras/fixture/test/unity_fixture_Test.c": "d8d631a1e192b25ae24ea6ecf3bb53e86eff8f0615a1ad7095106d847b847d18", 
-    "libraries/3rdparty/unity/extras/fixture/test/unity_fixture_TestRunner.c": "e739cdf119f943d482fe99b6acec671aa88a78b9cb38bb2b459d946ab962a200", 
-    "libraries/3rdparty/unity/extras/fixture/test/unity_output_Spy.c": "efa0dfae695ba004c67a120c0b0e3d6f93f72cf7a992662bd4ab15d725c3ff45", 
-    "libraries/3rdparty/unity/extras/fixture/test/unity_output_Spy.h": "b5adfe4f07d3c1c4b7cb0178344ccf608c60a08713d768c8b3e073c6f030dde5", 
-    "libraries/3rdparty/unity/release/build.info": "88427f0459de328a4256bc343fa4e3960e68dc276f60e9379f3cd0d29b31feee", 
-    "libraries/3rdparty/unity/release/version.info": "e5569beb25a8c01a33dfcc781b787042064f8e7267436d97a6a7472ce1ead98a", 
-    "libraries/3rdparty/unity/src/unity.c": "5893f1a936fa7d0b10ec443add4ebd9cf68338922b6232f62cdef4ccfb33e9b4", 
-    "libraries/3rdparty/unity/src/unity.h": "d851520e3eafbc44a285f3a87ed92f4ecc9559142bd4ac1ee9daf84356ac69f5", 
-    "libraries/3rdparty/unity/src/unity_internals.h": "7e31a259cdb4666459d2d7d7d2aa9eefe57b46a53b980b3b64de74d88e4d0294", 
-    "libraries/3rdparty/unity/test/Makefile": "862df58d2d954b05f0b646c84019c9c078246d9f5a4ea5b27528e5073380d190", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_cmd.c": "832ec9c8c30fd374adea6620dd38c19c689047bdad0513984066e525eefc0723", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_def.c": "246d3d9bc73ccef28f7a70b8748d95cd31eb85b9874e6972d30be1f74000fb8c", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_head1.c": "ed31f2c63e4bb7ba015a5388429b34287ecefa098551e55ae5864b883c3cdad4", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_head1.h": "fc279a298e45f70a559d05132ae888973c8f5aad913c0b2d6d8425ccbde5c998", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_mock_cmd.c": "b826f44458088555058b6c3b9c7ef15c2a5528c8efe01034d0f1debee06a739e", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_mock_def.c": "1016f1162a3ea3be49dffd824e529493d2845860d1139cb44cc32f0fe0a0701f", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_mock_head1.c": "cb7b253cefa315d7b4edaa386bffb63a728f3b33c869bf55ecfcd53d1e47eaaf", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_mock_head1.h": "9cb779d98b40e5dfcf70db57f7d3deae6310cac80547140c972ecde585f56c18", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_mock_new1.c": "4e5d73972dce4276dc688016eeb310e93ef96ea7beee0e6839092f0459798856", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_mock_new2.c": "74418cfefe544ac366a043972648c31742b2a4652155507c93a1a2a38471a5eb", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_mock_param.c": "6a8edda1c9b5a56d38e705d2d0341232ca9a55f1fb7383171475cb972c9b6c18", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_mock_run1.c": "4e5d73972dce4276dc688016eeb310e93ef96ea7beee0e6839092f0459798856", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_mock_run2.c": "74418cfefe544ac366a043972648c31742b2a4652155507c93a1a2a38471a5eb", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_mock_yaml.c": "763d37bc5a5edc7566bf6625dd38878aed8cc94a5cec8f6e23aee16e30bdaad6", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_new1.c": "983abee21894ba9fb5d667a69b046558867f9f16eaf546d259671f54dd4be626", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_new2.c": "9726bdaec7a5c8e99b4e6bbfc41b91c8687665bbafdb617be4514eadc30b023c", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_param.c": "7ab6834f8376908625b9999a4c5dad32ad65c8f3fd852e78b6d9c3bc871fc639", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_run1.c": "983abee21894ba9fb5d667a69b046558867f9f16eaf546d259671f54dd4be626", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_run2.c": "9726bdaec7a5c8e99b4e6bbfc41b91c8687665bbafdb617be4514eadc30b023c", 
-    "libraries/3rdparty/unity/test/expectdata/testsample_yaml.c": "17714f87e28c7723608fdc832189965482404e3540e3f3ec55afa7f07054e0a7", 
-    "libraries/3rdparty/unity/test/rakefile": "cd62511ff13bd8e9b7f23988c274fa41dea51b2f8e0aed6ee5edac3d91ddeb8d", 
-    "libraries/3rdparty/unity/test/rakefile_helper.rb": "5423a66a42384ddce1b9fb9cfa690f8fea3e3e062ae3d66910356d011147646a", 
-    "libraries/3rdparty/unity/test/spec/generate_module_existing_file_spec.rb": "41d0b6bf8255f97e4fbf6c4f5fb2dcc61d846d2ddaf2cad763c1f500b8a68727", 
-    "libraries/3rdparty/unity/test/targets/clang_file.yml": "afbb70db8cc433aca8e6ea3d04d2f5142cc8bd1a8f6e421006038c9601222d32", 
-    "libraries/3rdparty/unity/test/targets/clang_strict.yml": "336cc5344beccd0c3a6c83227b764c8945193b464600ba56ade14c3c44c98b27", 
-    "libraries/3rdparty/unity/test/targets/gcc_32.yml": "734debdb4392b83942cdccfb31ca724a43b923617a8b45d86bf6a1fefa86a7e6", 
-    "libraries/3rdparty/unity/test/targets/gcc_64.yml": "530851623a24956399add9f0c0fe18719eb6dc428c1bec03ae6b255a9d0ae972", 
-    "libraries/3rdparty/unity/test/targets/gcc_auto_limits.yml": "fbd96dc8a94c4de70dae87ff378312b3ee07cb8219d6290af17d36e3b34d0f6e", 
-    "libraries/3rdparty/unity/test/targets/gcc_auto_stdint.yml": "c9ec9f61987603d059d4509f4befe0744f5fa99a137d95be359ddd2c71443281", 
-    "libraries/3rdparty/unity/test/targets/gcc_manual_math.yml": "3bd8b0d4eb9fa693f4cf74fdaf61e31183b85351c4e957577bc8497cdc8f15a0", 
-    "libraries/3rdparty/unity/test/targets/hitech_picc18.yml": "7b2a4ea56f3125fd75bb7d8e9baf1f26706b206f98c6f88e4d4b4091361fc546", 
-    "libraries/3rdparty/unity/test/targets/iar_arm_v4.yml": "3df93ad02fd4e1cc17d28a63f824881eee4f73e1db54e43ff36909dd2f5eabaf", 
-    "libraries/3rdparty/unity/test/targets/iar_arm_v5.yml": "bb6f961bbf3cf2c4651a33bf415818726b4d609c05cb9fdeabe6dc7a94d47e6b", 
-    "libraries/3rdparty/unity/test/targets/iar_arm_v5_3.yml": "bb6f961bbf3cf2c4651a33bf415818726b4d609c05cb9fdeabe6dc7a94d47e6b", 
-    "libraries/3rdparty/unity/test/targets/iar_armcortex_LM3S9B92_v5_4.yml": "8835f98e84e75b920fb9e27c0ebcc9c11f14bff768b382441099a01cbf7a129d", 
-    "libraries/3rdparty/unity/test/targets/iar_cortexm3_v5.yml": "70ba518b050162526cf5cfd3cdc90a00a6aad0d0ef65558612d384c855513d52", 
-    "libraries/3rdparty/unity/test/targets/iar_msp430.yml": "527ef25ba8d5056a8b44fce38302895a1a8ed342331edeed69db067b831c8e7b", 
-    "libraries/3rdparty/unity/test/targets/iar_sh2a_v6.yml": "b99162afd271d76014220cabda53ff3951aae6595b198520eba36ef095e57746", 
-    "libraries/3rdparty/unity/test/testdata/CException.h": "3d791048e28a3a83580dc5cb7a03d918323247128bde97b055e1037924a4a3a0", 
-    "libraries/3rdparty/unity/test/testdata/Defs.h": "309f8524e59399b7e9e5f2a02ab7a1a4e21d6f808bdb05730ad41366412b72ea", 
-    "libraries/3rdparty/unity/test/testdata/cmock.h": "f600e74488bfc56862df2daedce1a3525eaad43ed72c6706817f6629b180a1ec", 
-    "libraries/3rdparty/unity/test/testdata/mockMock.h": "f198c43bad6e541c08b5e32c204d894be499ff005032c3ffa25e7ed7ba176001", 
-    "libraries/3rdparty/unity/test/testdata/testRunnerGenerator.c": "019b92525eaf472f608028dd6a68d3921ea39032d7973a3aabfaf0776f7bac64", 
-    "libraries/3rdparty/unity/test/testdata/testRunnerGeneratorSmall.c": "84391f905960812afd4640f92aae9c34c4e391f3a944d8bc93cc6db14f89d952", 
-    "libraries/3rdparty/unity/test/testdata/testRunnerGeneratorWithMocks.c": "5771f02d8a44f71d3abebe2509e83c3d53e228e16b3791a1621e440994670c8a", 
-    "libraries/3rdparty/unity/test/tests/test_generate_test_runner.rb": "bbcfbcd8c45d6c8dcd05fc2400914805d965e378297d536a63276cb2760deda3", 
-    "libraries/3rdparty/unity/test/tests/testparameterized.c": "baed74f82c4b452063bb0b33ad488acbb6df0cf2362a5209bc53a396b946bcea", 
-    "libraries/3rdparty/unity/test/tests/testunity.c": "89c5ac06926074a73ff5fcb89bddd923d9040aa3e5cd3108d733315714c9c71b", 
-    "libraries/3rdparty/win_pcap/Packet32.h": "91424a5947374de2ea163bff4e0c033e3f6d1a2a789f3999f6e20c95080ffa32", 
-    "libraries/3rdparty/win_pcap/PacketData.h": "4cb0df826837bf82691e5a98a7599671b259efc512b1c4825accca77d0cfc7a1", 
-    "libraries/3rdparty/win_pcap/Win32-Extensions.h": "81117e8c6de61172df09834f50a1b127de721abb960e25dd25dbaef97d9e48fa", 
-    "libraries/3rdparty/win_pcap/bittypes.h": "f895a46f3d528a66a2489850e478123dd1eedc5e62a3a529e626c3ab08cbabe1", 
-    "libraries/3rdparty/win_pcap/ip6_misc.h": "fccef70161c3607d1cf0128013ee00410d477a581b62bb0d337d77a51d43ec05", 
-    "libraries/3rdparty/win_pcap/libwpcap.a": "6082e9aeb725b2836e4f746527630885d1ec4c4004f81cdc9fd8d5a130097207", 
-    "libraries/3rdparty/win_pcap/pcap-bpf.h": "a24e6a99451cc013cb1b891724fb04b4079251557852f5667f998a342d1b6446", 
-    "libraries/3rdparty/win_pcap/pcap-namedb.h": "97afaf663c4ed4710101d5c6053011e0764642ae1adbffdabc9ee0dcf88874e1", 
-    "libraries/3rdparty/win_pcap/pcap-stdinc.h": "937710c6e5412a5d2cf423ccbf4dfc06fefef17a077aa73b1fd4d1d82ead8fce", 
-    "libraries/3rdparty/win_pcap/pcap.h": "c86912e57dc4da38d36ea3ac0e85b1b42c57548be418773c627043bc69ae8181", 
-    "libraries/3rdparty/win_pcap/pcap/bluetooth.h": "b3ef727f506c30e72ed22a8837d737d75d2858cd7427e7022ab63cfe3dd9d844", 
-    "libraries/3rdparty/win_pcap/pcap/bpf.h": "ea7397eaeaac18a0230aa2f3fecfabf387f2d1135e80ddc6a8eaa0e9b88c5408", 
-    "libraries/3rdparty/win_pcap/pcap/namedb.h": "94cc2e21a83e9fc7a3b159f2fa5cd6c478edcbed05fef13cd9ad08d5364217f9", 
-    "libraries/3rdparty/win_pcap/pcap/pcap.h": "43db459d6d64e995f8a42cba0c5d5515ed5c366e7bdb5fc717f8d14df614769e", 
-    "libraries/3rdparty/win_pcap/pcap/sll.h": "08e56e0ac5747bfe919b22463cfbbfb8355288b32b36ce112cb047df58dc795a", 
-    "libraries/3rdparty/win_pcap/pcap/usb.h": "81c16c743d81f8302fa61ab585ec0e2e29d69844d03f65600054269d6c315246", 
-    "libraries/3rdparty/win_pcap/pcap/vlan.h": "196de3fda8473dde90ee24a682d399245da03a5a6106accf80d97da43900fe4d", 
-    "libraries/3rdparty/win_pcap/remote-ext.h": "9f61998150429f80e5e000b1c9cab44372dbae0546174fcae8771e2e578bb46f", 
-    "libraries/3rdparty/win_pcap/wpcap.lib": "0becdc2d0f2f1e7be3e56cedc9f72578dbac35b347cc15bc031276d10f501b49", 
-    "libraries/CMakeLists.txt": "4884b289664bd9b0936299d8e91052303d664ebe380d2566db3d9fc2b9bc9e4e", 
-    "libraries/abstractions/ble_hal/CMakeLists.txt": "10aa3c2edcbc82fda781ca667697184ab850bba365d1902a515a03fb89f2a37f", 
-    "libraries/abstractions/ble_hal/include/bt_hal_avsrc_profile.h": "add7d67c84f907ddd9b12a05c6b245e5da9c83fa1f1b0ba7c9536f2126f6bc64", 
-    "libraries/abstractions/ble_hal/include/bt_hal_gatt_client.h": "ea61f468090e7258fbe8b2f4c68d8c7e56ad72f72ba11ef334d1a74ac5bc871a", 
-    "libraries/abstractions/ble_hal/include/bt_hal_gatt_server.h": "56269b910f6195d96f3c6cbdcb5c882649b42c5fc3d3dad9261e129bd8827839", 
-    "libraries/abstractions/ble_hal/include/bt_hal_gatt_types.h": "26faea2069af6d041adcb8ff9b5f96572fad3d0479c3a778ba6c5feece6f789e", 
-    "libraries/abstractions/ble_hal/include/bt_hal_manager.h": "2d611295852a85c43a7be3c0535793fa58eb985d2bf786f706772402a7fd263d", 
-    "libraries/abstractions/ble_hal/include/bt_hal_manager_adapter_ble.h": "ffaca53274291384b9acff54d51b2d17f12d8a60bbf41ed720fd8232532f98ce", 
-    "libraries/abstractions/ble_hal/include/bt_hal_manager_adapter_classic.h": "03bb01c6ea7c6e9a923a014e16a7dc636314c98a9366cc8858641b987c7eb389", 
-    "libraries/abstractions/ble_hal/include/bt_hal_manager_types.h": "153a41f084a969c5a64c0cbf8666c1ef8d89245bf9f4871c8582b79b43e72d96", 
-    "libraries/abstractions/ble_hal/test/iot_test_ble_hal.c": "0f5829d98d0607808f1ddd27afabda63b3c3f187bdec3e70f9513105d0f64ab5", 
-    "libraries/abstractions/pkcs11/CMakeLists.txt": "fb3177a1418ab185c6a5601cb957dfb6dec24d09876039250a1e3220248bea67", 
-    "libraries/abstractions/pkcs11/include/iot_pkcs11.h": "fb3b0ba8476d24f7a26b2dca738e839b7c8e5f83c869750466781ec4d77a69ca", 
-    "libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c": "6e078e9819fb1e9789a6644c364fb3b5f35ca44251033aa8daf97f55cc09df09", 
-    "libraries/abstractions/pkcs11/mbedtls/threading_alt.h": "560380b49fbdab8332385170c99f1909e2f81259ddfbfc19f14d02c7448f6ed3", 
-    "libraries/abstractions/pkcs11/test/iot_test_pkcs11.c": "4017956d80e813e23d20058556d0c569a98df98a60169c3f658835800be8e926", 
-    "libraries/abstractions/platform/CMakeLists.txt": "95c60c01b8b2bb356a043a7dc7d24dc8023cf96b9f6c38d2d5e9bae06600929c", 
-    "libraries/abstractions/platform/freertos/include/platform/iot_network_freertos.h": "a8663d205c6f757b689bc4afaa006f846ff1c54792c7ed8c949caa3860648f2e", 
-    "libraries/abstractions/platform/freertos/include/platform/iot_network_ble.h": "179c8d789455608024a5c757476a821a9c726822ab1708d11f173a3456d9d1e6", 
-    "libraries/abstractions/platform/freertos/include/platform/iot_platform_types_freertos.h": "4f62284870d0986ef264eb10945103b2a818c05e51b1e4f70f98fa20e3cc1349", 
-    "libraries/abstractions/platform/freertos/iot_clock_freertos.c": "ab47e16f7558a09bd8896d00c96c68841de94b8dcbc28843c49060820fda110e", 
-    "libraries/abstractions/platform/freertos/iot_metrics.c": "c780a999fb9ffb9cfb1adcf83783da89cfab233a9adeffc2eb115651a7d9a1a2", 
-    "libraries/abstractions/platform/freertos/iot_network_freertos.c": "77367dab666acde96fcc63c4792b6f662c80a50d6556e37a9b279dff9f2e1572", 
-    "libraries/abstractions/platform/freertos/iot_threads_freertos.c": "2da0ce684119cb4f6e898bb9375df082226e3bf511a53fd775a657f7ae3fa0f5", 
-    "libraries/abstractions/platform/include/platform/iot_clock.h": "72277b15203f6e09de6f891990cb2546d5e377ce05134de1f4c47654e01ac886", 
-    "libraries/abstractions/platform/include/platform/iot_metrics.h": "18bc37b3781fa50630e8ed3330f9204ac76fb97daf53bbe2e8f99cce427daa74", 
-    "libraries/abstractions/platform/include/platform/iot_network.h": "4c3f2fc6ad96054fb2359c95425f73dfdf9a4bc99ccbba6bc0cbda0f7d6f27d1", 
-    "libraries/abstractions/platform/include/platform/iot_threads.h": "7ce0b739a79365ed5365318d08a11085c667865151ddf6b56c6930d997bef0a5", 
-    "libraries/abstractions/platform/include/types/iot_platform_types.h": "c863fe4a322be02bb86589f7cd3b7a98e4a7e9a2aa88b8db92035021b12ed029", 
-    "libraries/abstractions/platform/test/iot_test_platform_clock.c": "e1637121e9f1c3a78bffdee800e2d930b62dd40869910b5cd2a076a4f0ef4c8c", 
-    "libraries/abstractions/platform/test/iot_test_platform_threads.c": "4301fc75aebe832c476e24707057ea06ea29965e95695d07fdf72b2f319cf548", 
-    "libraries/abstractions/posix/CMakeLists.txt": "de791cb48fb673efa912fdff73e6a3baa8c0b6b8b04e3bb6bc0db4d48bdf92ec", 
-    "libraries/abstractions/posix/include/FreeRTOS_POSIX/errno.h": "3219675a545007c190e8115e217fa9218622170c2abef8522176178787ba0bc7", 
-    "libraries/abstractions/posix/include/FreeRTOS_POSIX/fcntl.h": "051be5e3a3a536acaaa4107aaefaf5b86818eb7cc3600854b4e668b8c8378a5a", 
-    "libraries/abstractions/posix/include/FreeRTOS_POSIX/mqueue.h": "d5c9f0f50ca911f57a8c2658a6b5ef6b84ed067ba2bc7f20444ff9081c94e249", 
-    "libraries/abstractions/posix/include/FreeRTOS_POSIX/pthread.h": "f3849ce29197900dcd861349f173ca20d52011d6132740854393112b05349216", 
-    "libraries/abstractions/posix/include/FreeRTOS_POSIX/sched.h": "a06a9f423e5863ee8049cba37fdf01f552b13588c16f7142d2f7a7ab4356a9ae", 
-    "libraries/abstractions/posix/include/FreeRTOS_POSIX/semaphore.h": "6e46c9c8972c023619d8b892dbeb550833fbffd1f1a05d0f4a1d306d8299d128", 
-    "libraries/abstractions/posix/include/FreeRTOS_POSIX/signal.h": "3092495fe11a5697240a2b104a6222ce153d1236a51cf542d7b582c04ef5043c", 
-    "libraries/abstractions/posix/include/FreeRTOS_POSIX/sys/types.h": "70ff50b61f64bf1806c96a3d58dcb1919ce65879f4b74b9301dc5fb8659de9d3", 
-    "libraries/abstractions/posix/include/FreeRTOS_POSIX/time.h": "4972d501a530ff36087d7707da10a7f22cf6a969f01a1f8fcd5070371ea88a1e", 
-    "libraries/abstractions/posix/include/FreeRTOS_POSIX/unistd.h": "8fb037d2b715ea5111c2da37149800f30d5067aae5c83003766f69e37744d897", 
-    "libraries/abstractions/posix/include/FreeRTOS_POSIX/utils.h": "2b5305185d308e64386b1564ffa11b2520bf5efc36f4517ef58e67483d8ccdba", 
-    "libraries/abstractions/secure_sockets/CMakeLists.txt": "51a511e1177d53470dc241fff3856ca9cc958c033ead89ea9ea1cf1cc7ab2d72", 
-    "libraries/abstractions/secure_sockets/freertos_plus_tcp/iot_secure_sockets.c": "863b967e9cb5f4c3263d637c035b66f80c57bbaa9883f653a47a2344c4f73140", 
-    "libraries/abstractions/secure_sockets/include/iot_secure_sockets.h": "7701f314a4ad490591143fa2d1bdea688b6b3f56275b3578165d9ab8b4c74fdd", 
-    "libraries/abstractions/secure_sockets/include/iot_secure_sockets_config_defaults.h": "bb2c3bda21f68305490b1998bab5d3ec4a737e3295a4cb7ec9ab503d88f9cc3e", 
-    "libraries/abstractions/secure_sockets/include/iot_secure_sockets_wrapper_metrics.h": "fd62ac3f7c929da93ba8f4690f7c5c525ae26d0ff95856c8d5fb64addf209536", 
-    "libraries/abstractions/secure_sockets/lwip/iot_secure_sockets.c": "96a68e209a921dd597472bf76b46a7dc020b0e40f97a9ef1733ed3cf72ee69f1", 
-    "libraries/abstractions/secure_sockets/test/iot_test_tcp.c": "c9352e698394946b9bfea8f0d0e20970cae262d38e800860c66c15f39cbc7ae3", 
-    "libraries/abstractions/wifi/CMakeLists.txt": "233bedf2465fb3482bd955f40a4ce93d4a1627f5eb5b0e15cc9bc2e69b68c0f0", 
-    "libraries/abstractions/wifi/include/iot_wifi.h": "8cbe8cdb1804defe5cbb6ca5b2765d29b4b4c8926e7b5a9d8ea701a38e0cf80d", 
-    "libraries/abstractions/wifi/test/iot_test_wifi.c": "60750ab241927da97b64b2b35be3e5b4ffe5f3c4091a07b8e6017ae79c20e8e5", 
-    "libraries/abstractions/wifi/test/iot_test_wifi.h": "c14b89be46923c62e7cb74f2c41557f3148eb9a57c71f08dd79ae6527cc10bcf", 
-    "libraries/c_sdk/aws/defender/CMakeLists.txt": "ced160e78b636fb2dc38316e379c36115759670f0ef248c414f65eaac0cd73a2", 
-    "libraries/c_sdk/aws/defender/include/aws_defender.h": "58e45e1bfc14f5422fb42d0fcebdf6ad04e51fed27bd69af797032e6555bf534", 
-    "libraries/c_sdk/aws/defender/include/aws_iot_defender.h": "114f3231bfbdaf0fdf907b0dd9758478d8b31149991e181c38f77b775a9cfbd4", 
-    "libraries/c_sdk/aws/defender/src/aws_iot_defender_api.c": "c7187f94fcbc7396278d97714876d72a7c6c99256911d02a97af7e843cb5e50e", 
-    "libraries/c_sdk/aws/defender/src/aws_iot_defender_collector.c": "749059ad3d711da4a3faf11ba461d8875f722f5f8d8ee577ef4ccc1ee8cfb911", 
-    "libraries/c_sdk/aws/defender/src/aws_iot_defender_mqtt.c": "5130620025fc0358a84fb09743d622edbb5b54c31f10401d7cceb9d224919bc6", 
-    "libraries/c_sdk/aws/defender/src/aws_iot_defender_v1.c": "dcec1584c28d8c1fcb0f9d1fcbc198633dccab38ba4ad361d1cd9618f8d0783d", 
-    "libraries/c_sdk/aws/defender/src/private/aws_iot_defender_internal.h": "707fa8a78332f11ef857b61df57843cf64a1378d1553903cf11ba6568aa0bbf8", 
-    "libraries/c_sdk/aws/defender/test/aws_iot_tests_defender_api.c": "760d2407a6461a179690852891e495cdea08d9b1ddc51f31969363a8a47bd802", 
-    "libraries/c_sdk/aws/shadow/CMakeLists.txt": "92469f480d803fd9b81836a8932cbe4e0f1cc5c961c032844f58a3b7dbb520af", 
-    "libraries/c_sdk/aws/shadow/include/aws_iot_shadow.h": "1b8c1b5362ac2ce7d3a0bae6c3c85f52efdab376d052b49cd0e82a7161bc1912", 
-    "libraries/c_sdk/aws/shadow/include/aws_shadow.h": "1ace7968911f09a3bf3a04d09898280a73994a77498d26cd89666a60f52997fe", 
-    "libraries/c_sdk/aws/shadow/include/types/aws_iot_shadow_types.h": "7b03d47c2b1ac4ef8a80d9f3ec56b3eb27f0d2a7cc19844c2d5c2c934cd994d7", 
-    "libraries/c_sdk/aws/shadow/src/aws_iot_shadow_api.c": "20ccd6bcb71e396fd39a604ee903d6651a47014cf33480a060a17418d6db954a", 
-    "libraries/c_sdk/aws/shadow/src/aws_iot_shadow_operation.c": "9ea7a92e086bccdb719a17de5c29799b7b6f1b66b2738f56dd460a8dbd0b5c9d", 
-    "libraries/c_sdk/aws/shadow/src/aws_iot_shadow_parser.c": "45cfef0953b60041e6accbfc375c73b8f14285d1ca2313c23de67dc6bc3a5a87", 
-    "libraries/c_sdk/aws/shadow/src/aws_iot_shadow_static_memory.c": "eb69187210c93911f1b7d448c9afa4fe5fc525d3cbd8342991c136ab3ceb2205", 
-    "libraries/c_sdk/aws/shadow/src/aws_iot_shadow_subscription.c": "76cf28edef991321c39f8106a2266b14fef43a8bb5843294c79e2c0feb7c2a3b", 
-    "libraries/c_sdk/aws/shadow/src/aws_shadow.c": "880147ff23bef575f4fbe2beb48363340ca071e2b8637323e378892867f6a487", 
-    "libraries/c_sdk/aws/shadow/src/aws_shadow_config_defaults.h": "62ecc435e255015221966440dcfd7a242a8627c6e14e9abcc90e66494ebdfa4b", 
-    "libraries/c_sdk/aws/shadow/src/private/aws_iot_shadow_internal.h": "4d7536e8f7cf7fa81915e2941a2a616a1658f6bdb6d48713fab59911679251cb", 
-    "libraries/c_sdk/aws/shadow/test/aws_test_shadow.c": "5313e6c0a34ef20616fdb81c65e9fe7b3177efeb29ada91733a273c74ff7f71c", 
-    "libraries/c_sdk/aws/shadow/test/system/aws_iot_tests_shadow_system.c": "9597e352a94ffd1429094083ea2b361da2f82a1d6caa1809250b81cc50e7059c", 
-    "libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_api.c": "7099770d6daaa1a69ccead903d4c96b20e65884bf75e4f647ee559c85896bd06", 
-    "libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_parser.c": "8603abbd8bfc0a63dcd966ccf5398a05d66b1fc17d8506705e3e0659c5bfb54e", 
-    "libraries/c_sdk/standard/ble/CMakeLists.txt": "8d38c14a816cbc43aada557514f9b6376446b9ba6bb766851fad2d55db6018de", 
-    "libraries/c_sdk/standard/ble/include/iot_ble.h": "2280452ba0d2447ef0746f9f7271a87fec38f263c89bb7a392481fc8020eb947", 
-    "libraries/c_sdk/standard/ble/include/iot_ble_config_defaults.h": "f54a26a7a892b4a4addfe5e82537c09c66ce673b01236c8b9e1cc19900f8b1e7", 
-    "libraries/c_sdk/standard/ble/include/iot_ble_data_transfer.h": "54132a2c250eacb9425520d57dc04bef8a201be15a465f70f34d9e867a40f4f4", 
-    "libraries/c_sdk/standard/ble/include/iot_ble_device_information.h": "d961a5b405faeeef698059cd85c07f912ba060cb2a1121da59c42db08cd16ba6", 
-    "libraries/c_sdk/standard/ble/include/iot_ble_mqtt_serialize.h": "d63003b751cf85ca30ecc552944ddf0786ea779e939fda5514de7599d4666683", 
-    "libraries/c_sdk/standard/ble/include/iot_ble_wifi_provisioning.h": "61e4e6355560aad80ea024026885d8a2b37d91889a764d065db28391b2122ba7", 
-    "libraries/c_sdk/standard/ble/src/iot_ble_gap.c": "327136721a10c5634bd0a9260a1dafe2bc3effe37d183c532db981779a2b1202", 
-    "libraries/c_sdk/standard/ble/src/iot_ble_gatt.c": "415816d9daac4f2fb257491002ab158c22e8e8dff7e5ff8812c60e3489ab736f", 
-    "libraries/c_sdk/standard/ble/src/iot_ble_internal.h": "f248d1fb54810e4f7ac6b0f98d7f337a5b1a1ca096ee96ebab90e0299fea5326", 
-    "libraries/c_sdk/standard/ble/src/services/device_information/iot_ble_device_information.c": "f7160537a702dea5dcb4eac22570591fef2957cfb67829e77c7bbc96ab464387", 
-    "libraries/c_sdk/standard/ble/src/services/mqtt_ble/iot_ble_data_transfer.c": "a3280faa87743bd08809a2b119b4ead8784aa6fdefb0a58b61aaa40b02b86fae", 
-    "libraries/c_sdk/standard/ble/src/services/mqtt_ble/iot_network_ble.c": "273ebcf46ad7534842c4ecb16a331b7fff7de7caa91d274f7ae0ccfce426a8a0", 
-    "libraries/c_sdk/standard/ble/src/services/wifi_provisioning/iot_ble_wifi_provisioning.c": "bcdbbfa571fb889b151a81f2b7aa5c42bae1254953486ab72b7a34f264f7db51", 
-    "libraries/c_sdk/standard/ble/test/iot_test_ble_end_to_end.c": "b03c6d35e3d31b77d53cfef7c7e0eb714501668db0bb099d26542fff33f73487", 
-    "libraries/c_sdk/standard/ble/test/iot_test_wifi_provisioning.c": "75bd933915b8f76a25ea3de3731ad6ef72616039c1f56f33fad297c6121ce2d1", 
-    "libraries/c_sdk/standard/ble/test/iot_ble_wifi_prov_test_access_declare.h": "04d94aaadd84c26de4105831d3f34c151bc97017b50b1d6eaca5b6f2bccca102", 
-    "libraries/c_sdk/standard/ble/test/iot_ble_wifi_prov_test_access_define.h": "53d97ed70e3a93786b20364cc577a45affc25f40848571bbb61fa2b829369897", 
-    "libraries/c_sdk/standard/common/CMakeLists.txt": "b6595d488c453ebe25403235afd1b1af8d59bc37bd18a3af6c22193415d25d82", 
-    "libraries/c_sdk/standard/common/include/iot_appversion32.h": "c5b9db1a1e9fe76f447b34e718e450f1f4ca6ea2327b4f783be04a188507b37d", 
-    "libraries/c_sdk/standard/common/include/iot_logging_task.h": "ba1d2a68c2ca7bfead461f56c8a6528f3dbb8b4cc05990007f14a9ac1557ed6a", 
-    "libraries/c_sdk/standard/common/include/iot_atomic.h": "bad52bc74c551a07ceee6fab3434436c592c42e464dc72005e7ca3dfbcb10fff", 
-    "libraries/c_sdk/standard/common/include/iot_init.h": "f2d482834fb08283ba87f12f3cd5bc694195cbec007518c4ee80461ebd9de5c7", 
-    "libraries/c_sdk/standard/common/include/iot_linear_containers.h": "092681688496da6eb726efdf8b222a0ef54db62efe514eeddd5fb050e888e556", 
-    "libraries/c_sdk/standard/common/include/iot_logging_setup.h": "f76e89eeec1f819407a3068614f5e101ad007a9ba04cb54713d2911fb3b19014", 
-    "libraries/c_sdk/standard/common/include/iot_taskpool.h": "18b080ff3246b55f9d883db7370c2500f129b1e8077769535e3baecd94699ee6", 
-    "libraries/c_sdk/standard/common/include/private/iot_default_root_certificates.h": "05b9cf3aa7a26215dd7a7f70ccca97b0dcd3f6cfefb1381b23bf0c70170e5701", 
-    "libraries/c_sdk/standard/common/include/private/iot_doubly_linked_list.h": "26e2c6e0e368a2180403158a1909d8cf25c9c0658bc7941854b6ea2eb08f0258", 
-    "libraries/c_sdk/standard/common/include/private/iot_lib_init.h": "3d53e890ecc75138889434bb12969a509aed94ff7f4cba75bc0759b7a0457ce4", 
-    "libraries/c_sdk/standard/common/include/private/iot_error.h": "913fd4851fbe8cffb813597d5578345fc460434a2fe36a8b897e227aea47b3d4", 
-    "libraries/c_sdk/standard/common/include/private/iot_logging.h": "161fb3bc9d234633d38fe8ddf2e5c64be5db3a08b686a3bb34bc8c08914f5282", 
-    "libraries/c_sdk/standard/common/include/private/iot_static_memory.h": "4530b8ec05a51f1d8dfc8d0ea84e0f4653e9778898e1e75caa93fb24d48aad92", 
-    "libraries/c_sdk/standard/common/include/private/iot_taskpool_internal.h": "158e7b06926350cacd15a88ab8bfca14b2750fe81850a2c6a6f620d1fe020421", 
-    "libraries/c_sdk/standard/common/include/types/iot_network_types.h": "c2a4304b64cc810045ee4876080d6841f322700fee3faad3e6031d3e81a385a7", 
-    "libraries/c_sdk/standard/common/include/types/iot_taskpool_types.h": "4ae5520d87f12c42db5f05d4835dd3c2920a35b17ea65709a45b24b9373c190f", 
-    "libraries/c_sdk/standard/common/iot_init.c": "b17f00b9eeb7bfa43a2b7b8ff446543eb907ed3818b9f18f247cb55ca90262bb", 
-    "libraries/c_sdk/standard/common/iot_static_memory_common.c": "2394103120ea37c35a0fadcd4614055f0b1362c072ae08bfb5d7b778d5154272", 
-    "libraries/c_sdk/standard/common/logging/iot_logging_task_dynamic_buffers.c": "9dddce41bda005c67ed9c18165c2dbf8d4980d71a3a552e277790b333341ced0", 
-    "libraries/c_sdk/standard/common/logging/iot_logging.c": "6836907b32c4d4e867f5559a5672dc8473d4c4dc02e11ee1da6963885535daf2", 
-    "libraries/c_sdk/standard/common/taskpool/iot_taskpool.c": "7ee0eca6d6b7a0877f134dbb6067b73d0cfac50777e87eae21248b570bfe1ea7", 
-    "libraries/c_sdk/standard/common/taskpool/iot_taskpool_static_memory.c": "1127aa41c576baffe27f2a554df37cf88f39aa9bcd828d808907253fc1697ea0", 
-    "libraries/c_sdk/standard/common/test/iot_memory_leak.c": "254e8c587571c6f3d68417a82da6164d258b7913c0fcadb3278105e41614e92b", 
-    "libraries/c_sdk/standard/common/test/iot_tests_taskpool.c": "edc9e2cc9c5170bc36d603be7b59144fd2c8860f8a4cbb113339e0d3c2245fe6", 
-    "libraries/c_sdk/standard/mqtt/CMakeLists.txt": "6e0853e2c670b00884bc8676ad688afc6949ae8daedda1f2ec1407a5703be2b2", 
-    "libraries/c_sdk/standard/mqtt/include/iot_mqtt_agent.h": "927030ec76299c52c1911bc68ade9d1904f6545555b78aabae3001788355db99", 
-    "libraries/c_sdk/standard/mqtt/include/iot_mqtt_agent_config_defaults.h": "e72eaa8ed2a190204793329cb2facb544456902d7303140eb64a4fc21b4f3e7e", 
-    "libraries/c_sdk/standard/mqtt/include/iot_mqtt_config_defaults.h": "37b704f4e7368dd660379ac77d0a7cd5dd7892be316b47e95fb90acef094128d", 
-    "libraries/c_sdk/standard/mqtt/include/iot_mqtt_lib.h": "801e381c7b7d9f103fe0c926f5b4486c28008265eaabe6e8f9e5637d4ce2cc12", 
-    "libraries/c_sdk/standard/mqtt/include/iot_mqtt.h": "f7649195ef9a77c35f4e934e7f2db27395d441d1a4c7b4e87cba79f1c9cc6973", 
-    "libraries/c_sdk/standard/mqtt/include/types/iot_mqtt_types.h": "c29f85e50308d7e1acd085af5cb5e8a6aeaf92fc8ac9ee36a640354f444caa1e", 
-    "libraries/c_sdk/standard/mqtt/src/iot_mqtt_agent.c": "9f3057eb56025a7c9947949745220e886293f0f9b77debb0df2d219af2973aa7", 
-    "libraries/c_sdk/standard/mqtt/src/iot_ble_mqtt_serialize.c": "8bee7252060c2bbfcc3d9c50ecf2fb3313c01f2496cc22cf59f4fa3217c1cc9c", 
-    "libraries/c_sdk/standard/mqtt/src/iot_mqtt_api.c": "3449a3779a8c9f3d4253c0f19f5285b3ef8953e97cc68ea1bbc98ce4fcc9e0db", 
-    "libraries/c_sdk/standard/mqtt/src/iot_mqtt_network.c": "7a358984e3300aba48f25a3a79e11c95865cd4b56f5403e1a5ac4fb62c1e76cb", 
-    "libraries/c_sdk/standard/mqtt/src/iot_mqtt_operation.c": "bfa86ab8ac0592a91e5727c1de9bc74ed89e474895dca4a314af8b0bc533257b", 
-    "libraries/c_sdk/standard/mqtt/src/iot_mqtt_serialize.c": "d924f88e24fb7838843095298fc041157c9aa799d230def762d7dbfd6b7b045a", 
-    "libraries/c_sdk/standard/mqtt/src/iot_mqtt_static_memory.c": "a60b6699d9f0eddee5244cd34956cb7d987e4c9d044f2f76721d1f275b6d1c16", 
-    "libraries/c_sdk/standard/mqtt/src/iot_mqtt_subscription.c": "30bf885166fcd5a24e016456e2304758aee46ce1f8d110983b9b2622cf28a854", 
-    "libraries/c_sdk/standard/mqtt/src/iot_mqtt_validate.c": "d7101ade301bf2a5a1d16b8bd8121792cb0487ba13d8f6664918b7555a59661b", 
-    "libraries/c_sdk/standard/mqtt/src/private/iot_mqtt_internal.h": "70c0977861c7a7fae1f99b382c0c5a453bea3fde40b0b775f0561b3ad68cd714", 
-    "libraries/c_sdk/standard/mqtt/test/access/iot_test_access_mqtt.h": "0d93d99414de5775972ef8fd74e57a5e12abea941961fffd4798d25870328ff3", 
-    "libraries/c_sdk/standard/mqtt/test/access/iot_test_access_mqtt_api.c": "63fc3232fdcf69105f0e03738f366e039210d510a98cf37d11e8e906bc45955a", 
-    "libraries/c_sdk/standard/mqtt/test/access/iot_test_access_mqtt_subscription.c": "b02a7970234200f53ad940b02693740d97185fe5284925c89abd4d600daf347c", 
-    "libraries/c_sdk/standard/mqtt/test/iot_test_mqtt_agent.c": "223fa7498be6c516f2a11e30bb1c5e0881e5b8b1db44b52fa2bfeb272fef3d66", 
-    "libraries/c_sdk/standard/mqtt/test/system/iot_tests_mqtt_system.c": "2e7b49f487d5a47abae0fd65a274fd8b2027705bdd2bc494ca62765b7f5b56a8", 
-    "libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_serialize_ble.c": "91c8ae34188b034c7e8220d2d31e5ad545bf2a9c56e738559f3a350696faeeab", 
-    "libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_api.c": "8414342696e8f7c0dde495f6984c502c279f55f2556b1e604ccc1a7e0d941105", 
-    "libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_receive.c": "0abd4cca708443ef44ee5c75abcd9d30d4d935568b76535c3c947c12c453d8a9", 
-    "libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_subscription.c": "d02f638a2692b5e4eb2a0f44ba838f5661be6e05464009916ff2f79efbd627ac", 
-    "libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_validate.c": "b55d9925e051d7806fe21ee7340d4aae12bf4295b2e9576fae407780be6680c5", 
-    "libraries/c_sdk/standard/serializer/CMakeLists.txt": "0e78fd684768a95063c5c0b7219fbad4000a85176a664d1a6f11b9fb23f644db", 
-    "libraries/c_sdk/standard/serializer/include/iot_json_utils.h": "75317d373a9df7bedb399508f038a4836e79de1b62f7f28c08abfc746b5e225a", 
-    "libraries/c_sdk/standard/serializer/include/iot_serializer.h": "082f840243fa53940455b49a8ae59c0ec6c1fa21b79f79a1b8dd507349d88f29", 
-    "libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_decoder.c": "2a09838c94a5f04b122173969c040052ed2fbeb49c05588b8145d29b752c16bd", 
-    "libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_encoder.c": "60ce7cad7f0ea03819429b3292792a68c2c52bcc8ac440e0b9c7f41888dedbc6", 
-    "libraries/c_sdk/standard/serializer/src/iot_json_utils.c": "6793320e5667bb99be18ab09c378f60f4e10588fab6ad13c4d5dd4b787aa69a9", 
-    "libraries/c_sdk/standard/serializer/src/iot_serializer_static_memory.c": "19676a20ca7ae510e6aceb089901e4996f0de7b5e8f8b7b2c731e88c3305cea9", 
-    "libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_decoder.c": "1ee83bdadd2dfff7783ea6e127a542c5c1f94ed551f9866e4d1b2045e5952ba3", 
-    "libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_encoder.c": "3c7d4e40e76761e0901a60d9b6e1e39e69cf5a0ff45d324d099c1ecf01144ac6", 
-    "libraries/c_sdk/standard/serializer/test/iot_tests_serializer_cbor.c": "f057dde32225d864bbba41d75740b6eee301144ce68c16d71b601f5883d8d70e", 
-    "libraries/c_sdk/standard/serializer/test/iot_tests_serializer_json.c": "c7b27a545dbfc1690ca69781294b02041c5cef070035709cb7e4f257f7a6d316", 
-    "libraries/freertos_plus/aws/greengrass/CMakeLists.txt": "d5555c2f876f87447e75d79b46ede446d5358fa5eeac65f01862b8e37aca203d", 
-    "libraries/freertos_plus/aws/greengrass/include/aws_ggd_config_defaults.h": "f7f2962e3e40f779126c4d2ff2f23dfa6b5316de0adea2ff27c336b7c2446aaf", 
-    "libraries/freertos_plus/aws/greengrass/include/aws_greengrass_discovery.h": "aaf1c354b47d6302f3963eb6e8ede154f84b0c01f91df1db7bc82b8b06c0b0d3", 
-    "libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c": "445bd2984c2e7097b7db83b4a8bf32a11a8b86cdf6618e5be6d6a62545210846", 
-    "libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.c": "a3937ba68767a7b9b2a94a04a6b80a8fd9d6302c5547e573e04fadb83a1f4937", 
-    "libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.h": "007e834f0e7ccb5ee5586cd1d88d7dc284c7b6eab2b5156ee33471a3268d937a", 
-    "libraries/freertos_plus/aws/greengrass/test/aws_greengrass_discovery_test_access_declare.h": "89ecf2032441a70192561631e5707a7a57d626fba7a33f49cb3b42945f2de6b6", 
-    "libraries/freertos_plus/aws/greengrass/test/aws_greengrass_discovery_test_access_define.h": "1dbddb33642f19dea6731116e1c89d80e6d453a5a5daf619169288abcc7e1522", 
-    "libraries/freertos_plus/aws/greengrass/test/aws_test_greengrass_discovery.c": "2895b266fa97e96df4b79ada980867de8ff51e2f9c34b2788e0eba7a32ab9293", 
-    "libraries/freertos_plus/aws/greengrass/test/aws_test_helper_secure_connect.c": "594de2594442d7681822e732613d8b76fa0aae2fee0b0c30b5069482dd1cbacd", 
-    "libraries/freertos_plus/aws/ota/CMakeLists.txt": "98f2b4fd78a711ed8cd12b1b7115832caf310c6e19b6254a1a0d528725d42ad9", 
-    "libraries/freertos_plus/aws/ota/README.md": "bdc8d3bd2f2269825a306faa5c2f5972c2a8020a66704824dbe6a76747bf4080", 
-    "libraries/freertos_plus/aws/ota/include/aws_iot_ota_agent.h": "3c4ab057c851466f35bf25a46f1b1a0e8a79927c62dfe0fa0e92df2e307dc4f6", 
-    "libraries/freertos_plus/aws/ota/include/aws_ota_agent.h": "3bc47466ef08073c9374a90878a23b28c8a76ec65666be5515a76baa90507e8d", 
-    "libraries/freertos_plus/aws/ota/include/aws_ota_types.h": "a5bb9ceb3128c70e9328ffbc3111c9f4a9366c0954929a81ad45fd3cd7a24b7d", 
-    "libraries/freertos_plus/aws/ota/src/aws_iot_ota_agent.c": "a9cefc454c3b9fcfb69be935ed557dff139d7c03c19bd494bf75b69f15c7fe3c", 
-    "libraries/freertos_plus/aws/ota/src/aws_ota_agent_internal.h": "6c7b065377537598e8b50869f918303200813f16eb17b2117aa84f8e66902041", 
-    "libraries/freertos_plus/aws/ota/src/aws_ota_cbor.c": "64b4fd6b1b0d32216e32e3d9171f059c03813296a4c609a6318e98c79b18c5e0", 
-    "libraries/freertos_plus/aws/ota/src/aws_ota_cbor.h": "865e0aba153098e237c9bb3178cd0e947a0fcd99a2349a5bef81ef830faa9d27", 
-    "libraries/freertos_plus/aws/ota/src/aws_ota_cbor_internal.h": "24eba3cff9966fc78eb8d3a5b4e9c2bec65fd1bc6f09dc74a84a360187cbe02a", 
-    "libraries/freertos_plus/aws/ota/src/aws_ota_pal.h": "c498d0741e36f4ffec984c29d2c1737b6de07729f8c80baba3ce11e5af288a7e", 
-    "libraries/freertos_plus/aws/ota/test/README.md": "4ced3c5630f4f80f1d521bbbf284a005764a3a30a0d493d03dda7b072c9e9f55", 
-    "libraries/freertos_plus/aws/ota/test/aws_ota_agent_test_access_declare.h": "8e8732c3b2d00678476b058b47f169602142d5b154dd01a3db63c382eaf52ec9", 
-    "libraries/freertos_plus/aws/ota/test/aws_ota_agent_test_access_define.h": "6e0f917f86bba9c72610066f42d5a564ad8967b9ab614aa4233bffb8ac48bfb7", 
-    "libraries/freertos_plus/aws/ota/test/aws_ota_codesigner_certificate.h": "446aae4f9fd8d2a83313f477915e5fecb8cf297821d0166dec8f790a97681ea4", 
-    "libraries/freertos_plus/aws/ota/test/aws_ota_pal_test_access_declare.h": "aedb49d3cf866fb59bbb76a5fd6a9bed0b4161d87858bff30d13c1366b8d7d76", 
-    "libraries/freertos_plus/aws/ota/test/aws_ota_pal_test_access_define.h": "b53c86e7eb986c81109cc97504226bcb0aa424d6492b2e6f32e8b7ec2c7eaf4a", 
-    "libraries/freertos_plus/aws/ota/test/aws_test_ota_agent.c": "effeaeaebe5e4b7dc38ebc2c87a55188f8dbb322350e34206a02daa6b7f11c8e", 
-    "libraries/freertos_plus/aws/ota/test/aws_test_ota_cbor.c": "22f74440dba53afc69e1e7d73f4aacb13e6cdf6e1cb2df9abf561fea93f80eaf", 
-    "libraries/freertos_plus/aws/ota/test/aws_test_ota_end_to_end.c": "71320cc501e8351ff2b3d005064e8207742b9fdb866d5b6434f6abce3cec8e26", 
-    "libraries/freertos_plus/aws/ota/test/aws_test_ota_pal.c": "3deda910c4cd967d67cff5c8c928d9cd13c84bcd171016b756b74cd547150cf0", 
-    "libraries/freertos_plus/aws/ota/test/aws_test_ota_pal_ecdsa_sha256_signature.h": "6b4842fa33593315b5ba4cb8ffd0c6489cd40bc1eea4147fceb85dda1c4d7e40", 
-    "libraries/freertos_plus/aws/ota/test/aws_test_ota_pal_rsa_sha1_signature.h": "7dfb75d3e16473a0656c428b8da182332669b0f223a293d7c304d03ab4ae913f", 
-    "libraries/freertos_plus/aws/ota/test/aws_test_ota_pal_rsa_sha256_signature.h": "0bedb4a1e91bbd16bd93ab53f15508f6077140266288da100d400cf4e2f56eef", 
-    "libraries/freertos_plus/aws/ota/test/aws_test_ota_signature_methods.h": "b90704d1022bad781e8b13d9e34a6262bb249d012028d8892cbf318b9579e476", 
-    "libraries/freertos_plus/aws/ota/test/test_files/describeStreamResponse.cbor": "b314ea57c902e90d41e2acebc0dc7dd9ba8924876d23a88754dd1c4765b21541", 
-    "libraries/freertos_plus/aws/ota/test/test_files/ecdsa-sha256-signer.crt.pem": "79705066d68dc58ba6b5c9ad27e8c3f355184be078025ab76d1a1bc9a9cbeade", 
-    "libraries/freertos_plus/aws/ota/test/test_files/ecdsa-sha256-signer.key.pem": "cb258c4d1d4e4fc355cd13051d4130719fba62257797cc3e17083443bb767b06", 
-    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_0.cbor": "bf223676be6a282853bc22c64faee719ab74068a4d7770d977a6f37c67400fdd", 
-    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_1.cbor": "72b22a9ea24016629f6d169b52e98e735ee9924bb4f13c1295f1efd5f6fc6abd", 
-    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_10.cbor": "e6b9ee23bbd6d33240bebaccd8ee9978230ad8e7206926246ed36a1a8d60e4f4", 
-    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_11.cbor": "14f6287ab8666bed3d2c0998763f1fd30baffee52e7fe79994c6ee20e868653b", 
-    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_12.cbor": "4bf01a682c8fcfe0c47fb78b04d73d61aa31a79f6bcb07410bc530edc22a18da", 
-    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_13.cbor": "fdfd00cb7c0874216925c7152c9491b38c9dd179bfaffeba954c4eb27947ca75", 
-    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_14.cbor": "207819f2f6d5d82a3d3b1dcea0f508e4fe217ca243bad33090940d7bf1e03128", 
-    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_15.cbor": "31910394ab515ca70c57aae3be88d14f9a35e3e66ba7c6c3132ef0b93830289d", 
-    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_2.cbor": "cfb32bc6d6fafed74e985824f0b731837372179aece4d0a84087919a256ee59d", 
-    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_3.cbor": "a4733133a6c983859459141909031bfbb153cca083b9e881f24542c05041ec7a", 
-    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_4.cbor": "509a62af0b2906057735a635572e8e17aed57e8f0c42def8736db880823ef65d", 
-    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_5.cbor": "b471bc1ef2bff3b72da84f9bef8bc4ec44fc6aec26d3501cf1b5991fb62732a8", 
-    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_6.cbor": "bfa28de6fbb8330be654728e64d935c7582c8aae45ab992a4f6c0b7f19b803a2", 
-    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_7.cbor": "e1614f15ca0fec4d3bec19e7d48be470066957de78bb41ba5870786a0d15f678", 
-    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_8.cbor": "e66c279dded094b1654748fdbb527eb290f3f142ac3f4f7edfb2c439a49b984f", 
-    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_9.cbor": "001b08a4a8fd96bd8130d1c5d69bfc290d989e0201640606afb7291eaf4766eb", 
-    "libraries/freertos_plus/aws/ota/test/test_files/payload.bin": "0bacba52467cda682430974879ab4f5f90835e2fd9d552aab13103ab5606a032", 
-    "libraries/freertos_plus/aws/ota/test/test_files/rsa-sha1-root-ca-cert-key.pem": "9e97f6f9ea210b532a7b86eac12f0d97a1b6c372e22ab86187bf98e5e208c4aa", 
-    "libraries/freertos_plus/aws/ota/test/test_files/rsa-sha1-root-ca-cert.pem": "b550b03c7b547629bd0ecfdbc5804cd72d6b57dc0ec8cf8a1bd2616215d602a4", 
-    "libraries/freertos_plus/aws/ota/test/test_files/rsa-sha1-signer.crt.pem": "4a05cecf862a081237cee9207be87080e2c50544959f74be2c3908d7857b9da7", 
-    "libraries/freertos_plus/aws/ota/test/test_files/rsa-sha1-signer.key.pem": "46d820537f7b3d57c8f9ee63d9019602cc9329a6cd0b6a5f8ffcdb1838125601", 
-    "libraries/freertos_plus/aws/ota/test/test_files/rsa-sha256-signer.crt.pem": "5de1c733099a249e2424c38aa9b732094914f260ba2582cc39f9198f46d0b7d5", 
-    "libraries/freertos_plus/aws/ota/test/test_files/rsa-sha256-signer.key.pem": "baceeaf3b8fb0e16a4d3eb8a1b016dfcd41f752270f00649311ba567759e9e29", 
-    "libraries/freertos_plus/aws/ota/test/test_files/rsasigner.crt": "2b92ff249815c106222fa13ef62bf2353f2ebb9180c36c474203efbc055ed2dc", 
-    "libraries/freertos_plus/standard/crypto/CMakeLists.txt": "b0832e6d82da61dc3900a06086e4ec8eae3a208c4cdc30b99683d1fa3575c145", 
-    "libraries/freertos_plus/standard/crypto/include/iot_crypto.h": "a559f1bc9940e3c47a961bb5b4bff4eb79a86342cdd266459028c4277adffdfa", 
-    "libraries/freertos_plus/standard/crypto/src/iot_crypto.c": "cff755e4861a1718761d5d735cd4caf769264dabacf11511060afef25e33a892", 
-    "libraries/freertos_plus/standard/crypto/test/iot_test_crypto.c": "2cbee7a43f4c6163c80d1018cbea1dced4c05611bdc75e5dec5356514064106c", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/CMakeLists.txt": "deba7d83eaab9f87b265afa7b6a795607ac045f0d2c860cfc2612a684b53e40d", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/doc/Doxyfile": "3e287bf8aedf173cd8f50e4715c2ffc33c7feb8ed81891a0556d582a8e3ca339", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/doc/DoxygenLayout.xml": "6f6ef8c521e2943d9b596e7904bcd22a8f2d6253ce70fe206a030831e03fcd32", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/doc/mainpage.txt": "b984715937c33e18551e35c1a0618fbeb8928f87b91b11b199dd9310ab3b87fd", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX.h": "0fa2d474985987497853b0780429b26df4d9c8a6b40caca67095408bee075479", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_internal.h": "66aaeaa06c7e48fdceb4860d153a919ecb83800cd279918b535e25a7e37d0787", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_portable_default.h": "2f5411075b6a20bbd651fc4f440266a839bc107e61a2bdaa99f60c915eb2eb7b", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_types.h": "5b164ae6581ed809c8301a1fbd4a0ecadb7eea4afb7a48d1084be88a68e14e20", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_clock.c": "52efd247ccb874e01be534a147bc9753b4c098818dbfd39747e937913a56541e", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_mqueue.c": "c1dbf4cacffe39ebe97ac899995a7d6a076f8174ebc048206e3aabc63e2dc66f", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread.c": "e341a07dba4c93692ae62da59554eef0576dc8b05f9e8fe05f571d81d97890fb", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_barrier.c": "11dcebb854ad4a0d8dcaafd14054fc342ba0ed91da0e92f1784e1ac4ca152fad", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_cond.c": "30122ef2a334744bbbc55d2212acab009ded68d51c222941e4b1695c7b3de45d", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_mutex.c": "ffbcf1d5826193eeb0c7eaae484217da8a22cd1d123392fd574b7c2aca8d7556", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_sched.c": "43ec8ae4a5a05990a92bb963d3a2a409a553aedeeda6603fa941ff4bf95d8414", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_semaphore.c": "b7ad12c83d5abd04cc4da25352b7d0c4fee00cc6dbc6922859c35eae9cd66d0c", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_timer.c": "f0859c1382c4acff48227eca3b0895e35a45ee7e128404f84e9f0e4f84918585", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_unistd.c": "b1f3172b8acc2412ead1c65e4f18072a743cf7a6771153bb7eb7cdba9a9d3a69", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_utils.c": "d61d6acba1273d06f549cf4d4451c957ead60d3e1d20ab2d4b4bd5e29f3ba11c", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_clock.c": "9063f4c6ef00af131486d0a9b3c791a4a9bbf33641c3bda906860f99bbe053a1", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_mqueue.c": "85293d1d0438fe72dc250446db093e3ea8febc8e8253a79d3be4db6021d114fc", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_pthread.c": "2e7f39bf36ffcba959b60546b675e9024b739b5b60528c2c78068c9a4e2cca11", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_semaphore.c": "a7c533291622466bf4778832592dcb8eadd2476ceaae18c9e0d78f3aa2a28b52", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_stress.c": "2bec1c18b7372f7b4bc18c0ecb617898c1d5b3426cbcacecbd60dd5e66f26f32", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_timer.c": "b54ee7350954a3a8f6bb4730ce214c73421440f31961dbd560355f4f31ff2c8f", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_unistd.c": "effcbe1896468f3085fc7544742933b04c2b25b5d4e576ce161be51c03a1c53b", 
-    "libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_utils.c": "2b62510fe6aad2a338f0b927450330b083b755b1e6000df280a0eb19e2d3ef63", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/CMakeLists.txt": "cc62876e8a717200d335f267cbcc02d7714fdf8305d2c57efea242e90e66cd68", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOSIPConfigDefaults.h": "6f9ff875198e805ba2ebf300b0ee223d144248def100007bcd217cf72251c59f", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_ARP.h": "d0139721d3081e7540513dce8fe014f0f294495d961b9b97b133062cb57aeadc", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_DHCP.h": "cdbc5ee193436f1d94d98013af0dab7e3536633e117bcddb32164820fe5971d8", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_DNS.h": "d98cd226b6550deb5c3e4d7aff9412111179cee44a004088933c0daa5eafe632", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_IP.h": "59ab5a13627b0f35b831adfaffae28485bbcefdca4ff9cce7bcf1d782830872b", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_IP_Private.h": "22fc92f233bcc02e80769f2726347fb141da5951ebb17c8fce8cc224753fc5e1", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_Sockets.h": "c20ffe13a0cbffc48131d9a897724933bced8af83e18639e284b7fda5c8de473", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_Stream_Buffer.h": "bd2fe2d2b93e42d4c75a020f82cd8de8d768323dd09d38e699abcf8dafe9c3f7", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_TCP_IP.h": "523cbf106f72f30cbf3bd2c77fbd6cdbb68d8f26b98992345a0811249592977b", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_TCP_WIN.h": "bc0aec623db6c1586b1917ab70de3709769b64babbdf37bcda24460c6dd7c00c", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_UDP_IP.h": "929f4a68355a051ad35859651273be204344d4ce912c19722367537c5de3462e", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_errno_TCP.h": "2e1247bf9794ccbb241de294c5bfcfbd15f6771dd4f34744eb923a69093db0ba", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/include/IPTraceMacroDefaults.h": "e3365489c89b0a1dfb1a862e19e9eb9eaca74c4f80207a20d9e76146d47b4517", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/include/NetworkBufferManagement.h": "70b30cd24fcf66b1bfc30b0f3a9498271141c3ad5852adb586e8bf2746b257be", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/include/NetworkInterface.h": "b215d1f09c47db9df924729774ad8e4cdec9c6b3e89a51f7588379d7f70978d7", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_ARP.c": "b55c440907535dcb8834d361ae41380ee8a32186cbd3d3549f1f63f494644965", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DHCP.c": "28067963f1f75a044bca85d6928ed9fa3893ba4cb18ec78edf6388b5645eb09b", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DNS.c": "5f10d67abe2c1489d6b083b91c5bed9ddfd8573709a9a8bd6be4ee799b2171ac", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_IP.c": "c415d7eb662e4270086a3a5911130eeb46c4cf16904f9437c5ea532ff00c6b15", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_Sockets.c": "07be6b68c8056e0970342859e5fea07ce4af94bab67d16d8bb2743da84cdbfa2", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_Stream_Buffer.c": "1e214650ae87ad3d91fa1d620082ad2c249eb4a394f5b0bf922cf9fd975f2bc1", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_IP.c": "27d354369c99ee2d463ef0e5bb9da064f0d099220a71132c7c338998dc743b93", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_WIN.c": "fababa2130632f5b1ab7753390c21d8d66b4d7e64ad1ced98b2c5c9cc7fd0a98", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_UDP_IP.c": "646e216b184ff3d5fab677a2272145bfcd945edf82426302d0086800c4d17b0a", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/source/History.txt": "7a535a5dea9141bb18bd18e706049244863cf73f70251c45a0530deb7ae33d0d", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/source/ReadMe.url": "6c821ec481c65c354d181c49e519d0dde0def21bde8e85e7350bdb87a946941f", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/source/readme.txt": "650a32b9db6e75a5bddfded2e44b5e137a9f9ba76124451eadd452b00c3c8010", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_freertos_tcp_test_access_declare.h": "a25643c87fd595b09d07ed872626f96e74beb14750f8c554b8074a7d6d3f7590", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_freertos_tcp_test_access_dns_define.h": "9c4e9cbee8fef8491bbfa63b2224b757e95875ace6ab4af4878a2863048422ad", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_freertos_tcp_test_access_tcp_define.h": "2a19d468198f5bbb1b273ebde21d239678a12ae577d20e693339161f2aab1b6f", 
-    "libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_test_freertos_tcp.c": "7fbdefbce550a07e8de5e63a51bec5ce65800c02387f3799f1e14cc2eab37ea6", 
-    "libraries/freertos_plus/standard/tls/CMakeLists.txt": "c2c24288c3ebc0ee8bb4488166373593948c4db43d6b4d691b596b009a6315b8", 
-    "libraries/freertos_plus/standard/tls/include/iot_tls.h": "9d1d0876b502f2cef572c5abc1d539eac7d141a127357109a37d5c9a586d6db0", 
-    "libraries/freertos_plus/standard/tls/src/iot_tls.c": "cb0f1ad7f9d9a81c5947150019f3787320fd9c1f0b1803f70e36855d299fc782", 
-    "libraries/freertos_plus/standard/tls/test/iot_test_tls.c": "e51762105e1679b35cbf7ffe1cc080f0c5e8858d10258023d6aa0faf8377b1d4", 
-    "libraries/freertos_plus/standard/tls/test/iot_test_tls.h": "f23a1af05ead55592fd9534091d5e95baf061900f90260c19b301fa13b302a50", 
-    "libraries/freertos_plus/standard/utils/CMakeLists.txt": "d67bae356b695949f9a3034840e6fac412b4cc51faf124a06bb62d8b88016b5a", 
-    "libraries/freertos_plus/standard/utils/include/iot_system_init.h": "38b12f23db060c8c1d0d0d257716c4d029d9604791fe35ad851552242186ee2d", 
-    "libraries/freertos_plus/standard/utils/src/iot_system_init.c": "2191486aef04289ea6530e68e9865a0b9c9cbafceae76d90267fa550a2e4a4b5", 
-    "tests/CMakeLists.txt": "53d2a765111410ab426c4655f9fc4050105ad1404bc4303cf4e9fba9fd74088b", 
-    "tests/bleTestsScripts/attributesCommon.py": "6d8d9463a439577da1ca01cfc20df01fe2ec6d7d05bb452f38b1666cf2dcf62c", 
-    "tests/bleTestsScripts/bleAdapter.py": "40e71773cd2b78617562d0b6cb12428eee385d30d9794acf7b2e2ef5cf33bf81", 
-    "tests/bleTestsScripts/characteristics.py": "8c1c9a15a6ba29ede78ac5018389b0130cb4b70102fe7b91a358be5995415eb8", 
-    "tests/bleTestsScripts/descriptors.py": "8c1c9a15a6ba29ede78ac5018389b0130cb4b70102fe7b91a358be5995415eb8", 
-    "tests/bleTestsScripts/gattClient.py": "def9b2d32cd8a819a64d4429abef96d3873a9f1aafdc9f4a58199501bfc87598", 
-    "tests/bleTestsScripts/includedServices.py": "8c1c9a15a6ba29ede78ac5018389b0130cb4b70102fe7b91a358be5995415eb8", 
-    "tests/bleTestsScripts/runPI.sh": "48a00b22ad8ba7e2a0aa3830035e81fd049275a2c67a48ee7de265720e52c3c5", 
-    "tests/bleTestsScripts/securityAgent.py": "f48eb3655db042c017aee49a05956f5e22119841c6efd5e15725593c43c4e1a3", 
-    "tests/bleTestsScripts/startTests.py": "36e73f24d5ee2810c9e451b00ea73a42b52d5ff928bdfeb0962f3e3b216ff45a", 
-    "tests/bleTestsScripts/test1.py": "a512f4bfb4c47fdbf547e8ca1d8f54fca08d770939ddf0dc1974cf11b1dc8400", 
-    "tests/bleTestsScripts/testClass.py": "f5c5a411f18f975598827f9a8ed9dfcc4e5786e3791bb7825fa08e9b86d1ab1c", 
-    "tests/bleTestsScripts/testutils.py": "99421c5883c67f271fcf4ebf9f94945f0d18097ed87a3f5e9e8ad5a884b22e7e", 
-    "tests/common/aws_test.c": "dfbc3103aabae11cc6b18f7fb819220fbb9417a45db39134b6d8cb580dea2c93", 
-    "tests/common/aws_test_framework.c": "bb3c2c2c76e45233ea8728333297fbcf1aa6ed7f61990329088e2bf2ee5845cb", 
-    "tests/common/aws_test_runner.c": "c92bffbf51817842a77995eb39078399d3ed27d2f9bfe6a746cab0ce74c4e3a5", 
-    "tests/common/iot_test_freertos.c": "7f8946810f394e2b321b048b016da560a39522774fbee58d881488fe323ff314", 
-    "tests/common/iot_tests_network.c": "73169b33e127815248716cbc62a717bf3f8e1db13f27be997789f6ba3ee296ed", 
-    "tests/include/aws_application_version.h": "b5b93c76be37f5c82cb6ef37b4606c85252e140ca8cd2cd34a655eaa8fed131e", 
-    "tests/include/aws_clientcredential.h": "bff2dae6e4920551e533abbbb7b434f141125adb2bf52952dcbaf98e8e1123b4", 
-    "tests/include/aws_clientcredential_keys.h": "aefa5915437a648241fc7c3b5eb640697cf3f5238e1788ca0eb46fa2b6b98dac", 
-    "tests/include/aws_test_framework.h": "80232ff4e0e6c944e9cda68f23d32b2f88e7fbcd2681cad85ccaac23fde27c5e", 
-    "tests/include/aws_test_runner.h": "23d34233703a594c081388d0f788be9b2117f972ca705838f57bc188b3d8031b", 
-    "tests/include/aws_test_tcp.h": "260cd306a8e0e861394479ffd2fd2325b3ab4d0c519a48901e2285829223eb4e", 
-    "tests/include/aws_test_utils.h": "5509e627ff8379a0c6c5163b8fd76e838ac714ab5d1f4b87fb9e220e8b501283", 
-    "tests/include/aws_unity_config.h": "92f9ffa42f30647e18a35401ddd2ff0a1504bf3d82edde4e1b3b035b7db92274", 
-    "tests/include/iot_config_common.h": "168c1d33b8f549f2b47c9c4f03c7ab5da79029aaa185c6eb2f83d11ab3ba7ce2"
+    "demos/CMakeLists.txt": "77fb17881347537adc58e7c88feb80459781758d5c24c61ae70b67246f84f741",
+    "demos/README.md": "3986f2712054d81e89b81b900a4d8a0d9e33b161f930453c68b28e086e64386f",
+    "demos/ble/CMakeLists.txt": "f7fed40866933cf3adf7d518b252b5b362d7155b4b776bd31402cfb14764950f",
+    "demos/ble/README.md": "74470be4344309d26227c7bd63f21e63d41a3a9dd61db6c255364b96d52cf802",
+    "demos/ble/aws_ble_gatt_server_demo.c": "4d9c78857c82ac367d2b60b533e6c6ce2274566984c26278eaa25a2f08d98249",
+    "demos/ble/iot_ble_numericComparison.c": "abaadf4737fc532dde892d684cfd439c0c0efa412e988bab81fec6b05bd221ca",
+    "demos/defender/CMakeLists.txt": "b3f4010fd23f131d054f5167aba38f466bc360b351e16ba2add61be2451d5357",
+    "demos/defender/aws_iot_demo_defender.c": "55645f196df223bfb7de001cdf912ae2fa9af7d8ad7336307a14cd89f6f6a2fe",
+    "demos/demo_runner/aws_demo.c": "d3a7a2893a5bc44df9e758dc2a78604313dea249b21a0f30c97dde30896d6cf3",
+    "demos/demo_runner/aws_demo_network_addr.c": "3753382fac90ead61aec8948a9b9486409154ff27b8564b1f3809dd3c07abae0",
+    "demos/demo_runner/aws_demo_version.c": "033afe6277dbbe76897ce3f80fc67bb6e7ab1168a12a25bc21d6500c15a5bed8",
+    "demos/demo_runner/iot_demo_freertos.c": "18867ba538a824f80d636b42a7e05ca13cbe8906d5fb98a0a24357cdbab817ca",
+    "demos/demo_runner/iot_demo_runner.c": "edb0bb8267cef6b03e29c91e0d629f59c4971ce6d2e35bf344d12e00f66cc58a",
+    "demos/dev_mode_key_provisioning/CMakeLists.txt": "9f72c9c400638e5125b2a40fa70a783bb5f29196a673f3221c39d54f2a69222c",
+    "demos/dev_mode_key_provisioning/include/aws_dev_mode_key_provisioning.h": "6fea35ccb730c48d1a2593862225076fbaa42899e6409b07918afc878d360e37",
+    "demos/dev_mode_key_provisioning/src/aws_dev_mode_key_provisioning.c": "0832feabfa9896c536c166b8baca12415f866f329e8d88402b19b9fffef09e0a",
+    "demos/directories.txt": "0ed33bbd11f35946b344ce5d5f9b0feadd6e6cb16ab7cd6aa21f4402b53d39f4",
+    "demos/greengrass_connectivity/CMakeLists.txt": "91eaa38c6c8e1bb474f3a16b7d88e6cf0c3f67a10ea4577488991f57208214b9",
+    "demos/greengrass_connectivity/README.md": "a417c7405549c3ffc096945d1128d1ab874304a8bba38777bb2db369e1b42287",
+    "demos/greengrass_connectivity/aws_greengrass_discovery_demo.c": "97e761df741271152f915e78138c8b6665d9edd4cf3ddea064dceeb51dc51e75",
+    "demos/https/CMakeLists.txt": "d84ee0c0cde121d18b5efea362a7abc2735c70058ed7cbff72f9cea70b1bcab9",
+    "demos/https/README.md": "8b51e528d9b6ddacfb067be40896c2a86c49ba41375545fcd149f9a165213e86",
+    "demos/https/iot_demo_https_common.c": "e996cc8dae019413dc5d60a263ed4ea075d623b7e89cf47648271e84b2eb6aa6",
+    "demos/https/iot_demo_https_common.h": "406917ce9a42096d314c3f3727033304ccf3b164ef00264606d9f4aad322bc6f",
+    "demos/https/iot_demo_https_s3_download_async.c": "fb41f58b9b3f9b030892421eb6c15b52b748c23608c8cb876cc625f3e0b5e9a5",
+    "demos/https/iot_demo_https_s3_download_sync.c": "bcebe195a62778d24c41ff0a1fde24e7cc11185f8f4600f0ba7531e7071c6eb1",
+    "demos/https/presigned_urls_gen.py": "d62e0b153e3fc65f6caafa833eb4314c0d03c1403b000d950594a701de9c3219",
+    "demos/include/aws_application_version.h": "1042d0bc8bb29edd3d5389fc38a68ed41a5f65d15b4e3c62bc09bae10567b224",
+    "demos/include/aws_ble_gatt_server_demo.h": "df3e92ae20de366a468e6cd2a28135bf5811bde397d393a176304ed628711460",
+    "demos/include/aws_clientcredential.h": "3cc48f3067c492b23c4e3369e50da7347e9e2c00beb07903fb7b9c1c98795550",
+    "demos/include/aws_clientcredential_keys.h": "73cf633f7d5642387a96e91f727525749fadef1cb15b4508f1cc84b05aa2aec7",
+    "demos/include/aws_demo.h": "04792816c34956a5df6580d8b1ddc89eb4c7066b83ab602f0491670f8470273f",
+    "demos/include/aws_iot_demo_network.h": "cb5abc4c09499fceef588244f281aa2aaca3e4854b23bec069c3e3f214268245",
+    "demos/include/aws_ota_codesigner_certificate.h": "fe4065809567b82f3e7932ed6882206139e6dc870ae70bb5939d06babca7832a",
+    "demos/include/aws_wifi_connect_task.h": "67b0a48f462f9a867a5afbf3924a6afae7255e77baac5bc4a1dd52e4ac3142c2",
+    "demos/include/iot_ble_numericComparison.h": "5a2b17ac4dee497a593c2471a4d356426ea4c8ba2da83bfbe5323f3849acbed8",
+    "demos/include/iot_config_common.h": "5f57e4c861fe441cabfc13e992dfdad68c40ba669959fd96b45106ca425f3c4d",
+    "demos/include/iot_demo_logging.h": "b7890c8b35cd4ed219a63ad18beda366bc20139e96777463e0059a03d6fdcabe",
+    "demos/include/iot_demo_runner.h": "0f7f835df90fc96ca58f7ccfd595a2db8ee1988638b4cb8d0b813e81a0803445",
+    "demos/mqtt/CMakeLists.txt": "f9437bd68ed1d15877153eb2a56646745ff7f87ef876b4016b201c34699a97a5",
+    "demos/mqtt/iot_demo_mqtt.c": "686770c6882905e3650916fa08c06f755146f092d4918b5ea78ee7d036d38919",
+    "demos/network_manager/aws_iot_demo_network.c": "6672b862e8316678b543fff5543189b162fcf49a4490c5f7b50bde683b106f14",
+    "demos/network_manager/aws_iot_network_manager.c": "de7d316926f17e5e49954ee4d495af480392d8a50ebca4621bf4d355b303d120",
+    "demos/network_manager/iot_network_manager_private.h": "e285b5d99eb29172d736acc15dc0d17d061774b30569fca6cd0fda63b24337b2",
+    "demos/ota/CMakeLists.txt": "2aba153577b863ce3ba38bc81f5425aa622e394a887261408ec58d796baccb91",
+    "demos/ota/aws_iot_ota_update_demo.c": "71c07574ff577ad58b55a1246a2d65d8a6cf4411af8986bd72309706fdc213e1",
+    "demos/posix/CMakeLists.txt": "2ebbf9aac42e713a1b851c61fa9307be255528911ab3067e62064257a5ba6dc0",
+    "demos/posix/aws_posix_demo.c": "b2185a7319964343238cbf095ec22332db5ecbb6b399e849e56ce6818de56aa4",
+    "demos/shadow/CMakeLists.txt": "7fe4bafa91f34e62b2d7b7678ac4df5e8e8de30159eda8cae0f05977739c16f3",
+    "demos/shadow/aws_iot_demo_shadow.c": "1c185435cd27880b69199f8f23d712c5f0684d30e95badaf4b5c00c80e9624b8",
+    "demos/tcp/CMakeLists.txt": "99e72686738645dc71be2b6f87ff5ed5e7ac320c3a2073e8be9598c5bd9110e4",
+    "demos/tcp/aws_tcp_echo_client_single_task.c": "caba96e64552b8c5cb8e7d5a2166da570b711d7d2044fc25fdb2d8a6b610ef0e",
+    "demos/tcp/aws_tcp_echo_client_single_tasks.h": "d95521c280887ca9dc9e7a55e305c60fe41631dbc79b10fcdf4a4c405ac732ab",
+    "demos/wifi_provisioning/CMakeLists.txt": "daf58d954ac6f1bcdba29c56cdf51d79af41b17279a93f5602465363008b156b",
+    "demos/wifi_provisioning/README.md": "c6a995048dcd1f6d7ba6665f9b86389979a1812f49411bb5508dbb3cb9593168",
+    "demos/wifi_provisioning/aws_wifi_connect_task.c": "edaf786e5cac4fecd287095bcb71f62fbe209c11f93ebad4bd21d6dd0d608942",
+    "freertos_kernel/event_groups.c": "4d9804f82b72e5d5493ff33f149d47dd9e62e2f8e79f8f2f9f18812d673b003b",
+    "freertos_kernel/include/FreeRTOS.h": "f4dc7c8bf2040402c0fe8c6bc3f1a12b6dc9f9b698d6ce4a4e9c0e245bd40522",
+    "freertos_kernel/include/atomic.h": "e65db895f916295abdfdff0afc4fd45e8006af0e5b6aab082a592ad0f0a494bf",
+    "freertos_kernel/include/deprecated_definitions.h": "8245b36b387c910b03e92a03802f9ef765390396232f1db299edd3bc11befc1a",
+    "freertos_kernel/include/event_groups.h": "839f2ad05e47cc7cfd012c3ddd706a273f61ced49ed500a8248c69ac250f5c58",
+    "freertos_kernel/include/list.h": "592f10d19c77eefe370208b66cc1776537703884496fbdec19bde6af27a81648",
+    "freertos_kernel/include/message_buffer.h": "0e6a2d1b7c81a8b4b55670fe2ccd550b62abf0628634008453b666482c011baa",
+    "freertos_kernel/include/mpu_prototypes.h": "e234a6f49d5bfeed0510b83c2d3d5b7879b405d040337aac05e870e220174fcb",
+    "freertos_kernel/include/mpu_wrappers.h": "58afcf0d8a0a70922fc08969a9248621ad7efde9548c0dcf29471e2553dcdfb6",
+    "freertos_kernel/include/portable.h": "e1f328a3cdda5603ed35ec831295b01a0a0054b6f47ec1d3c7f0a478dba54fd2",
+    "freertos_kernel/include/projdefs.h": "e5697ddd6a019dea1212560b7a51625110ed740c25bfb981e78e3d2529aa98b8",
+    "freertos_kernel/include/queue.h": "d51866662940b00990af26bc75d6c30e7f1c17b4537f8368c8dba75dac4cedc8",
+    "freertos_kernel/include/semphr.h": "f42cdcd5e70308ead84a5eaa57f101329be673467a1a486ae99c83b43d842dc7",
+    "freertos_kernel/include/stack_macros.h": "8937b66f4588f655c279269f203a8bf96c7f7b03ecefc98b06b9666938f714d1",
+    "freertos_kernel/include/stream_buffer.h": "54e5cc719ab682a9f5180c29e4189464aecb299f876b0edc7a2a707c34f5c992",
+    "freertos_kernel/include/task.h": "e51483bf0b7a0a02f423abb6c2e7f6f9a851f13e0a7f023beed490d24c0a8c17",
+    "freertos_kernel/include/timers.h": "4d107f5e96a82e42f85176e2b7992e7447ffe48f724c0f83a85cf39bccbf1f7b",
+    "freertos_kernel/list.c": "add3c1725588d0cfb1885f381cbe9bef6bcca19e23d130ec55e3488080ef5f17",
+    "freertos_kernel/queue.c": "a3599ad87a3134f4e7105ecf5a66ed4bb248e7d4afa5b9d186e53bc6535732e7",
+    "freertos_kernel/stream_buffer.c": "0f3197c2de692898eee49d94bccd49650ccdc15fee3bacb4a8e8877429385593",
+    "freertos_kernel/tasks.c": "af3f262106a7b55b7d12419ed30814f909b40bd38fcda934595b6f9e65e8f500",
+    "freertos_kernel/timers.c": "441912cde43222bc1e67889e73f2d05bb4b9f61f072b7fabd87833178b4bf649",
+    "libraries/3rdparty/CMakeLists.txt": "5466d40a7ac1e7548208d05ecd4f46a6291e66b85c6924f4ddd76477ae459675",
+    "libraries/3rdparty/http-parser/LICENSE-MIT": "79e6ba8b687cb54786207342b9b6fcee0ac10218453ed9009b84d949b2233cc0",
+    "libraries/3rdparty/http-parser/http_parser.c": "66acdda5c3704b85073fb49566dcca4ce6aa6054636fed2ea4246554d8851bc6",
+    "libraries/3rdparty/http-parser/http_parser.h": "2dfe487f6ee48b3e5e0a88efc775c092840eee94fdc107bceeaaad84fadff418",
+    "libraries/3rdparty/jsmn/jsmn.c": "f91533b8c65ffe13d3389f18e6f74a09aec61c23bc44318f40135bc004b075fa",
+    "libraries/3rdparty/jsmn/jsmn.h": "f24904f8e9df0be61cd26430851f026ebbf7d85a4c856ef2c975e85f1cb304b7",
+    "libraries/3rdparty/lwip/CHANGELOG": "c5f5f8669d5331682c585e799e02d45c3685bee60355224a6be14f89e39d8f97",
+    "libraries/3rdparty/lwip/CMakeLists.txt": "0fbb2a7f2bc9de315cc600d615e9c22ced4d55a912560e4ae3c83614c23ef2db",
+    "libraries/3rdparty/lwip/COPYING": "8fb15ebdb19eb669e1d37fcd8e57a44c477fcc0e93a9ab0d181760965f94d5ed",
+    "libraries/3rdparty/lwip/FEATURES": "57793f6c272df0a41c8353f4c0d1b5e9d8f6737a796bda6271051a2e9d063cf7",
+    "libraries/3rdparty/lwip/FILES": "82080537659a53c105b86286001498fc03c16a3e232e926b0061a284081dfc1b",
+    "libraries/3rdparty/lwip/README": "0d66dea5b1f64a4a148de7d33fff46d0de633e51693ffbdbf7b774dfa9859415",
+    "libraries/3rdparty/lwip/UPGRADING": "26796743baf56c6076c44a09785927bb123af20a5e86343f1dd4c1dfd083be0e",
+    "libraries/3rdparty/lwip/doc/FILES": "7e411f98dd0b535f78f1cc4ca81bbd596ce704a233c24933c247d11eb4a07662",
+    "libraries/3rdparty/lwip/doc/NO_SYS_SampleCode.c": "0dc59b5572d2d9576f74ffe0f62791e055839e948ea174ec75ae617742c5b6e6",
+    "libraries/3rdparty/lwip/doc/ZeroCopyRx.c": "cbabf596cfa079b493582ec1431d9885c68bb2adf5c2cb897730d7ed03ce852a",
+    "libraries/3rdparty/lwip/doc/contrib.txt": "91ab1d4cfd18d786c3db74403b2a92465678f88fc13a284b9664d60c78b1ce7c",
+    "libraries/3rdparty/lwip/doc/doxygen/generate.bat": "edc28fe50dc150fe0ddba1369f05511a5437a4b873233d75677a9930dbf580be",
+    "libraries/3rdparty/lwip/doc/doxygen/generate.sh": "d5134949019de866042b12d7855892036790036b5f12a3d53ea477babc3e8a7b",
+    "libraries/3rdparty/lwip/doc/doxygen/lwip.Doxyfile": "3eb1f8bcff508d9679845eb7ee1f357f458c5bf96b6caec6604e2f9ac4ae68ab",
+    "libraries/3rdparty/lwip/doc/doxygen/lwip.Doxyfile.cmake.in": "659fa649d3832543491c5c918cb2bfd8018c5a107e207845e40e655a7bff9074",
+    "libraries/3rdparty/lwip/doc/doxygen/main_page.h": "c74492f39adc0bed34586cc12e3570bb79e0995988952808b0cf4f0f8059677e",
+    "libraries/3rdparty/lwip/doc/doxygen/output/index.html": "65219746dcce33cff1833a9629610bcce0ce9aa100ec5d54fc808d143f54ba2c",
+    "libraries/3rdparty/lwip/doc/doxygen_docs.zip": "9ec7afe1a913957051121766df920aad105bdcd1bca739661fcccffe2d4b11dd",
+    "libraries/3rdparty/lwip/doc/mdns.txt": "2a8a0e2588d362178f220127d3f98533326f9d3feaa73ea5c00f884faea008c8",
+    "libraries/3rdparty/lwip/doc/mqtt_client.txt": "67416e16b09d4433b0939f1462d9c1a8ec718a7dc9746e1fa0b915d484f2a6a8",
+    "libraries/3rdparty/lwip/doc/ppp.txt": "a7b55cc1c17b4177bc43bd0769ad5a0a795046c4ef5717fd63655229eb9100ea",
+    "libraries/3rdparty/lwip/doc/savannah.txt": "f59e958afaaf2af8ee3deebea55aedd7ec40df5e6bd4562dec2ec28a6b0e1509",
+    "libraries/3rdparty/lwip/src/FILES": "05faeb3c86d87e76ba9366ea01db86c00977e5d811c57c6dde081ca9ec6fec2e",
+    "libraries/3rdparty/lwip/src/Filelists.cmake": "200479dfa3af31d52fe8283e59bbe3b9c79b8f3c35b6ab01a1c5f730554fb2ff",
+    "libraries/3rdparty/lwip/src/Filelists.mk": "8c5f9f63c01d51025a8bfcc521ac2a4914a5892313279019be3e723a8babf915",
+    "libraries/3rdparty/lwip/src/api/api_lib.c": "11df71ddc77e76c249eeecdf8f940fe69a01764892bfe1bbda4de12cf7925181",
+    "libraries/3rdparty/lwip/src/api/api_msg.c": "19edd38b5821cafed9bbd99b675ded588c1d225bbadac75cc14572b9e839a7e6",
+    "libraries/3rdparty/lwip/src/api/err.c": "5dd20e93a89f5cf4492e6cc3de49a5b6de6a9b15136963cef2a08a5e411a1f15",
+    "libraries/3rdparty/lwip/src/api/if_api.c": "eb6c944f66d0daf48306b308c5dff528b167f1284edbfbd87930c48d2deeba7b",
+    "libraries/3rdparty/lwip/src/api/netbuf.c": "c5285906a4b52280b127ae1b2a4950e597cad7443668bbfe009c7bb37221df4e",
+    "libraries/3rdparty/lwip/src/api/netdb.c": "6f0211709009d8562fee260ebdb958f12693eb490d3ef8837b0e8dba6d4a1095",
+    "libraries/3rdparty/lwip/src/api/netifapi.c": "d8426d620c4556c1f8cfc68aba0e91c8e7bbe214a13fb877f364041f9bf8ec34",
+    "libraries/3rdparty/lwip/src/api/sockets.c": "1674347f18f89ee0a34edf2b52271b9eb60610ae1895cc32d9d4e9307fad5d7a",
+    "libraries/3rdparty/lwip/src/api/tcpip.c": "11684d56792bc66451f8df1e5aacbae9eab98f438cd8c6d55fdbdcdc5ff1aa97",
+    "libraries/3rdparty/lwip/src/apps/altcp_tls/altcp_tls_mbedtls.c": "9ded3b5db6726efc6815b2fc0bc5bb47d96c6128dca65e3d7c158133a888b061",
+    "libraries/3rdparty/lwip/src/apps/altcp_tls/altcp_tls_mbedtls_mem.c": "45a0cd3bb15895dfdbfc5723d31e268549a89b1b730666e13f0f9ecdafbde9a8",
+    "libraries/3rdparty/lwip/src/apps/altcp_tls/altcp_tls_mbedtls_mem.h": "e145466f175096ce419c0e6e267353b3f8af174c0135a1485305ee79c71ac9ab",
+    "libraries/3rdparty/lwip/src/apps/altcp_tls/altcp_tls_mbedtls_structs.h": "51238ee0fdc56828904a777ace9864f907790c1bfa29be847b146b6b58f55fb8",
+    "libraries/3rdparty/lwip/src/apps/http/altcp_proxyconnect.c": "e9fe1a344f0faa9814ccd8a17b8cd69cc7be90a74fba6d8643045eb6198acdb6",
+    "libraries/3rdparty/lwip/src/apps/http/fs.c": "91cee1c0dd66b171e7459ab2d5d3d89483d13f9fb5d5fa77acba80bd68cd8534",
+    "libraries/3rdparty/lwip/src/apps/http/fs/404.html": "093f7768e78b045d8bee613880ada36c5af27e738ce906e5ab35bde33ad2c55b",
+    "libraries/3rdparty/lwip/src/apps/http/fs/img/sics.gif": "3b4eb378fdefac1e7dd6dbb6c84db20e1512463457626f5d991bf7c1ccb7cf63",
+    "libraries/3rdparty/lwip/src/apps/http/fs/index.html": "d34254865305f1f175294b4b1591f1f4a54145c28937f4e3fcb7f771d0a5e9a7",
+    "libraries/3rdparty/lwip/src/apps/http/fsdata.c": "fb7b1b618b07086529936a1ab9b0e4c92887a50735796802aad463c8391d2f6d",
+    "libraries/3rdparty/lwip/src/apps/http/fsdata.h": "44df92ed526d0d6b1c374fdd97a96b3f5eb188c7d1084e32fcf420a8a23e3d0f",
+    "libraries/3rdparty/lwip/src/apps/http/http_client.c": "2c1728ebaa8cb970c9d51d956f18eb0a46cebe021514e1f15ad6e9355ed01761",
+    "libraries/3rdparty/lwip/src/apps/http/httpd.c": "f994931f007a71b7d15e7f09c9bce6d540a117579cb47cf0d9bac3873d29ca21",
+    "libraries/3rdparty/lwip/src/apps/http/httpd_structs.h": "1fdff4abe295ab3d39c6ed0b9f405f7560224d4d9651f9c2c6699a9672b9a076",
+    "libraries/3rdparty/lwip/src/apps/http/makefsdata/makefsdata": "660649c3cd0b5fa548baba63db7c8218aa13269825d3cdec0d4ad577d1338b20",
+    "libraries/3rdparty/lwip/src/apps/http/makefsdata/makefsdata.c": "1d0d5c1e1d7dab7d54d9a03862d2ab7e3ed17c73a67ebf1981fae9fd9526b490",
+    "libraries/3rdparty/lwip/src/apps/http/makefsdata/readme.txt": "033f3db7c66384b1da4c0f3251b6f7e21342655a9a3996edbc0fe87d37296838",
+    "libraries/3rdparty/lwip/src/apps/http/makefsdata/tinydir.h": "0d1716fa784db3441d241ddec4f75c2dbfe5d6aaea2f091eec7fe070c18d443c",
+    "libraries/3rdparty/lwip/src/apps/lwiperf/lwiperf.c": "f2b1b21d15ff674af6d47b8ee9594b15edbb8b35fa67f17bfadf53215d53798f",
+    "libraries/3rdparty/lwip/src/apps/mdns/mdns.c": "31ae5b30abd30ad70e1cfcae121d76756e45f12559f6ecf14f9f6cab55f7d426",
+    "libraries/3rdparty/lwip/src/apps/mqtt/mqtt.c": "a29da7817aa7496f392b63ad1f3a5c7b2426691284e1a1704a1979f5dbef5821",
+    "libraries/3rdparty/lwip/src/apps/netbiosns/netbiosns.c": "272828a2a8e335f8b7448e07261129a41ff5c15d621bcdaabb3b94692dcf53fc",
+    "libraries/3rdparty/lwip/src/apps/smtp/smtp.c": "75a64f733a251944bf9a6de6b39b2197b8a80eafdac3c2bed16ff5c03aa5832a",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_asn1.c": "d8bab135914260bc8cb3810be04bb17dd6dc58abfb46a063cd2930f5dfcb9a92",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_asn1.h": "87bc7b07c8c510b17134ab05a22ee675c9c48450169dc99e600be2f331a27f54",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_core.c": "3124bd400c5ef0831d11314aba5b845c920adb99d0a282bbe1a961621a5a13f5",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_core_priv.h": "e486ddc80307a3399c3547855adc05c9ff9040b0b9be237c0af232db6bd00abb",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_mib2.c": "1695042f8e26a8c2a830c6c7df35ef7b084fb184b84638e56eef46c4faa3386f",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_mib2_icmp.c": "1072cf5d410a39b540ecd09554e98b264488a26f90628f67ccdc9368d3b5a179",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_mib2_interfaces.c": "4998987c9ba42a8808b317dc4a67dd8dd761371d358f3ad4a43fd704b6cbb330",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_mib2_ip.c": "e4121927b1b42e2f8ecd6ff4b72449a9ce2fb6750ffaeb63598b719920ea3406",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_mib2_snmp.c": "bb5d3ced0dbd9b11cef0bc337791cd2cc4c06f7562e1d4b351e0043388a5c816",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_mib2_system.c": "e4454c37018aa43bf95368dd5abbb0a18306be4639d79af0c4e2247697483b36",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_mib2_tcp.c": "31829ddc6f5ad49e1f4c5b4bee0c51911a3fbbfba2553fb601e30ff4a7d0c5f1",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_mib2_udp.c": "490f18bce9e02d6350b978adbc882323d7ab43100c0072656dab15fb18033318",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_msg.c": "78a7ea5ff4ac365111ced296952668db0e90aadb05d46732ffdbbc42513e1191",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_msg.h": "1ddd054f74cea2c6c595b22228461578114d381fe82f86c96c9cf85cf5dc8dee",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_netconn.c": "2c44422bf05bbbd8aa7705d0fd408f7e9afd8e1a67b366af403e34257e9c42e6",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_pbuf_stream.c": "9d2dc736dc4d30db370f4f0e0d02ab78b57c240cecda6b77796017ff56bdcb20",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_pbuf_stream.h": "22630a24db7edbcaf482b7975765e7df0860f141e9bd9c48083e00af0b7eeba7",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_raw.c": "2c5eedb6d972f6313575f837d0e9c33e129fcc43498d180eef6c80c8c4a85c73",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_scalar.c": "065919819cd402d35c925e80f7732c70872d78faf69f77964e6b75c26be7563d",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_snmpv2_framework.c": "9e0e7a9bee3cd1e55da9398f16e47f5e83395e8979221f0d64809f06c1230994",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_snmpv2_usm.c": "b1825260c0a4b860d33a258f4d6eec789876c62a167bdf63b67d0edcc6c0c5c3",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_table.c": "72546d138df585ada6fb1d854b65f7d54d81e98bed5dcdeab79c8c043704e116",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_threadsync.c": "8acbd0cab2bc51e0c8afe971ad1f670a6766217f9bd3b72a712adbcd7848809a",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmp_traps.c": "5ed808bb3081a65a62258f66aa44b0e7dbb786ebde0c24481cf25d10d02716ae",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmpv3.c": "9dec4ef75e29632234089a5593cbd27f9dea972f0829f07bd15c84a14f947ba7",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmpv3_mbedtls.c": "7dace5c3961dbdbf6b2085c4403e83aa6666d0ba1a8d0c70709873af5c6609f3",
+    "libraries/3rdparty/lwip/src/apps/snmp/snmpv3_priv.h": "f7027abe4f437bbd639ec6703cc9549ce6f0881cee0e44c461de686feef02d2b",
+    "libraries/3rdparty/lwip/src/apps/sntp/sntp.c": "4b17c78632ae674b6f62fe54971e702a1377ab3d5f952e4d6a2fec92e671a226",
+    "libraries/3rdparty/lwip/src/apps/tftp/tftp_server.c": "2db9edc52fd38f1f7693574c04577560faec5cf643679848e59d0be2d39ebe17",
+    "libraries/3rdparty/lwip/src/core/altcp.c": "0d58e43ebc6608523af864465ba3d74072c7e7186ac1e6013ea7816f96828860",
+    "libraries/3rdparty/lwip/src/core/altcp_alloc.c": "15f04233b2763523447af0a96f272e091492381f3cedb66ebd9083305fd350b1",
+    "libraries/3rdparty/lwip/src/core/altcp_tcp.c": "249d650d545e61e36dc56fbc03c6e16548bddb86216c7712282f61b8efb75aa9",
+    "libraries/3rdparty/lwip/src/core/def.c": "a262c8e884b5b03238cbbad0e09c9406b47795855c5a14b834c0b254e53e8358",
+    "libraries/3rdparty/lwip/src/core/dns.c": "ca908ac6e902c27b4a1c3a069d3015cc01a43de7a6c1538c9c5f137dc5ff15e2",
+    "libraries/3rdparty/lwip/src/core/inet_chksum.c": "5dc6ec80183ee66e03517d6ff2a531634f60f48f8e4b56baa1ee7519884d9617",
+    "libraries/3rdparty/lwip/src/core/init.c": "00c2ce9b71b2afc41b0dc9624acf77736723be35bd2a166bbf68cf46e2f551fa",
+    "libraries/3rdparty/lwip/src/core/ip.c": "82d0fc6b45c6d1af88bdece3229fc9821274263c261369de4f81b8d6c80751e7",
+    "libraries/3rdparty/lwip/src/core/ipv4/autoip.c": "e0a6a0987e3d85930782a9fb75de28ce519cd300055c50cb55fa426950e4303e",
+    "libraries/3rdparty/lwip/src/core/ipv4/dhcp.c": "4c24f278a7a79baa548d69be935cbf487d5934dcd04ed4ce8aadaa1929ab0211",
+    "libraries/3rdparty/lwip/src/core/ipv4/etharp.c": "1d1a1a09749060afbce456c80b99a80395c128b2466d5956ead1372ddee9f7fa",
+    "libraries/3rdparty/lwip/src/core/ipv4/icmp.c": "3072098d2bdcc364a1ff79493c5bb6c26470226d3dea98c6a8bb15269a3df0ec",
+    "libraries/3rdparty/lwip/src/core/ipv4/igmp.c": "7e541cb6884e4cd1605e7edc8652596b7edbafb5430487720fe4eae2ee3bc1a4",
+    "libraries/3rdparty/lwip/src/core/ipv4/ip4.c": "a52e779aecdc6f26fe872623bc937d625711fb74a36fa2c1058853182e5a92c0",
+    "libraries/3rdparty/lwip/src/core/ipv4/ip4_addr.c": "44d5dabfeda2558860fe831107040148f111b20bf372dfedaa370086e0aa588f",
+    "libraries/3rdparty/lwip/src/core/ipv4/ip4_frag.c": "dd03b42a7d02f00a1c9fafa8c83548a8b2aab19dfaa136451120ad10d964b68b",
+    "libraries/3rdparty/lwip/src/core/ipv6/dhcp6.c": "e1bf1f0a3c7b3e4d6fa902aa0ec70bfc3bca89d9424672ced5f7cc92343abc7d",
+    "libraries/3rdparty/lwip/src/core/ipv6/ethip6.c": "548b460688f824015b5b30401cf907828f1dc088a8442d8ee43e4049c1e1401d",
+    "libraries/3rdparty/lwip/src/core/ipv6/icmp6.c": "59fac03d674da3806b091bc2b285d8276378e3f9ff6ab2cc0c2cbe3241d5e350",
+    "libraries/3rdparty/lwip/src/core/ipv6/inet6.c": "3f7676e46413586fc3d07438b51c0dcd46bb3ba24644892362cf47f84fc15390",
+    "libraries/3rdparty/lwip/src/core/ipv6/ip6.c": "e3e140a91fa198d8c15bd7139f2a6ceb50c0ce21e024eb6996c8db76e801bb72",
+    "libraries/3rdparty/lwip/src/core/ipv6/ip6_addr.c": "fb4be0a5b3b048bc4b9ad1b4a18ff18f56c80c0337bd4a88fcca5f029872f46c",
+    "libraries/3rdparty/lwip/src/core/ipv6/ip6_frag.c": "762b56b9e8f5cfa47129b74189ee9dcca53f4fa6a8e3c801896fa017185a7653",
+    "libraries/3rdparty/lwip/src/core/ipv6/mld6.c": "21764dae4f2d9d1ca2cfda26360cde2a04a5f4f0916dce26cecd0728651f4fe0",
+    "libraries/3rdparty/lwip/src/core/ipv6/nd6.c": "5ea43dbe2de4bcb4d209f6389db953d2f33867e1c341498d2e4b36a629518a3e",
+    "libraries/3rdparty/lwip/src/core/mem.c": "b15257ccf032eca75ab4bc885cd26181120efcc9503912e5505c025f40af20b4",
+    "libraries/3rdparty/lwip/src/core/memp.c": "91ca3a00487d61849324ae571ac9ede550a879365c557aba38667ace122b6c00",
+    "libraries/3rdparty/lwip/src/core/netif.c": "84c12e22fee886e757fb0fa6d7793987a901f73522f8dbbc47242eb772f6d00a",
+    "libraries/3rdparty/lwip/src/core/pbuf.c": "1a73a2dba7a2a39571c1a55918eec3a1437568002f96bd59d3d8c85e5c4d7542",
+    "libraries/3rdparty/lwip/src/core/raw.c": "0010abf2460283092870e543ea3a94fdf4278f35c81c8eb6abfd5d541bb6c911",
+    "libraries/3rdparty/lwip/src/core/stats.c": "2db9e608943cabf97883d001e824f43c1b45b4c0a9f2bd0859cb303a8790ffb4",
+    "libraries/3rdparty/lwip/src/core/sys.c": "db8e9cc75747d9fc0352fd9e9adc493d8c4292e79942160ceec370003bce587f",
+    "libraries/3rdparty/lwip/src/core/tcp.c": "0d279b71cef41d7a33a2e7ffb45fd068d3419af600f35a2d335493b6ee61be9d",
+    "libraries/3rdparty/lwip/src/core/tcp_in.c": "58d8308c66f74f5fcebcb5bb1a002ae30aca5b315f17af4841c8ef5a196af8b3",
+    "libraries/3rdparty/lwip/src/core/tcp_out.c": "894814e50ec242c1243f6b6049f16747ce150f9427f15dac937c23b3bd3a796e",
+    "libraries/3rdparty/lwip/src/core/timeouts.c": "a905bd50f60f3991c65ede71b7e49a42b056b0c1e4c8582b861467c511621a92",
+    "libraries/3rdparty/lwip/src/core/udp.c": "2440042e41bcef33c985f178c7a3f97179c9dd85824d7ac9a0a567e10f631bf9",
+    "libraries/3rdparty/lwip/src/include/compat/posix/arpa/inet.h": "8b3edc25121de40cd1c3338d5d68be93091f0713ee8a23eba9789f14d41e0f6d",
+    "libraries/3rdparty/lwip/src/include/compat/posix/net/if.h": "959824b6148b88cd19334b2e9a55b0ce3a5e27633e4ef23014d576ece1afbe82",
+    "libraries/3rdparty/lwip/src/include/compat/posix/netdb.h": "ec3cb99596ef6bf11b39870541bf6607a7cff6011cfef99bf5d53f2abed05948",
+    "libraries/3rdparty/lwip/src/include/compat/posix/sys/socket.h": "8b3edc25121de40cd1c3338d5d68be93091f0713ee8a23eba9789f14d41e0f6d",
+    "libraries/3rdparty/lwip/src/include/compat/stdc/errno.h": "9fdac7c52c9fe0cfdf50f96eae29c5f341a9afde5a56166d21500c656a8a0728",
+    "libraries/3rdparty/lwip/src/include/lwip/altcp.h": "caaf01ac7b3b023d9a1f256cd61a5ac848154eb274e23266504964942d921ada",
+    "libraries/3rdparty/lwip/src/include/lwip/altcp_tcp.h": "6f9dc7980ddae21919af20ace2a55bb6031f8e50bd025c45abc14082c099aabd",
+    "libraries/3rdparty/lwip/src/include/lwip/altcp_tls.h": "344fb2d89c189f8db28f285970445a509a9689ab9cce6036373417836d25041a",
+    "libraries/3rdparty/lwip/src/include/lwip/api.h": "d99a79864aad8bb9315552a29afd2f4ca54fc9fc6806cedfa5e80ad0a5c223f6",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/FILES": "1baacff539b72c79be4fb5491be4963f0103557286405b3b4b4dd3396bdb0196",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/altcp_proxyconnect.h": "c4b47d012ce46a6aa25d4038ecfe0844b0f3cdfe40e6234d622de298aa48ab13",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/altcp_tls_mbedtls_opts.h": "8287fd0981f720e4ba2103f970a9ec3086dae428281330bdfd1acdc14173bccc",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/fs.h": "78affa57845b484a28a6a42b1165e1ed2d6a0aac6a2ddfcc61aa8b3fdea2a9fd",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/http_client.h": "5e8ed15fbb99f6924cffcc82784bcdeb15a7bea19cdd436f588f59be9ed57570",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/httpd.h": "4a5c1213fe0fd2082a8aed3084f4d282b8c51c3c464d140306cdce0f21c30b9e",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/httpd_opts.h": "d48790f7ea3e034f3726ba88d1b0729c195b7f3de98876426c7a7f9d099946b1",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/lwiperf.h": "ac35572131e102c96feffba4bf2788b841f0d162cde1af3d9b7914e11540b9b9",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/mdns.h": "b6da4c7c19cb41c992cef008fcb18172013e3c48cc9626d1935f30ce4c3670e6",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/mdns_opts.h": "fce75c794c78180f5569140a177c450b685662d8e9c8486e6f1cdda9faaeac20",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/mdns_priv.h": "57f3e8cbca3d403e47121621d74f6933ad8e9778d9df7d0a9ea1ee95bddf67fb",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/mqtt.h": "b8082ebcd0583c7744772f088a8c676d70802da603c436c6e77d032cf5cee9e5",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/mqtt_opts.h": "b8bb920a04472488f3fa1371cbb9c934bfead7cc8ba7f06316da4bdb2e354feb",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/mqtt_priv.h": "e4903b34c12c941650045977e2629d41b1ca8407e48dc28d9ba36382825bb2d9",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/netbiosns.h": "438a8e5cb80794959e0ebb0989a8d0615dc8d2d737fa97c231b10d4040e8f715",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/netbiosns_opts.h": "c4dcff3906dc65cbe88d4fd6488f24a4eb1659d11fc7ec8cf7eef7eb3599b82c",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/smtp.h": "61d670c0c914cc4d39f6c9e4661a1ac5e2b3cdfc45bb972b35cbf7ad3ea3d569",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/smtp_opts.h": "fea7b6a8acfbd22add46be89bbad1e42ea4c41b255b21c576c7e519642b02275",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/snmp.h": "dfe74dba15aee1f70c9268e981b901ba9985b56104c4d4af778771d7bfaae8c5",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/snmp_core.h": "5f2f6c31d324406c2e3cc69a5d8262cb578065e70320f6dbb4046a9c34dcd8e7",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/snmp_mib2.h": "dbc21ede7c6c4ac282b845aaf40961993a94b3ddb80a85e8aea66c9f6c5cae03",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/snmp_opts.h": "fcd7d37a9418f6b25fc367ad1252c193a62915099b5bbc9f6693f0526d915bd4",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/snmp_scalar.h": "f88ed96f2010bb383af723c50f8e0b93a9a5d566599ef0f35c11102124805c09",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/snmp_snmpv2_framework.h": "8397074e6d74aceb6430e077537eff4330f6c712d00647a13f2832093a7f9eeb",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/snmp_snmpv2_usm.h": "ddd777bac19a3f0c6823854f121e52e1c16a9f788540e1f172920b45a01713bc",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/snmp_table.h": "1d0ef0508b2a00f55e6a90c27d484e526a2db5cde41c13b2aafcc6f2c8d7e25b",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/snmp_threadsync.h": "cca3712f8a796bc481ca8be54c61407f5be5661acc10c95234ba4c31ef6a4996",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/snmpv3.h": "7d1be4c7469ae8108d3657433f965c8884e66475178fee2a474fbbf01aee3fe0",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/sntp.h": "2c3d461a79a29db2697a2f0e2f034301af859b878019a317d25360cde378da68",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/sntp_opts.h": "c923bce684987e99775d122b513f0f7755f034ace14c66240d7afc599fcd2e07",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/tftp_opts.h": "bc24f308f5d9b28afdfdcf1bc0e5d3f35a43029adf10325e866f6465b3bcfd10",
+    "libraries/3rdparty/lwip/src/include/lwip/apps/tftp_server.h": "9c3a52627aa8ef6980d244017c41d3a2d81ffafbba3cd3c71dfe649ccd953d31",
+    "libraries/3rdparty/lwip/src/include/lwip/arch.h": "38399a8b01aea37e087b73cc34d14199de6e50a62db45aa4e7172b6cc814f165",
+    "libraries/3rdparty/lwip/src/include/lwip/autoip.h": "92960cb246d41791ac2e9fee69055b406b9dae0c011614ab001ddf49466190db",
+    "libraries/3rdparty/lwip/src/include/lwip/debug.h": "26e83dd085c4a82195810689f2065f9ea0912ca282d238d23c976221b1f01954",
+    "libraries/3rdparty/lwip/src/include/lwip/def.h": "45174abaf6f7af5417185dee90954f1954c80278c2bb240b513d25cebf064826",
+    "libraries/3rdparty/lwip/src/include/lwip/dhcp.h": "8547d966c575afa9e9d723ec820fd6eaee7ab0327e08586e0b362e52136b0754",
+    "libraries/3rdparty/lwip/src/include/lwip/dhcp6.h": "dbac3f610e3e76547691af73a667bd5fd6564a7fbfa5ac382ef77604938d4afa",
+    "libraries/3rdparty/lwip/src/include/lwip/dns.h": "962c462c90afd41ed010b961f539c11b2baba3e8a6bfe584f331a5e4d43c1b05",
+    "libraries/3rdparty/lwip/src/include/lwip/err.h": "af26b573fc5c6a31877fdcde35e15382ac0c8b01f35af3f5a4429f9cf5dd323d",
+    "libraries/3rdparty/lwip/src/include/lwip/errno.h": "79dc6e03887ccf301e01a5129d1a732e21fb05308a8e38f04ada44e0928c075a",
+    "libraries/3rdparty/lwip/src/include/lwip/etharp.h": "c51191f03bc0229e1450a2d8c5f4f5faca27e55b5b1bea5bfa844f0af7e729b7",
+    "libraries/3rdparty/lwip/src/include/lwip/ethip6.h": "7a7e744ae373a720261be3651adaa0f35ff00ebb1bcf38e5330e371ddfd162b7",
+    "libraries/3rdparty/lwip/src/include/lwip/icmp.h": "84f63c9fbc6f6d66ef437f834279c25c20bfa78834eb0ee347c70377f7f8d8c8",
+    "libraries/3rdparty/lwip/src/include/lwip/icmp6.h": "f790cd444ecbe2e605b2f1a1deab3e6e9662ba6e87fd47b401912c5a118ee836",
+    "libraries/3rdparty/lwip/src/include/lwip/if_api.h": "ce286c1bc917e2ec184d7d9bbe423a98d16377994fa01a585979a7f92f8de861",
+    "libraries/3rdparty/lwip/src/include/lwip/igmp.h": "de409719975a9e81349d90ed6e09a8d832f12c216d6b9e42de580be9ff546daa",
+    "libraries/3rdparty/lwip/src/include/lwip/inet.h": "8504b019db37c6767f443b3e13006792129b8ac6dcce93658d439c8155369a6c",
+    "libraries/3rdparty/lwip/src/include/lwip/inet_chksum.h": "4f99b8325be79c66937a496576ee3ede1f67a44132be35b33582bf15dbb91207",
+    "libraries/3rdparty/lwip/src/include/lwip/init.h": "5a27cd6b48bd361b9b9dc04a43f9f9ddf3fcab21be0e396f67fa0d3fca056579",
+    "libraries/3rdparty/lwip/src/include/lwip/init.h.cmake.in": "38df819f1ae753f240e9adb27398c14d6cf3e2e9065547a8ceb7694a9d132216",
+    "libraries/3rdparty/lwip/src/include/lwip/ip.h": "9589862a8cd3d22ad06ac291231d4b0335cb15e2d0e5bcbd1f870808d9f85828",
+    "libraries/3rdparty/lwip/src/include/lwip/ip4.h": "d15ed11a5551d6968d536f5bba63d53c95214668002b12342e6bcf3b840e612e",
+    "libraries/3rdparty/lwip/src/include/lwip/ip4_addr.h": "373faa87a644cedd25874acfbaeea0349b34448fc2dafa5d0853d945e46a6fe8",
+    "libraries/3rdparty/lwip/src/include/lwip/ip4_frag.h": "8b0bb67655cba6da8cddc360e655c711553ad35e6306dbae618637e80be9911c",
+    "libraries/3rdparty/lwip/src/include/lwip/ip6.h": "7681c2948f700aa565c387ca20654f7322991ca15de7fd4e8f342a8ce44abe57",
+    "libraries/3rdparty/lwip/src/include/lwip/ip6_addr.h": "1dbc5e8ddd4c379303d4a3416f628063f0814814d365cc20dad5d89e0baa4070",
+    "libraries/3rdparty/lwip/src/include/lwip/ip6_frag.h": "3ab1bdb9220a3c87c8187fb26b1150cd03c4401b0a0c6db2ea4a22674141dd3b",
+    "libraries/3rdparty/lwip/src/include/lwip/ip6_zone.h": "951a5aeae08562dfc4a3bcc72de9952ac0045126a1cef9eedf9c6881ecb91a03",
+    "libraries/3rdparty/lwip/src/include/lwip/ip_addr.h": "177f57b3b62f6d4fa6ec1f487c89d3eefee03f6ad4da7b1528d45e52e4192d97",
+    "libraries/3rdparty/lwip/src/include/lwip/mem.h": "416f961f338a0cba460494ebfe2527b7cc1fc5c18f489711e66af7dd76b7a223",
+    "libraries/3rdparty/lwip/src/include/lwip/memp.h": "79dfd019219330cf08deb1360483eb7d1da7a1a7a304034ef65ad52feefba1ef",
+    "libraries/3rdparty/lwip/src/include/lwip/mld6.h": "00c0404c74f162df93ceadc13a49897bc6124f4ae6a9fe251969b45df7f8fe23",
+    "libraries/3rdparty/lwip/src/include/lwip/nd6.h": "79fa57b4bded6763d38f5e4fa56aa2fac8117bf76ffc69869e05357af88951d6",
+    "libraries/3rdparty/lwip/src/include/lwip/netbuf.h": "1aa92014d8919c5073b5123c92881e00b0c507ca485667ccdebbf31afa214ff3",
+    "libraries/3rdparty/lwip/src/include/lwip/netdb.h": "582518497fefd57cd1d227947965c71b1dc16846add471af0fddfbb461c7aca0",
+    "libraries/3rdparty/lwip/src/include/lwip/netif.h": "bed85f2bdd2b57cd90106cfcc4baca8a27cdf4051a595f35b6d9ba4ca7f9a5fa",
+    "libraries/3rdparty/lwip/src/include/lwip/netifapi.h": "2c087eac81246ac74e3ba2c3922de0612890587f0cca7c1360f379a57ab45518",
+    "libraries/3rdparty/lwip/src/include/lwip/opt.h": "64635d39f67dc774379f49c734b880dfed3c270e234f0d3694ef7852d5ab2bb2",
+    "libraries/3rdparty/lwip/src/include/lwip/pbuf.h": "5d8fbdd3e7ce30b4bafa25baa339d3d9f814547703b8f52ec59008a2e57d8575",
+    "libraries/3rdparty/lwip/src/include/lwip/priv/altcp_priv.h": "154762f3b69ba1cd364e95e31e3a6b4c6d679ed02f894f6b538a2dd72f48f519",
+    "libraries/3rdparty/lwip/src/include/lwip/priv/api_msg.h": "e2458063868f0813bc26f41709bbf78d994760e72667b646b88f15e16e235f48",
+    "libraries/3rdparty/lwip/src/include/lwip/priv/mem_priv.h": "c90c9b64c8ea95c05d5b8b10d706acb53b6cc124166e8dd85b397698679f7920",
+    "libraries/3rdparty/lwip/src/include/lwip/priv/memp_priv.h": "37aff2894bbe25f1888e43b96be80f4c1a43a24867c0fc9aceb4093328682937",
+    "libraries/3rdparty/lwip/src/include/lwip/priv/memp_std.h": "86cdf1d80f2716a07011dc763e5fa614cd2b555382cb7d6750176116def67a0f",
+    "libraries/3rdparty/lwip/src/include/lwip/priv/nd6_priv.h": "0cd4756c17109d6d01c07ef35cbc527954a1cd926065432a715578590b8dfddb",
+    "libraries/3rdparty/lwip/src/include/lwip/priv/raw_priv.h": "0b2b019a55fab8eed89d668f13402778835117fe472464046472cd04b93c2bb2",
+    "libraries/3rdparty/lwip/src/include/lwip/priv/sockets_priv.h": "bd45590358b1a07481b7ddae7845e0d1c59bcf482ea48d9093638e0d11aafcc3",
+    "libraries/3rdparty/lwip/src/include/lwip/priv/tcp_priv.h": "547929dbf334d846444094ecb363680bf90320b198ac1e49027fda4049c07233",
+    "libraries/3rdparty/lwip/src/include/lwip/priv/tcpip_priv.h": "aeb6e4ed4cb0833ca8007ef35c2dbfa75969bfbb6042df50ad698a7a56b12a16",
+    "libraries/3rdparty/lwip/src/include/lwip/prot/autoip.h": "9b88bc52c97db0f6c57864b65f423010aaff8d433a4b5d4dc45fb1177a085d03",
+    "libraries/3rdparty/lwip/src/include/lwip/prot/dhcp.h": "bc74edb6abff7b5182e04e2e588292401ecba3875bb6673156b026a5c391dbc4",
+    "libraries/3rdparty/lwip/src/include/lwip/prot/dhcp6.h": "72c645a6153694229ca535f044af2d1520ebc7860baa98121747218a08c2b74b",
+    "libraries/3rdparty/lwip/src/include/lwip/prot/dns.h": "34049c0f7f489aaec12d0589dc51ecfb24408dba422f605d8deb207c44d02b8f",
+    "libraries/3rdparty/lwip/src/include/lwip/prot/etharp.h": "55164c0d047f1279982fef9681491c8811f8482976aff7fab9b63a9a589ded76",
+    "libraries/3rdparty/lwip/src/include/lwip/prot/ethernet.h": "a72c650e277fa59be6bf696e95d5d055dbafa3c222a9c9189bd22b707a7781d4",
+    "libraries/3rdparty/lwip/src/include/lwip/prot/iana.h": "745c2d70a5d4839e3df5a34f7e37b83bcc7fe58f39eba1d2f5e238242d74c878",
+    "libraries/3rdparty/lwip/src/include/lwip/prot/icmp.h": "931d46a3e775efcd6076263e23eb564b612913b7c11f7b5d009e94fefeb20f28",
+    "libraries/3rdparty/lwip/src/include/lwip/prot/icmp6.h": "8d3bcb5d37b0ad3f73102ed2ab3c2b52a42492508d012d41d5b2233827232fdd",
+    "libraries/3rdparty/lwip/src/include/lwip/prot/ieee.h": "3cabc795b2c2e02b4ff44e130497f19b372348598f9ac6d5127ab1888370e187",
+    "libraries/3rdparty/lwip/src/include/lwip/prot/igmp.h": "9adb3a0b03feff302b057020aa860fd958f6ef4528225014c104bd4175ebdff7",
+    "libraries/3rdparty/lwip/src/include/lwip/prot/ip.h": "eb5371e5ac58467253d813bc58726e317f91abadb10336497de0d64645ec01cd",
+    "libraries/3rdparty/lwip/src/include/lwip/prot/ip4.h": "033570c0b7657f5475959f7b74d9e23c6f8e81498495d5b23d8c2eeb0640d7a7",
+    "libraries/3rdparty/lwip/src/include/lwip/prot/ip6.h": "177e335168c4ffe180c52b33db37dd62e4426cf8e396293ea0a73103a2b044ae",
+    "libraries/3rdparty/lwip/src/include/lwip/prot/mld6.h": "9601cee67b48c4b7cadb75caf3d83c05f5409d367341af70af7e7e4f46f173f8",
+    "libraries/3rdparty/lwip/src/include/lwip/prot/nd6.h": "50cff239fdb433defe12f7e35c4f2964e42ad7bfeab15d3b274a59142c4d558e",
+    "libraries/3rdparty/lwip/src/include/lwip/prot/tcp.h": "db67bb5ea0517a8cd9e30ebf655743f69ce05e77ca6e4a113e8c60e69bd7c48a",
+    "libraries/3rdparty/lwip/src/include/lwip/prot/udp.h": "b56daa8ff1e8e52cdd4f720297f07af2a96feea254db86768e20e157d7ce2784",
+    "libraries/3rdparty/lwip/src/include/lwip/raw.h": "4485e6dddc930401193e380852ea7af121339fcc340114ba11b18b1e51c3440b",
+    "libraries/3rdparty/lwip/src/include/lwip/sio.h": "b6555ae90164d0b66e2772ec3444ebba0133927e4f47b512b570819b66912ce3",
+    "libraries/3rdparty/lwip/src/include/lwip/snmp.h": "1f90da65829c29545e9562ce5355d1799ea36cd901ed8ea9faa8e1ef3d7c2ece",
+    "libraries/3rdparty/lwip/src/include/lwip/sockets.h": "9f797297950f1d475a5a12b468621aac5894fb1e27439d1aeda4d5e810396ce8",
+    "libraries/3rdparty/lwip/src/include/lwip/stats.h": "295e3f2f9be188c05a90c2bb7e57a250a07e5ca7c54bdd31a50309da82cc5874",
+    "libraries/3rdparty/lwip/src/include/lwip/sys.h": "c89155582a8289137b48aae7a101b3f5b8b8aa600450424881110b63237bcf5c",
+    "libraries/3rdparty/lwip/src/include/lwip/tcp.h": "30fe24a5176042850cd083c53b11021838c86d47bb26d550866aa3424c263d47",
+    "libraries/3rdparty/lwip/src/include/lwip/tcpbase.h": "cc99fcf9a85b548157dc0631922edf5ebac82c431d463683d10bfc584971a42e",
+    "libraries/3rdparty/lwip/src/include/lwip/tcpip.h": "0106c89a8ba1f1cb56019e395d5681bf5a37121885a1b3218e3bf547a1266aa4",
+    "libraries/3rdparty/lwip/src/include/lwip/timeouts.h": "a383b43e3ba021d06ff3791d223db46cb3385e8dcdfcec0221ef2a006243c022",
+    "libraries/3rdparty/lwip/src/include/lwip/udp.h": "843a5f8a6c1831396400f71d34089f3a85e8d9791a7fb7b52ac63f070f465c82",
+    "libraries/3rdparty/lwip/src/include/netif/bridgeif.h": "39d409d880187e2a7b372ddae2b1cfc004b88a0dd786dbe9070945420b8e42c8",
+    "libraries/3rdparty/lwip/src/include/netif/bridgeif_opts.h": "bc6e5f0677c621a5a8adb315e1cdb06210e1391efea6d308684103fd38edfe66",
+    "libraries/3rdparty/lwip/src/include/netif/etharp.h": "2e1ab81eced65420cdee5940d2e547cae7b0fa70088f452692363676ecfc66dc",
+    "libraries/3rdparty/lwip/src/include/netif/ethernet.h": "1dd88263e583593e47f7c891680d67838287160551b8c06562c9feca1ddee443",
+    "libraries/3rdparty/lwip/src/include/netif/ieee802154.h": "02f21d8b3e143fa77d8fa3f0d3db9ac1683507436ab441a61d5012ddb6037699",
+    "libraries/3rdparty/lwip/src/include/netif/lowpan6.h": "538ac2429cedf9193b6538998f3ba5bdd003fbf0840fd03b46d4ad5bcfaa4c20",
+    "libraries/3rdparty/lwip/src/include/netif/lowpan6_ble.h": "fdc9f64632ec32ee2a577048d1ae5f64b1ffcb705e8ee505aefdb9232d8af4c9",
+    "libraries/3rdparty/lwip/src/include/netif/lowpan6_common.h": "eed0a8f45ea6e62ba4238d6bc139a1bef5fe625ec7527b52856fbf885c12f8ba",
+    "libraries/3rdparty/lwip/src/include/netif/lowpan6_opts.h": "8dc0426b3e382cc2d64cd7cb325c77180b9dd5c90508894674a4c6cb25614198",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/ccp.h": "b6e681ffe6855a6772c6d0a9077f144676c30db0c9ec0ea461e816f7647d6d43",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/chap-md5.h": "f67cd93664262575ded862c17bac7c1003e2eb690224b89ba2b0cdd221c2f725",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/chap-new.h": "f7bfb4e194fedcd1e6d499320826ecca7f14add5170c8fb7d4832b8e831bc2ac",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/chap_ms.h": "77316bd6366248a0d0715e19e231667c1564f3ef081dc3ba839cd673a5d4984e",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/eap.h": "42589e98b4ff8470c0e9a1cecc45fa30e79e2c1c3452fc46e2a88b6ac617dfe8",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/ecp.h": "4936fccc29a900ced5b67906f97f192ea634642b6a003605dc1cb40d65d011f6",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/eui64.h": "fc79081c31fd7333b0e2b3cf61c870727a3b066d82482c894b02c81cdbf464c7",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/fsm.h": "8751104f5cdeb3ace720744016431ee2d704983e8a94de7add0830e63dfdef0e",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/ipcp.h": "60bb47d15951954c865393be49b64f6daecc966f7146aeee187530a111d9008a",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/ipv6cp.h": "69de1cc233f9ec05312a6cd4d5b558d91d04e39626ad6f9e0fbc4ee61a5709d0",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/lcp.h": "0278457347c50aeaa4636124d0265fb8064511f461de2b3ff7fa51e3dacb0345",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/magic.h": "b19a254f135449982830685df31b948e0d5c7e44ac5875efc8d1a3ef20a3aff7",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/mppe.h": "8dd28c994f67ca45b11586ecc195fabedd5d51efa0bd99872336d82886477c9f",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/polarssl/arc4.h": "970bc9075bf7aef36f4a225ba8a3dcb89c16a1948016f3521ca4a7609b7ba284",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/polarssl/des.h": "f0a3ea812ead16f7d8fba08115429b5bd7deed1d9ffc6dddf66ec44b1d95ef0a",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/polarssl/md4.h": "d1982ff627c1176d03c60fa8ae307af09626a2655e08525a146019276edb9058",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/polarssl/md5.h": "1962ff0d88f8a7efbb6c8592eb13154129cfc7012c8cc22be7981df35e3c8ba4",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/polarssl/sha1.h": "2951ad6ae5b5797112ae1899cd814536c445334bf59cbd91bf5414db0613980d",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/ppp.h": "58175d5f9fda4d88bdaab4f1da12da692dd9e732ee0c51d94319b3461edd01c2",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/ppp_impl.h": "9a216f46049edfb333551cb4e7213ad537b0570c3211f0029b32bcd0c39cf62e",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/ppp_opts.h": "fcedcc2e603d155bad124e837e119abf616f1acafbee5315dd2a55adcf13fe42",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/pppapi.h": "f1520293792605ad0f0c78c93a5907d478affbebea8d6be1b0f8a8bdc9c4b427",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/pppcrypt.h": "954943c6c1286c707c0f1182428eb514dc8cf87a704a4e8f26a926553f260d58",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/pppdebug.h": "fab025981023c13721fac50978c5416ce2c9a0f40db200ef78ce4cd36d3b9b63",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/pppoe.h": "7ef6c7103c95f71afecf4453db1153830220fceaf9614931034bff7bde6f72f9",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/pppol2tp.h": "ae9a819aaf816ae4ff25c35bddaf7c10654a54b95451b247fd5d2824229d3cf7",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/pppos.h": "c225fffa8f85bc170992cef05d8d7350c86d2b3ae3d55951d71e35c9fcc2390d",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/upap.h": "7cf555545ed20e7d7897ed935c6333e77d629b1862e4e2136df87ebebfcb3907",
+    "libraries/3rdparty/lwip/src/include/netif/ppp/vj.h": "d6c9da89224974d8486dfa0082ecca0d487715df65a37088db55e7e51c745a14",
+    "libraries/3rdparty/lwip/src/include/netif/slipif.h": "abd68f98455683a96feeb1d7b2f83aa62acbba23b63d7974bef26382342909e3",
+    "libraries/3rdparty/lwip/src/include/netif/zepif.h": "7b3a4c9094483c14eb3c4da651874aca325e3927fde02eb28e226040deef4714",
+    "libraries/3rdparty/lwip/src/netif/FILES": "10564ef1c25f4ca37518cc705b3cb27b206cfea82db6a9601ad416aeffe560dd",
+    "libraries/3rdparty/lwip/src/netif/bridgeif.c": "863a91f68fad44e603ead49d9398b1ffe3137588324c762fcb332c0e47ba85c9",
+    "libraries/3rdparty/lwip/src/netif/bridgeif_fdb.c": "81b31722c2f9c89d4404d65f526700769a419be100ec4925c0e0d45a3b0a2273",
+    "libraries/3rdparty/lwip/src/netif/ethernet.c": "89ca8a0f91d68cee4993f86834016dc63f96ee8464eca8ea39003379c3df4bd0",
+    "libraries/3rdparty/lwip/src/netif/lowpan6.c": "719d2702e5d9d5442c6cdf5e781402eaa51872f0d48cd929cb5593c0abfcd511",
+    "libraries/3rdparty/lwip/src/netif/lowpan6_ble.c": "60b6612673e2db679c2d9b8a3e2160793c43dcb6cc9d3aaa0512581e22641a41",
+    "libraries/3rdparty/lwip/src/netif/lowpan6_common.c": "e40c7e4e00bfbbc39d5ca811bc54c1f8085217e3cb73e1467566fdcd769506e8",
+    "libraries/3rdparty/lwip/src/netif/ppp/PPPD_FOLLOWUP": "d4e0485a2936de3201dca8dc10068534fff399f8eadbd31684f36babc4b094b7",
+    "libraries/3rdparty/lwip/src/netif/ppp/auth.c": "fe2afed36bdba441463e4e5211395614e9d7685eb1760d5d84137baf58a42dc7",
+    "libraries/3rdparty/lwip/src/netif/ppp/ccp.c": "88165e63b1a7b6c56f4e952544a2375c6033ac4c2e0ec4779d145322d951ee94",
+    "libraries/3rdparty/lwip/src/netif/ppp/chap-md5.c": "9f099cddf6fa7931b962fda6dc1d1df5eecf8c94881eda29a63d1abafe317ec2",
+    "libraries/3rdparty/lwip/src/netif/ppp/chap-new.c": "658070df33b3242b150efce6059a9998c15f5f9192ae06b4cd5e7cffa55384a8",
+    "libraries/3rdparty/lwip/src/netif/ppp/chap_ms.c": "d3940e2add91c8a721b32f1e04bbc88add012d7146dda03744608f31ba6666ec",
+    "libraries/3rdparty/lwip/src/netif/ppp/demand.c": "b07dc6e971fffe70cd73f4ff6733655989e34dbee3fc6c2dfa164fadb6578975",
+    "libraries/3rdparty/lwip/src/netif/ppp/eap.c": "74d26511e05f8b39b4b5fa04722da2bb620e661ec630a5c8d7cc433b5bef702a",
+    "libraries/3rdparty/lwip/src/netif/ppp/ecp.c": "b6736696754a289ea5464f7386d05790365b873c0ed0123692bebc4ebb18e6eb",
+    "libraries/3rdparty/lwip/src/netif/ppp/eui64.c": "531be9bfa9c33e0abc4452b976ca4ab60f8f0ecc92d9af91121551250810cd4b",
+    "libraries/3rdparty/lwip/src/netif/ppp/fsm.c": "fe71b4b142a07c13ef69ff3e344ee3508b44c0471a62c47ec6ec585f250fc940",
+    "libraries/3rdparty/lwip/src/netif/ppp/ipcp.c": "9ea7ec074416030a39589392d62adc451ab2c78c61c506cec7674436f085fa90",
+    "libraries/3rdparty/lwip/src/netif/ppp/ipv6cp.c": "707b3687113f9e8fdf4230a1a750be60aa05deb081e0ece81317cd49b718831f",
+    "libraries/3rdparty/lwip/src/netif/ppp/lcp.c": "dc39acf562d7df70fb1eac8d7f8218dfb9d592498638325e9fcd4d206f97eb06",
+    "libraries/3rdparty/lwip/src/netif/ppp/magic.c": "aad196f6945d3b80b158b5011d4eb216a3e1766b73abcd9c19728bb8b8e3e3bb",
+    "libraries/3rdparty/lwip/src/netif/ppp/mppe.c": "f209f08e59f0e9ed5d4b736a7534e6c0df726b2d14cac07dee311017fa2a0a41",
+    "libraries/3rdparty/lwip/src/netif/ppp/multilink.c": "78920d813d0b638e287e5f15527886cfd53d5ea9a61cb6b325b6f8b3841e4bc5",
+    "libraries/3rdparty/lwip/src/netif/ppp/polarssl/README": "242dd0f7c45dd7fafc37e2caa4b1e0609e1cd9a61512d7772d58c41f7a7e7c95",
+    "libraries/3rdparty/lwip/src/netif/ppp/polarssl/arc4.c": "7d844ec4f6e88a788e17419d4525a07611851fe793e0bb52c7e24a1db5d2d6df",
+    "libraries/3rdparty/lwip/src/netif/ppp/polarssl/des.c": "4b2c48659036ad89adb2d08a2b54dc30fba73759a6a5ce810e9c794f7b4aacf4",
+    "libraries/3rdparty/lwip/src/netif/ppp/polarssl/md4.c": "9110b56e9b926edf560933b76d1bb1ca7e9532134773ddcb04bbd57db646e209",
+    "libraries/3rdparty/lwip/src/netif/ppp/polarssl/md5.c": "9bd07f764f9104538474c69838de131538f0a500952b8b24f32b758e23d91b4d",
+    "libraries/3rdparty/lwip/src/netif/ppp/polarssl/sha1.c": "844114b4c45f689aaef64df2bf8b445e6dcea9c52bb4cb485c18d0fb68e04d5b",
+    "libraries/3rdparty/lwip/src/netif/ppp/ppp.c": "c585c38d73eb2a2c27905acbc553acfad2d267e95e921f34295d2c344da677f4",
+    "libraries/3rdparty/lwip/src/netif/ppp/pppapi.c": "269bade48fe467119d59b3c33f8f42423c1b162d9e4cdb4c4da36bd87bcbd246",
+    "libraries/3rdparty/lwip/src/netif/ppp/pppcrypt.c": "02b12e7626078be9591237fe84ae000514a2cfd6f0653c890b7b75ce20cada8b",
+    "libraries/3rdparty/lwip/src/netif/ppp/pppoe.c": "55a2cc44c3b6643738b7193b43efce51e9865307948402fcf1fdc53b2c6df840",
+    "libraries/3rdparty/lwip/src/netif/ppp/pppol2tp.c": "18e83285eedf633c840db6a55077ce2cc902f19ab143c323c659c85ad25b8695",
+    "libraries/3rdparty/lwip/src/netif/ppp/pppos.c": "aff653829d77edb3e2ee197f1e4b3ff5e392e2f8e81a09a366576ab77a627e0d",
+    "libraries/3rdparty/lwip/src/netif/ppp/upap.c": "6944042740a916f6375d57437803e65839efbc901ebbb6cddc42c0a22c1eb33e",
+    "libraries/3rdparty/lwip/src/netif/ppp/utils.c": "fbc12cf311073c72d872ad5b382133c69144100b720c222e5331031ab30b6cec",
+    "libraries/3rdparty/lwip/src/netif/ppp/vj.c": "f70c1ac07ddaacf59f6b7ad28b1b657d645c5357ad8c4a7c449157d186fabefa",
+    "libraries/3rdparty/lwip/src/netif/slipif.c": "fbfcd26a9ea8a15d8621bd56f39ca0e85f04a070ad70887fd94d48d92bdcd69c",
+    "libraries/3rdparty/lwip/src/netif/zepif.c": "374cbd2d942ed680a66bf6f36080ba2e7313bcd037a3380d6a7a53dfa3d75099",
+    "libraries/3rdparty/lwip/test/fuzz/Makefile": "0276ff5837ca4fe0178786ff2b1e1ec1c1ded76116c1800be97102c55780b3e2",
+    "libraries/3rdparty/lwip/test/fuzz/README": "e0aa244211046d73ed11c7150a8429b020f7ca958f4f45e61bdeb41c27663d2c",
+    "libraries/3rdparty/lwip/test/fuzz/config.h": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
+    "libraries/3rdparty/lwip/test/fuzz/fuzz.c": "743d5ae304d1fa2f1e93fc858e2f97c8e822c266a236cc104b9dbb567fe1c98b",
+    "libraries/3rdparty/lwip/test/fuzz/inputs/arp/arp_req.bin": "90136462593149d9a7367a3ff8224baed060c562464aed70fd73a3a2eb56e054",
+    "libraries/3rdparty/lwip/test/fuzz/inputs/icmp/icmp_ping.bin": "8b136902714d3318066a465c6bbb659fb53290ffde7b4e44ce91cb51f8457cf3",
+    "libraries/3rdparty/lwip/test/fuzz/inputs/ipv6/neighbor_solicitation.bin": "2c4c8e93785f654e678a9309d7f8f142df493b5d923fc1d9770da99143e7166f",
+    "libraries/3rdparty/lwip/test/fuzz/inputs/ipv6/router_adv.bin": "efe0fa3a120d28ef1f8242fbf6e32722f072922cdf323268c7563c6f553192f1",
+    "libraries/3rdparty/lwip/test/fuzz/inputs/tcp/tcp_syn.bin": "f45051b6f9215e7c539982b1f3ada384c5d87da7f98aabc891c4aa069cc8fc73",
+    "libraries/3rdparty/lwip/test/fuzz/inputs/udp/udp_port_5000.bin": "1f061bca04aed291a4cc2212f925804c59fa1f0a4057931ae1b909b5723e27d7",
+    "libraries/3rdparty/lwip/test/fuzz/lwipopts.h": "f172aa424517abfffe32d789948126d4af82c588e7528d3f81a118ba32f4e103",
+    "libraries/3rdparty/lwip/test/fuzz/output_to_pcap.sh": "3ada800dd24ae2cf4cb41f0065aca8a78c29c6ae21271129ad8fe8fcf7f9dd25",
+    "libraries/3rdparty/lwip/test/sockets/sockets_stresstest.c": "a4f9ef34fa16d6afc0055ea68aeb9224ca2d0702adac56ec3dc0523544e4cb0a",
+    "libraries/3rdparty/lwip/test/sockets/sockets_stresstest.h": "b0f0b91e41ad2f86fbb0c889d9d0d38d6a3bd258d2dd5e0a3c5ac8a1ab7ac024",
+    "libraries/3rdparty/lwip/test/unit/Filelists.cmake": "234fa077e6a1374b0299d6f04632c9da6331e9c301ed55e245fd23ec52576f80",
+    "libraries/3rdparty/lwip/test/unit/Filelists.mk": "161801b0b6cf9decd2b2715e8d52e4697c6e969bb2e0cc95020eb233817429d4",
+    "libraries/3rdparty/lwip/test/unit/api/test_sockets.c": "0b3a03edf9d87adf9d40989b7423b115cacb5f06d94dffe506e3fe79685a1b2f",
+    "libraries/3rdparty/lwip/test/unit/api/test_sockets.h": "a9d4ea42dfdd6b976481eb6924b07f296b07c664ddf001b279609c7ffdf4e753",
+    "libraries/3rdparty/lwip/test/unit/arch/sys_arch.c": "440b21be472adedb26dd09434b93cd6f97d9cf00e3be51bac681820a35d6f8f1",
+    "libraries/3rdparty/lwip/test/unit/arch/sys_arch.h": "ae91c6c925a0b714f807e4a15b83e967899dfbe26c2668ed10d0151f5a1d7f3a",
+    "libraries/3rdparty/lwip/test/unit/core/test_def.c": "9df928c75ce8055b16642f53435a8cbcde5821916a3012e66caab98f305b9ebd",
+    "libraries/3rdparty/lwip/test/unit/core/test_def.h": "60e5dd455f893eaa2365fd2c5ad01d7adfcbd6ae4459a975a9abcb1e54746db4",
+    "libraries/3rdparty/lwip/test/unit/core/test_mem.c": "6f3e9d6a5c2e79b87d49bf17b068ce9f9965adb17be74355e25ac843b5f0ca1d",
+    "libraries/3rdparty/lwip/test/unit/core/test_mem.h": "54e2e3a94257fdfdbb31dbd686aff96032976894f9002188c3817f14d2ca1d00",
+    "libraries/3rdparty/lwip/test/unit/core/test_netif.c": "034ce07a28143aa81f6472f5ef8b22bab2d1dc3b358c8b831104a67ac1306593",
+    "libraries/3rdparty/lwip/test/unit/core/test_netif.h": "66ea5e6b4b2d405fa9492f044eb84e5043c399919b8b6b06d712e7ef5750e791",
+    "libraries/3rdparty/lwip/test/unit/core/test_pbuf.c": "7b3da0e82a0b44414c30e65a5c976ae58f57cbb01c7c7011fe1af3298e7543d9",
+    "libraries/3rdparty/lwip/test/unit/core/test_pbuf.h": "5eb3d4655112e690f0f1ccf1f7e7dcdde85a87d28fc903a1d89c8df14e738e73",
+    "libraries/3rdparty/lwip/test/unit/core/test_timers.c": "ab9cb9ebb9c1fbe4970a11453dfa1f29bd5fd90dc93b8561135713eff9394424",
+    "libraries/3rdparty/lwip/test/unit/core/test_timers.h": "56be4e53bb381b3fa2b9a28c57bbdfcdec04de3b441636b6688345198a42d48c",
+    "libraries/3rdparty/lwip/test/unit/dhcp/test_dhcp.c": "afa1ed287f81dc89a41615b9453914e3d9e51b78877c8e6a708a946d0f01d4a8",
+    "libraries/3rdparty/lwip/test/unit/dhcp/test_dhcp.h": "8a2dac3d647bb143830666306cd87761c32f2ff033e11a58faff86a8e9a09a41",
+    "libraries/3rdparty/lwip/test/unit/etharp/test_etharp.c": "f4093af5efdb7b80076346dedd9b5904a9fab9ac86f9bc1d1b06035a120858fd",
+    "libraries/3rdparty/lwip/test/unit/etharp/test_etharp.h": "b146eedd105d24070de6c9c42520120922cec7ed31e1b7c93305b471b9f9dcd8",
+    "libraries/3rdparty/lwip/test/unit/ip4/test_ip4.c": "d7c96c9413aaccdff3e31974a866fca7abb8db3fafa41b03e074bcf1f03feaac",
+    "libraries/3rdparty/lwip/test/unit/ip4/test_ip4.h": "7638fa112bc0b0557aa87f5877b86d60c08a6675e456c834d67a579e9d8b372a",
+    "libraries/3rdparty/lwip/test/unit/ip6/test_ip6.c": "7f8add480419442841f8de72abe1346a2810d7e13cb0fea777b48154e3ccb6f9",
+    "libraries/3rdparty/lwip/test/unit/ip6/test_ip6.h": "1f4d745b8767e8f376e7b54a5b732e8ab4a19c1327b9484f25989159eb0a7320",
+    "libraries/3rdparty/lwip/test/unit/lwip_check.h": "9891cac2ce125e4e9e9459fcb9508bb58c6d0bed1caefabb188745230b9d4dd6",
+    "libraries/3rdparty/lwip/test/unit/lwip_unittests.c": "4417f53618c062464c8db661517bdbe45fce1fa398816c25630916abab1fd881",
+    "libraries/3rdparty/lwip/test/unit/lwipopts.h": "6cdbc0a736407cc5af041f25b4e246675b423b1ef2e9b7f0322ae31802c671f8",
+    "libraries/3rdparty/lwip/test/unit/mdns/test_mdns.c": "b186526ac9600dc577064e785c37fe5754d2610428ff669abb09c3c9dc590893",
+    "libraries/3rdparty/lwip/test/unit/mdns/test_mdns.h": "4226b64bfb4d48147cfa72df6dde6be9bd4a8e5e6a8e9aac8969840bdb9f87a9",
+    "libraries/3rdparty/lwip/test/unit/mqtt/test_mqtt.c": "491b11cfe15ec6a201d335cb0c07e70775793adcfb8d5966e1272dce389453ab",
+    "libraries/3rdparty/lwip/test/unit/mqtt/test_mqtt.h": "30cfa02308c9535517042384f8d15a0024760fd953d232e6562c99c8270fde92",
+    "libraries/3rdparty/lwip/test/unit/tcp/tcp_helper.c": "9be8d720fe0f533c9804f4ec75a79209ac9d4927e4c7c294066c3902a13d5285",
+    "libraries/3rdparty/lwip/test/unit/tcp/tcp_helper.h": "11f779ec9985e65d1048d4dfed44e3ea322aab50d720ac428be4d515e2850f52",
+    "libraries/3rdparty/lwip/test/unit/tcp/test_tcp.c": "69a33f078efe275cbe3b5ba2dac233a46929168df423ad75d81fdfbccf931a7f",
+    "libraries/3rdparty/lwip/test/unit/tcp/test_tcp.h": "831ecc56ea4f5d6a4af9ae1e38fececcce696a51557c4a88618ca935fdac9690",
+    "libraries/3rdparty/lwip/test/unit/tcp/test_tcp_oos.c": "eed061425068f48f097378a46a36e1a10a9371e0bc0dba9de3880b15803e82c4",
+    "libraries/3rdparty/lwip/test/unit/tcp/test_tcp_oos.h": "219807f25b0116f12b3c852c8ad5d00c52b2920a220555a3388880b3a20220fa",
+    "libraries/3rdparty/lwip/test/unit/udp/test_udp.c": "af076e5bf32919e3c0c58eebf60abaa045cbef29ac1f3008f41e509b9b0e381b",
+    "libraries/3rdparty/lwip/test/unit/udp/test_udp.h": "6d311b4a541280aa4573fd0483556d9f3b05c20907a0b297d1e3a6de1f945563",
+    "libraries/3rdparty/mbedtls/LICENSE": "d4412d97a34e5dd3263394d02f14be1c4a99794ef66669a3a8b4b87dce31aa9f",
+    "libraries/3rdparty/mbedtls/include/mbedtls/aes.h": "4840d70d70d99fb74d00dc6fe54b8f3ffbed69cf85f47db858e17096b0e40815",
+    "libraries/3rdparty/mbedtls/include/mbedtls/aesni.h": "66cf7fe9147ead60856f38baefc9cb6323f712ec1e34ec0f47ac288e31d055c5",
+    "libraries/3rdparty/mbedtls/include/mbedtls/arc4.h": "df65eb92a6f22606a50aa06018622c2299d01ed5dc6bcab9974051c7e8d29dac",
+    "libraries/3rdparty/mbedtls/include/mbedtls/asn1.h": "1de3e2901d12396764d8edb984893eaf0f573cfe47f8b50beae3cf39a5b2654b",
+    "libraries/3rdparty/mbedtls/include/mbedtls/asn1write.h": "2fc0061a09824e655f853d1cfe3f2b680d90e6a40245278e9f7cb1d55696ee4e",
+    "libraries/3rdparty/mbedtls/include/mbedtls/base64.h": "5be8b6a6a7c7d78d27e8f12e1457194fad63d3374aad67000d72df5fcfd23b43",
+    "libraries/3rdparty/mbedtls/include/mbedtls/bignum.h": "18f82e75df7adde18f37420e1b4d334e55cfcc50a87d9bd7e05cb85c407ff4e6",
+    "libraries/3rdparty/mbedtls/include/mbedtls/blowfish.h": "cfb03cf458a1b1be6b7fdf3fb471dd9f9d608712c456e27c9672a915a82c2728",
+    "libraries/3rdparty/mbedtls/include/mbedtls/bn_mul.h": "c0c32fe95442f1a1ae2636e889059f5c9db49162c159facbcf742d09d4e3dcee",
+    "libraries/3rdparty/mbedtls/include/mbedtls/camellia.h": "ea83240778e0bcb99beefed2f73237167eaae76b0994f8127a8bee092707ddd7",
+    "libraries/3rdparty/mbedtls/include/mbedtls/ccm.h": "6d79f0ebb89278b830fed1237a0877c4c2226713094c4735a97735275e9c0d83",
+    "libraries/3rdparty/mbedtls/include/mbedtls/certs.h": "bfd4c30c295b2b503390c856bd3d0cccda0e9daf2f7dc1507721f2fff41f2510",
+    "libraries/3rdparty/mbedtls/include/mbedtls/check_config.h": "68ab1859bfcff02186a5714efc3b2ea2b00f0cda762cdba56f6dc757c38eabe4",
+    "libraries/3rdparty/mbedtls/include/mbedtls/cipher.h": "a81b31c6cfacd6299d2359c377dbbc795659708b20d08334ea2db589cc6133a6",
+    "libraries/3rdparty/mbedtls/include/mbedtls/cipher_internal.h": "aaa7c0786798a86474f719d073a940653e61734f0d136a4603321bf41290b0d8",
+    "libraries/3rdparty/mbedtls/include/mbedtls/cmac.h": "5036276230e6aa35006baeb9a4436f12979fa24a183e17466ea68f41f0aa2f4f",
+    "libraries/3rdparty/mbedtls/include/mbedtls/compat-1.3.h": "8ea7c265dfd891bb30b5b3ac37b320504a1cf4b81c143e0a1e24b87b2056b867",
+    "libraries/3rdparty/mbedtls/include/mbedtls/config.h": "144b7fe287b02a8ae4a01b3b247cdcf1269c832acd5c679bd6bdbe28ff67f2a5",
+    "libraries/3rdparty/mbedtls/include/mbedtls/ctr_drbg.h": "b3a74263fd3ef46f7c74986c7ba4929a3f196d075d694069590fdd819507cd5e",
+    "libraries/3rdparty/mbedtls/include/mbedtls/debug.h": "6b2cfab54ff48fbe39127efec01ac0b75820b11ab96c8341675fe2007659522c",
+    "libraries/3rdparty/mbedtls/include/mbedtls/des.h": "7eab904020da56efbccdedfac2f5e46ab6a6570092f15b9d6e72bebf7bdfafda",
+    "libraries/3rdparty/mbedtls/include/mbedtls/dhm.h": "e90ce742801ddd9741d45287386cb75221e2e6c16348b2cd8708176bc1819f8d",
+    "libraries/3rdparty/mbedtls/include/mbedtls/ecdh.h": "5e1dcc2112819ece940bad3649620618f82eee4edc99a18d2014a4582db9350f",
+    "libraries/3rdparty/mbedtls/include/mbedtls/ecdsa.h": "83dc93236244f575f781bc23cef8a04eb1376c339ebbb5669204267677438a53",
+    "libraries/3rdparty/mbedtls/include/mbedtls/ecjpake.h": "5b704d68507d226d6ff61374d7abcd5a3190e027a31f135fdbc11d266e794f01",
+    "libraries/3rdparty/mbedtls/include/mbedtls/ecp.h": "972b3c8f5d50e752160a6529607028efe87563add390668f5408109862ce1d7d",
+    "libraries/3rdparty/mbedtls/include/mbedtls/ecp_internal.h": "c9405a97aa2b214dc180492b94420b0828a00be8f11d5d856e5bbd00d6e3c7d2",
+    "libraries/3rdparty/mbedtls/include/mbedtls/entropy.h": "377d60374c275105b8c33362b26c5405eabe868f5e14ad0c3596b2ed7b023e69",
+    "libraries/3rdparty/mbedtls/include/mbedtls/entropy_poll.h": "e1b77dd92b244e09064923aae8f31fdd334b158a3c15b0df5bdcabe3a9fce3d9",
+    "libraries/3rdparty/mbedtls/include/mbedtls/error.h": "23f71377a17b8c1ab653d983c1061a01dda9d5ddf988a7f61f2ee92fb3a89598",
+    "libraries/3rdparty/mbedtls/include/mbedtls/gcm.h": "d5b916153e68a02800e93282c4ae25ee3cfe7cfb3195e509a4cae909b946b40a",
+    "libraries/3rdparty/mbedtls/include/mbedtls/havege.h": "8b74f6c754de5954fc1707c6883e9f9806f4588e4dd7ef8cdbde7965a13def6f",
+    "libraries/3rdparty/mbedtls/include/mbedtls/hmac_drbg.h": "99dd7c16aa16571a1854e1023c05970b5d1f4d35f678951723b10f12c8913a77",
+    "libraries/3rdparty/mbedtls/include/mbedtls/md.h": "013d571eda06d5892094a2f343c2e6ec1328dcbe56a4027b51b7aa4f2f672457",
+    "libraries/3rdparty/mbedtls/include/mbedtls/md2.h": "cbbb0ed6502a5d3ffd3ffd5bd59259b2ac01615685e1991b512e05d8c11d1279",
+    "libraries/3rdparty/mbedtls/include/mbedtls/md4.h": "8631594d2ba4459a01cbdb1c5214e519c1c80b2986a3d6cb2e3fbcac453564c4",
+    "libraries/3rdparty/mbedtls/include/mbedtls/md5.h": "a67974f33d62e23d49f2a0b0d82d2de538149606e16050f686c25baf9553ba31",
+    "libraries/3rdparty/mbedtls/include/mbedtls/md_internal.h": "40f2ad9b420c61c093ee975ad5585703c9f077a194847facf58ab125fff0c889",
+    "libraries/3rdparty/mbedtls/include/mbedtls/memory_buffer_alloc.h": "cf6ec674bcb187bcdeb8e66efeeae783634ccf9663d6362224cc07341c788c1c",
+    "libraries/3rdparty/mbedtls/include/mbedtls/net.h": "11af1502a0d6936a3d6987324369442881036d49f6a14a836b84f302f626b700",
+    "libraries/3rdparty/mbedtls/include/mbedtls/net_sockets.h": "1876b5a4328f662e2a65a1f02f8fb6199628360e5fdd4f5e8bdec902f3419872",
+    "libraries/3rdparty/mbedtls/include/mbedtls/oid.h": "25fbe809d3f5750f31e3e33691a8b09d58a2f970ca80c8f5a25c266344dfc429",
+    "libraries/3rdparty/mbedtls/include/mbedtls/padlock.h": "bdd6741d09e7f6ca3d61acb025c9be36865e6f4cf1ebe34225490b7b4f33dbb8",
+    "libraries/3rdparty/mbedtls/include/mbedtls/pem.h": "1095e578f01f690b5afb9f0fe38d769355b1a05c00e4c2db2d476d44dc3b6d58",
+    "libraries/3rdparty/mbedtls/include/mbedtls/pk.h": "5781003304166d2765b5853a18fbc87410b17da2ee342517ac476d38788b3af0",
+    "libraries/3rdparty/mbedtls/include/mbedtls/pk_internal.h": "4a3be081a1a59ee9987bc869b6b262f13148ad8b9da96ade76fa07d223b72506",
+    "libraries/3rdparty/mbedtls/include/mbedtls/pkcs12.h": "98085ce58f75dced06f39029ce6427dfd82702d5d544876d0e8ed6ae8311b09c",
+    "libraries/3rdparty/mbedtls/include/mbedtls/pkcs5.h": "da15460b74d4203688399722238046afd46a4aa12d69c4ee2dba4c4c81838cd8",
+    "libraries/3rdparty/mbedtls/include/mbedtls/platform.h": "535631375b86ebe52d60f7162b2a8bbe75bfd8ce377d8a8c6558bd641e920c2f",
+    "libraries/3rdparty/mbedtls/include/mbedtls/platform_time.h": "551d9aa3782cbe2142ba11f483f39c82596d1f14a941d181345d66bd9f1c10b2",
+    "libraries/3rdparty/mbedtls/include/mbedtls/platform_util.h": "66ab4e3c708d30d70aac03e70bcecc88b01491e6f1bc988eca6c615a42f12fcd",
+    "libraries/3rdparty/mbedtls/include/mbedtls/ripemd160.h": "ecba783ae6034f57018d7f541c2fb7cd47621ce29f14749df8715a66a41d86f4",
+    "libraries/3rdparty/mbedtls/include/mbedtls/rsa.h": "26dfc2e091328d598afbc0ec23f82f57fcf4bc25e5a8dcb6424dce44547fb7b0",
+    "libraries/3rdparty/mbedtls/include/mbedtls/rsa_internal.h": "2b2f8229f76f319ee9105d03bc5c9ba9da596eb57e374fb83f7cc932f230f087",
+    "libraries/3rdparty/mbedtls/include/mbedtls/sha1.h": "23e74b0ad7d0cd728f5300f10bf7c5a0a1f4ae332d99134a913d9d4ff6e27305",
+    "libraries/3rdparty/mbedtls/include/mbedtls/sha256.h": "af95f3dc439cd85f4aa4fbf0a1aed45b39b28d0a31f03f98e5949c5980518139",
+    "libraries/3rdparty/mbedtls/include/mbedtls/sha512.h": "2e3a79a2fcd4ea2d5ad4b2854a0e902a20af21f1e6cb987e0152ea1fb90abd92",
+    "libraries/3rdparty/mbedtls/include/mbedtls/ssl.h": "1dbfd979d3f3045e4da5894ebd1ba4ba27427a7e7221b399bb19706eecb91efa",
+    "libraries/3rdparty/mbedtls/include/mbedtls/ssl_cache.h": "1439f1aba35d65a8941540bdc1785a2f32776cd503115774ed806fbdf16d7fa7",
+    "libraries/3rdparty/mbedtls/include/mbedtls/ssl_ciphersuites.h": "1b0ef8df0a120e4e07c5b7ad015e48ec74c4c8ef1e1ec50779b90d2b1b5fbda4",
+    "libraries/3rdparty/mbedtls/include/mbedtls/ssl_cookie.h": "6a0f9043e653835995de5eb674e9372bfc313baefb00c1f7e8ac934a995e22ce",
+    "libraries/3rdparty/mbedtls/include/mbedtls/ssl_internal.h": "5c840bb982a4767f8ab0abc4aba883cd5701cda60ea2a8182dc23d0969f3f1c1",
+    "libraries/3rdparty/mbedtls/include/mbedtls/ssl_ticket.h": "ad6c79dec8ef889bf26945e502ed8cc53ed1e28fa0029c36cef74f859f038dca",
+    "libraries/3rdparty/mbedtls/include/mbedtls/threading.h": "696ea6ca05c60daf4c55403be67c4f6c5f3263eeda9033f72b76a99194f88a99",
+    "libraries/3rdparty/mbedtls/include/mbedtls/timing.h": "64c2b3b1d9c788530eea5377ba1aa4ecb795623be51257c036145249097643ba",
+    "libraries/3rdparty/mbedtls/include/mbedtls/version.h": "66830fee57673629b3c4d8a8682e7092a25b3f60422d5f72e0654f3fe0c304ac",
+    "libraries/3rdparty/mbedtls/include/mbedtls/x509.h": "eec17239a457372216e213bb1cb19f8b12bf08a053c139f72a3e8836c2c30311",
+    "libraries/3rdparty/mbedtls/include/mbedtls/x509_crl.h": "c218c7b3b9a183ad8452eccc6c4cf565179a92471faa0907afe051f2e8667e57",
+    "libraries/3rdparty/mbedtls/include/mbedtls/x509_crt.h": "fe951251afe6f73eda48ddbc8d78241c7d2edde5daaf470b8334edaba301d6c1",
+    "libraries/3rdparty/mbedtls/include/mbedtls/x509_csr.h": "90f566a0e2afc1d4973e71bffad5ebacfb3d2dce6b6080d620b9d3a406b13634",
+    "libraries/3rdparty/mbedtls/include/mbedtls/xtea.h": "55661af82cb9f7584d6dafc8286d1b109eb00adc07b5b1e98dfa5f708e6fe19a",
+    "libraries/3rdparty/mbedtls/library/aes.c": "d7fe9241614d45530ac272e5cc64402156d7e4273e772643abc9ac3fc4f57783",
+    "libraries/3rdparty/mbedtls/library/aesni.c": "ac233a03ee4debff36c6a59d29500a21f7f21175e24a95ec6aaa52777a0f6fe5",
+    "libraries/3rdparty/mbedtls/library/arc4.c": "c235cbe0680663d9b1d7fc2348fed6305297ad0ee33bddb571f00d4bd2c5c1c5",
+    "libraries/3rdparty/mbedtls/library/asn1parse.c": "518b1da2068c92a27609b0e93eafca43ffd54f4d073451a2d2067146491fab2e",
+    "libraries/3rdparty/mbedtls/library/asn1write.c": "2895b46daa16827e5210908d16004f70935ba83df5aa9ba80d89862930426410",
+    "libraries/3rdparty/mbedtls/library/base64.c": "5bcfc75aae4849eac312476cbad90b2f65d1b6a27d67e25ee669214ed8eccfe1",
+    "libraries/3rdparty/mbedtls/library/bignum.c": "0df504815a5d9d06e98e5db8ac2c5dec56a962f3fde26fb45380694a046cb3e7",
+    "libraries/3rdparty/mbedtls/library/blowfish.c": "38d876ab2cfe51d2612d4fa06bea4c1f599b2594ca52a4b2438131e71a030c56",
+    "libraries/3rdparty/mbedtls/library/camellia.c": "42517d76e1457641937c5cf63ae82e557463ddf1a325eb33462f92eb25c6f37d",
+    "libraries/3rdparty/mbedtls/library/ccm.c": "897e5833ef14277f4135026bb20dc8a80e6a4eb49ebaaaa7ac3f1acc321724bd",
+    "libraries/3rdparty/mbedtls/library/certs.c": "1b5d302088832002318f5f6af3ab07dd72ad0599395b6c53b12cb12964654451",
+    "libraries/3rdparty/mbedtls/library/cipher.c": "c002534c4b103d21b05bdb11f82f16d2b77efd7f51fb94b5a2050ecacb56e647",
+    "libraries/3rdparty/mbedtls/library/cipher_wrap.c": "262c0e973911e9c6b980163efb1fa6e67f7ab59f2622c8dc7e74b027a0ea644a",
+    "libraries/3rdparty/mbedtls/library/cmac.c": "0657d31f2e648105f13e210d582d474f3049155e495857ec71ef2545d1e3f9cc",
+    "libraries/3rdparty/mbedtls/library/ctr_drbg.c": "69be14f4c7757352fba77d3ba16242d11a47ff872ab529986886740242b32c34",
+    "libraries/3rdparty/mbedtls/library/debug.c": "bba82c96c751bbb6ea0aff5abff39c00f78811fc4cc78fcfbcf46a1381cc6fbd",
+    "libraries/3rdparty/mbedtls/library/des.c": "1c2e16f4f93f41d139faff511b08d6064efb9d83b9bcaf71bfa5ed6a555f3686",
+    "libraries/3rdparty/mbedtls/library/dhm.c": "258a0d7572668f1aed5a431e1728986b073510876e13a2fa598c7b4b044a23da",
+    "libraries/3rdparty/mbedtls/library/ecdh.c": "dc31847040da6eecd4a379ad40d287fd285a667ba4fbed7b7fb42ec155241cd8",
+    "libraries/3rdparty/mbedtls/library/ecdsa.c": "64eed30fd2c864ec8aeee1b19a5cb9cdc090b9baaa4b01f9a69491043e0990d7",
+    "libraries/3rdparty/mbedtls/library/ecjpake.c": "38d81e934976a39b0d53e97966b4eb383f5415de71625f2fa7be8f0c9d9d164c",
+    "libraries/3rdparty/mbedtls/library/ecp.c": "6eeac94b03af0e99b95d8845cd9c18f03ca0d9445612f099796d85d0db85f8ab",
+    "libraries/3rdparty/mbedtls/library/ecp_curves.c": "64d5fded095233eefd3a9b7600c2a6bbbc84501344f6306e643857feceb0b46a",
+    "libraries/3rdparty/mbedtls/library/entropy.c": "190d381d604d65cc7a8db64903561fc5b08d4de51e5c063751e43e1e371d2a71",
+    "libraries/3rdparty/mbedtls/library/entropy_poll.c": "31ee1b1ff4b606c659d80d1bde9a41be0ba0bb6d269208ffcbc97fe14ed6f51f",
+    "libraries/3rdparty/mbedtls/library/error.c": "73b905a3a58ff80428c8bd36fd612090df12f14585c469ccbfafcf194ff1465b",
+    "libraries/3rdparty/mbedtls/library/gcm.c": "834bca591aa2737e4f1ccc72da4c2b58f7187f1cc8a0bfe34ee28a180c7967db",
+    "libraries/3rdparty/mbedtls/library/havege.c": "876de72ca12ff76d4cd2383f58f19f6066ec6cefbdc217f226e804a5dba4fa64",
+    "libraries/3rdparty/mbedtls/library/hmac_drbg.c": "8eae554686db22c4182302a3fd3947d0c52c9c16b3cc3a2d785ba0e97e55299c",
+    "libraries/3rdparty/mbedtls/library/md.c": "5b25ced71d96512eb150a58b6fd0ef73e3dcb976535f5c1dd29f2321d3894631",
+    "libraries/3rdparty/mbedtls/library/md2.c": "a918ed2d2b070481cc39c7bc1dc26c9c384f549fe4976c474ae99767ee44088b",
+    "libraries/3rdparty/mbedtls/library/md4.c": "1b064dfae3eea15abc9863d74afd75a949f3a8ec656c84fa88c4c264996517bb",
+    "libraries/3rdparty/mbedtls/library/md5.c": "5868dfdd79832f3f1f5944584f7b62e589d8d9dc3681f76be221e715ac63df4d",
+    "libraries/3rdparty/mbedtls/library/md_wrap.c": "08ef9f8bfa604f28d104f37cc99de7dba75eaf0994f08ae8f2e3b4160a88f571",
+    "libraries/3rdparty/mbedtls/library/memory_buffer_alloc.c": "a0d14b7395dacf6972aca9670dc1e136f2e54003b21b98b3219d25d04c332093",
+    "libraries/3rdparty/mbedtls/library/net_sockets.c": "8925cd9bd4bf46c5695a5fee6239ed6e87a48cec2bad5f14ed7b0bd23ba1d8b9",
+    "libraries/3rdparty/mbedtls/library/oid.c": "2128b76a3b28983419a118a21e6870f1cce4949ac68bb265ac54ca1aaccade13",
+    "libraries/3rdparty/mbedtls/library/padlock.c": "939466486a82f88213069b9fb3ae5c648c0d2e360d681e07ae96339b3aefb7fd",
+    "libraries/3rdparty/mbedtls/library/pem.c": "69df3ed689732f9fbba7873a74ccc3f7240cf1927d7b8a4bee6637415e5ef476",
+    "libraries/3rdparty/mbedtls/library/pk.c": "7a0e7fc17ba3b9a6050e130020fcd508caec03b60d18db671ff1040b91ecfaa0",
+    "libraries/3rdparty/mbedtls/library/pk_wrap.c": "6fb2d3fd433a3d69703647c5e4a2f0182c1c64b7c2e5b4d4a5d5a5d65fd87b83",
+    "libraries/3rdparty/mbedtls/library/pkcs12.c": "24a3969895c9109c913b60133c521fc35d757ce40405d37fbc71a4aec155ad18",
+    "libraries/3rdparty/mbedtls/library/pkcs5.c": "fa24de08d9667ff045c590879fc5c4ccbf4bd26c395eb2d3637fd185ac5636d3",
+    "libraries/3rdparty/mbedtls/library/pkparse.c": "e6b62789e95092d140f59b5fa6c38233f5da7861b327cf5ec40857a5dd4c91b5",
+    "libraries/3rdparty/mbedtls/library/pkwrite.c": "f108bfb213fd740b8531fce960dc9324ce061bc2d0765ddc9a3d3c699e9c6499",
+    "libraries/3rdparty/mbedtls/library/platform.c": "c16a7cf20f0d82f34af79a653e8ff644b19a1735bedbdd5e740fd43337a085a6",
+    "libraries/3rdparty/mbedtls/library/platform_util.c": "1d9bd1b2343871390e8c16f2f5e538d79cbb6c1ceb45deb4d9480fa2fffbf590",
+    "libraries/3rdparty/mbedtls/library/ripemd160.c": "8ab0d397ff51627c1cff9ad8de7a774327e09bf4ed6e81953bb198eac496df1c",
+    "libraries/3rdparty/mbedtls/library/rsa.c": "bd900bd6e436b94ddfac5f5932025da8a110c32e5c54093c75cf8f16ff5be17e",
+    "libraries/3rdparty/mbedtls/library/rsa_internal.c": "793f895c7e63b7cb15581aa6f35de50dfe268d2c2673eaa183d80c218a460fd7",
+    "libraries/3rdparty/mbedtls/library/sha1.c": "e8e24468c8ad614260091c3fcfec0ca6fc7c7bdb5c2554d1b97c897b5faf7888",
+    "libraries/3rdparty/mbedtls/library/sha256.c": "dc86f50b8b8c5541fafb8bdfe81fec0bc50f5b5ff11d424646543b06d2cc5e39",
+    "libraries/3rdparty/mbedtls/library/sha512.c": "da9004628b4ef4f89af824db206444e2da21fdca43d2f02e1de968c2e03cd7b1",
+    "libraries/3rdparty/mbedtls/library/ssl_cache.c": "f07b18ace4b0625e5c9a39bed28feb88de71e1a93b3dd37a7ab044bd917197f5",
+    "libraries/3rdparty/mbedtls/library/ssl_ciphersuites.c": "8c3ac196b7462e873f310eaa194c7a91fbea30d6bd30efe3c13669d00b7f1da6",
+    "libraries/3rdparty/mbedtls/library/ssl_cli.c": "1ed7a2cb50b4d783753bbea8a15fd997defb450b71fd3a42e2cee4e785889878",
+    "libraries/3rdparty/mbedtls/library/ssl_cookie.c": "5e30840620c1864ca2967b3438e129e5298a565fff08217d0f3899951abd1317",
+    "libraries/3rdparty/mbedtls/library/ssl_srv.c": "a16812cd7ebd080ebdfcd08e815c8a4a5473da7f07fe472437c7c6fdfcb3e026",
+    "libraries/3rdparty/mbedtls/library/ssl_ticket.c": "4a3caf780643fdaa7dab1513c55a2ffebc523e1ab462062b3803222f4efc9161",
+    "libraries/3rdparty/mbedtls/library/ssl_tls.c": "2a0b6d209b92e8c125998be58f522e7ba313ca30104edb0a4127c947b18b7ca6",
+    "libraries/3rdparty/mbedtls/library/threading.c": "f197bfd062adc6b6e11171f7bf2223df29e6c83dc37e9f2181f5173285a8c955",
+    "libraries/3rdparty/mbedtls/library/timing.c": "4e52e21127d310f3e282e032a399800f90fb8c08bda98acc91640612ee685fb6",
+    "libraries/3rdparty/mbedtls/library/version.c": "8a28d4a63334849cad218d20ef90f913a8c32da3e5d52b7f4378614451936316",
+    "libraries/3rdparty/mbedtls/library/version_features.c": "e1d8a35b22b66ea14a77d0fbdaf081fe3aa3f9dfe2122a81200ffb65bacba42c",
+    "libraries/3rdparty/mbedtls/library/x509.c": "4ffecf162fdd16d01b7152129776618766395008bb71cc52ce7130d460d7ccb2",
+    "libraries/3rdparty/mbedtls/library/x509_create.c": "ac48ac042b97be42d7068c137cdc4b2038a8d5a08f61ee9810f2ad7ecc15ed5f",
+    "libraries/3rdparty/mbedtls/library/x509_crl.c": "2b3f46280e59f9f11bba00e80a6b4e48960e686f9980f15d5c6449269e2645ad",
+    "libraries/3rdparty/mbedtls/library/x509_crt.c": "4d4b8313f7a9304e017d56e962eb121e2983d683f9004b0f60cef2b68ac4803b",
+    "libraries/3rdparty/mbedtls/library/x509_csr.c": "c976aaeded3df5235f5e28cc69ff971cb23d0bb49e74036cb64bcd8c389084ea",
+    "libraries/3rdparty/mbedtls/library/x509write_crt.c": "0e83aef8d18e8ce87914559d5cc2ed456b5e7bb8839065f8c4bbf526e479ad9e",
+    "libraries/3rdparty/mbedtls/library/x509write_csr.c": "5f2aba65549a08bcf67dee1d514e9d02c23ae7d7e92dd3f3d1cdc4ecd72d0834",
+    "libraries/3rdparty/mbedtls/library/xtea.c": "dbc644b0e314747fda550617f30fe3fbc676e5f75768a4266261d42b1a75bdd1",
+    "libraries/3rdparty/mbedtls/utils/mbedtls_utils.c": "835eab57efb4c66229f7969121846b31b7a16b8e7e27bddbe733a425815bcf1e",
+    "libraries/3rdparty/pkcs11/pkcs11.h": "973a7d8bdd801747022f0cc1fd22a48ef9df7f5fa1283d8f746d811652c0fa12",
+    "libraries/3rdparty/pkcs11/pkcs11f.h": "79fd5dffc79a5f9d3c42ea3ac2eee8c7cc702559969d63db7e35ab743d021798",
+    "libraries/3rdparty/pkcs11/pkcs11t.h": "21c9595f21a363b0dd247eb5af97dec441c81854eda177a7edf18a358cb383cb",
+    "libraries/3rdparty/tinycbor/LICENSE": "3c6ba0b5bfa7830505301ffb336a17b0748e0d61c4d34216e9dc98f10e40395e",
+    "libraries/3rdparty/tinycbor/README.md": "310ef2bf6c1a146f0725efa267831bf8e0b11a1f0e67e98c9dee7ba37180284b",
+    "libraries/3rdparty/tinycbor/cbor.h": "0fb03658e551dda420c7bfc54cc029c1dea0c9cd906aa23c79a112934f3c5a53",
+    "libraries/3rdparty/tinycbor/cborencoder.c": "bb6539de51904920d2dbf9fc46881a7c7f1f1b27dbf0031ce4873fcefa1627ac",
+    "libraries/3rdparty/tinycbor/cborencoder_close_container_checked.c": "fee715bd5a28e19d7451ef973bd20d08fff8d82a5e59efe6aa89cc738368bf32",
+    "libraries/3rdparty/tinycbor/cborerrorstrings.c": "d2c611466a5702fae92c459844bf9495d90a2fffc1efcd847f188a06feded5b6",
+    "libraries/3rdparty/tinycbor/cborinternal_p.h": "5a58680dc3e1b58220f9e76e18b446caec57f1af75c765116700d60ec105c055",
+    "libraries/3rdparty/tinycbor/cborparser.c": "1decbbb7145a322de9dffd82e7319ac18b84fd0a4c480b8b36f1459aacdb1693",
+    "libraries/3rdparty/tinycbor/cborparser_dup_string.c": "95cbbfe5d49ad5afc8684df17cee7c0b016118da659be49a0230c2a7938cae5a",
+    "libraries/3rdparty/tinycbor/cborpretty.c": "04663de61f37618a25d7509a518e3da4764353b666aab42148181ac83af07406",
+    "libraries/3rdparty/tinycbor/cborpretty_stdio.c": "d5a3178cee64625fa418f36970a666e8eee83e92c395acbd2b89220db93de6fd",
+    "libraries/3rdparty/tinycbor/cborvalidation.c": "53aea74b993f99365260fe25f51071c1b4be95c987a47518e3d26dd56c23b531",
+    "libraries/3rdparty/tinycbor/compilersupport_p.h": "3401cb759b3783bdcf4c8566e99010b364d7348a3f267b15f5f635f09960bab6",
+    "libraries/3rdparty/tinycbor/tinycbor-version.h": "77fc28859af9c24b7dc37aee0a73a07c0c90e7500b73e51c2d4a76c709ad5978",
+    "libraries/3rdparty/tinycbor/utf8_p.h": "b0efa3c4b2b04c4db2809989a86206f9277de5a79ade4838df9bbfb3e17db4bb",
+    "libraries/3rdparty/tinycrypt/AUTHORS": "478b050e66ce46564c1d081590edc7f3db7fcf1894430d20a9b6b550029d4ab8",
+    "libraries/3rdparty/tinycrypt/LICENSE": "b2d451fcba3577b118741d733d37ebd15bdd0b6b381e554a7345bdbfa3743108",
+    "libraries/3rdparty/tinycrypt/Makefile": "7c3c3e1913882fbc6e9ef5c567505704fbe7f12cf55a842eca5b19df8c868ef5",
+    "libraries/3rdparty/tinycrypt/README": "d795d171058c36cdb8ce718fd615846f345815465efe011aa0b215df86e53a38",
+    "libraries/3rdparty/tinycrypt/VERSION": "283571d2642fc7b3befd294f45d53b896a1d54d34c86235b13151192b380606a",
+    "libraries/3rdparty/tinycrypt/asn1/asn1.h": "89499b4d992a8a347ac4805fe01af0c5977ce6237ccb628589b6f885b2e1423a",
+    "libraries/3rdparty/tinycrypt/asn1/asn1parse.c": "fa021fe9c65c28090e841387b71f59484f62abebf5cafceb0fb555c0dcd572da",
+    "libraries/3rdparty/tinycrypt/config.mk": "ce91366509d78906308eb30de2f85bfb894b48146ea01d644c734e1a8ca346d1",
+    "libraries/3rdparty/tinycrypt/documentation/tinycrypt.rst": "8d5716676abf2f0036d58ee7691da44953d8efe97020ed4a5edd4afbea5c054d",
+    "libraries/3rdparty/tinycrypt/lib/Makefile": "b6bde2680a639927714b1db0cab6c038101d0432d45a08fa6da157aaeff21ec1",
+    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/aes.h": "bd9e1ea99ec9717aa68f8c2b9b8844c11a7557017dde19c0ea7ca9599ce28c8e",
+    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/cbc_mode.h": "9d04a528294793b47541cb70fe4e83f5c0a70b4c550fb49bce90a22dc863a191",
+    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ccm_mode.h": "79347427c642f708ae10f24784236a5e5a328f807b100a5b0fe90db70bc6432e",
+    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/cmac_mode.h": "6f9727d78078f9ae016f18b2ec420f3e6f8afc60e0ea5fa0fbc8e8a646e8f53d",
+    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/constants.h": "89c80a6d5f468ebde82fb525a6dd72685cb27720fd385da6e3f3f2a19fba48ec",
+    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ctr_mode.h": "1f3fe4a524a86e9c659643e608e81287b4e898e58316f28ca51b19c212e4bd72",
+    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ctr_prng.h": "8d0f25e6cf23cdd8634778fcba10af888d24fd0d11c496f1b9a0440cd45b2509",
+    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ecc.h": "ab1904e162dc994ef0b0174dcee9e708d57d58828dc5d819ba71713ac443fee4",
+    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ecc_dh.h": "1e8bda76ea0f2673d371a752ea57f3e5da621a3007fd891fa28d4ed555227185",
+    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ecc_dsa.h": "c6545de8ba4490efbde181189b999938b43c36cc1e905d0a12decf1b526b4769",
+    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ecc_platform_specific.h": "ed890b375c177e7abad7b188ac0a737e87d43224325cd1ed944bad3d25c470cf",
+    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/hmac.h": "c981663602ae9c4df8f7c2fe5d6e1d2cb1132fc0b90beb4e4eef536d9f54b82b",
+    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/hmac_prng.h": "c7d780c4bf3fb23f45ec1225f31f0c8a851c5693f47adf76fb76b7f140ce136a",
+    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/sha256.h": "90eb15d8cd82f81ba163c53b199c04eb9e5fda52a41901bb380dd80097f57902",
+    "libraries/3rdparty/tinycrypt/lib/include/tinycrypt/utils.h": "c5c169e0ae15e394588d7d6797a28af9ab251b1ed1169b3207625752d8d8fc8a",
+    "libraries/3rdparty/tinycrypt/lib/source/aes_decrypt.c": "edad5e3570012bcc1da57869fdb2bc4e0c6e733fb67f7b362bcc71f88d0af017",
+    "libraries/3rdparty/tinycrypt/lib/source/aes_encrypt.c": "90957c91a22214b18653bae4ef4abeca8bc6674051c48fe0c97c413a6d65e555",
+    "libraries/3rdparty/tinycrypt/lib/source/cbc_mode.c": "e09c83712a618ba08a60fef3e5ba2ed5bf712fa6b8c79a074cbf5731665f7ffa",
+    "libraries/3rdparty/tinycrypt/lib/source/ccm_mode.c": "089fb37565150785cf67c20457fb95409d860cb0b572348148fb09d3d11ac6fd",
+    "libraries/3rdparty/tinycrypt/lib/source/cmac_mode.c": "67e2a2ac539ed72bd5ee80cd377b1b5f5148f6c743bd8c89904a393d39a5a8d7",
+    "libraries/3rdparty/tinycrypt/lib/source/ctr_mode.c": "30ce4835f928dc331ed74f86de26b9839ae50e703e6086434edaf3ba5a87473a",
+    "libraries/3rdparty/tinycrypt/lib/source/ctr_prng.c": "c0a2de479ae4bb72b89236a44058d387e14670f24e114298ee14173c41bd5315",
+    "libraries/3rdparty/tinycrypt/lib/source/ecc.c": "1c56234ff29708c712d07f864ed498eb6b0ab8475b5b5824079ed0c77070ea1b",
+    "libraries/3rdparty/tinycrypt/lib/source/ecc_dh.c": "bf6a6ba824721d9fa781b594ade96cbb97d47f65dd7fe5b431dc0ac6eaf335a1",
+    "libraries/3rdparty/tinycrypt/lib/source/ecc_dsa.c": "f80751d74bc9be544308f5b7495492b68e552b7283540cd50f9d0f295df13591",
+    "libraries/3rdparty/tinycrypt/lib/source/ecc_platform_specific.c": "17f454ecc206f2ac532c517b13beb56ff730e71efb93eb70b20ee71617a8eb7b",
+    "libraries/3rdparty/tinycrypt/lib/source/hmac.c": "6c9141de8af68822f611b4213801eda5a8695ece071b3bef34dbb6e52ffdd709",
+    "libraries/3rdparty/tinycrypt/lib/source/hmac_prng.c": "3a64017e98bd7b25f33819cbcd597d48e9ae00478201a68a485cf7e04f400274",
+    "libraries/3rdparty/tinycrypt/lib/source/sha256.c": "a8ad4bb2c09e31e4ab86c1b4f8fa073937a42e2694afb4dde6cb1b3c7a4b5ffd",
+    "libraries/3rdparty/tinycrypt/lib/source/utils.c": "2cf7cd3ee3b48d05b925dc005c1b12ead098f3939e948f55e278e16c180e8d8d",
+    "libraries/3rdparty/tinycrypt/tests/Makefile": "5d72dc2308dc2cdf16a6565b700d931a9b2ab72550af58a890993f301002c6f2",
+    "libraries/3rdparty/tinycrypt/tests/include/test_ecc_utils.h": "f793eb6066f90db4222a4d95d47e5f6b2e480bc07e1766e05cd091ccf8cc565c",
+    "libraries/3rdparty/tinycrypt/tests/include/test_utils.h": "bf74d9342f08637b56652c599b2956a21c56d32e80ec1e9d74b4909bd12b4122",
+    "libraries/3rdparty/tinycrypt/tests/pseudo-random-data.bin": "f9b0a11a6612bfc0a12ed0924ff5c5141b1f3ee3ba573249d973619283b483ed",
+    "libraries/3rdparty/tinycrypt/tests/test_aes.c": "27060817b7a6b0646aa5c4d55bf51586b976326bf165ae9ebdde7f5b26cf5f6b",
+    "libraries/3rdparty/tinycrypt/tests/test_cbc_mode.c": "59dfe4f51a60b38bb5d6cbc0be5db9ae795c993e58663e58f5fd9998e71f88aa",
+    "libraries/3rdparty/tinycrypt/tests/test_ccm_mode.c": "32249f37c22a339f6e1b0140fdee83402226a70726fb7beeab225a0989120073",
+    "libraries/3rdparty/tinycrypt/tests/test_cmac_mode.c": "1b48ae8a493e009e09d9ea9829353a4b90a71c21a297373c242215a67f2b683a",
+    "libraries/3rdparty/tinycrypt/tests/test_ctr_mode.c": "be4ae7b236ea863937b6091aa1f3717df196a333fbf39ff922d7da0c8eacc512",
+    "libraries/3rdparty/tinycrypt/tests/test_ctr_prng.c": "f745a4d272810460c85f8c1781da7977e7fdcf02e02d25f34e363b60c8291c9e",
+    "libraries/3rdparty/tinycrypt/tests/test_ecc_dh.c": "28d253afaa2f1e329ba5ccd4266b34d45346e77235fecc593a78a360ef6195e9",
+    "libraries/3rdparty/tinycrypt/tests/test_ecc_dsa.c": "55533e65df9e3c7e2e792c92ca5a567b692b92c289c21f12b3cfd75b385fef93",
+    "libraries/3rdparty/tinycrypt/tests/test_ecc_utils.c": "4ff6a5f2f5465f485ab2333cc4dd15b2244ca875cc016b6e646510d218ba3be8",
+    "libraries/3rdparty/tinycrypt/tests/test_hmac.c": "c0bca5221fbb587f5c29477fa062d7e30297914c1010102b5f6f47f2cb37e143",
+    "libraries/3rdparty/tinycrypt/tests/test_hmac_prng.c": "bbdabde91a268dc6b3a20f0efdff63e2d099848a013edfa7e956358ef3a9caf8",
+    "libraries/3rdparty/tinycrypt/tests/test_sha256.c": "b154011602efffd7319ca8eb6a0a04b9476efe2c1abb42f09748c3ed766197bc",
+    "libraries/3rdparty/tracealyzer_recorder/Include/trcHardwarePort.h": "ef58f17d172dbadadd7ffda7101afbb6da23699e35b78a115ff51732abee3653",
+    "libraries/3rdparty/tracealyzer_recorder/Include/trcKernelPort.h": "ef98c725ee37b6ae0e5728fe8f872b8e1b0ab5d844a8fc05149c8dc46f2de3f6",
+    "libraries/3rdparty/tracealyzer_recorder/Include/trcPortDefines.h": "4f3f22e309390bf5baba641c550ca780f3aaa5eedc4f7d2d2e132beb74e91950",
+    "libraries/3rdparty/tracealyzer_recorder/Include/trcRecorder.h": "3632e05f7ac35ffaa97b94d623aacf947d9c59475dea47bec28183160d31ccfc",
+    "libraries/3rdparty/tracealyzer_recorder/ReadMe.url": "3fbfd84c715d8e6d3df562c3019b2892139b098641d42d3f5b91781704bf2bfb",
+    "libraries/3rdparty/tracealyzer_recorder/config/trcConfig.h": "bad67bd4338e8db73bc97c13f695a9317ac0d85c15d385a500d513009b46b6fe",
+    "libraries/3rdparty/tracealyzer_recorder/config/trcSnapshotConfig.h": "a77f2fe9f1b273ed537440c7ea252224fac17e4dabfef2bb98270481e586c77b",
+    "libraries/3rdparty/tracealyzer_recorder/config/trcStreamingConfig.h": "e8353c79d184a8a4080f54a7ed2e15d0eae1b19221e47221dcea5d94a98806c1",
+    "libraries/3rdparty/tracealyzer_recorder/readme.txt": "607e810b5ab8d1dcc6101c4af4d5212cb9eb905dec8611361395085198c7becb",
+    "libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT/Readme-Streamport.txt": "09c5ddedff88c85b1acb667dd53627f663df8831a710d7d5a62fc7db4db79ded",
+    "libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT/SEGGER_RTT.c": "7373709c2e587cd1abd221a6f249f9a6e14d8c11ee0b3d75d701b973586f7369",
+    "libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT/SEGGER_RTT_Printf.c": "ee399915fdbdb91901d825b3c1696f9add8936c354064ff4dc3e69a0dac6ccbe",
+    "libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT/include/SEGGER_RTT.h": "5da6bbb8b2d11faf2b948b00da9af146bd68dbb51245578e7167a1cb77ef9e5c",
+    "libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT/include/SEGGER_RTT_Conf.h": "dcca2e3fd6457929af4f8c36c64f67a5af6090451bcc042a047ef7760843e5a7",
+    "libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT/include/trcStreamingPort.h": "a24894b8299e94f93f53057f5ff59b77e46f65b55e33d807787c94e774ed08ec",
+    "libraries/3rdparty/tracealyzer_recorder/streamports/TCPIP/Readme-Streamport.txt": "d83a96df2e87ae6b179b646eeb27956885d675856b193f4d71404e9738aeb645",
+    "libraries/3rdparty/tracealyzer_recorder/streamports/TCPIP/include/trcStreamingPort.h": "a34c3856159e734c160e3aa9d7c6f4b45909fc7c414f2b6b9f7c1c26b6e1f446",
+    "libraries/3rdparty/tracealyzer_recorder/streamports/TCPIP/trcStreamingPort.c": "1781c54614a22d70449e3bd936757f66f9213ccbb9a7126b8788f4dfb0293765",
+    "libraries/3rdparty/tracealyzer_recorder/streamports/USB_CDC/Readme-Streamport.txt": "a283d5e083e1a231cfb3bc17b30bbc01f4547dc740865d3cd9aa2b5878cbd531",
+    "libraries/3rdparty/tracealyzer_recorder/streamports/USB_CDC/include/trcStreamingPort.h": "d55706cb951de3d3f586862de7451babb26b3d382841c35747ec6cc5989065b1",
+    "libraries/3rdparty/tracealyzer_recorder/streamports/USB_CDC/trcStreamingPort.c": "199c4caae5fee2bca8bf4c59993427912fa53006413aeb646b48492039b434a7",
+    "libraries/3rdparty/tracealyzer_recorder/trcKernelPort.c": "b03213e347ff166e23dd666676a3dcc3ea0043a2bbdb6f7d920488a511546a05",
+    "libraries/3rdparty/tracealyzer_recorder/trcSnapshotRecorder.c": "b5d1e5873ec98b748216b1dae9f25fc8ae532165dd2d06615b115b3ed39cb9cf",
+    "libraries/3rdparty/tracealyzer_recorder/trcStreamingRecorder.c": "a5fbaac9a48fba932f6e50214b0913fc4add1a50071e164877a0aac35b66a7cc",
+    "libraries/3rdparty/unity/README.md": "c8922237978b31ecfeb41ea90c93946310cccd60068d1c8772726266fc3e0a2f",
+    "libraries/3rdparty/unity/auto/colour_prompt.rb": "b25f12cab00233838cc1ec2478b78868d8cb380aff93479db855cfc73a6a5d6f",
+    "libraries/3rdparty/unity/auto/colour_reporter.rb": "825b4b4bfc28449c6b24c804d9ffc2d1f1f5855a6655f6101debbeb69d461e64",
+    "libraries/3rdparty/unity/auto/generate_config.yml": "85c5702a168e366148e8ec89df416eae888278a526c79459162c0f37641a02fe",
+    "libraries/3rdparty/unity/auto/generate_module.rb": "40a016ee8a8c53f1bbaa8b47026318e14fec1e3742ef55e0eb1b81c11250c4b1",
+    "libraries/3rdparty/unity/auto/generate_test_runner.rb": "04d326d6232da5844c7be86ff0d60c41c4656b31efa10711800b0e350d371d64",
+    "libraries/3rdparty/unity/auto/parse_output.rb": "539ed21febcc6246680fafbf661a2a695ac1e9ee9837a365857ea3d4ef285155",
+    "libraries/3rdparty/unity/auto/stylize_as_junit.rb": "8350efa8dac6ea49c460dd0125c979bd011b992528571e640ae8d03fce703a2b",
+    "libraries/3rdparty/unity/auto/test_file_filter.rb": "3797fd7cfcc40c643f0b66555e751fbba36ba0c7517c01e3537ffc659af4ea37",
+    "libraries/3rdparty/unity/auto/type_sanitizer.rb": "ecc5677ac9820f343aca50893463602fca940c24daf07a4784b4e9e0801c3f4b",
+    "libraries/3rdparty/unity/auto/unity_test_summary.py": "8912c5cacee70c5be95e35ff4c48746e5ecdc31819ff528f076f6fd64a32dd69",
+    "libraries/3rdparty/unity/auto/unity_test_summary.rb": "ba1e76115ebc4d4221a919c682fb3faae6d0e375a1d7910c199f2abff9caa736",
+    "libraries/3rdparty/unity/auto/unity_to_junit.py": "0743f26b5ae67af204981293337f9cc9a8cb46c90aaa3f46f31fd9658ab65990",
+    "libraries/3rdparty/unity/docs/ThrowTheSwitchCodingStandard.md": "a1838b8c9e20ac3c15bf96742b716b6621c0607c9273ae0f92a6769e3aa45f41",
+    "libraries/3rdparty/unity/docs/UnityAssertionsCheatSheetSuitableforPrintingandPossiblyFraming.pdf": "251fcb21ea66444941a34f8b932a3baf0c47aed4c7827215e027006f06013bea",
+    "libraries/3rdparty/unity/docs/UnityAssertionsReference.md": "2d72b94d517b22ff743245145ed8bb0ab0a6b72c37a5314810d7ff3cabb7af37",
+    "libraries/3rdparty/unity/docs/UnityConfigurationGuide.md": "64d48b148c09da6b883e696ea91cd2219b719bc8de99d36b7d18fe83163383f3",
+    "libraries/3rdparty/unity/docs/UnityGettingStartedGuide.md": "6d960fda02e07839a4e45e4ee5f1e6297005f5595cb882c460f0c9c52237f634",
+    "libraries/3rdparty/unity/docs/UnityHelperScriptsGuide.md": "701e4d8df692c93f7a37e284827f83c619003959c3c29ad0b6d03e77c072e7d7",
+    "libraries/3rdparty/unity/docs/license.txt": "3ed9b51da86f52c729c96cc99fdde6444b2297c788a9cf4ad1d3649dc34c4985",
+    "libraries/3rdparty/unity/examples/example_1/makefile": "367e10ef968648ec5c531f144bb0ee257a619091a76fcc17516c220bf20539e6",
+    "libraries/3rdparty/unity/examples/example_1/readme.txt": "4d72d51f1a385cd4aeb594e4485ca2439d5b86247523cd2d2b89acc2173d8a24",
+    "libraries/3rdparty/unity/examples/example_1/src/ProductionCode.c": "29d42fce2d89d95fb2b14b649d3b2d7406d225a071e01e86d6ec0cdb04c7e614",
+    "libraries/3rdparty/unity/examples/example_1/src/ProductionCode.h": "25cfcc42b79140f4c399363e0ef10a6e518a1831e10c61cc138d6d9a230425ce",
+    "libraries/3rdparty/unity/examples/example_1/src/ProductionCode2.c": "c2cc0a76cb2ea145d3861bd9ccc467ac45ad3e8230d5075ed174ce3a5cd50a76",
+    "libraries/3rdparty/unity/examples/example_1/src/ProductionCode2.h": "d4db1a4eea2bee3d668a203d4953f415f23be64a826c5a73059ef221f61b3882",
+    "libraries/3rdparty/unity/examples/example_1/test/TestProductionCode.c": "2cc1611df09a030abb8ec11569d200dc313645662577b6a6eb32065a193b4343",
+    "libraries/3rdparty/unity/examples/example_1/test/TestProductionCode2.c": "11387f2ecdc97ee3344c0df42123e73cae899702b348d5597e09e9760db267aa",
+    "libraries/3rdparty/unity/examples/example_1/test/test_runners/TestProductionCode2_Runner.c": "2c84d6b954a6810a7c509dc861ee0c18a562dd23a5dd7747ea524f0c1467d9a4",
+    "libraries/3rdparty/unity/examples/example_1/test/test_runners/TestProductionCode_Runner.c": "b6ec7bb984eddea80c178ecb30f6f772325a745ff9812a5e3f41f236c43e19e0",
+    "libraries/3rdparty/unity/examples/example_2/makefile": "9c925a4b80f11ce51cb65fef51f8e1279113dc67838c71b5bc8b0c31009e65bb",
+    "libraries/3rdparty/unity/examples/example_2/readme.txt": "a03bf4ac2d294a037189b42f7bf8fdff0bf50524857e3f8933eba76085f22f04",
+    "libraries/3rdparty/unity/examples/example_2/src/ProductionCode.c": "75136eec7a43d0dbe980dea19ec46f6e16c0da92093686e59f6143d8ae8b5bb7",
+    "libraries/3rdparty/unity/examples/example_2/src/ProductionCode.h": "25cfcc42b79140f4c399363e0ef10a6e518a1831e10c61cc138d6d9a230425ce",
+    "libraries/3rdparty/unity/examples/example_2/src/ProductionCode2.c": "a929e7ef393ec5ccc53e3f885d663a1c8fbe5cc5f72a0fcad5c0d2f6cbc8b210",
+    "libraries/3rdparty/unity/examples/example_2/src/ProductionCode2.h": "d4db1a4eea2bee3d668a203d4953f415f23be64a826c5a73059ef221f61b3882",
+    "libraries/3rdparty/unity/examples/example_2/test/TestProductionCode.c": "cae04759fdca5834d1c2f926c0bfdb222da048069470722361bbdfcc3017233c",
+    "libraries/3rdparty/unity/examples/example_2/test/TestProductionCode2.c": "332f23e940a9676504c84dc92d1a6cf72cd9204afe7f664c16b58ee7dbff312d",
+    "libraries/3rdparty/unity/examples/example_2/test/test_runners/TestProductionCode2_Runner.c": "14aef95de310f1e1381feaaf256ea94d0905a538311b5e3fdc944f927e75b287",
+    "libraries/3rdparty/unity/examples/example_2/test/test_runners/TestProductionCode_Runner.c": "a782491bcd8dd857b26a62df58e8671f1cb7641d6c0fe7f7853c079732ccd8e9",
+    "libraries/3rdparty/unity/examples/example_2/test/test_runners/all_tests.c": "fe5c0418201d70dc696b0db6acf60b2ea0069d74fa94fb96d7169b8752e00d17",
+    "libraries/3rdparty/unity/examples/example_3/helper/UnityHelper.c": "091c2466d25deffd8958332ad03d393ca1ec1b1f6150c16626d57d5901eb1b21",
+    "libraries/3rdparty/unity/examples/example_3/helper/UnityHelper.h": "a95bb6d3704c51637bb0855787236b41229e3836601ba97e88768f95779f3d4d",
+    "libraries/3rdparty/unity/examples/example_3/rakefile.rb": "7a1113adb71787b2ae7cd29fe9a5c7b50dec87c041aa6500aaa836ae2c4a0d4f",
+    "libraries/3rdparty/unity/examples/example_3/rakefile_helper.rb": "a545c40149bdaeb2592322771b5e180bc103d67c783b23c74dcb8b0fb619a5aa",
+    "libraries/3rdparty/unity/examples/example_3/readme.txt": "2af5e731fb1db0ddf5c739f0b08fb2724e4acc7efb7ee0a02fe474a3e69d284a",
+    "libraries/3rdparty/unity/examples/example_3/src/ProductionCode.c": "75136eec7a43d0dbe980dea19ec46f6e16c0da92093686e59f6143d8ae8b5bb7",
+    "libraries/3rdparty/unity/examples/example_3/src/ProductionCode.h": "25cfcc42b79140f4c399363e0ef10a6e518a1831e10c61cc138d6d9a230425ce",
+    "libraries/3rdparty/unity/examples/example_3/src/ProductionCode2.c": "a929e7ef393ec5ccc53e3f885d663a1c8fbe5cc5f72a0fcad5c0d2f6cbc8b210",
+    "libraries/3rdparty/unity/examples/example_3/src/ProductionCode2.h": "d4db1a4eea2bee3d668a203d4953f415f23be64a826c5a73059ef221f61b3882",
+    "libraries/3rdparty/unity/examples/example_3/target_gcc_32.yml": "d7ab74bbff3a1b2a50432636ffbd4d7d7e87df592bf5a5754de56275f44ca521",
+    "libraries/3rdparty/unity/examples/example_3/test/TestProductionCode.c": "b0e815e2285b1730d7dcd24b400d15b4efccfe5e4776d96248a2165c2f0caec6",
+    "libraries/3rdparty/unity/examples/example_3/test/TestProductionCode2.c": "895f437abd40bd461fd86a3b8ed6bc02c5c283fc3926aafe53b473e477fa0a5a",
+    "libraries/3rdparty/unity/examples/unity_config.h": "2ccfc9bc436d651c4f5e11e999acc3052d6afe8005c5816d82c14d6535c8b6f3",
+    "libraries/3rdparty/unity/extras/eclipse/error_parsers.txt": "67e309b5e803a22ba22c347aa5123cbbe73edcbfe9950aa0fd74576a4add1a12",
+    "libraries/3rdparty/unity/extras/fixture/rakefile.rb": "52800d045e67262e1bd53f9867417b6fc1f56eb7cf446bcbaa20dba0c41f10a8",
+    "libraries/3rdparty/unity/extras/fixture/rakefile_helper.rb": "3e9ccb2a4370fbc68d1228a115e5a6a5d6ab689db1805266206a261cdc04f58c",
+    "libraries/3rdparty/unity/extras/fixture/readme.txt": "5692862a5fbc1910978be7ea4751899bafb6b913ce34cffa5517c0eba1fe40e3",
+    "libraries/3rdparty/unity/extras/fixture/src/unity_fixture.c": "cf55816ca47f37c29ee446468ca076c96860ca506d47c6832e81cb1d82b48c4c",
+    "libraries/3rdparty/unity/extras/fixture/src/unity_fixture.h": "d99045365d5fc89535b283b9608631883bf5aa35d41665889f25c9bfcb925b29",
+    "libraries/3rdparty/unity/extras/fixture/src/unity_fixture_internals.h": "fbdafda4dd395e08ff7503180022c074947d622f4e83256256297ce05c154e73",
+    "libraries/3rdparty/unity/extras/fixture/src/unity_fixture_malloc_overrides.h": "446d4a58dd88ce0bceba6e095ac4f26a4c55898e67265d688450fa3aacc7741c",
+    "libraries/3rdparty/unity/extras/fixture/test/Makefile": "665bba3afaf6ebd289432b039e40b03a24c7fee6f4dde8f82b1a7468fe82a7e7",
+    "libraries/3rdparty/unity/extras/fixture/test/main/AllTests.c": "1ec0a0e004f8a70d03dc76e28f38f09519bbaf7306d48d17d5bf0573d34c87c0",
+    "libraries/3rdparty/unity/extras/fixture/test/template_fixture_tests.c": "3ca4c500397fc3dd7370b419e7d4f7abb3a8b05deacaf72a4e2ccb396669003a",
+    "libraries/3rdparty/unity/extras/fixture/test/unity_fixture_Test.c": "d8d631a1e192b25ae24ea6ecf3bb53e86eff8f0615a1ad7095106d847b847d18",
+    "libraries/3rdparty/unity/extras/fixture/test/unity_fixture_TestRunner.c": "e739cdf119f943d482fe99b6acec671aa88a78b9cb38bb2b459d946ab962a200",
+    "libraries/3rdparty/unity/extras/fixture/test/unity_output_Spy.c": "efa0dfae695ba004c67a120c0b0e3d6f93f72cf7a992662bd4ab15d725c3ff45",
+    "libraries/3rdparty/unity/extras/fixture/test/unity_output_Spy.h": "b5adfe4f07d3c1c4b7cb0178344ccf608c60a08713d768c8b3e073c6f030dde5",
+    "libraries/3rdparty/unity/release/build.info": "88427f0459de328a4256bc343fa4e3960e68dc276f60e9379f3cd0d29b31feee",
+    "libraries/3rdparty/unity/release/version.info": "e5569beb25a8c01a33dfcc781b787042064f8e7267436d97a6a7472ce1ead98a",
+    "libraries/3rdparty/unity/src/unity.c": "5893f1a936fa7d0b10ec443add4ebd9cf68338922b6232f62cdef4ccfb33e9b4",
+    "libraries/3rdparty/unity/src/unity.h": "d851520e3eafbc44a285f3a87ed92f4ecc9559142bd4ac1ee9daf84356ac69f5",
+    "libraries/3rdparty/unity/src/unity_internals.h": "7e31a259cdb4666459d2d7d7d2aa9eefe57b46a53b980b3b64de74d88e4d0294",
+    "libraries/3rdparty/unity/test/Makefile": "862df58d2d954b05f0b646c84019c9c078246d9f5a4ea5b27528e5073380d190",
+    "libraries/3rdparty/unity/test/expectdata/testsample_cmd.c": "832ec9c8c30fd374adea6620dd38c19c689047bdad0513984066e525eefc0723",
+    "libraries/3rdparty/unity/test/expectdata/testsample_def.c": "246d3d9bc73ccef28f7a70b8748d95cd31eb85b9874e6972d30be1f74000fb8c",
+    "libraries/3rdparty/unity/test/expectdata/testsample_head1.c": "ed31f2c63e4bb7ba015a5388429b34287ecefa098551e55ae5864b883c3cdad4",
+    "libraries/3rdparty/unity/test/expectdata/testsample_head1.h": "fc279a298e45f70a559d05132ae888973c8f5aad913c0b2d6d8425ccbde5c998",
+    "libraries/3rdparty/unity/test/expectdata/testsample_mock_cmd.c": "b826f44458088555058b6c3b9c7ef15c2a5528c8efe01034d0f1debee06a739e",
+    "libraries/3rdparty/unity/test/expectdata/testsample_mock_def.c": "1016f1162a3ea3be49dffd824e529493d2845860d1139cb44cc32f0fe0a0701f",
+    "libraries/3rdparty/unity/test/expectdata/testsample_mock_head1.c": "cb7b253cefa315d7b4edaa386bffb63a728f3b33c869bf55ecfcd53d1e47eaaf",
+    "libraries/3rdparty/unity/test/expectdata/testsample_mock_head1.h": "9cb779d98b40e5dfcf70db57f7d3deae6310cac80547140c972ecde585f56c18",
+    "libraries/3rdparty/unity/test/expectdata/testsample_mock_new1.c": "4e5d73972dce4276dc688016eeb310e93ef96ea7beee0e6839092f0459798856",
+    "libraries/3rdparty/unity/test/expectdata/testsample_mock_new2.c": "74418cfefe544ac366a043972648c31742b2a4652155507c93a1a2a38471a5eb",
+    "libraries/3rdparty/unity/test/expectdata/testsample_mock_param.c": "6a8edda1c9b5a56d38e705d2d0341232ca9a55f1fb7383171475cb972c9b6c18",
+    "libraries/3rdparty/unity/test/expectdata/testsample_mock_run1.c": "4e5d73972dce4276dc688016eeb310e93ef96ea7beee0e6839092f0459798856",
+    "libraries/3rdparty/unity/test/expectdata/testsample_mock_run2.c": "74418cfefe544ac366a043972648c31742b2a4652155507c93a1a2a38471a5eb",
+    "libraries/3rdparty/unity/test/expectdata/testsample_mock_yaml.c": "763d37bc5a5edc7566bf6625dd38878aed8cc94a5cec8f6e23aee16e30bdaad6",
+    "libraries/3rdparty/unity/test/expectdata/testsample_new1.c": "983abee21894ba9fb5d667a69b046558867f9f16eaf546d259671f54dd4be626",
+    "libraries/3rdparty/unity/test/expectdata/testsample_new2.c": "9726bdaec7a5c8e99b4e6bbfc41b91c8687665bbafdb617be4514eadc30b023c",
+    "libraries/3rdparty/unity/test/expectdata/testsample_param.c": "7ab6834f8376908625b9999a4c5dad32ad65c8f3fd852e78b6d9c3bc871fc639",
+    "libraries/3rdparty/unity/test/expectdata/testsample_run1.c": "983abee21894ba9fb5d667a69b046558867f9f16eaf546d259671f54dd4be626",
+    "libraries/3rdparty/unity/test/expectdata/testsample_run2.c": "9726bdaec7a5c8e99b4e6bbfc41b91c8687665bbafdb617be4514eadc30b023c",
+    "libraries/3rdparty/unity/test/expectdata/testsample_yaml.c": "17714f87e28c7723608fdc832189965482404e3540e3f3ec55afa7f07054e0a7",
+    "libraries/3rdparty/unity/test/rakefile": "cd62511ff13bd8e9b7f23988c274fa41dea51b2f8e0aed6ee5edac3d91ddeb8d",
+    "libraries/3rdparty/unity/test/rakefile_helper.rb": "5423a66a42384ddce1b9fb9cfa690f8fea3e3e062ae3d66910356d011147646a",
+    "libraries/3rdparty/unity/test/spec/generate_module_existing_file_spec.rb": "41d0b6bf8255f97e4fbf6c4f5fb2dcc61d846d2ddaf2cad763c1f500b8a68727",
+    "libraries/3rdparty/unity/test/targets/clang_file.yml": "afbb70db8cc433aca8e6ea3d04d2f5142cc8bd1a8f6e421006038c9601222d32",
+    "libraries/3rdparty/unity/test/targets/clang_strict.yml": "336cc5344beccd0c3a6c83227b764c8945193b464600ba56ade14c3c44c98b27",
+    "libraries/3rdparty/unity/test/targets/gcc_32.yml": "734debdb4392b83942cdccfb31ca724a43b923617a8b45d86bf6a1fefa86a7e6",
+    "libraries/3rdparty/unity/test/targets/gcc_64.yml": "530851623a24956399add9f0c0fe18719eb6dc428c1bec03ae6b255a9d0ae972",
+    "libraries/3rdparty/unity/test/targets/gcc_auto_limits.yml": "fbd96dc8a94c4de70dae87ff378312b3ee07cb8219d6290af17d36e3b34d0f6e",
+    "libraries/3rdparty/unity/test/targets/gcc_auto_stdint.yml": "c9ec9f61987603d059d4509f4befe0744f5fa99a137d95be359ddd2c71443281",
+    "libraries/3rdparty/unity/test/targets/gcc_manual_math.yml": "3bd8b0d4eb9fa693f4cf74fdaf61e31183b85351c4e957577bc8497cdc8f15a0",
+    "libraries/3rdparty/unity/test/targets/hitech_picc18.yml": "7b2a4ea56f3125fd75bb7d8e9baf1f26706b206f98c6f88e4d4b4091361fc546",
+    "libraries/3rdparty/unity/test/targets/iar_arm_v4.yml": "3df93ad02fd4e1cc17d28a63f824881eee4f73e1db54e43ff36909dd2f5eabaf",
+    "libraries/3rdparty/unity/test/targets/iar_arm_v5.yml": "bb6f961bbf3cf2c4651a33bf415818726b4d609c05cb9fdeabe6dc7a94d47e6b",
+    "libraries/3rdparty/unity/test/targets/iar_arm_v5_3.yml": "bb6f961bbf3cf2c4651a33bf415818726b4d609c05cb9fdeabe6dc7a94d47e6b",
+    "libraries/3rdparty/unity/test/targets/iar_armcortex_LM3S9B92_v5_4.yml": "8835f98e84e75b920fb9e27c0ebcc9c11f14bff768b382441099a01cbf7a129d",
+    "libraries/3rdparty/unity/test/targets/iar_cortexm3_v5.yml": "70ba518b050162526cf5cfd3cdc90a00a6aad0d0ef65558612d384c855513d52",
+    "libraries/3rdparty/unity/test/targets/iar_msp430.yml": "527ef25ba8d5056a8b44fce38302895a1a8ed342331edeed69db067b831c8e7b",
+    "libraries/3rdparty/unity/test/targets/iar_sh2a_v6.yml": "b99162afd271d76014220cabda53ff3951aae6595b198520eba36ef095e57746",
+    "libraries/3rdparty/unity/test/testdata/CException.h": "3d791048e28a3a83580dc5cb7a03d918323247128bde97b055e1037924a4a3a0",
+    "libraries/3rdparty/unity/test/testdata/Defs.h": "309f8524e59399b7e9e5f2a02ab7a1a4e21d6f808bdb05730ad41366412b72ea",
+    "libraries/3rdparty/unity/test/testdata/cmock.h": "f600e74488bfc56862df2daedce1a3525eaad43ed72c6706817f6629b180a1ec",
+    "libraries/3rdparty/unity/test/testdata/mockMock.h": "f198c43bad6e541c08b5e32c204d894be499ff005032c3ffa25e7ed7ba176001",
+    "libraries/3rdparty/unity/test/testdata/testRunnerGenerator.c": "019b92525eaf472f608028dd6a68d3921ea39032d7973a3aabfaf0776f7bac64",
+    "libraries/3rdparty/unity/test/testdata/testRunnerGeneratorSmall.c": "84391f905960812afd4640f92aae9c34c4e391f3a944d8bc93cc6db14f89d952",
+    "libraries/3rdparty/unity/test/testdata/testRunnerGeneratorWithMocks.c": "5771f02d8a44f71d3abebe2509e83c3d53e228e16b3791a1621e440994670c8a",
+    "libraries/3rdparty/unity/test/tests/test_generate_test_runner.rb": "bbcfbcd8c45d6c8dcd05fc2400914805d965e378297d536a63276cb2760deda3",
+    "libraries/3rdparty/unity/test/tests/testparameterized.c": "baed74f82c4b452063bb0b33ad488acbb6df0cf2362a5209bc53a396b946bcea",
+    "libraries/3rdparty/unity/test/tests/testunity.c": "89c5ac06926074a73ff5fcb89bddd923d9040aa3e5cd3108d733315714c9c71b",
+    "libraries/3rdparty/win_pcap/Packet32.h": "91424a5947374de2ea163bff4e0c033e3f6d1a2a789f3999f6e20c95080ffa32",
+    "libraries/3rdparty/win_pcap/PacketData.h": "4cb0df826837bf82691e5a98a7599671b259efc512b1c4825accca77d0cfc7a1",
+    "libraries/3rdparty/win_pcap/Win32-Extensions.h": "81117e8c6de61172df09834f50a1b127de721abb960e25dd25dbaef97d9e48fa",
+    "libraries/3rdparty/win_pcap/bittypes.h": "f895a46f3d528a66a2489850e478123dd1eedc5e62a3a529e626c3ab08cbabe1",
+    "libraries/3rdparty/win_pcap/ip6_misc.h": "fccef70161c3607d1cf0128013ee00410d477a581b62bb0d337d77a51d43ec05",
+    "libraries/3rdparty/win_pcap/libwpcap.a": "6082e9aeb725b2836e4f746527630885d1ec4c4004f81cdc9fd8d5a130097207",
+    "libraries/3rdparty/win_pcap/pcap-bpf.h": "a24e6a99451cc013cb1b891724fb04b4079251557852f5667f998a342d1b6446",
+    "libraries/3rdparty/win_pcap/pcap-namedb.h": "97afaf663c4ed4710101d5c6053011e0764642ae1adbffdabc9ee0dcf88874e1",
+    "libraries/3rdparty/win_pcap/pcap-stdinc.h": "937710c6e5412a5d2cf423ccbf4dfc06fefef17a077aa73b1fd4d1d82ead8fce",
+    "libraries/3rdparty/win_pcap/pcap.h": "c86912e57dc4da38d36ea3ac0e85b1b42c57548be418773c627043bc69ae8181",
+    "libraries/3rdparty/win_pcap/pcap/bluetooth.h": "b3ef727f506c30e72ed22a8837d737d75d2858cd7427e7022ab63cfe3dd9d844",
+    "libraries/3rdparty/win_pcap/pcap/bpf.h": "ea7397eaeaac18a0230aa2f3fecfabf387f2d1135e80ddc6a8eaa0e9b88c5408",
+    "libraries/3rdparty/win_pcap/pcap/namedb.h": "94cc2e21a83e9fc7a3b159f2fa5cd6c478edcbed05fef13cd9ad08d5364217f9",
+    "libraries/3rdparty/win_pcap/pcap/pcap.h": "43db459d6d64e995f8a42cba0c5d5515ed5c366e7bdb5fc717f8d14df614769e",
+    "libraries/3rdparty/win_pcap/pcap/sll.h": "08e56e0ac5747bfe919b22463cfbbfb8355288b32b36ce112cb047df58dc795a",
+    "libraries/3rdparty/win_pcap/pcap/usb.h": "81c16c743d81f8302fa61ab585ec0e2e29d69844d03f65600054269d6c315246",
+    "libraries/3rdparty/win_pcap/pcap/vlan.h": "196de3fda8473dde90ee24a682d399245da03a5a6106accf80d97da43900fe4d",
+    "libraries/3rdparty/win_pcap/remote-ext.h": "9f61998150429f80e5e000b1c9cab44372dbae0546174fcae8771e2e578bb46f",
+    "libraries/3rdparty/win_pcap/wpcap.lib": "0becdc2d0f2f1e7be3e56cedc9f72578dbac35b347cc15bc031276d10f501b49",
+    "libraries/CMakeLists.txt": "9bd8b7ba72015d6bc90d9aa83771f76846917f7fa1a65d750eeb2771e74473f6",
+    "libraries/abstractions/ble_hal/CMakeLists.txt": "c1dadb54bb7ccbe63d38aa556d40ebca7b092cdaad707b4ae708a4c09b1f0eb0",
+    "libraries/abstractions/ble_hal/include/bt_hal_avsrc_profile.h": "b4e813516d1e47ea0c1ad9b782e4c8fdf8c6d419ab876c902ae4bd5a39482933",
+    "libraries/abstractions/ble_hal/include/bt_hal_gatt_client.h": "15e1da839f864667653860a0e64f88db3f963d35b0d63e70733ad0eea26bd1d4",
+    "libraries/abstractions/ble_hal/include/bt_hal_gatt_server.h": "bb8bff81d6be33b15fc261ec5ef0167b247148c332c4ca3cfb707015c2336f46",
+    "libraries/abstractions/ble_hal/include/bt_hal_gatt_types.h": "ef8bf8f4a1aac63a351f79e3049b3e78039fb71cc8dc2b02f083b82afce695e5",
+    "libraries/abstractions/ble_hal/include/bt_hal_manager.h": "64a15944f9b6eed7c0235ee0c25bed9bd2c5117f7b4688e5c75f91d4b87aa039",
+    "libraries/abstractions/ble_hal/include/bt_hal_manager_adapter_ble.h": "fa04e223facd988683305dcc5819521ce10372a7a719cd5556392f6a1c54676d",
+    "libraries/abstractions/ble_hal/include/bt_hal_manager_adapter_classic.h": "44e7f3194f72ef6c12db5925071b1c5d12c6c99b4557b9a152d715749eaff1c7",
+    "libraries/abstractions/ble_hal/include/bt_hal_manager_types.h": "41eec34586699bc51236c74ab355960cf7a9f020f752f5d009aa5d2fe4ca6735",
+    "libraries/abstractions/ble_hal/test/iot_test_ble_hal.c": "68e5e05b288ff51d2e09e10fcc24cf596743efb29d76abc747e267602612d1cb",
+    "libraries/abstractions/pkcs11/CMakeLists.txt": "9d5b9f1a5978132f37fbc5447d9b35c38d26dac3b3df04c0a5d61eba10b140f5",
+    "libraries/abstractions/pkcs11/ReadMe.md": "6db70d2c28c8e5e626006c76e6ff53a27c9118a68054e6635ccb6cf3c96af6c1",
+    "libraries/abstractions/pkcs11/include/iot_pkcs11_pal.h": "3a2f2d196d6d1204191a347ade72077e6627a4f7a23c0ae869170b30eda709b8",
+    "libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c": "09f73f3bb591dc16e5bf550828f8f3d03b601eaacf47162266b9378797d4a50b",
+    "libraries/abstractions/pkcs11/mbedtls/threading_alt.h": "b5ac33c3859883d2ac6a0704d938b89f691fa930cda4958bf8a74a79fad35aec",
+    "libraries/abstractions/pkcs11/test/iot_test_pkcs11.c": "c5bf541bb50a596802e380005d77e5d5d34d8186271b78accca3f9f6687ca3b3",
+    "libraries/abstractions/platform/CMakeLists.txt": "50819a994beea3681f081b19af1f9f919e117d53d2a62eb378bbe5ee27cf0f09",
+    "libraries/abstractions/platform/freertos/include/platform/iot_network_ble.h": "f80d83ee61dc986510b3f68cb46a290447c006db4217367fe13186afd2b13ce0",
+    "libraries/abstractions/platform/freertos/include/platform/iot_network_freertos.h": "5ce4019a54649641837d813c9456becdcbbde306baf0b05685b7b5da355d9ed4",
+    "libraries/abstractions/platform/freertos/include/platform/iot_platform_types_freertos.h": "f8a2f43810ffada5ba122da6badfbe1c5ec5a8f1f1c78e6be5e56859c4e95b7d",
+    "libraries/abstractions/platform/freertos/iot_clock_freertos.c": "dd9feb0a2b73245581ee327ac788ed2d25d4df62140c986397d98fd81abb539d",
+    "libraries/abstractions/platform/freertos/iot_metrics.c": "868d1911f18fe59129c0f8597ee228ca9d531f3148ac9429113f6b9fd6755c48",
+    "libraries/abstractions/platform/freertos/iot_network_freertos.c": "4f9c98b1c814244f813887dc877383796c86b19c740dc426bdd95a429039451c",
+    "libraries/abstractions/platform/freertos/iot_threads_freertos.c": "d23f82f959b6469c644b1302d40ab71f19cf1a8852932ad4e41f44e7a893fbc5",
+    "libraries/abstractions/platform/include/platform/iot_clock.h": "cbb158fcab752944c5d413905db0eac31efca4acca1e2b28edd6edd4800a47ab",
+    "libraries/abstractions/platform/include/platform/iot_metrics.h": "b9530a43ff264d85485954b218576a57e7ccfc9202056f4f6b680f7566eb3353",
+    "libraries/abstractions/platform/include/platform/iot_network.h": "bf0f98429e549c238d48240b25d87492871d6db2d8a74fa37b5ab9886819d160",
+    "libraries/abstractions/platform/include/platform/iot_threads.h": "e3baee9ded7873a850fac39e2f1b167ec8609b11ce78b5e786a5c5071afc4823",
+    "libraries/abstractions/platform/include/types/iot_platform_types.h": "b90510bd0a534b9fadffece59957042888248080f6a426e10dfdc94d072bab99",
+    "libraries/abstractions/platform/test/iot_test_platform_clock.c": "ce9e4322422f57aa18ac1f94087bfae58ba33c04d7acd63e472d7e3ca2642ce7",
+    "libraries/abstractions/platform/test/iot_test_platform_threads.c": "25c0ec8c76c54cb063ceea49fe9ff13767d6857f40a320831ea796572959c9b2",
+    "libraries/abstractions/posix/CMakeLists.txt": "de791cb48fb673efa912fdff73e6a3baa8c0b6b8b04e3bb6bc0db4d48bdf92ec",
+    "libraries/abstractions/posix/include/FreeRTOS_POSIX/errno.h": "0ea49bef9986d1c841ad54c672a0d7f78e3d40ef41daaa02264ed45264f222dd",
+    "libraries/abstractions/posix/include/FreeRTOS_POSIX/fcntl.h": "38e00ef1847a18fe0a2ff2729ae74df9f05ad2c125e99e0df42a80ffbc5bc3af",
+    "libraries/abstractions/posix/include/FreeRTOS_POSIX/mqueue.h": "60762ce47d2dedabbc2e1363eaab8366302fc6fec9f948d8f1084b052d1c1646",
+    "libraries/abstractions/posix/include/FreeRTOS_POSIX/pthread.h": "dfde2da181589e4ff47329dd8d3c30c185c434c64f055db815e2692db710ca9a",
+    "libraries/abstractions/posix/include/FreeRTOS_POSIX/sched.h": "f2048877267f85aacb27e5c798a0b420f7148518345bd78579e2baf0d4ce7846",
+    "libraries/abstractions/posix/include/FreeRTOS_POSIX/semaphore.h": "ef0dfe5d6503dc8502a778063e2b10006ade4343c02c97effb4f15d02f2da215",
+    "libraries/abstractions/posix/include/FreeRTOS_POSIX/signal.h": "af3a6f1cf288183ac719719ccce54dbd4755d312fc8250a98c6efcd26e6dab25",
+    "libraries/abstractions/posix/include/FreeRTOS_POSIX/sys/types.h": "628e7a92368306a179a9800ecc1d6d6e64ce009ec50ef8aa77a4134cc5f51054",
+    "libraries/abstractions/posix/include/FreeRTOS_POSIX/time.h": "9b7b240f55d075fa0c2338516cd0c753b73ee06ee03ee789be6451ad63c1d9a9",
+    "libraries/abstractions/posix/include/FreeRTOS_POSIX/unistd.h": "ef7efa1dd4cd2d92dd750ae1ceb239ab2537951369ee1f212dd22347f2614ae1",
+    "libraries/abstractions/posix/include/FreeRTOS_POSIX/utils.h": "1c22401b629f4bbc6cea76ed6ce314045380115a4130da1f42f6406e98272139",
+    "libraries/abstractions/secure_sockets/CMakeLists.txt": "8e5340f93054ebff07445235aecec75168545d876d039b41343f147de2b36fb6",
+    "libraries/abstractions/secure_sockets/freertos_plus_tcp/iot_secure_sockets.c": "dbe0970616c4f8eb67bc3dd0324b02898830752da512952bd84a9ecf060d20f9",
+    "libraries/abstractions/secure_sockets/include/iot_secure_sockets.h": "8d74e2e0168a0c5ad4973ac77745ea12e7f752408a1fdc4513c1e7f16c04d9a4",
+    "libraries/abstractions/secure_sockets/include/iot_secure_sockets_config_defaults.h": "7e4116004f9db6363d6249364080d976c7c1c65512ab9d42330d21a1bfe1be6e",
+    "libraries/abstractions/secure_sockets/include/iot_secure_sockets_wrapper_metrics.h": "6f4259db5afc17055fe96128bd61c7b1ce2b81feed78847f94b458e2e2e2cb3c",
+    "libraries/abstractions/secure_sockets/lwip/iot_secure_sockets.c": "08d69853209880df59694ab55c6c0916bbd1a3d7b0911d2133c2f2a64b9f533e",
+    "libraries/abstractions/secure_sockets/test/iot_test_tcp.c": "86e8e5a08ab6dcd43d77d1401a035b75666cab8ecd23bf9f350aca9676875982",
+    "libraries/abstractions/wifi/CMakeLists.txt": "8e74e2f750f62bee0e7386b1c94adb07322fc1ae7dbeaef7d9efb54a0d2efb70",
+    "libraries/abstractions/wifi/include/iot_wifi.h": "ea2d4bd6ae8cae94341318a916738b6a53279676034060484877b38e7eaafef0",
+    "libraries/abstractions/wifi/test/iot_test_wifi.c": "cacf6da739a0d04ccfdd688ecceac35593f886e89dd411064aec30a37e35ed16",
+    "libraries/abstractions/wifi/test/iot_test_wifi.h": "8fcfe1866cfc37d58c0290fa893bd012aed43b94977587ad3a89494573225b32",
+    "libraries/c_sdk/aws/defender/CMakeLists.txt": "ced160e78b636fb2dc38316e379c36115759670f0ef248c414f65eaac0cd73a2",
+    "libraries/c_sdk/aws/defender/include/aws_defender.h": "9fa78bf13e70f313f840c18f646ecc694cffdc13dca0b836491f9252aee6604c",
+    "libraries/c_sdk/aws/defender/include/aws_iot_defender.h": "802675e22bf1f190c02524479fab68647aeca69bd382155abde7bd9804c0e90c",
+    "libraries/c_sdk/aws/defender/src/aws_iot_defender_api.c": "f95b75c1aca3eca5a097c7c44f5e1e5faac35285e1a273c6eff20930bcc9d873",
+    "libraries/c_sdk/aws/defender/src/aws_iot_defender_collector.c": "c6144dc461ed1fcf233c9771e6d9b4452dcff34d8000727cf55703ce0d53620b",
+    "libraries/c_sdk/aws/defender/src/aws_iot_defender_mqtt.c": "c214f72ab256c10302ca2042f4befa5fd6fa665317b50c52c5691e83a345b7b5",
+    "libraries/c_sdk/aws/defender/src/aws_iot_defender_v1.c": "26f2457414f37db952a0cc97a6880034bc31ee7a7898616670939956430dfb36",
+    "libraries/c_sdk/aws/defender/src/private/aws_iot_defender_internal.h": "b083df14e92ecaf6a32f827a9e65adf239715c2632a458d884600a9499123cd1",
+    "libraries/c_sdk/aws/defender/test/aws_iot_tests_defender_api.c": "03511744d4a5f9c225c196383abe2938f81b980d43dd6b464fd5d821c327ac2c",
+    "libraries/c_sdk/aws/shadow/CMakeLists.txt": "92469f480d803fd9b81836a8932cbe4e0f1cc5c961c032844f58a3b7dbb520af",
+    "libraries/c_sdk/aws/shadow/include/aws_iot_shadow.h": "52a9f893ea8a8e46e745de6da165304cc9bcea39cb8a8b7f63666c39e529e0d4",
+    "libraries/c_sdk/aws/shadow/include/aws_shadow.h": "806454ee551ba7dedf2a5262f3cfcfdcfa8debbd9531d16e10ee82bc94fcbc8d",
+    "libraries/c_sdk/aws/shadow/include/types/aws_iot_shadow_types.h": "dd062f8ab7cfc6fe93001b9bd962e20c5edf4de88e0da5f5b284cece4a560338",
+    "libraries/c_sdk/aws/shadow/src/aws_iot_shadow_api.c": "9b10b40e338e53367a378a44faf4940951bc5e6f4ac5189582313f09258b5fd6",
+    "libraries/c_sdk/aws/shadow/src/aws_iot_shadow_operation.c": "c09bf36ccf6b24d44da6be2130cfefd15d5674adc0eb4682723c46e702d89f17",
+    "libraries/c_sdk/aws/shadow/src/aws_iot_shadow_parser.c": "b223283837c0d716c6f93a36d7d07c794ae83d45b6c64976cac012bd99596300",
+    "libraries/c_sdk/aws/shadow/src/aws_iot_shadow_static_memory.c": "3b1ae977940200d19b79e131dbe35bc55357c60e63f361b3f7977f6ddbde9017",
+    "libraries/c_sdk/aws/shadow/src/aws_iot_shadow_subscription.c": "c39084526f66fc96e3a7dc15b6c83477b474f17277e0b62dd30bd997c67afd21",
+    "libraries/c_sdk/aws/shadow/src/aws_shadow.c": "aa359858bf927fc1834426e1e551c2ea6eb0e4d49a7501610a8a63d2716b454e",
+    "libraries/c_sdk/aws/shadow/src/aws_shadow_config_defaults.h": "83daeeba854cb58f85a852a795c61a7db3381e272e7d442863a6168601376912",
+    "libraries/c_sdk/aws/shadow/src/private/aws_iot_shadow_internal.h": "5f3f91fcc9660a494d9697fb7c1ad1b282a218ce70505b72f0d421c439a512c2",
+    "libraries/c_sdk/aws/shadow/test/aws_test_shadow.c": "fb192d4ca23dfe5e8f16f292fccbff11e8c6f3b322c19039ae13c1f2010503f2",
+    "libraries/c_sdk/aws/shadow/test/system/aws_iot_tests_shadow_system.c": "bf1332ddfb991752be99487098730584298030b4cf8b209706f4697e3b71df54",
+    "libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_api.c": "ed448d1cb7696c652267eede55ded7b13facd149b0c684e5a640e3be9c0f7159",
+    "libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_parser.c": "c4e8d7efa20c0ebd0563e968a06952dce7b6f5c1faad4b60a37b753b0ec75e3a",
+    "libraries/c_sdk/standard/ble/CMakeLists.txt": "3ac0b1f198a2724031226c4fcf7d0a17f6d7b5c42c79ce7fc019f9ce7ce795e0",
+    "libraries/c_sdk/standard/ble/include/iot_ble.h": "87392fe1b00098abf89d065130330696a7cc84621acd3ecb0959bacd13dca9f7",
+    "libraries/c_sdk/standard/ble/include/iot_ble_config_defaults.h": "dba2ef100974e18d9905fedb230890de81faaca3913196dfec0ae83dac235198",
+    "libraries/c_sdk/standard/ble/include/iot_ble_data_transfer.h": "7665eb7e1b7221bb96b62160d5ec44038a694694786cdc2527498e356e3dcdc2",
+    "libraries/c_sdk/standard/ble/include/iot_ble_device_information.h": "888e3fa9eb283b886a9646b31432764a845efe8d978781650f0532b518f8ef50",
+    "libraries/c_sdk/standard/ble/include/iot_ble_mqtt_serialize.h": "36d6ad390af9a965d473ac5efe1f3b35445f9a5077a8c40c03032fa0777f2479",
+    "libraries/c_sdk/standard/ble/include/iot_ble_wifi_provisioning.h": "839bf2091a7e0766e50933bc55bcc68c13ac78e77bb554a72e8ec6b0fb4227fd",
+    "libraries/c_sdk/standard/ble/src/iot_ble_gap.c": "321d532068f192ed7baa6aff4242ac000934c9573866a3630b8c11d8df14636f",
+    "libraries/c_sdk/standard/ble/src/iot_ble_gatt.c": "e116443b57cec12dd3bb6df9eeb1484acd95672791289fd34c312b6f911ed458",
+    "libraries/c_sdk/standard/ble/src/iot_ble_internal.h": "3533ff2f125986166d63d560339e64d0e638ab90d2ed95be74f6df1b883790fd",
+    "libraries/c_sdk/standard/ble/src/services/device_information/iot_ble_device_information.c": "1518070f6522250359690591bac368c874c0fa158b97f97dce6c155f837b9899",
+    "libraries/c_sdk/standard/ble/src/services/mqtt_ble/iot_ble_data_transfer.c": "59dc092007ae2654ba0b96c96de3c5cf2e0d283c4b5b4ea65b999d1c8fff101b",
+    "libraries/c_sdk/standard/ble/src/services/mqtt_ble/iot_network_ble.c": "81d3bd0119b4e1856105ac5b54bc16ca4b4cc349f0a02d7c4b9b19dc9bf54070",
+    "libraries/c_sdk/standard/ble/src/services/wifi_provisioning/iot_ble_wifi_provisioning.c": "99c749ff3c086a6d0b3ced9f5f2a488d49c8acb08ae40a0dd856a5ceffb7b94f",
+    "libraries/c_sdk/standard/ble/test/iot_ble_wifi_prov_test_access_declare.h": "6f95e98af23e1dc1975884d2855ba80c78be71267266fe8f48d944636e7bd1d1",
+    "libraries/c_sdk/standard/ble/test/iot_ble_wifi_prov_test_access_define.h": "d63a711e438a2f1dc11eef7e01a1e2632bdb6638cb0bb516a7b6b264862a6814",
+    "libraries/c_sdk/standard/ble/test/iot_test_ble_end_to_end.c": "9dd008767aa76bb76e95097c72613a50a9d8fa554288f870a17b73ba6dea4f01",
+    "libraries/c_sdk/standard/ble/test/iot_test_wifi_provisioning.c": "d78a36264bb5a9f3f9d6f89aac673ee450d718b87dd940d1e97831cf7a74075d",
+    "libraries/c_sdk/standard/common/CMakeLists.txt": "b6f657d92962a67a70cfefb88890d981d19476eb5a447bbb2e4c40998ff15a77",
+    "libraries/c_sdk/standard/common/include/iot_appversion32.h": "f1ce6ad5db81ade1884527a5802567f6fc382b61b5d846ee470948ad868475cb",
+    "libraries/c_sdk/standard/common/include/iot_atomic.h": "a315d4f2849e95359c5374ad9310c811a1262796105840939788876c33380738",
+    "libraries/c_sdk/standard/common/include/iot_init.h": "fe0606e543f526f7c8937281375de3b59d8da3f39f90fd1b8514c5f835897bf3",
+    "libraries/c_sdk/standard/common/include/iot_linear_containers.h": "dfd0782876ac6e2138e2b646247415a23b89a98665b80a2cbe2f556f1eb21e67",
+    "libraries/c_sdk/standard/common/include/iot_logging_setup.h": "10ea411b387a51ab1779e83594f0dde4b663b7044dd8b58b295a76767aeb3f7b",
+    "libraries/c_sdk/standard/common/include/iot_logging_task.h": "d59b68944d6c431601a34ce0762d5858936674c6ae6fc42a3505db2617073b3f",
+    "libraries/c_sdk/standard/common/include/iot_taskpool.h": "5f2dc8596aa5d9da438ad6ef8d57adb2baff5d5944fc7d0b1b034526dce2ea56",
+    "libraries/c_sdk/standard/common/include/private/iot_default_root_certificates.h": "e816dae1e5bf3adf96b7c2d4c0420a3ce724dbbc19e5aac2153948cd29005289",
+    "libraries/c_sdk/standard/common/include/private/iot_doubly_linked_list.h": "6d3641dc4be31464dc9a1a7cca49be9b51bda53e093f69799a6900ce5fd8928c",
+    "libraries/c_sdk/standard/common/include/private/iot_error.h": "950d907d33dd14374ac299e6f0f7db608b7d02181e04e92fbcfcb83fabb74ebe",
+    "libraries/c_sdk/standard/common/include/private/iot_lib_init.h": "9c74def88bae292a4ed27426509c109ca5572cd5653f673a80da6f854c36bacc",
+    "libraries/c_sdk/standard/common/include/private/iot_logging.h": "f9292f723318846d2ae1a0fcaf133a9caf6c013fb89f7bee16e8267322084dd0",
+    "libraries/c_sdk/standard/common/include/private/iot_static_memory.h": "e29cb67b4ae311146ddc0a1a3a5b6d3c730c35d0e62fbfa449c2af01f870bd68",
+    "libraries/c_sdk/standard/common/include/private/iot_taskpool_internal.h": "57bb1d19a0500b40fe95c57b1597ebb626b3ee50e84e39d5a734c26cd1ee5588",
+    "libraries/c_sdk/standard/common/include/types/iot_network_types.h": "332cda83668f386fefe68c4607b25ce092d07bfb2108e2680116d2f47530c890",
+    "libraries/c_sdk/standard/common/include/types/iot_taskpool_types.h": "8639e0fc095d0a4e008a71e3ff7bc80837760ed2a582526ab4c3569df49bdfdd",
+    "libraries/c_sdk/standard/common/iot_device_metrics.c": "fb8c693cd6c1ac238418a6e91eb80ce486d47fdefb62c5e8694f8b354bf2586c",
+    "libraries/c_sdk/standard/common/iot_init.c": "3487b79551027a7a5370de8f3fa436d63ff335dd2bfd8889b8bcf2c432cfb487",
+    "libraries/c_sdk/standard/common/iot_static_memory_common.c": "fb17f8df3ece78246e2672f8da724fdeb05ba6dc8a174ce3818b5a934be0105c",
+    "libraries/c_sdk/standard/common/logging/iot_logging.c": "f3e217bb35ba4ef7b50ced31656ab3486df8adb4848666c692969ee61f96acfa",
+    "libraries/c_sdk/standard/common/logging/iot_logging_task_dynamic_buffers.c": "b073ef7e8a16786765ad66c8b667bb663113ec8a9657c2684db16fdb2cf71b40",
+    "libraries/c_sdk/standard/common/taskpool/iot_taskpool.c": "6521834422a668e8fc0f70256a909ee4f4225fe63a5ef1a0b8444a3610640f3a",
+    "libraries/c_sdk/standard/common/taskpool/iot_taskpool_static_memory.c": "a1a470f94337e3261ee2bef7679766924c5eed3fab45dd7587300ab0710e58cd",
+    "libraries/c_sdk/standard/common/test/iot_memory_leak.c": "5267b4d0445ddba41a272ebf6afa6b2c09bf0528c033bb5586c2abe8fdf08927",
+    "libraries/c_sdk/standard/common/test/iot_tests_taskpool.c": "0212fb8060ae2973c8e676451776a57600624132ae0becf17c7bf1659180f4a1",
+    "libraries/c_sdk/standard/https/CMakeLists.txt": "1be13a94cfe75fabcac01033eb55a11a5a856de2e4c154fef744e3116fa1e868",
+    "libraries/c_sdk/standard/https/include/iot_https_client.h": "ec6a1e2f6ec0a7c878204f6b2decb4108900154bfad4dfd65fcc622d1dc0e5e9",
+    "libraries/c_sdk/standard/https/include/iot_https_utils.h": "bb400cfe4f5673a1a4c28c8dea83afb2a38d996f26a8cd08f8daab5030ac92b9",
+    "libraries/c_sdk/standard/https/include/types/iot_https_types.h": "1cf0c825d5a3685c4bca12c11c9f7660772c6aed4ebcf9a7f6924eaebd0da245",
+    "libraries/c_sdk/standard/https/src/iot_https_client.c": "ec458defc492a510639e52229ed8b1feea5eb1bf9667fc04d3f29e6fe2d2e7c7",
+    "libraries/c_sdk/standard/https/src/iot_https_utils.c": "bb5914d23539f6d85de8720553a1fcc4ceed1e390afb790eecbdc949b7de56c4",
+    "libraries/c_sdk/standard/https/src/private/iot_https_internal.h": "167d854fe70f2b001cf0116f7ecbea6d78a99a7405bf730182957530b5fbca95",
+    "libraries/c_sdk/standard/https/test/access/iot_test_access_https.h": "1659490e68175832bd7873a0d61e054806cf7645bd37fcf69e466cfeb4bb610c",
+    "libraries/c_sdk/standard/https/test/access/iot_test_access_https_client.c": "e09f75b6712068e4c683966a1056ebc3ed808c0ab2d177af8ed4cd931a08e549",
+    "libraries/c_sdk/standard/https/test/system/iot_tests_https_system.c": "e67c63efd9ea7eda741e783b3f10e48fd4921d4cbbd60a050a0c56b51225e29c",
+    "libraries/c_sdk/standard/https/test/unit/iot_tests_https_async.c": "38c807e9f545f8fb2a066041908f990dfeb1a713f85cb0e205c568e4d730d395",
+    "libraries/c_sdk/standard/https/test/unit/iot_tests_https_client.c": "6094100821132306b8d2c4810bfd6eb82b16b3d6f559dfcfe4bf7e0cd2827268",
+    "libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.c": "29009047c67f49a8e3ced1c575c3bf323efa5edbc9d4eeba21fd38796579621f",
+    "libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.h": "e6091ba51875e4b2f465eb3aa09e2c24801d7d90879b7f191cce19f654017f54",
+    "libraries/c_sdk/standard/https/test/unit/iot_tests_https_sync.c": "233a76d59029d3bc0790547e4a8b2c6fa6058710a4b3718e246ed7c664e08d76",
+    "libraries/c_sdk/standard/https/test/unit/iot_tests_https_utils.c": "4cbd94c7934d8a55e274ee89aafed8468921125038c33e04dcdb4a42d4d05522",
+    "libraries/c_sdk/standard/mqtt/CMakeLists.txt": "878a1efb6583fb5296bfc1a689f4397eaeef275ca7b8fa1cbe9979fec0fe0c09",
+    "libraries/c_sdk/standard/mqtt/include/iot_mqtt.h": "fb50634131e67e3b3fa13f424dda91e129a37881ea635c3f69a471c738688fe2",
+    "libraries/c_sdk/standard/mqtt/include/iot_mqtt_agent.h": "2aa863b7ce8574bade04080bdf0d23c1c129f894e8f9802b47b4c45c4180f8da",
+    "libraries/c_sdk/standard/mqtt/include/iot_mqtt_agent_config_defaults.h": "943237d4c04c68d71156cb5bfb58c5275cedf1af2489b9e1deceacd8c0eea598",
+    "libraries/c_sdk/standard/mqtt/include/iot_mqtt_config_defaults.h": "576511a6535bd5ef715b677fc94b9df734cc721bbc56dee91e2777950d56cb31",
+    "libraries/c_sdk/standard/mqtt/include/iot_mqtt_lib.h": "e8ece6522ae7e3843b955f5dd088479fec3caee19fa2533aed70b6913545b54a",
+    "libraries/c_sdk/standard/mqtt/include/types/iot_mqtt_types.h": "2c390189c301a5080f8883f97ec32ae6a89e89c1b796c695022fb3ecbdbb7321",
+    "libraries/c_sdk/standard/mqtt/src/iot_ble_mqtt_serialize.c": "ecca8bd66ba8a1a0471ad1c69e3083d292ae0b44a0740623fdad26ef2d9a99a7",
+    "libraries/c_sdk/standard/mqtt/src/iot_mqtt_agent.c": "f8ca4497fd1373a54c48fd6c394daeb1cade012696460638ec3273c4383951d6",
+    "libraries/c_sdk/standard/mqtt/src/iot_mqtt_api.c": "4d062c3783fd304303949ee224910a9ac2199c883ccc11e0515ddd5f235f7c41",
+    "libraries/c_sdk/standard/mqtt/src/iot_mqtt_network.c": "911b7a4ac22ec914279aba445dc964bda48a5cad8bb4dd1d400a240c04e3f2e0",
+    "libraries/c_sdk/standard/mqtt/src/iot_mqtt_operation.c": "0323928f43f9da468ced6b0912e7a367664b0db1f961308c444613b2c9d95711",
+    "libraries/c_sdk/standard/mqtt/src/iot_mqtt_serialize.c": "f6c105161a9210532fb296cb1c5768dd297dc38c5b698d19d4022a65eddd52b4",
+    "libraries/c_sdk/standard/mqtt/src/iot_mqtt_static_memory.c": "2ba3d94c64a9020b3bbfb33981af7feb3c40e4e70ca7bf70932653b2f0897d9e",
+    "libraries/c_sdk/standard/mqtt/src/iot_mqtt_subscription.c": "29f6be0b00a4601b83cf86b1ff635763bc36fd2ab80d9ed62dac5ba399e10c15",
+    "libraries/c_sdk/standard/mqtt/src/iot_mqtt_validate.c": "ae43ca50c83b1fe588fa0e9b5f45db39c7cecbaf575366dee5e292fc962460de",
+    "libraries/c_sdk/standard/mqtt/src/private/iot_mqtt_internal.h": "e92284fe951a6425888ab75aae5246c8455444eb13ade407c049ef290d66d152",
+    "libraries/c_sdk/standard/mqtt/test/access/iot_test_access_mqtt.h": "c89ee3d43eaca7b63563fd5d31a0c8743e969745c7c0cd9d4c60df779fe79698",
+    "libraries/c_sdk/standard/mqtt/test/access/iot_test_access_mqtt_api.c": "271d09770e054f7b9efa8e9ce7afed80157de4fa181d6c039292390a6a7a3637",
+    "libraries/c_sdk/standard/mqtt/test/access/iot_test_access_mqtt_subscription.c": "6a15d2897f8123d6f2ba92fbb71817f9834e78de24ef31671400d6912aa0e445",
+    "libraries/c_sdk/standard/mqtt/test/iot_test_mqtt_agent.c": "1e5c638b5d537baa27ae09c8c4b1de20ee795ee7986a26c5bc750165b31bacbb",
+    "libraries/c_sdk/standard/mqtt/test/system/iot_tests_mqtt_system.c": "1a419cc61f641f58ec58c5dc0b64a73fdf5e26357a66c357ee37908252984d27",
+    "libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_api.c": "0e5e5c25f0925c50c66ff623fc138f25e7dbad2412e6769541b290eb9ed70840",
+    "libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_metrics.c": "660d0607ca0454de62bd5d468e69c581009c508647f91ea0d2f5e95471543315",
+    "libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_receive.c": "fcd1f93d76efddf80aac5ea375c2c79ac73d231204a3710872a9ec81c4d6efca",
+    "libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_serialize_ble.c": "678595831ffc6c8e05aa786cb908413244ca09e4538783c5cb664a90c33b37d8",
+    "libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_subscription.c": "39a04c18b5aba4a90f7bed36821ea0bf580ecbea46fdd4a1dba1e3343337aa90",
+    "libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_validate.c": "1763c0c5c8b72ac9726ef8cddbee4bc26da5a6849441ac43ef91d4f7631e4e1a",
+    "libraries/c_sdk/standard/serializer/CMakeLists.txt": "dde7183a219ed813b6dad00bdf0423e5cee51c543db53a9365432471da41ad9e",
+    "libraries/c_sdk/standard/serializer/include/iot_json_utils.h": "1eec239b2f11cf33a48d21b407c5de0e4b41b378193411e05f277d3888fc882f",
+    "libraries/c_sdk/standard/serializer/include/iot_serializer.h": "feef4bf958a8132448469e748531b2676f5384955ebd703ff89af5c05e0d5958",
+    "libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_decoder.c": "e73ce8475bc88cd8076f8aaa4786cc67801c8f9e4c042e73f02b909b41e19f31",
+    "libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_encoder.c": "dad708d779ef301d21f7c2a3f836d51d922781cce3c2e2bf300658fa9fe9c77e",
+    "libraries/c_sdk/standard/serializer/src/iot_json_utils.c": "43de6b6cd3d4bde0b6d6c149db5dc0cf4b6c353b319395e5ced7d9c4404dced5",
+    "libraries/c_sdk/standard/serializer/src/iot_serializer_static_memory.c": "96719df8b3ddf15efdc1db9c7ed19bcca863e1f7730de4f8e72152fbdb559d5f",
+    "libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_decoder.c": "fd32529caacdaa782c50a036185fa3e34f3a33b898a0495318cba4aabf079fda",
+    "libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_encoder.c": "9006b3ab4961514c733d033a47f6bfdbb34bd5173d9166c27a599c11f380ac55",
+    "libraries/c_sdk/standard/serializer/test/iot_tests_deserializer_json.c": "cead202b001e35433fdd161869daf32b7360361b5757739d2a12657e0a3c9510",
+    "libraries/c_sdk/standard/serializer/test/iot_tests_serializer_cbor.c": "b640975d65270c2f9a1cd1f11ac54f2024e35dfce215ef2cc379114ab3a9ec2e",
+    "libraries/c_sdk/standard/serializer/test/iot_tests_serializer_json.c": "8232cbcb819748d33b09dafd7ea96b19c546508a7855efbbf3bb4208c40be50c",
+    "libraries/freertos_plus/aws/greengrass/CMakeLists.txt": "d5555c2f876f87447e75d79b46ede446d5358fa5eeac65f01862b8e37aca203d",
+    "libraries/freertos_plus/aws/greengrass/include/aws_ggd_config_defaults.h": "592247a0681131532826e1eecd6ab369f1f008af555e6715151d16eb9d11b16b",
+    "libraries/freertos_plus/aws/greengrass/include/aws_greengrass_discovery.h": "5a32671a94ed041fb129c5506051d2b6e1a633a1f8b9016039cb09e65583fd2f",
+    "libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c": "ebbe708848c90230c039af6c34b701a853a01ea825ffc28709b917504068ac42",
+    "libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.c": "01d178eb92756cfaf87640e17aa63023a75b3871d3009543c91eea68f4bbc403",
+    "libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.h": "ddd7a11afd3cbb920e1f164045612084f951cac563189aff94ff3aaf86ec4a29",
+    "libraries/freertos_plus/aws/greengrass/test/aws_greengrass_discovery_test_access_declare.h": "d916a480d1a6e250c06d4f069e39c83f01fa23a2c4846613c79fc6a10d871d41",
+    "libraries/freertos_plus/aws/greengrass/test/aws_greengrass_discovery_test_access_define.h": "6da3d22a406693219ba6d0b7eb32e0273c3afad64b6d2e96dd37dd3f0aac1daa",
+    "libraries/freertos_plus/aws/greengrass/test/aws_test_greengrass_discovery.c": "f9d1f6e4ef97ee2ead90de5110380627bcc93eb2367a87dcc098068adbc66149",
+    "libraries/freertos_plus/aws/greengrass/test/aws_test_helper_secure_connect.c": "88a3979e7b73d60dbda376c4a8606524585a935eb33c90a135b317da2e12439e",
+    "libraries/freertos_plus/aws/ota/CMakeLists.txt": "98f2b4fd78a711ed8cd12b1b7115832caf310c6e19b6254a1a0d528725d42ad9",
+    "libraries/freertos_plus/aws/ota/README.md": "bdc8d3bd2f2269825a306faa5c2f5972c2a8020a66704824dbe6a76747bf4080",
+    "libraries/freertos_plus/aws/ota/include/aws_iot_ota_agent.h": "20133570b5ae72c21872522964c17b7340e0fbbb2e6414dea433e87f6490b23a",
+    "libraries/freertos_plus/aws/ota/include/aws_ota_agent.h": "99d4ccc09f3aa59c802a8df59035dded7f683430cc0079ee0b19660716bc6c2f",
+    "libraries/freertos_plus/aws/ota/include/aws_ota_types.h": "3b2bd89b49b0b0c8337a4a7719acab41ad7a717dd39184c3a749af648fd8d592",
+    "libraries/freertos_plus/aws/ota/src/aws_iot_ota_agent.c": "a9a88406766198f59a53e4c9bf848599ae300f65fc77c408809523461edca4b2",
+    "libraries/freertos_plus/aws/ota/src/aws_ota_agent_internal.h": "f6340f61492229c293c3eddec6f5ca3ea96e03b435d58e7eca7e8c9d924b2cfb",
+    "libraries/freertos_plus/aws/ota/src/aws_ota_cbor.c": "5db604a49c19b3379d50cfd6579c2c475443a5d5fc9778d4f02d9f403813216a",
+    "libraries/freertos_plus/aws/ota/src/aws_ota_cbor.h": "3ac51bd25957b59b7a886a51443ae6a792d911d61ad074a8fa17ab5abf108571",
+    "libraries/freertos_plus/aws/ota/src/aws_ota_cbor_internal.h": "5bfd3da1a34ed2fc0cd4875c8e2607fe2b9e87586f836df0bc84b8b535346bc6",
+    "libraries/freertos_plus/aws/ota/src/aws_ota_pal.h": "4e5da39d84b31fa73d4771c34421a2d7e7144befbf0a50c37e7a9f77bee4ae77",
+    "libraries/freertos_plus/aws/ota/test/README.md": "4ced3c5630f4f80f1d521bbbf284a005764a3a30a0d493d03dda7b072c9e9f55",
+    "libraries/freertos_plus/aws/ota/test/aws_ota_agent_test_access_declare.h": "a745979a1ae18bae2b7b3390aa53b0306aff9b701f63bf59d1a2fb08442b66c2",
+    "libraries/freertos_plus/aws/ota/test/aws_ota_agent_test_access_define.h": "8840622ba5c25e9e6be9f87ec9b05b0ebb0cadbaf0a966b95e322617559054f4",
+    "libraries/freertos_plus/aws/ota/test/aws_ota_codesigner_certificate.h": "ffcf30a02307471f9d7fe7bd9da0075a39c4f336890503ec349d5df11e2e5961",
+    "libraries/freertos_plus/aws/ota/test/aws_ota_pal_test_access_declare.h": "118916397eb4f239dfd60a5828d12ad572fe85034ca96d4015262a26e641bc1a",
+    "libraries/freertos_plus/aws/ota/test/aws_ota_pal_test_access_define.h": "158dc9d6f9a72fcca52195aecea065b21be138049b96d27fe450cffe82e07103",
+    "libraries/freertos_plus/aws/ota/test/aws_test_ota_agent.c": "2f9974c592f0447330c82286b86f8a36ccb5f32b3267826cbb9097a185e827ff",
+    "libraries/freertos_plus/aws/ota/test/aws_test_ota_cbor.c": "3469b362fdf84c36a74bdf254f367baef35d4f6a5a1f39afcb2ed7aca5d3ee32",
+    "libraries/freertos_plus/aws/ota/test/aws_test_ota_end_to_end.c": "702d6baebe0330aed8830a73434fae991c4eeabaffc0162df1d6e0613cf997b6",
+    "libraries/freertos_plus/aws/ota/test/aws_test_ota_pal.c": "0198051c7cf07bbff0dbbbbb74abfb6237c03caee24bbc8513c533b0036a98f1",
+    "libraries/freertos_plus/aws/ota/test/aws_test_ota_pal_ecdsa_sha256_signature.h": "42a5e23f1ac89909112b19ab5fd8612eb4d6df3f650ae74d4ea70da21391d0b5",
+    "libraries/freertos_plus/aws/ota/test/aws_test_ota_pal_rsa_sha1_signature.h": "2ba06db28acd330abfe9c674746ab2f76b475f45747e8b16a2a0bfd2ffcb1778",
+    "libraries/freertos_plus/aws/ota/test/aws_test_ota_pal_rsa_sha256_signature.h": "15eb11238ed855dec7680c0aba0593811fa60534d57379a1109c520f7107215b",
+    "libraries/freertos_plus/aws/ota/test/aws_test_ota_signature_methods.h": "7f819a42935959627f3a842c44b22dc22089308a88f7372ffe5a5dd7ed724764",
+    "libraries/freertos_plus/aws/ota/test/test_files/describeStreamResponse.cbor": "b314ea57c902e90d41e2acebc0dc7dd9ba8924876d23a88754dd1c4765b21541",
+    "libraries/freertos_plus/aws/ota/test/test_files/ecdsa-sha256-signer.crt.pem": "79705066d68dc58ba6b5c9ad27e8c3f355184be078025ab76d1a1bc9a9cbeade",
+    "libraries/freertos_plus/aws/ota/test/test_files/ecdsa-sha256-signer.key.pem": "cb258c4d1d4e4fc355cd13051d4130719fba62257797cc3e17083443bb767b06",
+    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_0.cbor": "bf223676be6a282853bc22c64faee719ab74068a4d7770d977a6f37c67400fdd",
+    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_1.cbor": "72b22a9ea24016629f6d169b52e98e735ee9924bb4f13c1295f1efd5f6fc6abd",
+    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_10.cbor": "e6b9ee23bbd6d33240bebaccd8ee9978230ad8e7206926246ed36a1a8d60e4f4",
+    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_11.cbor": "14f6287ab8666bed3d2c0998763f1fd30baffee52e7fe79994c6ee20e868653b",
+    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_12.cbor": "4bf01a682c8fcfe0c47fb78b04d73d61aa31a79f6bcb07410bc530edc22a18da",
+    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_13.cbor": "fdfd00cb7c0874216925c7152c9491b38c9dd179bfaffeba954c4eb27947ca75",
+    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_14.cbor": "207819f2f6d5d82a3d3b1dcea0f508e4fe217ca243bad33090940d7bf1e03128",
+    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_15.cbor": "31910394ab515ca70c57aae3be88d14f9a35e3e66ba7c6c3132ef0b93830289d",
+    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_2.cbor": "cfb32bc6d6fafed74e985824f0b731837372179aece4d0a84087919a256ee59d",
+    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_3.cbor": "a4733133a6c983859459141909031bfbb153cca083b9e881f24542c05041ec7a",
+    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_4.cbor": "509a62af0b2906057735a635572e8e17aed57e8f0c42def8736db880823ef65d",
+    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_5.cbor": "b471bc1ef2bff3b72da84f9bef8bc4ec44fc6aec26d3501cf1b5991fb62732a8",
+    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_6.cbor": "bfa28de6fbb8330be654728e64d935c7582c8aae45ab992a4f6c0b7f19b803a2",
+    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_7.cbor": "e1614f15ca0fec4d3bec19e7d48be470066957de78bb41ba5870786a0d15f678",
+    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_8.cbor": "e66c279dded094b1654748fdbb527eb290f3f142ac3f4f7edfb2c439a49b984f",
+    "libraries/freertos_plus/aws/ota/test/test_files/getStreamResponse_9.cbor": "001b08a4a8fd96bd8130d1c5d69bfc290d989e0201640606afb7291eaf4766eb",
+    "libraries/freertos_plus/aws/ota/test/test_files/payload.bin": "0bacba52467cda682430974879ab4f5f90835e2fd9d552aab13103ab5606a032",
+    "libraries/freertos_plus/aws/ota/test/test_files/rsa-sha1-root-ca-cert-key.pem": "9e97f6f9ea210b532a7b86eac12f0d97a1b6c372e22ab86187bf98e5e208c4aa",
+    "libraries/freertos_plus/aws/ota/test/test_files/rsa-sha1-root-ca-cert.pem": "b550b03c7b547629bd0ecfdbc5804cd72d6b57dc0ec8cf8a1bd2616215d602a4",
+    "libraries/freertos_plus/aws/ota/test/test_files/rsa-sha1-signer.crt.pem": "4a05cecf862a081237cee9207be87080e2c50544959f74be2c3908d7857b9da7",
+    "libraries/freertos_plus/aws/ota/test/test_files/rsa-sha1-signer.key.pem": "46d820537f7b3d57c8f9ee63d9019602cc9329a6cd0b6a5f8ffcdb1838125601",
+    "libraries/freertos_plus/aws/ota/test/test_files/rsa-sha256-signer.crt.pem": "5de1c733099a249e2424c38aa9b732094914f260ba2582cc39f9198f46d0b7d5",
+    "libraries/freertos_plus/aws/ota/test/test_files/rsa-sha256-signer.key.pem": "baceeaf3b8fb0e16a4d3eb8a1b016dfcd41f752270f00649311ba567759e9e29",
+    "libraries/freertos_plus/aws/ota/test/test_files/rsasigner.crt": "2b92ff249815c106222fa13ef62bf2353f2ebb9180c36c474203efbc055ed2dc",
+    "libraries/freertos_plus/standard/crypto/CMakeLists.txt": "481befa1e33d2e1ebbacfd42083ebd9e4241905936132ec0d5f1c6161a9c21d4",
+    "libraries/freertos_plus/standard/crypto/include/iot_crypto.h": "cbd351a3aee32770e596ff524f83464962a1a2508b98f1b6e0a63a853471a6ed",
+    "libraries/freertos_plus/standard/crypto/src/iot_crypto.c": "8b06456ee56de6b87aa095e5e019d46d6ceca839af7e41ef65ea7f0cc2da1e8b",
+    "libraries/freertos_plus/standard/crypto/test/iot_test_crypto.c": "e21bc205e3687e9ffdc85e148b58f1d1b8da0f70743757e4147285f983402d12",
+    "libraries/freertos_plus/standard/freertos_plus_posix/CMakeLists.txt": "2d110d1d29d9ef1dd3f73912e38a451f498c24711466787004f5a7624a0b680f",
+    "libraries/freertos_plus/standard/freertos_plus_posix/doc/Doxyfile": "3e287bf8aedf173cd8f50e4715c2ffc33c7feb8ed81891a0556d582a8e3ca339",
+    "libraries/freertos_plus/standard/freertos_plus_posix/doc/DoxygenLayout.xml": "6f6ef8c521e2943d9b596e7904bcd22a8f2d6253ce70fe206a030831e03fcd32",
+    "libraries/freertos_plus/standard/freertos_plus_posix/doc/mainpage.txt": "b984715937c33e18551e35c1a0618fbeb8928f87b91b11b199dd9310ab3b87fd",
+    "libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX.h": "4037636aa244b563a904290f86126dc82eb650cdd3211ceecac3d743cff6657b",
+    "libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_internal.h": "fab27d092b8897253ae1c3dd18976fd06e8125072f0200b2924bef88dfc06a27",
+    "libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_portable_default.h": "af7b06e1c7cb17740d0b43098aa732403390e5c9152fe0b276bf3437059ba43c",
+    "libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_types.h": "fc3eed95bad712d3a27565653be68be1279037e2cd177b379a25bd5860f8a2f5",
+    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_clock.c": "22b3b7abcbfbcb18e8e893c9923f7ee2369229989a0030aa595b5038883e8cec",
+    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_mqueue.c": "386cbb26e35eec32b1560849d8a40a50067c8efb3f91d61d96035f4703751a6f",
+    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread.c": "8db4650a7ab80902b25df05dd9164ad2eea9d383297d724e52efe93272d2e39f",
+    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_barrier.c": "610f0bf792322443fd1d5ea9708c630182f77483f6edc4a96dd3345862704bb2",
+    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_cond.c": "b95319a6fa7b16a53a6cd368ebd924df16cbcea78b5825e378a7f369b763a618",
+    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_mutex.c": "f973d740fd75ba4e9c76fa090627cd891ecca81a65dbdac12f0bfa50b85bac5f",
+    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_sched.c": "4e9e9fed68a788c0097f9b36f25c653d3d3b7a5bfbbd69ca1d2f0b6c1288c97e",
+    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_semaphore.c": "a15fbc897411895a979d1061961f19c882a1072c301a153834008b92d764ceca",
+    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_timer.c": "5a4b375eda7fa7efac477ae74bed4db13f6bb658a106d4bf974e50ead1bd525f",
+    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_unistd.c": "2157a786f39c657446cb6c3f4042853c3d53562f5790a54181a4163a20807227",
+    "libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_utils.c": "6fc6228a1a8fcb37574669ee2c245d25db199d7e0bc894c6112ede88b5c6b302",
+    "libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_clock.c": "11df0efeba278cfbc1ed461d2dfc7fb460b124a2ead91a225dfa18a2014a72dc",
+    "libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_mqueue.c": "ae4cbfb65a939d95cba02eeb0c90b7f17549f6faa463125476a4b089b67eeaa0",
+    "libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_pthread.c": "c0a6dff40fa96369f80b9fb73ebd2f9cbcf6c8bda0da785b575083ae70fefe98",
+    "libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_semaphore.c": "1506ae458217a0826294cb1e5f0f263672da5abb33029f41e18b3c7c9411ef1b",
+    "libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_stress.c": "50b8ef5e246fd36a006823a97f8d6761c979427aadbdb69c6c1d185abc3a2676",
+    "libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_timer.c": "578255232702a9043a8ca15174db9166f40daa07922d4e9abd6f7f378e4ae06f",
+    "libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_unistd.c": "0f028f2f8db4325229664da66a6d5baecda9c20261fe18fa9a28171fb8b4606d",
+    "libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_utils.c": "d1dbda9ecceff55c93fb081524cf4d7e3ea78ea553a2a4f391ebddf6fcf47b45",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/CMakeLists.txt": "663553fb35c28cac755dc753ac92c623a2fa35784bf63461333df5340517b407",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOSIPConfigDefaults.h": "6d3f3dc149f85772450d3a414b7b8f89bd3d54bc35ea9f988fc3c2d051e3d4d1",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_ARP.h": "7e828633d91342cfd3d4e3ec81cdacf7f0246d27865c9129036587d7c8adc34d",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_DHCP.h": "f92ba1f76e2c529d929535e4eb44a97b4237784d985b9dd00981d4cd41ca6c2c",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_DNS.h": "3e4a424e9379a36995ebf21d5f8d035c0413f75024f9628c65dbfebdf56eff33",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_IP.h": "23502a33e90e201c9fcc093f622c1eaccc34e68b6af06e2c0f8ba4d4adc2e42a",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_IP_Private.h": "3f2be6854af6e9c8e60c64b170d93c558dd8d30ea49402db197729d77c99a4f1",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_Sockets.h": "3b4cfb93fe2f9c019188a73391b08ae29b65a5836de313ae1037008e6e799f87",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_Stream_Buffer.h": "150d336fde8be25ceecce3a07cf8e343e0c1495ce8c2f02dcdbe956fc1cf8e3a",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_TCP_IP.h": "89e362e5abc51863b4eeb399b0eedf4b1e8e1ab72364aefacd40c99ee28328da",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_TCP_WIN.h": "68d07b02c55947b5d9c29b29b2c364d75c4ff5ff75cefcb98c36b4fb3f45e260",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_UDP_IP.h": "5033e6df02cda6e0550313bf36e68f013d575398bd01ab267ef004044299e931",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_errno_TCP.h": "e0f7c32e159489be96fd2b234bbc5cfc68d8fec7ffc67702bbe0c58414b44e34",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/include/IPTraceMacroDefaults.h": "27975034f62670ab79b52a0802b59cb4a5756fab91f1ea7c1ab16744a7d1f062",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/include/NetworkBufferManagement.h": "86d0d1c1715647a1d9c8a170b9b0d68f5471ffc3e8ae93e4350e582a1ad5d52e",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/include/NetworkInterface.h": "8b71e8ff9ccb1491a5b7501d7309ca58397cae262096852d3f58fb6643cb8f78",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_ARP.c": "a2b70bdc2054e204f0e12b431b61ece0eda9a77c20f80d2aa9b7c67f354a26a3",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DHCP.c": "c0944d2ef2aa5ec1652f4ae0d889e8e8f2f840f64cc87dfa903ea7ed6300bf1b",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DNS.c": "54ef63be33bb8b43464affcf51b018274ff2eeb52e363e94d2c6ee292a91e2e2",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_IP.c": "88bfe85c4131b34b1dc6293a8e3a859a780054d92b9bed624b0bf3e8106cb887",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_Sockets.c": "191b1c44ef278341b5aff409dcfa703ee7e53204583bf4b7071d4be7c895af68",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_Stream_Buffer.c": "02d4163b8ca2f16b9bb57ce33460299816c0904beff50d5e7f798984710f60cb",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_IP.c": "d1856a5630d648c714e72bd172de81a365cd2a9402d6a7ca09b9f33a5268b419",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_WIN.c": "bcf7b141c39711dcf2e8dc1795099ee6c0d3b275f78fb3c6c24e9c8db70f6807",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_UDP_IP.c": "7fe3727ca04dfe988bc0e2c5ddf2d4b15c3bd4ee0b240782692151beea27a1a2",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/source/History.txt": "7a535a5dea9141bb18bd18e706049244863cf73f70251c45a0530deb7ae33d0d",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/source/ReadMe.url": "6c821ec481c65c354d181c49e519d0dde0def21bde8e85e7350bdb87a946941f",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/source/readme.txt": "650a32b9db6e75a5bddfded2e44b5e137a9f9ba76124451eadd452b00c3c8010",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_freertos_tcp_test_access_declare.h": "9d427075622ce067f60cfb3258291c448ff5a9c756e42ff36f00a25990be642e",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_freertos_tcp_test_access_dns_define.h": "4a11f4d6303dd99d5386bc0e2ded86b3209f482c92b1dbecfa5e07b941aa4d05",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_freertos_tcp_test_access_tcp_define.h": "c88cd068d8a6afef8d23d62a2aafb6375670f1e0b5d3d26ac07e5b8ec4531e52",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_test_freertos_tcp.c": "a6ebbaa2d0eba2d40696434d882eec0930c53dec25e45a30fedacbd9bfdffad4",
+    "libraries/freertos_plus/standard/freertos_plus_tcp/uncrustify.cfg": "5790174e7e95345f14440476919e677b1117df3e916f352223cb63711d86dea7",
+    "libraries/freertos_plus/standard/pkcs11/CMakeLists.txt": "8cf9c51463258d197f4a7aede30303b7485bc156b3855482017d8e94715dab35",
+    "libraries/freertos_plus/standard/pkcs11/include/iot_pkcs11.h": "40112dd44106de68a8b81073155202505b3e06959e917a08f01f6f942bf68aec",
+    "libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c": "21d497ee63c606be4ea615379b332d55bdf022b6fde111fe47b0c3f4e30ea5f5",
+    "libraries/freertos_plus/standard/tls/CMakeLists.txt": "cf0ef0baf3fa24b73cc492a69a82e6b6f02f1aa0b413aea63e48795c37ea7f77",
+    "libraries/freertos_plus/standard/tls/include/iot_tls.h": "7271bcaaeaafeb582a42b13c8a255797a1e1ec185c07a1ac23434711e9eafc12",
+    "libraries/freertos_plus/standard/tls/src/iot_tls.c": "c5176bc669fa609ab7de721c290252abb2e0a228c84c9bb4f24ec96bf00f0480",
+    "libraries/freertos_plus/standard/tls/test/iot_test_tls.c": "7796e245c284743745265c5671a2d2e07516eb8d934485c485c5a2f70b0f6f51",
+    "libraries/freertos_plus/standard/tls/test/iot_test_tls.h": "914a6b27c02c49540dd96cd7f356d41a1f221638c8a427a31c52d123d15dbb37",
+    "libraries/freertos_plus/standard/utils/CMakeLists.txt": "a0be20a8cded660baefa1462d1dd3287da59dd25123bb6e36b26d5e137820e5f",
+    "libraries/freertos_plus/standard/utils/include/iot_pki_utils.h": "3f93acbeb781c6253dff1704535d553367c53a20b3f2504b18b452ce2af169a1",
+    "libraries/freertos_plus/standard/utils/include/iot_system_init.h": "4b52350380638d92d534a427d06b1018eb138e6b5a0a211fdbb1670301e7b5e1",
+    "libraries/freertos_plus/standard/utils/src/iot_pki_utils.c": "084edfe98d189b6f09a87ee0c9473a3759e1cd210426fbd5d0a2155e3b190d1b",
+    "libraries/freertos_plus/standard/utils/src/iot_system_init.c": "cdf9f26d8c32b5b38277bf56778ac7a661a6a018a959960805635472d8b37eed",
+    "tests/CMakeLists.txt": "d5790f651c22a7b87d64cca7e9d8ad9e3c385e428c8ae3263a620ee21e64ea34",
+    "tests/bleTestsScripts/attributesCommon.py": "635c0ad12f5aab5bf74b26ca9c1b511e43e4e6b65acd40083f619ddaacf2365f",
+    "tests/bleTestsScripts/bleAdapter.py": "a34f63c72665098701566a0fbde5a14537255ecb2a314839a276d95ac339ca07",
+    "tests/bleTestsScripts/gattClient.py": "620c6690c84d0f8ab971a7d4d0b23ba6422e0090c230d63a90243a1fc5736e2b",
+    "tests/bleTestsScripts/runPI.sh": "48a00b22ad8ba7e2a0aa3830035e81fd049275a2c67a48ee7de265720e52c3c5",
+    "tests/bleTestsScripts/securityAgent.py": "245c488c28cd4e464bbfe7bcc5bdada5c13dbc1c656494bf32a9da7aa256cd55",
+    "tests/bleTestsScripts/startTests.py": "2da698fe78df70e37693166f3d76b1f1533133b35bd35a7511d4ef212de14a5b",
+    "tests/bleTestsScripts/test1.py": "fc0b06a187f9a4367017d2be23e650e60becef81743ed9d008052771617886e5",
+    "tests/bleTestsScripts/testClass.py": "cacd3c63570babe60341e2dffbef94d6f3e6f4c0f97eac9ced90ce47c6da325a",
+    "tests/bleTestsScripts/testutils.py": "c26cdd2fec39b86f51a0376ffb14e49fd3c56f99e83e5e2606863c278b311b02",
+    "tests/common/aws_test.c": "dd0cde60c09c501d4ce0ff9a2e0a702b91ee3ea04ba1af6b34e01b09db11903b",
+    "tests/common/aws_test_framework.c": "d3d576bbea467af6f99a8a46359a06faf6acc4361ba1f4b00abdec3ce81d2e0d",
+    "tests/common/aws_test_runner.c": "456466f4efa22a0c0afd500f1a2286e6cc01ddfe1d073639ec2d30caba6fc36e",
+    "tests/common/iot_test_freertos.c": "fe7f6be4d878849ae1e85fb4e6b49dad35fa19969ff9ddf7faae532f5405369e",
+    "tests/common/iot_tests_network.c": "11ae5493b41f2a9d81ad892f46d9c82fb5b98905ac1fe0885638de9bce39151f",
+    "tests/include/aws_application_version.h": "d2d127184233fd28b51e635c8632e603491b50915770c45c1160dcb347fa739d",
+    "tests/include/aws_clientcredential.h": "3cc48f3067c492b23c4e3369e50da7347e9e2c00beb07903fb7b9c1c98795550",
+    "tests/include/aws_clientcredential_keys.h": "73cf633f7d5642387a96e91f727525749fadef1cb15b4508f1cc84b05aa2aec7",
+    "tests/include/aws_test_framework.h": "e1b1fdd8da094c0859b16e16c1729619f3ef73af5994fae61141739b4398e4fd",
+    "tests/include/aws_test_runner.h": "7eea7de8014c32523f10bfa4f50adbc240b4b69dd33b23d7b06aebca7332f85c",
+    "tests/include/aws_test_tcp.h": "a604f14d63bc38ded64937cca87e72927b7a8cf8f2ddffae6f2c78b9d5a3516e",
+    "tests/include/aws_test_utils.h": "6aeebad3fdffaa85ec2e2a77d94295ea75c4f6b716055ae4953afa651cc9669e",
+    "tests/include/aws_unity_config.h": "1d715c5b26a1faf4893b1d5ab2f1bd745283a6883b79ae10de9164da13510844",
+    "tests/include/iot_config_common.h": "1c9014fc6466e2ee171916d1fcbfd5728542b903229eef2a24a3b38ba5320b98"
 }
\ No newline at end of file
diff --git a/demos/README.md b/demos/README.md
index 720e5bb51..e3fb5dc29 100644
--- a/demos/README.md
+++ b/demos/README.md
@@ -1,59 +1,20 @@
-## Running the demos
-More details available on our getting started page (on development): https://docs.aws.amazon.com/freertos/latest/userguide/freertos-getting-started.html
+Amazon FreeRTOS can be built utilizing a supported IDE toolchain or with cmake.  For additional instructions for each individual board, refer to the top level README for the Getting Started Guides: https://github.com/aws/amazon-freertos/blob/master/README.md
 
-### Selecting your demos
-Select your demo by changing the ```aws_demo_config.h``` file. 
-
-For example for ESP32 it is located here ```./vendors/espressif/boards/esp32/aws_demos/common/config_files```  
-
-By default ```#define CONFIG_MQTT_DEMO_ENABLED``` MQTT demos is selected. 
-
-### Cmake
-Refer to CMake readme page in folder
-
-```./tools/cmake```
-
-**Note**: The cmake commands provided in example are made to be executed from the root directory or with the following command:  
-```-C <your-build-directory>``` 
-
-### Buiding instruction per boards
-#### ESP32 
-
-First use _cmake_ to generate the project files for Espressif, which uses _make_ to build: 
-
-CMake command for building Espressif demos:
-(from the root directory ofyour clone)
 
-```cmake -DVENDOR=espressif -DBOARD=esp32_wrover_kit -DCOMPILER=xtensa-esp32 -S . -B <you build directory>```
+### Selecting a Demo
 
-if you want to build tests instead:
+There are a variety of demos available for each user to explore the functionality available within Amazon FreeRTOS.  To select which demo to enable, please follow the steps below:
 
-```cmake -DVENDOR=espressif -DBOARD=esp32_wrover_kit -DCOMPILER=xtensa-esp32 -S . -B <you build directory> -DAFR_ENABLE_TESTS=1```
+1. Navigate to  ```./vendors/<VENDOR_NAME>/boards/<BOARD>/aws_demos/common/config_files```  
+2. Open ```aws_demo_config.h``` file. 
+3. The defines are used to select which demo will be enabled from the list of available demos
+4. By default, ```#define CONFIG_MQTT_DEMO_ENABLED``` MQTT demos is selected. 
+5. Replace the ```#define``` with your demo of choice if necessary
+6. Compile your project utilizing IDE or with cmake
 
-if you want to build the debug flavor of the image:
-
- ```cmake -DVENDOR=espressif -DBOARD=esp32_wrover_kit -DCOMPILER=xtensa-esp32 -S . -B <you build directory> -DCMAKE_BUILD_TYPE=Debug```
-
- 
-then use make to build, e.g.(-j4 used to compile faster, with 4 cores): 
-
-```make -j4```
-
-You can flash your board and see the logs with the following commands:
-
-**Erase flash**: ```./vendors/espressif/esp-idf/tools/idf.py erase_flash -B <your-build-directory> ```
-
-**Flash binary to the board**: ```make flash or ./vendors/espressif/esp-idf/tools/idf.py flash -B <your-build-directory> ```
-
-**Monitor**: ```./vendors/espressif/esp-idf/tools/idf.py monitor -p /dev/ttyUSB1 -B <your-build-directory> ```
-
-You can also combine commands. e.g.:  
+Select your demo by changing the ```aws_demo_config.h``` file. 
 
-```./vendors/espressif/esp-idf/tools/idf.py erase_flash flash monitor -p /dev/ttyUSB1 -B <your-build-directory> ```
- 
- #### Nordic
- Does not use CMake. Project can be compiled and flashed directly after installing Segger Embedded Studio:  
- https://www.nordicsemi.com/?sc_itemid=%7B48E11346-206B-45FD-860D-637E4588990B%7D.
- Do flash the bootloader prior flashing the demos app.
 
+### amazon-freeRTOS/projects
 
+The ```./projects``` folder contains the IDE test and demo projects for each vendor and their boards.  The majority of boards can be built with both IDE and cmake (there are some exceptions!).  Please refer to the Getting Started Guides referred to in the README for board specific instructions.  
diff --git a/demos/ble/aws_ble_gatt_server_demo.c b/demos/ble/aws_ble_gatt_server_demo.c
index 066de5d3a..d9b513140 100644
--- a/demos/ble/aws_ble_gatt_server_demo.c
+++ b/demos/ble/aws_ble_gatt_server_demo.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/ble/iot_ble_numericComparison.c b/demos/ble/iot_ble_numericComparison.c
index 2206c7887..e1852166d 100644
--- a/demos/ble/iot_ble_numericComparison.c
+++ b/demos/ble/iot_ble_numericComparison.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/defender/aws_iot_demo_defender.c b/demos/defender/aws_iot_demo_defender.c
index f54e2a35b..458f836c7 100644
--- a/demos/defender/aws_iot_demo_defender.c
+++ b/demos/defender/aws_iot_demo_defender.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/demo_runner/aws_demo.c b/demos/demo_runner/aws_demo.c
index 7c9672cb0..0462cbe1c 100644
--- a/demos/demo_runner/aws_demo.c
+++ b/demos/demo_runner/aws_demo.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/demo_runner/aws_demo_network_addr.c b/demos/demo_runner/aws_demo_network_addr.c
index 09a00062f..e79ff2191 100644
--- a/demos/demo_runner/aws_demo_network_addr.c
+++ b/demos/demo_runner/aws_demo_network_addr.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/demo_runner/aws_demo_version.c b/demos/demo_runner/aws_demo_version.c
index 7b8fb1ca0..a4f794be5 100644
--- a/demos/demo_runner/aws_demo_version.c
+++ b/demos/demo_runner/aws_demo_version.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/demo_runner/iot_demo_freertos.c b/demos/demo_runner/iot_demo_freertos.c
index b8d45adeb..4f486b6f6 100644
--- a/demos/demo_runner/iot_demo_freertos.c
+++ b/demos/demo_runner/iot_demo_freertos.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/demo_runner/iot_demo_runner.c b/demos/demo_runner/iot_demo_runner.c
index e7efba402..08100208d 100644
--- a/demos/demo_runner/iot_demo_runner.c
+++ b/demos/demo_runner/iot_demo_runner.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/dev_mode_key_provisioning/include/aws_dev_mode_key_provisioning.h b/demos/dev_mode_key_provisioning/include/aws_dev_mode_key_provisioning.h
index 17b6c75eb..487fe9c87 100644
--- a/demos/dev_mode_key_provisioning/include/aws_dev_mode_key_provisioning.h
+++ b/demos/dev_mode_key_provisioning/include/aws_dev_mode_key_provisioning.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
@@ -222,6 +222,37 @@ CK_RV xProvisionGenerateKeyPairEC( CK_SESSION_HANDLE xSession,
  */
 CK_RV xDestroyDefaultCryptoObjects( CK_SESSION_HANDLE xSession );
 
+/**
+ * \brief Destroys specified credentials in PKCS #11 module.
+ *
+ * \note Some ports only support lookup of objects by label (and
+ * not label + class).  For these ports, only the label field is used
+ * for determining what objects to destroy.
+ *
+ * \note Not all ports support the deletion of all objects.  Successful
+ * function return only indicates that all objects for which destroy is
+ * supported on the port were erased from non-volatile memory.
+ *
+ *   \param[in] xSession         A valid PKCS #11 session handle.
+ *   \param[in] ppxPkcsLabels    An array of pointers to object labels.
+ *                               Labels are assumed to be NULL terminated
+ *                               strings.
+ *   \param[in] pxClass          An array of object classes, corresponding
+ *                               to the array of ppxPkcsLabels.  For example
+ *                               the first label pointer and first class in
+ *                               ppxPkcsLabels are used in combination for
+ *                               lookup of the object to be deleted.
+ *   \param[in] ulCount          The number of label-class pairs passed in
+ *                               to be destroyed.
+ *
+ *   \return CKR_OK if all credentials were destroyed.
+ *   Otherwise, a positive PKCS #11 error code.
+ */
+CK_RV xDestroyProvidedObjects( CK_SESSION_HANDLE xSession,
+                               CK_BYTE_PTR * ppxPkcsLabels,
+                               CK_OBJECT_CLASS * pxClass,
+                               CK_ULONG ulCount );
+
 /**
  * \brief Destroys specified credentials in PKCS #11 module.
  *
diff --git a/demos/greengrass_connectivity/aws_greengrass_discovery_demo.c b/demos/greengrass_connectivity/aws_greengrass_discovery_demo.c
index 51edcb810..1ae1182d1 100644
--- a/demos/greengrass_connectivity/aws_greengrass_discovery_demo.c
+++ b/demos/greengrass_connectivity/aws_greengrass_discovery_demo.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/https/CMakeLists.txt b/demos/https/CMakeLists.txt
new file mode 100644
index 000000000..19698e19a
--- /dev/null
+++ b/demos/https/CMakeLists.txt
@@ -0,0 +1,19 @@
+# AFR HTTPS demo
+afr_demo_module(https)
+
+afr_set_demo_metadata(ID "HTTPS_SYNC_DOWNLOAD_DEMO")
+afr_set_demo_metadata(DESCRIPTION "Examples that demonstrate the HTTPS Client")
+afr_set_demo_metadata(DISPLAY_NAME "HTTPS Client Demos")
+
+afr_module_sources(
+    ${AFR_CURRENT_MODULE}
+    INTERFACE
+        "${CMAKE_CURRENT_LIST_DIR}/iot_demo_https_s3_download_sync.c"
+        "${CMAKE_CURRENT_LIST_DIR}/iot_demo_https_s3_download_async.c"
+        "${CMAKE_CURRENT_LIST_DIR}/iot_demo_https_common.c"
+)
+afr_module_dependencies(
+    ${AFR_CURRENT_MODULE}
+    INTERFACE
+        AFR::https
+)
diff --git a/demos/https/README.md b/demos/https/README.md
new file mode 100644
index 000000000..0fb72b0f2
--- /dev/null
+++ b/demos/https/README.md
@@ -0,0 +1,46 @@
+# Presigned S3 URLs Generator 
+
+**presigned_url_gen.py** generates pre-signed URLs for S3 GET and PUT HTTP request access.  
+
+### Dependencies
+* Python 2.7+ or Python 3+
+* boto3
+* argparse
+
+### Pre-requisites
+1. Install the dependencies.  
+   ```
+   pip install boto3 arparse
+   ```
+
+1. You will need an AWS Account with S3 access before beginning. You must install and configure the AWS CLI in order to 
+   use this script.  
+   For information on AWS S3 please see: https://docs.aws.amazon.com/AmazonS3/latest/dev/Welcome.html  
+   For AWS CLI installation information please see: https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html  
+   For AWS CLI configuration information please see: https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html  
+   ```
+   aws configure
+   ```
+
+### Usage
+1. Run the presigned_url_gen.py with your s3 **bucket-name** and s3 object key **object-key**.  
+   ```
+   python presigned_url_gen.py --bucket my-bucket --key object-key
+   ```  
+   An example expected output:  
+   ```
+   #define IOT_DEMO_HTTPS_PRESIGNED_GET_URL    https://my-bucket.s3.amazonaws.com/object-key.txt?AWSAccessKeyId=AAAAAAAAAAAAAAAAAAAA&Expires=1560555644&Signature=SomeHash12345UrlABcdEFgfIjK%3D  
+   #define IOT_DEMO_HTTPS_PRESIGNED_PUT_URL    https://my-bucket.s3.amazonaws.com/object-key.txt?AWSAccessKeyId=ABABABABABABABABABAB&Expires=1560555644&Signature=SomeHash12345UrlLMnmOPqrStUvW%3D
+   ```
+1. Copy and paste the output to **iot_config.h** for macro **IOT_DEMO_HTTPS_PRESIGNED_GET_URL** and **IOT_DEMO_HTTPS_PRESIGNED_PUT_URL**.  
+   ```
+   #define IOT_DEMO_HTTPS_PRESIGNED_PUT_URL     https://my-bucket.s3.amazonaws.com/object-key.txt?AWSAccessKeyId=AAAAAAAAAAAAAAAAAAAA&Expires=1560555644&Signature=SomeHash12345UrlABcdEFgfIjK%3D
+   #define IOT_DEMO_HTTPS_PRESIGNED_GET_URL     https://my-bucket.s3.amazonaws.com/object-key.txt?AWSAccessKeyId=AAAAAAAAAAAAAAAAAAAA&Expires=1560555644&Signature=SomeHash12345UrlABcdEFgfIjK%3D
+   ```
+
+### Parameter Info
+#### --bucket  
+    The name of your S3 bucket where you will download or upload.  
+#### --key  
+    The name of the existing object you wish to download (GET).  
+    Or the name of the object you wish to upload (PUT).  
\ No newline at end of file
diff --git a/demos/https/iot_demo_https_common.c b/demos/https/iot_demo_https_common.c
new file mode 100644
index 000000000..35931c408
--- /dev/null
+++ b/demos/https/iot_demo_https_common.c
@@ -0,0 +1,223 @@
+/*
+ * Amazon FreeRTOS V201908.00
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+/**
+ * @file iot_demo_https_common.c
+ * @brief Implementation of common routines used in the HTTPS S3 access demos.
+ */
+/* The config header is always included first. */
+#include "iot_config.h"
+
+/* C Standard headers. */
+#include <string.h>
+
+/* Common header. */
+#include "iot_demo_https_common.h"
+
+/* Amazon FreeRTOS includes. */
+#include "iot_https_utils.h"
+#include "iot_demo_logging.h"
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief HTTP standard header value for requesting a range of bytes from 0 to 0.
+ *
+ * This is used to get the size of the file from S3. A HEAD request is forbidden with a presigned URL. Performing a
+ * HEAD request with S3 requires generating a Sigv4 signature in an Authorization header field. We work around this by
+ * performing a GET on Range: bytes=0-0. Then extracting the size of the file from the Content-Range header field in
+ * the response. */
+#define RANGE_0_TO_0_HEADER_VALUE            "bytes=0-0"
+#define RANGE_0_TO_0_HEADER_VALUE_LENGTH     ( 9 )
+
+/**
+ * @brief HTTP standard header field "Content-Range"
+ */
+#define CONTENT_RANGE_HEADER_FIELD           "Content-Range"
+#define CONTENT_RANGE_HEADER_FIELD_LENGTH    ( 13 )
+
+/*-----------------------------------------------------------*/
+
+int _IotHttpsDemo_GetS3ObjectFileSize( uint32_t * pFileSize,
+                                       IotHttpsConnectionHandle_t connHandle,
+                                       const char * pPath,
+                                       uint32_t pathLen,
+                                       const char * pAddress,
+                                       uint32_t addressLen,
+                                       uint8_t * pReqUserBuffer,
+                                       uint32_t reqUserBufferLen,
+                                       uint8_t * pRespUserBuffer,
+                                       uint32_t respUserBufferLen )
+{
+    /* Status of HTTPS Client API. */
+    IotHttpsReturnCode_t httpsClientStatus = IOT_HTTPS_OK;
+    /* The HTTPS request configurations for getting the file size. */
+    IotHttpsRequestInfo_t fileSizeReqConfig = { 0 };
+    /* The HTTPS response configurations for getting the file size. */
+    IotHttpsResponseInfo_t fileSizeRespConfig = { 0 };
+    /* Synchronous request specific configurations. */
+    IotHttpsSyncInfo_t reqSyncInfo = { 0 };
+    /* Synchronous response specific configurations. */
+    IotHttpsSyncInfo_t respSyncInfo = { 0 };
+
+    /* Handle identifying the HTTP request. This is valid after the request has been initialized with
+     * IotHttpsClient_InitializeRequest(). */
+    IotHttpsRequestHandle_t fileSizeReqHandle = NULL;
+
+    /* Handle identifying the HTTP response. This is valid after the reponse has been received with
+     * IotHttpsClient_SendSync(). */
+    IotHttpsResponseHandle_t fileSizeRespHandle = NULL;
+
+    /* The status of HTTP response for this request. */
+    uint16_t respStatus = IOT_HTTPS_STATUS_OK;
+
+
+    /* String to store the Content-Range header field value. This header field as we are requesting in this demo is of
+     * the form: "Content-Range: bytes 0-0/FILESIZE", where file size would be the length of the maximum 32 bit integer
+     * which is 10.  Since the header field value "bytes 0-0/FILESIZE" is less than the maximum possible Range header
+     * field value, we size this string to the Range header field value.*/
+    char contentRangeValStr[ RANGE_VALUE_MAX_LENGTH ] = { 0 };
+    /* The location of the file size in the contentRangeValStr. */
+    char * pFileSizeStr = NULL;
+
+    /* We are retrieving the file size synchronously because we cannot run this demo without the file size anyways
+     * so it's OK to block. */
+    reqSyncInfo.pBody = NULL;  /* This is a GET request so there is no data in the body. */
+    reqSyncInfo.bodyLen = 0;   /* Since there is not data in the body the length is 0. */
+    respSyncInfo.pBody = NULL; /* We don't care about the body in this request since we want the file size that will
+                                * be found in a header value. */
+    respSyncInfo.bodyLen = 0;  /* Since we are not saving any response body the length is 0. */
+
+    /* Set the request configurations. */
+    fileSizeReqConfig.pPath = pPath;
+    fileSizeReqConfig.pathLen = pathLen;
+    fileSizeReqConfig.pHost = pAddress;
+    fileSizeReqConfig.hostLen = addressLen;
+    fileSizeReqConfig.method = IOT_HTTPS_METHOD_GET; /* Performing a HEAD request with S3 requires generating a Sigv4 signature
+                                                      * in an Authorization header field. We work around this by performing a GET
+                                                      * on Range: bytes=0-0. The size of the file is extracted from the Content-Range
+                                                      * header field in the response. */
+    fileSizeReqConfig.userBuffer.pBuffer = pReqUserBuffer;
+    fileSizeReqConfig.userBuffer.bufferLen = reqUserBufferLen;
+    fileSizeReqConfig.isAsync = false;
+    fileSizeReqConfig.u.pSyncInfo = &reqSyncInfo;
+
+    /* Set the response configurations. */
+    fileSizeRespConfig.userBuffer.pBuffer = pRespUserBuffer;
+    fileSizeRespConfig.userBuffer.bufferLen = respUserBufferLen;
+    fileSizeRespConfig.pSyncInfo = &respSyncInfo;
+
+    /* Initialize the request to retrieve a request handle. */
+    httpsClientStatus = IotHttpsClient_InitializeRequest( &fileSizeReqHandle, &fileSizeReqConfig );
+
+    if( httpsClientStatus != IOT_HTTPS_OK )
+    {
+        IotLogError( "An error occurred in IotHttpsClient_InitializeRequest() with error code: %d", httpsClientStatus );
+        return EXIT_FAILURE;
+    }
+
+    /* Add the header to get bytes=0-0. S3 will respond with a Content-Range header that contains the size of the file
+     * in it. This header will look like: "Content-Range: bytes 0-0/FILESIZE". The body will have a single byte that
+     * we are ignoring. */
+    httpsClientStatus = IotHttpsClient_AddHeader( fileSizeReqHandle, RANGE_HEADER_FIELD, RANGE_HEADER_FIELD_LENGTH, RANGE_0_TO_0_HEADER_VALUE, RANGE_0_TO_0_HEADER_VALUE_LENGTH );
+
+    if( httpsClientStatus != IOT_HTTPS_OK )
+    {
+        IotLogError( "Failed to write the header \"Range: bytes=0-0\" into the request. With error code: %d", httpsClientStatus );
+        return EXIT_FAILURE;
+    }
+
+    /* Send the request synchronously. */
+    httpsClientStatus = IotHttpsClient_SendSync( connHandle, fileSizeReqHandle, &fileSizeRespHandle, &fileSizeRespConfig, 0 );
+
+    if( httpsClientStatus != IOT_HTTPS_OK )
+    {
+        IotLogError( "There has been an error receiving the response. The error code is: %d", httpsClientStatus );
+
+        /* Even though there is an error we could still read headers and body that may have been
+         * filled in the buffer depending on the error. */
+    }
+
+    /* Read the response status to see if we successfully got a partial content response. If we did not then
+     * we failed and will exit the demo. */
+    httpsClientStatus = IotHttpsClient_ReadResponseStatus( fileSizeRespHandle, &respStatus );
+
+    if( httpsClientStatus != IOT_HTTPS_OK )
+    {
+        IotLogError( "Could not read the response status. Error code %d", httpsClientStatus );
+        return EXIT_FAILURE;
+    }
+
+    if( respStatus != IOT_HTTPS_STATUS_PARTIAL_CONTENT )
+    {
+        IotLogError( "Could not retrieve the file size. s3 responded with response status: %d", respStatus );
+
+        if( respStatus == IOT_HTTPS_STATUS_TEMPORARY_REDIRECT )
+        {
+            IotLogInfo( "If the bucket was created less than 24 hours ago, you must add the region the bucket was created to the presigned URL. " );
+            IotLogInfo( "You can change the Origin Domain Name from bucketname.s3.amazonaws.com to bucketname.s3-<region>.amazonaws.com." );
+        }
+
+        if( respStatus == IOT_HTTPS_STATUS_FORBIDDEN )
+        {
+            IotLogInfo( "Pre-signed URL may have expired or you do not have permissions on this account to access the S3 object." );
+        }
+
+        if( respStatus == IOT_HTTPS_STATUS_NOT_FOUND )
+        {
+            IotLogInfo( "The specific object key in the presigned URL was not found in the bucket. " );
+        }
+
+        return EXIT_FAILURE;
+    }
+
+    /* Get the file size by parsing the "bytes 0-0/FILESIZE" Content-Range header value string. */
+    httpsClientStatus = IotHttpsClient_ReadHeader( fileSizeRespHandle, CONTENT_RANGE_HEADER_FIELD, CONTENT_RANGE_HEADER_FIELD_LENGTH, contentRangeValStr, sizeof( contentRangeValStr ) );
+
+    if( httpsClientStatus != IOT_HTTPS_OK )
+    {
+        IotLogError( "Could find the Content-Range header in the response. Error code %d", httpsClientStatus );
+        return EXIT_FAILURE;
+    }
+
+    pFileSizeStr = strstr( contentRangeValStr, "/" );
+
+    if( pFileSizeStr == NULL )
+    {
+        IotLogError( "'/' not present in Content-Range header value: %s.", contentRangeValStr );
+        return EXIT_FAILURE;
+    }
+
+    pFileSizeStr += sizeof( char );
+    *pFileSize = ( uint32_t ) strtoul( pFileSizeStr, NULL, 10 );
+
+    if( ( *pFileSize == 0 ) || ( *pFileSize == UINT32_MAX ) )
+    {
+        IotLogError( "Error using strtoul to get the file size from %s. Error returned: %d", pFileSizeStr, *pFileSize );
+        return EXIT_FAILURE;
+    }
+
+    return EXIT_SUCCESS;
+}
diff --git a/demos/https/iot_demo_https_common.h b/demos/https/iot_demo_https_common.h
new file mode 100644
index 000000000..833f5baf4
--- /dev/null
+++ b/demos/https/iot_demo_https_common.h
@@ -0,0 +1,82 @@
+/*
+ * Amazon FreeRTOS V201908.00
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+/**
+ * @file iot_demo_https_common.h
+ * @brief Common routines used in the HTTPS S3 access demos.
+ */
+
+#ifndef IOT_DEMO_HTTPS_COMMON_H_
+#define IOT_DEMO_HTTPS_COMMON_H_
+
+/* C standard includes shared among the demos. */
+#include <stdio.h>
+
+/* Include of the HTTPS Client library. */
+#include "iot_https_client.h"
+
+/**
+ * @brief The size of the header value string for the Range: field.
+ *
+ * This is used to specify which parts of the file
+ * we want to download. Let's say the maximum file size is what can fit in a 32 bit unsigned integer. 2^32 = 4294967296
+ * which is 10 digits. The header value string is of the form: "bytes=N-M" where N and M are integers. So the length
+ * of this string is strlen(N) + strlen(M) + strlen("bytes=-") + NULL terminator. Given the maximum number of digits is
+ * 10 we get the maximum length of this header value as: 10 * 2 + 7 + 1.
+ */
+#define RANGE_VALUE_MAX_LENGTH       ( 28 )
+
+/**
+ * @brief HTTP standard header field "Range".
+ */
+#define RANGE_HEADER_FIELD           "Range"
+#define RANGE_HEADER_FIELD_LENGTH    ( 5 )
+
+/**
+ * @brief Retrieve the size of the S3 object that is specified in pPath.
+ *
+ * @param[out] pFileSize - The size of the S3 object.
+ * @param[in] connHandle - A valid connected connection handle.
+ * @param[in] pPath - The path to the S3 object. This includes all of the queries in the pre-signed URL as well.
+ * @param[in] pathLen - The length of the path to the S3 object. This length includes all of the queries following as well.
+ * @param[in] pAddress - The address of the S3 host extracted from the presigned S3 URL.
+ * @param[in] addressLen - The length of pAddress.
+ * @param[in] pReqUserBuffer - Buffer for storing the request context and headers.
+ * @param[in] reqUserBufferLen - Length of the request user buffer.
+ * @param[in] pRespUserBuffer - Buffer for storing the response context and headers.
+ * @param[in] respUserBufferLen - Length of the response user buffer.
+ */
+int _IotHttpsDemo_GetS3ObjectFileSize( uint32_t * pFileSize,
+                                       IotHttpsConnectionHandle_t connHandle,
+                                       const char * pPath,
+                                       uint32_t pathLen,
+                                       const char * pAddress,
+                                       uint32_t addressLen,
+                                       uint8_t * pReqUserBuffer,
+                                       uint32_t reqUserBufferLen,
+                                       uint8_t * pRespUserBuffer,
+                                       uint32_t respUserBufferLen );
+
+#endif /* ifndef IOT_DEMO_HTTPS_COMMON_H_ */
diff --git a/demos/https/iot_demo_https_s3_download_async.c b/demos/https/iot_demo_https_s3_download_async.c
new file mode 100644
index 000000000..847a5689c
--- /dev/null
+++ b/demos/https/iot_demo_https_s3_download_async.c
@@ -0,0 +1,821 @@
+/*
+ * Amazon FreeRTOS V201908.00
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+/**
+ * @file iot_demo_https_async.c
+ * @brief Demonstrates asynchronous usage of the HTTPS library by performing a partial content GET request on a file
+ * from S3.
+ */
+
+/* The config header is always included first. */
+#include "iot_config.h"
+
+/* C Standard includes. */
+#include <stdbool.h>
+#include <string.h>
+
+/* Set up logging for this demo. */
+#include "iot_demo_logging.h"
+
+/* Amazon FreeRTOS includes. */
+#include "iot_demo_https_common.h"
+#include "iot_https_utils.h"
+#include "aws_demo_config.h"
+#include "platform/iot_network.h"
+#include "platform/iot_threads.h"
+#include "private/iot_error.h"
+#include "platform/iot_clock.h"
+
+/**
+ * This demonstrates downloading a file from S3 using a pre-signed URL using the Amazon FreeRTOS HTTP Client library.
+ * The HTTPS Client library is a generic HTTP/1.1 client library that be used to download files from other webservers as
+ * well.
+ *
+ * A presigned URL is required to run this demo. Please see the demos/https/README.md for instructions on how to
+ * generate one.
+ *
+ * The file is downloaded incrementally using HTTP Partial Content headers. This is done by requesting ranges of the
+ * bytes in a file with the header: "Range: bytes=N-M", where N is the starting range and M is the ending range. The
+ * S3 HTTP server will response with a 206 Partial Content type of response and the file byte range requested. Please
+ * note that not all HTTP servers support a Partial Content download with a byte range.
+ */
+
+/**
+ * @cond DOXYGEN_IGNORE
+ * Doxygen should ignore this section.
+ *
+ * Provide default values for undefined configuration settings. You can see these configurations in iot_config.h.
+ */
+
+/* Presigned URL for S3 GET Object access. */
+#ifndef IOT_DEMO_HTTPS_PRESIGNED_GET_URL
+    #define IOT_DEMO_HTTPS_PRESIGNED_GET_URL    "Please configure a presigned GET URL in iot_config.h."
+#endif
+
+/* TLS port for HTTPS. */
+#ifndef IOT_DEMO_HTTPS_PORT
+    #define IOT_DEMO_HTTPS_PORT    ( ( uint16_t ) 443 )
+#endif
+
+#ifndef IOT_DEMO_HTTPS_TRUSTED_ROOT_CA
+    /* This the Baltimore Cybertrust associated with the S3 server certificate. */
+    #define IOT_DEMO_HTTPS_TRUSTED_ROOT_CA                               \
+    "-----BEGIN CERTIFICATE-----\n"                                      \
+    "MIIDdzCCAl+gAwIBAgIEAgAAuTANBgkqhkiG9w0BAQUFADBaMQswCQYDVQQGEwJJ\n" \
+    "RTESMBAGA1UEChMJQmFsdGltb3JlMRMwEQYDVQQLEwpDeWJlclRydXN0MSIwIAYD\n" \
+    "VQQDExlCYWx0aW1vcmUgQ3liZXJUcnVzdCBSb290MB4XDTAwMDUxMjE4NDYwMFoX\n" \
+    "DTI1MDUxMjIzNTkwMFowWjELMAkGA1UEBhMCSUUxEjAQBgNVBAoTCUJhbHRpbW9y\n" \
+    "ZTETMBEGA1UECxMKQ3liZXJUcnVzdDEiMCAGA1UEAxMZQmFsdGltb3JlIEN5YmVy\n" \
+    "VHJ1c3QgUm9vdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKMEuyKr\n" \
+    "mD1X6CZymrV51Cni4eiVgLGw41uOKymaZN+hXe2wCQVt2yguzmKiYv60iNoS6zjr\n" \
+    "IZ3AQSsBUnuId9Mcj8e6uYi1agnnc+gRQKfRzMpijS3ljwumUNKoUMMo6vWrJYeK\n" \
+    "mpYcqWe4PwzV9/lSEy/CG9VwcPCPwBLKBsua4dnKM3p31vjsufFoREJIE9LAwqSu\n" \
+    "XmD+tqYF/LTdB1kC1FkYmGP1pWPgkAx9XbIGevOF6uvUA65ehD5f/xXtabz5OTZy\n" \
+    "dc93Uk3zyZAsuT3lySNTPx8kmCFcB5kpvcY67Oduhjprl3RjM71oGDHweI12v/ye\n" \
+    "jl0qhqdNkNwnGjkCAwEAAaNFMEMwHQYDVR0OBBYEFOWdWTCCR1jMrPoIVDaGezq1\n" \
+    "BE3wMBIGA1UdEwEB/wQIMAYBAf8CAQMwDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3\n" \
+    "DQEBBQUAA4IBAQCFDF2O5G9RaEIFoN27TyclhAO992T9Ldcw46QQF+vaKSm2eT92\n" \
+    "9hkTI7gQCvlYpNRhcL0EYWoSihfVCr3FvDB81ukMJY2GQE/szKN+OMY3EU/t3Wgx\n" \
+    "jkzSswF07r51XgdIGn9w/xZchMB5hbgF/X++ZRGjD8ACtPhSNzkE1akxehi/oCr0\n" \
+    "Epn3o0WC4zxe9Z2etciefC7IpJ5OCBRLbf1wbWsaY71k5h+3zvDyny67G7fyUIhz\n" \
+    "ksLi4xaNmjICq44Y3ekQEe5+NauQrz4wlHrQMz2nZQ/1/I6eYs9HRCwBXbsdtTLS\n" \
+    "R9I4LtD+gdwyah617jzV/OeBHRnDJELqYzmp\n"                             \
+    "-----END CERTIFICATE-----\n"
+#endif /* ifndef IOT_DEMO_HTTPS_TRUSTED_ROOT_CA */
+
+/* The total number of requests in the pool of HTTPS Client library configurations and handles. In order to send
+ * a request asynchronously the memory for both the request buffers and the response buffers must not be shared between
+ * other asynchronous requests on the same connection. You can reuse the buffer only after the request/response process
+ * has been finished. It is finished when the responseCompleteCallback() is invoked. We create a pool of memory so that
+ * all available requests in the pool can be scheduled right away without over-writing each other. */
+#ifndef IOT_HTTPS_DEMO_MAX_ASYNC_REQUESTS
+    #define IOT_HTTPS_DEMO_MAX_ASYNC_REQUESTS    ( 3 )
+#endif
+
+/* Size in bytes of the User Buffer used to store the internal connection context. The size presented here accounts for
+ * storage of the internal connection context. The minimum size can be found in extern const unint32_t
+ * connectionUserBufferMinimumSize. */
+#ifndef IOT_DEMO_HTTPS_CONN_BUFFER_SIZE
+    #define IOT_DEMO_HTTPS_CONN_BUFFER_SIZE    ( 400 )
+#endif
+
+/* Size in bytes of the user buffer used to store the internal request context and HTTP request header lines.
+ * The size presented here accounts for the storage of the internal context, the first request line in the HTTP
+ * formatted header and extra headers. The minimum size can be found in extern const uint32_t
+ * requestUserBufferMinimumSize. Keep in mind that this requestUserBufferMinimumSize does not include the size of the
+ * path in the request line. The path could be well over 100 characters long as it includes not only the object key name
+ * in S3, but also the query following. The query following has the AWSAccessKeyId, the expiration time, and the
+ * AWS Signature Version 4 signature.*/
+#ifndef IOT_DEMO_HTTPS_REQ_USER_BUFFER_SIZE
+    #define IOT_DEMO_HTTPS_REQ_USER_BUFFER_SIZE    ( 512 )
+#endif
+
+/* Size in bytes of the user buffer used to store the internal response context and the HTTP response header lines.
+ * The size presented here accounts for the storage of the internal context, the first request line in the HTTP
+ * formatted header and extra headers. The minimum can be found in responseUserBufferMinimumSize.
+ * Keep in mind that if the headers from the response do not all fit into this buffer, then the rest of the headers
+ * will be discarded. The minimum size can be found in extern const uint32_t responseUserBufferMinimumSize. */
+#ifndef IOT_DEMO_HTTPS_RESP_USER_BUFFER_SIZE
+    #define IOT_DEMO_HTTPS_RESP_USER_BUFFER_SIZE    ( 1024 )
+#endif
+
+/* Size in bytes of the buffer used to store the response body (parts of it). This should be greater than or equal to
+ * the size of the file we want to download.*/
+#ifndef IOT_DEMO_HTTPS_RESP_BODY_BUFFER_SIZE
+    #define IOT_DEMO_HTTPS_RESP_BODY_BUFFER_SIZE    ( 512 )
+#endif
+
+/* Timeout in milliseconds to wait for all asynchronous requests to finish. This timeout starts when the last
+ * IOT_HTTPS_DEMO_MAX_ASYNC_REQUESTS sent has been scheduled. */
+#ifndef IOT_HTTPS_DEMO_ASYNC_TIMEOUT_MS
+    #define IOT_HTTPS_DEMO_ASYNC_TIMEOUT_MS    ( ( uint32_t ) 300000 )   /* 5 minute timeout for this demo. */
+#endif
+
+/* Time to wait in milliseconds before retrying the HTTPS Connection. A connection is only attempted again if
+* IOT_HTTPS_CONNECTION_ERROR is returned from IotHttpsClient_Connect(). This indicates an error in the network
+* layer. To view logging for network errors update IOT_LOG_LEVEL_NETWORK to IOT_LOG_ERROR in iot_config.h. */
+#ifndef IOT_DEMO_HTTPS_CONNECTION_RETRY_WAIT_MS
+    #define IOT_DEMO_HTTPS_CONNECTION_RETRY_WAIT_MS    ( ( uint32_t ) 3000 )
+#endif
+
+/* Number of times to retry the HTTPS connection. A connection is only attempted again if
+ * IOT_HTTPS_CONNECTION_ERROR is returned from IotHttpsClient_Connect(). This indicates an error in the network
+ * layer. To view logging for network errors update IOT_LOG_LEVEL_NETWORK to IOT_LOG_ERROR in iot_config.h. */
+#ifndef IOT_DEMO_HTTPS_CONNECTION_NUM_RETRY
+    #define IOT_DEMO_HTTPS_CONNECTION_NUM_RETRY    ( ( uint32_t ) 3 )
+#endif
+
+/** @endcond */
+
+/**
+ * @brief The time for the application task to wait to try again finding a free request from the pool of requests.
+ */
+#define GET_FREE_REQUEST_RETRY_WAIT_TIME_MS    ( 1000 )
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief This structure defines data consumed and kept track of in the async callbacks per request.
+ */
+typedef struct _asyncDownloadData
+{
+    char rangeValueStr[ RANGE_VALUE_MAX_LENGTH ]; /* This string is generated outside of the callback context and used
+                                                   * to set the request Range header within the callback context. */
+    int reqNum;                                   /* This is the current request number in the static pool of request memory. */
+    uint32_t currDownloaded;                      /* The current number of bytes downloaded in this request. */
+    uint32_t numReqBytes;                         /* The number of bytes we want to downloaded in this request. */
+} _asyncDownloadData_t;
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Buffer to store parts of the response body.
+ *
+ * Since all of the requests in this demo are on the same connection, only one async task at a time will be accessing
+ * this buffer to retrieve data from the network to print.
+ */
+static uint8_t _pRespBodyBuffer[ IOT_DEMO_HTTPS_RESP_BODY_BUFFER_SIZE ] = { 0 };
+
+/**
+ * @brief Semaphore use to signal that the demo is finished. The task that downloads the final increment of the file
+ * posts to this semaphore.
+ */
+static IotSemaphore_t _fileFinishedSem = { 0 };
+
+/**
+ * @brief Array to keep track of HTTPS Client library request and response resources (buffers, handles, and configs)
+ * in use.
+ */
+static bool _pInUseRequests[ IOT_HTTPS_DEMO_MAX_ASYNC_REQUESTS ] = { 0 };
+
+/**
+ * @brief Mutex to protect retrieving and setting the requests in use.
+ */
+static IotMutex_t _inUseRequestsMutex = { 0 };
+
+/**
+ * @brief The pool of HTTPS Client library request configurations.
+ */
+static IotHttpsRequestInfo_t _pReqConfigs[ IOT_HTTPS_DEMO_MAX_ASYNC_REQUESTS ] = { 0 };
+
+/**
+ * @brief The pool of HTTPS Client library response configurations.
+ */
+static IotHttpsResponseInfo_t _pRespConfigs[ IOT_HTTPS_DEMO_MAX_ASYNC_REQUESTS ] = { 0 };
+
+/**
+ * @brief The pool of HTTPS Client library request handles.
+ */
+static IotHttpsRequestHandle_t _pReqHandles[ IOT_HTTPS_DEMO_MAX_ASYNC_REQUESTS ] = { 0 };
+
+/**
+ * @brief The pool of HTTPS Client library response handles.
+ */
+static IotHttpsResponseHandle_t _pRespHandles[ IOT_HTTPS_DEMO_MAX_ASYNC_REQUESTS ] = { 0 };
+
+/**
+ * @brief Connection buffer use to store the internal connection context.
+ */
+static uint8_t _pConnUserBuffer[ IOT_DEMO_HTTPS_CONN_BUFFER_SIZE ] = { 0 };
+
+/**
+ * @brief The pool of buffers used to store the request context and the HTTP request header lines.
+ */
+static uint8_t _pReqUserBuffers[ IOT_HTTPS_DEMO_MAX_ASYNC_REQUESTS ][ IOT_DEMO_HTTPS_REQ_USER_BUFFER_SIZE ] = { 0 };
+
+/**
+ * @brief The pool of buffers used to store the response context and the HTTP response header lines.
+ */
+static uint8_t _pRespUserBuffers[ IOT_HTTPS_DEMO_MAX_ASYNC_REQUESTS ][ IOT_DEMO_HTTPS_RESP_USER_BUFFER_SIZE ] = { 0 };
+
+
+/**
+ * @brief The pool of data kept track of and used in the callback context for each request.
+ */
+static _asyncDownloadData_t _pDownloadDatas[ IOT_HTTPS_DEMO_MAX_ASYNC_REQUESTS ] = { 0 };
+
+/**
+ * @brief Keeps track of the total number of bytes downloaded from the file so far. '
+ *
+ * This is updated in different callback contexts.
+ */
+volatile static uint32_t _bytesFileDownloadedSoFar = 0;
+
+/**
+ * @brief The total size of the file to be downloaded.
+ */
+static uint32_t _fileSize = 0;
+
+/*-----------------------------------------------------------*/
+
+/* Declaration of the demo function. */
+int RunHttpsAsyncDownloadDemo( bool awsIotMqttMode,
+                               const char * pIdentifier,
+                               void * pNetworkServerInfo,
+                               void * pNetworkCredentialInfo,
+                               const IotNetworkInterface_t * pNetworkInterface );
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Get an index to a free HTTPS Client library request resource.
+ *
+ * The resource pool is defined above in the static variables section.
+ *
+ * @return The free index if one is found. -1 if one is not found.
+ */
+static int _getFreeRequestIndex( void )
+{
+    int i = 0;
+    int freeIndex = -1;
+
+    IotMutex_Lock( &( _inUseRequestsMutex ) );
+
+    for( i = 0; i < IOT_HTTPS_DEMO_MAX_ASYNC_REQUESTS; i++ )
+    {
+        if( !_pInUseRequests[ i ] )
+        {
+            _pInUseRequests[ i ] = true;
+            freeIndex = i;
+            break;
+        }
+    }
+
+    IotMutex_Unlock( &( _inUseRequestsMutex ) );
+
+    /* If we exited the loop, then none were found. */
+    return freeIndex;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Callback for an asynchronous request to append the Range header to the request header buffer.
+ *
+ * @param[in] pPrivData - User private data configured with the HTTPS Client library request configuration.
+ * @param[in] reqHandle - Identifier for the current request in progress.
+ */
+static void _appendHeaderCallback( void * pPrivData,
+                                   IotHttpsRequestHandle_t reqHandle )
+{
+    /* The range value string, of the increment of file to download, from the user private data will be referenced with
+     * this variable. */
+    char * rangeValueStr = ( ( _asyncDownloadData_t * ) ( pPrivData ) )->rangeValueStr;
+
+    IotLogInfo( "Inside of the append header callback for part %s", rangeValueStr );
+    /* The length of the range value string. */
+    uint32_t rangeValueLen = strlen( rangeValueStr );
+    /* Set the header for a range request and check the HTTPS Client library return code. */
+    IotHttpsReturnCode_t status = IotHttpsClient_AddHeader( reqHandle, RANGE_HEADER_FIELD, RANGE_HEADER_FIELD_LENGTH, rangeValueStr, rangeValueLen );
+
+    if( status != IOT_HTTPS_OK )
+    {
+        IotLogError( "Failed to write the header Range: %.*s into the request. With error code: %d", rangeValueLen, rangeValueStr, status );
+        IotHttpsClient_CancelRequestAsync( reqHandle );
+    }
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Callback for an asynchronous request to read data from the network.
+ *
+ * @note If you wanted to read any headers you must do so in this callback.
+ *
+ * @param[in] pPrivData - User private data configured with the HTTPS Client library request configuration.
+ * @param[in] respHandle - Identifier for the current response in progress.
+ * @param[in] rc - Return code from the HTTPS Client Library signaling a possible error.
+ * @param[in] status - The HTTP response status.
+ */
+static void _readReadyCallback( void * pPrivData,
+                                IotHttpsResponseHandle_t respHandle,
+                                IotHttpsReturnCode_t rc,
+                                uint16_t status )
+{
+    /* The content length of this HTTP response. */
+    uint32_t contentLength = 0;
+    /* The amount of body read during this callback. */
+    uint32_t readLen;
+
+    /* The range value string, of the increment of file to download, from the user private data will be referenced with
+     * this variable. */
+    char * rangeValueStr;
+    /* The HTTP Client Library return code. */
+    IotHttpsReturnCode_t returnStatus;
+    /* The user private data dereferenced. */
+    _asyncDownloadData_t * pDownloadData = ( _asyncDownloadData_t * ) ( pPrivData );
+
+    IotLogInfo( "Inside of the read ready callback for part %s with network return code: %d", pDownloadData->rangeValueStr, rc );
+
+    /* If do not get a successful partial content delivery, then cancel. */
+    if( status != IOT_HTTPS_STATUS_PARTIAL_CONTENT )
+    {
+        IotLogError( "Could not retrieve file from S3. Status code %d", status );
+        IotHttpsClient_CancelResponseAsync( respHandle );
+        return;
+    }
+
+    /* Get the the amount of data to read. We want to fill the response buffer. */
+    readLen = sizeof( _pRespBodyBuffer );
+
+    /* Read the data from the network. */
+    returnStatus = IotHttpsClient_ReadResponseBody( respHandle, _pRespBodyBuffer, &readLen );
+
+    if( returnStatus != IOT_HTTPS_OK )
+    {
+        IotLogError( "Failed to read the response body with error %d", returnStatus );
+        IotHttpsClient_CancelResponseAsync( respHandle );
+    }
+
+    /* Process the body here. */
+    rangeValueStr = pDownloadData->rangeValueStr;
+    IotLogInfo( "Response return code: %d for %s", status, rangeValueStr );
+    IotLogInfo( "Response Body for %s:\r\n%.*s", rangeValueStr, readLen, _pRespBodyBuffer );
+
+    IotHttpsClient_ReadContentLength( respHandle, &contentLength );
+
+    if( contentLength == 0 )
+    {
+        IotLogError( "Failed to retrieve the increment %s. The content length was %d.", rangeValueStr, contentLength );
+        IotHttpsClient_CancelResponseAsync( respHandle );
+    }
+
+    /* If the content length of the message is not equal to the size of the byte range we want to download then
+     * cancel the request. */
+    if( contentLength != pDownloadData->numReqBytes )
+    {
+        IotLogError( "The Content-Length found in this file does not equal the number of bytes requested. So we may not \
+            download the file completely. The content length is %d and the requested number of bytes for this request \
+            is %d", contentLength, pDownloadData->numReqBytes );
+        IotHttpsClient_CancelResponseAsync( respHandle );
+    }
+
+    /* This callback could be invoked again if there is still more data on the network to be read for this response, so
+     * we increment the current amount downloaded. */
+    pDownloadData->currDownloaded += readLen;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Callback for an asynchronous request to notify that the response is complete.
+ *
+ * @param[in] pPrivData - User private data configured with the HTTPS Client library request configuration.
+ * @param[in] respHandle - Identifier for the current response finished.
+ * @param[in] rc - Return code from the HTTPS Client Library signaling a possible error.
+ * @param[in] status - The HTTP response status.
+ */
+static void _responseCompleteCallback( void * pPrivData,
+                                       IotHttpsResponseHandle_t respHandle,
+                                       IotHttpsReturnCode_t rc,
+                                       uint16_t status )
+{
+    _asyncDownloadData_t * pDownloadData = ( _asyncDownloadData_t * ) ( pPrivData );
+
+    ( void ) respHandle;
+    ( void ) rc;
+    ( void ) status;
+
+    IotLogInfo( "Part %s has been fully processed.", pDownloadData->rangeValueStr );
+
+    /* Free up this request from the request pool. */
+    _pInUseRequests[ pDownloadData->reqNum ] = false;
+
+    /* If in this response the total amount read does not equal the number of bytes we requested, then something went
+     * wrong. */
+    if( pDownloadData->currDownloaded != pDownloadData->numReqBytes )
+    {
+        IotLogError( "There was a problem downloading the file. We downloaded %d. but wanted %d.",
+                     pDownloadData->currDownloaded,
+                     pDownloadData->numReqBytes );
+        IotSemaphore_Post( &( _fileFinishedSem ) );
+    }
+    else
+    {
+        /* The main application is waiting for the response to finish. We signal it is finished when the bytes
+         * downloaded so far is equal to the file size we expect. If there were problems in any of the async requests
+         * scheduled, then the demo will timeout anyways. */
+        _bytesFileDownloadedSoFar += pDownloadData->currDownloaded;
+        IotLogInfo( "Downloaded: %d/%d", _bytesFileDownloadedSoFar, _fileSize );
+
+        if( _bytesFileDownloadedSoFar >= _fileSize )
+        {
+            IotLogDebug( "File fully downloaded. Bytes downloaded: %d", _bytesFileDownloadedSoFar );
+            IotSemaphore_Post( &( _fileFinishedSem ) );
+        }
+    }
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Callback for an asynchronous request to notify that the connection was closed.
+ *
+ * The connection will close and this callback will be invoked if there are network errors or if there was an error
+ * parsing the response.
+ * The connection will also close and this callback invoked, if a request is marked as non-persistent in
+ * #IotHttpsRequestInfo_t.isNonPersistent.
+ * This demo does not send a non-persistent marked request.
+ * This callback will not be invoked when the application calls API IotHttpsClient_Disconnect() to disconnect
+ * explicitly.
+ *
+ * @param[in] pPrivData - User private data configured with the HTTPS Client library request configuration.
+ * @param[in] connHandle - Identifier for the current connection.
+ * @param[in] rc - Return code from the HTTPS Client Library signaling a possible error..
+ */
+static void _connectionClosedCallback( void * pPrivData,
+                                       IotHttpsConnectionHandle_t connHandle,
+                                       IotHttpsReturnCode_t rc )
+{
+    ( void ) pPrivData;
+    ( void ) connHandle;
+    ( void ) rc;
+    IotLogInfo( "Connection with the s3 server has been closed." );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Callback to notify of errors that occurred during this asynchronous request.
+ *
+ * @param[in] pPrivData - User private data configured with the HTTPS Client library request configuration.
+ * @param[in] reqHandle - Identifier for the request.
+ * @param[in] rc - Return code from the HTTPS Client Library of the error.
+ */
+static void _errorCallback( void * pPrivData,
+                            IotHttpsRequestHandle_t reqHandle,
+                            IotHttpsResponseHandle_t respHandle,
+                            IotHttpsReturnCode_t rc )
+{
+    ( void ) reqHandle;
+    char * rangeValueStr = ( ( _asyncDownloadData_t * ) ( pPrivData ) )->rangeValueStr;
+    IotLogError( "An error occurred during asynchronous operation with code: %d", rangeValueStr, rc );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief The function that runs the HTTPS Asynchronous demo.
+ *
+ * @param[in] awsIotMqttMode Specify if this demo is running with the AWS IoT MQTT server.
+ *     This demo ignores this parameters.
+ * @param[in] pIdentifier NULL-terminated MQTT client identifier. This demo ignores this parameter.
+ * @param[in] pNetworkServerInfo Contains network information specific for the MQTT demo.
+ *     This demo ignores this parameter.
+ * @param[in] pNetworkCredentialInfo Contains credential Info for a TLS connection.
+ * @param[in] pNetworkInterface Contains the network interface interaction routines.
+ *
+ * @return `EXIT_SUCCESS` if the demo completes successfully; `EXIT_FAILURE` otherwise.
+ */
+int RunHttpsAsyncDownloadDemo( bool awsIotMqttMode,
+                               const char * pIdentifier,
+                               void * pNetworkServerInfo,
+                               void * pNetworkCredentialInfo,
+                               const IotNetworkInterface_t * pNetworkInterface )
+{
+    IOT_FUNCTION_ENTRY( int, EXIT_SUCCESS );
+
+    /* Unused parameters. */
+    ( void ) awsIotMqttMode;
+    ( void ) pIdentifier;
+    ( void ) pNetworkServerInfo;
+
+    /* HTTPS Client library return status. */
+    IotHttpsReturnCode_t httpsClientStatus;
+
+    /* Configurations for the HTTPS connection. */
+    IotHttpsConnectionInfo_t connConfig = { 0 };
+    /* Handle identifying the HTTPS connection. */
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    /* Asynchronous request specific configurations. */
+    IotHttpsAsyncInfo_t asyncInfo = { 0 };
+
+    /* The location of the path within string IOT_DEMO_HTTPS_PRESIGNED_GET_URL. */
+    const char * pPath = NULL;
+    /* The length of the path within string IOT_DEMO_HTTPS_PRESIGNED_GET_URL. */
+    size_t pathLen = 0;
+    /* The location of the address within string IOT_DEMO_HTTPS_PRESIGNED_GET_URL. */
+    const char * pAddress = NULL;
+    /* The length of the address within string IOT_DEMO_HTTPS_PRESIGNED_GET_URL. */
+    size_t addressLen = 0;
+
+    /* The number of bytes we want to request with in each range of the file bytes. */
+    uint32_t numReqBytes = 0;
+    /* curByte indicates which starting byte we want to download next. */
+    uint32_t curByte = 0;
+    /* The current index in the number of connection tries. */
+    uint32_t connIndex = 0;
+
+    /* Signal if the global semaphores were created for cleanup. */
+    bool inUseRequestMutexCreated = false;
+    bool fileFinishedSemCreated = false;
+
+    IotLogInfo( "HTTPS Client Asynchronous S3 download demo using pre-signed URL: %s", IOT_DEMO_HTTPS_PRESIGNED_GET_URL );
+
+    /* Retrieve the path location and length from IOT_DEMO_HTTPS_PRESIGNED_GET_URL. */
+    httpsClientStatus = IotHttpsClient_GetUrlPath( IOT_DEMO_HTTPS_PRESIGNED_GET_URL, ( size_t ) strlen( IOT_DEMO_HTTPS_PRESIGNED_GET_URL ), &pPath, &pathLen );
+
+    if( httpsClientStatus != IOT_HTTPS_OK )
+    {
+        IotLogError( "An error occurred in IotHttpsClient_GetUrlPath() with error code %d.", httpsClientStatus );
+        IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+    }
+
+    /* The path is everything that is not the address. It also includes the query. So we get the strlen( pPath ) to
+     * acquire everything following in IOT_DEMO_HTTPS_PRESIGNED_GET_URL. */
+    pathLen = strlen( pPath );
+
+    /* Retrieve the address location and length from the IOT_DEMO_HTTPS_PRESIGNED_GET_URL. */
+    httpsClientStatus = IotHttpsClient_GetUrlAddress( IOT_DEMO_HTTPS_PRESIGNED_GET_URL, ( size_t ) strlen( IOT_DEMO_HTTPS_PRESIGNED_GET_URL ), &pAddress, &addressLen );
+
+    if( httpsClientStatus != IOT_HTTPS_OK )
+    {
+        IotLogError( "An error occurred in IotHttpsClient_GetUrlAddress() with error code %d.", httpsClientStatus );
+        IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+    }
+
+    /* Set the connection configurations. */
+    connConfig.pAddress = pAddress;
+    connConfig.addressLen = addressLen;
+    connConfig.port = IOT_DEMO_HTTPS_PORT;
+    connConfig.pCaCert = IOT_DEMO_HTTPS_TRUSTED_ROOT_CA;
+    connConfig.caCertLen = sizeof( IOT_DEMO_HTTPS_TRUSTED_ROOT_CA );
+    connConfig.userBuffer.pBuffer = _pConnUserBuffer;
+    connConfig.userBuffer.bufferLen = sizeof( _pConnUserBuffer );
+    connConfig.pClientCert = ( ( IotNetworkCredentials_t * ) pNetworkCredentialInfo )->pClientCert;
+    connConfig.clientCertLen = ( ( IotNetworkCredentials_t * ) pNetworkCredentialInfo )->clientCertSize;
+    connConfig.pPrivateKey = ( ( IotNetworkCredentials_t * ) pNetworkCredentialInfo )->pPrivateKey;
+    connConfig.privateKeyLen = ( ( IotNetworkCredentials_t * ) pNetworkCredentialInfo )->privateKeySize;
+    connConfig.pNetworkInterface = pNetworkInterface;
+
+    /* Set the configurations needed for an asynchronous request. */
+    asyncInfo.callbacks.appendHeaderCallback = _appendHeaderCallback;
+    asyncInfo.callbacks.readReadyCallback = _readReadyCallback;
+    asyncInfo.callbacks.responseCompleteCallback = _responseCompleteCallback;
+    asyncInfo.callbacks.connectionClosedCallback = _connectionClosedCallback;
+    asyncInfo.callbacks.errorCallback = _errorCallback;
+
+    /* Create the mutex to protect the pool of requests. */
+    inUseRequestMutexCreated = IotMutex_Create( &( _inUseRequestsMutex ), false );
+
+    if( inUseRequestMutexCreated == false )
+    {
+        IotLogError( "Failed to create a mutex to protect the request pool." );
+        IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+    }
+
+    /* Create the semaphore for waiting for the response to finish. */
+    fileFinishedSemCreated = IotSemaphore_Create( &( _fileFinishedSem ), 0 /* Initial count. */, 1 /* Max count. */ );
+
+    if( fileFinishedSemCreated == false )
+    {
+        IotLogError( "Failed to create a semaphore to wait for the response to finish." );
+        IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+    }
+
+    /* Initialize the HTTPS library. */
+    httpsClientStatus = IotHttpsClient_Init();
+
+    if( httpsClientStatus != IOT_HTTPS_OK )
+    {
+        IotLogError( "An error occurred initializing the HTTPS library. Error code: %d", httpsClientStatus );
+        IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+    }
+
+    /* Connect to S3. */
+    for( connIndex = 1; connIndex <= IOT_DEMO_HTTPS_CONNECTION_NUM_RETRY; connIndex++ )
+    {
+        httpsClientStatus = IotHttpsClient_Connect( &connHandle, &connConfig );
+
+        if( ( httpsClientStatus == IOT_HTTPS_CONNECTION_ERROR ) &&
+            ( connIndex < IOT_DEMO_HTTPS_CONNECTION_NUM_RETRY ) )
+        {
+            IotLogError( "Failed to connect to the S3 server, retrying after %d ms.",
+                         IOT_DEMO_HTTPS_CONNECTION_RETRY_WAIT_MS );
+            IotClock_SleepMs( IOT_DEMO_HTTPS_CONNECTION_RETRY_WAIT_MS );
+            continue;
+        }
+        else
+        {
+            break;
+        }
+    }
+
+    if( httpsClientStatus != IOT_HTTPS_OK )
+    {
+        IotLogError( "Failed to connect to the S3 server. Error code: %d.", httpsClientStatus );
+        IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+    }
+
+    /* Retrieve the size of the file specified in the S3 pre-signed URL. */
+    if( _IotHttpsDemo_GetS3ObjectFileSize( &_fileSize,
+                                           connHandle,
+                                           pPath,
+                                           strlen( pPath ),
+                                           pAddress,
+                                           addressLen,
+                                           _pReqUserBuffers[ 0 ],
+                                           IOT_DEMO_HTTPS_REQ_USER_BUFFER_SIZE,
+                                           _pRespUserBuffers[ 0 ],
+                                           IOT_DEMO_HTTPS_RESP_USER_BUFFER_SIZE ) != EXIT_SUCCESS )
+    {
+        IotLogError( "Failed to retrieve the s3 object size." );
+        IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+    }
+
+    /* The number of bytes we want to request each time is the size of the buffer or the file size if it is smaller than
+     * the buffer size, then the size of the file. */
+
+    numReqBytes = IOT_DEMO_HTTPS_RESP_BODY_BUFFER_SIZE;
+
+    if( _fileSize < IOT_DEMO_HTTPS_RESP_BODY_BUFFER_SIZE )
+    {
+        numReqBytes = _fileSize;
+    }
+
+    /* Here we iterate sending byte range requests until the full file has been downloaded. We keep track of the next
+     * byte to download with curByte. When this reaches the _fileSize we stop downloading. */
+    while( curByte < _fileSize )
+    {
+        /* Retrieve a free request. If there are no free requests then put the application thread to sleep to check
+         * again later if there is one. */
+        int reqIndex = _getFreeRequestIndex();
+
+        if( reqIndex == -1 )
+        {
+            IotClock_SleepMs( GET_FREE_REQUEST_RETRY_WAIT_TIME_MS );
+            continue;
+        }
+
+        /* Set the HTTP request configurations. */
+        _pReqConfigs[ reqIndex ].pPath = pPath;
+
+        _pReqConfigs[ reqIndex ].pathLen = pathLen;
+        _pReqConfigs[ reqIndex ].pHost = pAddress;
+        _pReqConfigs[ reqIndex ].hostLen = addressLen;
+        _pReqConfigs[ reqIndex ].method = IOT_HTTPS_METHOD_GET;
+        _pReqConfigs[ reqIndex ].userBuffer.pBuffer = _pReqUserBuffers[ reqIndex ];
+        _pReqConfigs[ reqIndex ].userBuffer.bufferLen = sizeof( _pReqUserBuffers[ reqIndex ] );
+        _pReqConfigs[ reqIndex ].isAsync = true;
+        _pReqConfigs[ reqIndex ].u.pAsyncInfo = &asyncInfo;
+
+        /* Set the HTTP response configurations. */
+        _pRespConfigs[ reqIndex ].userBuffer.pBuffer = _pRespUserBuffers[ reqIndex ];
+        _pRespConfigs[ reqIndex ].userBuffer.bufferLen = sizeof( _pRespUserBuffers[ reqIndex ] );
+        _pRespConfigs[ reqIndex ].pSyncInfo = NULL;
+
+        /* Get the Range header value string. */
+        int numWritten = snprintf( _pDownloadDatas[ reqIndex ].rangeValueStr,
+                                   sizeof( _pDownloadDatas[ reqIndex ].rangeValueStr ),
+                                   "bytes=%u-%u",
+                                   ( unsigned int ) curByte,
+                                   ( unsigned int ) ( curByte + numReqBytes - 1 ) );
+
+        if( ( numWritten < 0 ) || ( numWritten >= sizeof( _pDownloadDatas[ reqIndex ].rangeValueStr ) ) )
+        {
+            IotLogError( "Failed to write the header value: \"bytes=%d-%d\" . Error code: %d",
+                         curByte,
+                         curByte + numReqBytes - 1,
+                         numWritten );
+            IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+        }
+
+        /* Set the user private data to use in the asynchronous callback context. */
+        _pDownloadDatas[ reqIndex ].reqNum = reqIndex;
+        _pDownloadDatas[ reqIndex ].currDownloaded = 0;
+        _pDownloadDatas[ reqIndex ].numReqBytes = numReqBytes;
+        asyncInfo.pPrivData = ( void * ) ( &( _pDownloadDatas[ reqIndex ] ) );
+
+        /* Re-initialize the request to reuse the request. If we do not reinitialize then data from the last response
+         * associated with this request will linger. */
+        httpsClientStatus = IotHttpsClient_InitializeRequest( &( _pReqHandles[ reqIndex ] ), &( _pReqConfigs[ reqIndex ] ) );
+
+        if( httpsClientStatus != IOT_HTTPS_OK )
+        {
+            IotLogError( "An error occurred in IotHttpsClient_InitializeRequest() with error code: %d", httpsClientStatus );
+            IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+        }
+
+        /* Send the request and receive the response asynchronously. This will schedule the async request. We
+         * will return immediately after scheduling. */
+        httpsClientStatus = IotHttpsClient_SendAsync( connHandle, _pReqHandles[ reqIndex ], &( _pRespHandles[ reqIndex ] ), &( _pRespConfigs[ reqIndex ] ) );
+
+        if( httpsClientStatus != IOT_HTTPS_OK )
+        {
+            IotLogError( "Failed to send the request asynchronously with error code: %d", httpsClientStatus );
+            /* If we failed to schedule an async request then this is an error and we should exit the loop. */
+            IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+        }
+
+        /* We increment by the number of request bytes. The S3 server should give us the range requested. If we
+         * do not receive numReqBytes specified in the range, then we will have stop that async response processing in the
+         * callbacks. */
+        curByte += numReqBytes;
+
+        /* If amount of file remaining to request is less than the current amount of bytes to request next time, then
+         * update the amount of bytes to request, on the next iteration, to be the amount remaining. */
+        if( ( _fileSize - curByte ) < numReqBytes )
+        {
+            numReqBytes = _fileSize - curByte;
+        }
+    }
+
+    /* If the status of the HTTPS Client library API is not OK after exiting the loop or if we timeout waiting for
+     * file to finish downloading, then we failed the demo. */
+    if( IotSemaphore_TimedWait( &( _fileFinishedSem ), IOT_HTTPS_DEMO_ASYNC_TIMEOUT_MS ) == false )
+    {
+        IotLogError( "Timed out waiting for the asynchronous request to complete." );
+        IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+    }
+
+    /* The file was downloaded successfully when the bytes downloaded is equal to the file size. */
+    if( _bytesFileDownloadedSoFar != _fileSize )
+    {
+        IotLogError( "The file was not fully downloaded. Bytes downloaded: %d/%d.",
+                     _bytesFileDownloadedSoFar,
+                     _fileSize );
+        IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+    }
+
+    IOT_FUNCTION_CLEANUP_BEGIN();
+
+    /* Clean up all resources created with this demo. */
+    if( inUseRequestMutexCreated )
+    {
+        IotMutex_Destroy( &( _inUseRequestsMutex ) );
+    }
+
+    if( fileFinishedSemCreated )
+    {
+        IotSemaphore_Destroy( &( _fileFinishedSem ) );
+    }
+
+    /* Disconnect from the server even if it is already disconnected. */
+    IotHttpsClient_Disconnect( connHandle );
+    /* De-initialize the library because we are done using it. */
+    IotHttpsClient_Deinit();
+
+    IOT_FUNCTION_CLEANUP_END();
+}
diff --git a/demos/https/iot_demo_https_s3_download_sync.c b/demos/https/iot_demo_https_s3_download_sync.c
new file mode 100644
index 000000000..aaff42019
--- /dev/null
+++ b/demos/https/iot_demo_https_s3_download_sync.c
@@ -0,0 +1,530 @@
+/*
+ * Amazon FreeRTOS V201908.00
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+/**
+ * @file iot_demo_https_s3_download_sync.c
+ * @brief Demonstrates synchronous usage of the HTTPS library by performing partial content GET requests on a file from S3.
+ */
+
+/* The config header is always included first. */
+#include "iot_config.h"
+
+/* C Standard includes. */
+#include <stdbool.h>
+#include <string.h>
+
+/* Set up logging for this demo. */
+#include "iot_demo_logging.h"
+
+/* Amazon FreeRTOS includes. */
+#include "iot_https_client.h"
+#include "iot_https_utils.h"
+#include "aws_demo_config.h"
+#include "platform/iot_network.h"
+#include "private/iot_error.h"
+#include "iot_demo_https_common.h"
+#include "platform/iot_clock.h"
+
+/**
+ * This demonstates downloading a file from S3 using a pre-signed URL using the Amazon FreeRTOS HTTP Client library.
+ * The HTTPS Client library is a generic HTTP/1.1 client library that be used to download files from other webservers as
+ * well.
+ *
+ * A presigned URL is required to run this demo. Please see the demos/https/README.md for instructions on how to
+ * generate one.
+ *
+ * The file is downloaded incrementally using HTTP Partial Content headers. This is done by requesting ranges of the
+ * bytes in a file with the header: "Range: bytes=N-M", where N is the starting range and M is the ending range. The
+ * S3 HTTP server will response with a 206 Partial Content type of response and the file byte range requested. Please
+ * note that not all HTTP servers support a Partial Content download with a byte range.
+ */
+
+/**
+ * @cond DOXYGEN_IGNORE
+ * Doxygen should ignore this section.
+ *
+ * Provide default values for undefined configuration settings.
+ */
+
+/* Presigned URL for S3 GET Object access. */
+#ifndef IOT_DEMO_HTTPS_PRESIGNED_GET_URL
+    #define IOT_DEMO_HTTPS_PRESIGNED_GET_URL    "Please configure a presigned GET URL in iot_config.h."
+#endif
+
+/* TLS port for HTTPS. */
+#ifndef IOT_DEMO_HTTPS_PORT
+    #define IOT_DEMO_HTTPS_PORT    ( ( uint16_t ) 443 )
+#endif
+
+#ifndef IOT_DEMO_HTTPS_TRUSTED_ROOT_CA
+    /* This the Baltimore Cybertrust root CA associated with the S3 server certificate. */
+    #define IOT_DEMO_HTTPS_TRUSTED_ROOT_CA                               \
+    "-----BEGIN CERTIFICATE-----\n"                                      \
+    "MIIDdzCCAl+gAwIBAgIEAgAAuTANBgkqhkiG9w0BAQUFADBaMQswCQYDVQQGEwJJ\n" \
+    "RTESMBAGA1UEChMJQmFsdGltb3JlMRMwEQYDVQQLEwpDeWJlclRydXN0MSIwIAYD\n" \
+    "VQQDExlCYWx0aW1vcmUgQ3liZXJUcnVzdCBSb290MB4XDTAwMDUxMjE4NDYwMFoX\n" \
+    "DTI1MDUxMjIzNTkwMFowWjELMAkGA1UEBhMCSUUxEjAQBgNVBAoTCUJhbHRpbW9y\n" \
+    "ZTETMBEGA1UECxMKQ3liZXJUcnVzdDEiMCAGA1UEAxMZQmFsdGltb3JlIEN5YmVy\n" \
+    "VHJ1c3QgUm9vdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKMEuyKr\n" \
+    "mD1X6CZymrV51Cni4eiVgLGw41uOKymaZN+hXe2wCQVt2yguzmKiYv60iNoS6zjr\n" \
+    "IZ3AQSsBUnuId9Mcj8e6uYi1agnnc+gRQKfRzMpijS3ljwumUNKoUMMo6vWrJYeK\n" \
+    "mpYcqWe4PwzV9/lSEy/CG9VwcPCPwBLKBsua4dnKM3p31vjsufFoREJIE9LAwqSu\n" \
+    "XmD+tqYF/LTdB1kC1FkYmGP1pWPgkAx9XbIGevOF6uvUA65ehD5f/xXtabz5OTZy\n" \
+    "dc93Uk3zyZAsuT3lySNTPx8kmCFcB5kpvcY67Oduhjprl3RjM71oGDHweI12v/ye\n" \
+    "jl0qhqdNkNwnGjkCAwEAAaNFMEMwHQYDVR0OBBYEFOWdWTCCR1jMrPoIVDaGezq1\n" \
+    "BE3wMBIGA1UdEwEB/wQIMAYBAf8CAQMwDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3\n" \
+    "DQEBBQUAA4IBAQCFDF2O5G9RaEIFoN27TyclhAO992T9Ldcw46QQF+vaKSm2eT92\n" \
+    "9hkTI7gQCvlYpNRhcL0EYWoSihfVCr3FvDB81ukMJY2GQE/szKN+OMY3EU/t3Wgx\n" \
+    "jkzSswF07r51XgdIGn9w/xZchMB5hbgF/X++ZRGjD8ACtPhSNzkE1akxehi/oCr0\n" \
+    "Epn3o0WC4zxe9Z2etciefC7IpJ5OCBRLbf1wbWsaY71k5h+3zvDyny67G7fyUIhz\n" \
+    "ksLi4xaNmjICq44Y3ekQEe5+NauQrz4wlHrQMz2nZQ/1/I6eYs9HRCwBXbsdtTLS\n" \
+    "R9I4LtD+gdwyah617jzV/OeBHRnDJELqYzmp\n"                             \
+    "-----END CERTIFICATE-----\n"
+#endif /* ifndef IOT_DEMO_HTTPS_TRUSTED_ROOT_CA */
+
+/* Size in bytes of the User Buffer used to store the internal connection context. The size presented here accounts for
+ * storage of the internal connection context. The minimum size can be found in extern const unint32_t connectionUserBufferMinimumSize. */
+#ifndef IOT_DEMO_HTTPS_CONN_BUFFER_SIZE
+    #define IOT_DEMO_HTTPS_CONN_BUFFER_SIZE    ( 512 )
+#endif
+
+/* Size in bytes of the user buffer used to store the internal request context and HTTP request header lines.
+ * The size presented here accounts for the storeage of the internal context, the first request line in the HTTP
+ * formatted header and extra headers. The minimum size can be found in extern const uint32_t requestUserBufferMinimumSize. */
+#ifndef IOT_DEMO_HTTPS_REQ_USER_BUFFER_SIZE
+    #define IOT_DEMO_HTTPS_REQ_USER_BUFFER_SIZE    ( 512 )
+#endif
+
+/* Size in bytes of the user buffer used to store the internal response context and the HTTP response header lines.
+ * The size presented here accounts for the storeage of the internal context, the first request line in the HTTP
+ * formatted header and extra headers. The minimum can be found in responseUserBufferMinimumSize.
+ * Keep in mind that if the headers from the response do not all fit into this buffer, then the rest of the headers
+ * will be discarded. The minimum size can be found in extern const uint32_t responseUserBufferMinimumSize. */
+#ifndef IOT_DEMO_HTTPS_RESP_USER_BUFFER_SIZE
+    #define IOT_DEMO_HTTPS_RESP_USER_BUFFER_SIZE    ( 1024 )
+#endif
+
+/* Size in bytes of the buffer used to store the response body (parts of it). This should be greater than or equal to
+ * the size of the file we want to download.*/
+#ifndef IOT_DEMO_HTTPS_RESP_BODY_BUFFER_SIZE
+    #define IOT_DEMO_HTTPS_RESP_BODY_BUFFER_SIZE    ( 512 )
+#endif
+
+/* Time to wait in milliseconds before retrying the HTTPS Connection. A connection is only attempted again if
+ * IOT_HTTPS_CONNECTION_ERROR is returned from IotHttpsClient_Connect(). This indicates an error in the network
+ * layer. To view logging for network errors update IOT_LOG_LEVEL_NETWORK to IOT_LOG_ERROR in iot_config.h */
+#ifndef IOT_DEMO_HTTPS_CONNECTION_RETRY_WAIT_MS
+    #define IOT_DEMO_HTTPS_CONNECTION_RETRY_WAIT_MS    ( ( uint32_t ) 3000 )
+#endif
+
+/* Number of times to retry the HTTPS connection. A connection is only attempted again if
+ * IOT_HTTPS_CONNECTION_ERROR is returned from IotHttpsClient_Connect(). This indicates an error in the network
+ * layer. To view logging for network errors update IOT_LOG_LEVEL_NETWORK to IOT_LOG_ERROR in iot_config.h */
+#ifndef IOT_DEMO_HTTPS_CONNECTION_NUM_RETRY
+    #define IOT_DEMO_HTTPS_CONNECTION_NUM_RETRY    ( ( uint32_t ) 3 )
+#endif
+
+/** @endcond */
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Buffer used to store the internal connection context.
+ */
+static uint8_t _pConnUserBuffer[ IOT_DEMO_HTTPS_CONN_BUFFER_SIZE ] = { 0 };
+
+/**
+ * @brief Buffer used to store the request context and the HTTP request header lines.
+ */
+static uint8_t _pReqUserBuffer[ IOT_DEMO_HTTPS_REQ_USER_BUFFER_SIZE ] = { 0 };
+
+/**
+ * @brief Buffer used to store the response context and the HTTP response header lines.
+ */
+static uint8_t _pRespUserBuffer[ IOT_DEMO_HTTPS_RESP_USER_BUFFER_SIZE ] = { 0 };
+
+/**
+ * @brief Buffer used to store parts of the response body.
+ */
+static uint8_t _pRespBodyBuffer[ IOT_DEMO_HTTPS_RESP_BODY_BUFFER_SIZE ] = { 0 };
+
+/* Declaration of demo function. */
+int RunHttpsSyncDownloadDemo( bool awsIotMqttMode,
+                              const char * pIdentifier,
+                              void * pNetworkServerInfo,
+                              void * pNetworkCredentialInfo,
+                              const IotNetworkInterface_t * pNetworkInterface );
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief The function that runs the HTTPS Synchronous Download demo.
+ *
+ * @param[in] awsIotMqttMode Specify if this demo is running with the AWS IoT MQTT server.
+ *     This demo ignores this parameters.
+ * @param[in] pIdentifier NULL-terminated MQTT client identifier. This demo ignores this parameter.
+ * @param[in] pNetworkServerInfo Contains network information specific for the MQTT demo.
+ *     This demo ignores this parameter.
+ * @param[in] pNetworkCredentialInfo Contains credential Info for a TLS connection.
+ * @param[in] pNetworkInterface Contains the network interface interaction routines.
+ *
+ * @return `EXIT_SUCCESS` if the demo completes successfully; `EXIT_FAILURE` otherwise.
+ */
+int RunHttpsSyncDownloadDemo( bool awsIotMqttMode,
+                              const char * pIdentifier,
+                              void * pNetworkServerInfo,
+                              void * pNetworkCredentialInfo,
+                              const IotNetworkInterface_t * pNetworkInterface )
+{
+    IOT_FUNCTION_ENTRY( int, EXIT_SUCCESS );
+
+    /* Unused parameters. */
+    ( void ) awsIotMqttMode;
+    ( void ) pIdentifier;
+    ( void ) pNetworkServerInfo;
+
+    /* HTTPS Client library return status. */
+    IotHttpsReturnCode_t httpsClientStatus = IOT_HTTPS_OK;
+
+    /* Configurations for the HTTPS connection. */
+    IotHttpsConnectionInfo_t connConfig = { 0 };
+    /* Handle identifying the HTTPS connection. */
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    /* Configurations for the HTTPS request. */
+    IotHttpsRequestInfo_t reqConfig = { 0 };
+    /* Configurations for the HTTPS response. */
+    IotHttpsResponseInfo_t respConfig = { 0 };
+
+    /* Handle identifying the HTTP request. This is valid after the request has been initialized with
+     * IotHttpsClient_InitializeRequest(). */
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+
+    /* Handle identifying the HTTP response. This is valid after the reponse has been received with
+     * IotHttpsClient_SendSync(). */
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    /* Synchronous request specific configurations. */
+    IotHttpsSyncInfo_t reqSyncInfo = { 0 };
+    /* Synchronous response specific configurations. */
+    IotHttpsSyncInfo_t respSyncInfo = { 0 };
+
+    /* The location of the path within string IOT_DEMO_HTTPS_PRESIGNED_GET_URL. */
+    const char * pPath = NULL;
+    /* The length of the path within string IOT_DEMO_HTTPS_PRESIGNED_GET_URL. */
+    size_t pathLen = 0;
+    /* The location of the address within string IOT_DEMO_HTTPS_PRESIGNED_GET_URL. */
+    const char * pAddress = NULL;
+    /* The length of the address within string IOT_DEMO_HTTPS_PRESIGNED_GET_URL. */
+    size_t addressLen = 0;
+
+    /* The status of HTTP responses for each request. */
+    uint16_t respStatus = IOT_HTTPS_STATUS_OK;
+    /* The content length of HTTP responses for each request. */
+    uint32_t contentLength = 0;
+
+    /* The size of the file we are trying to download in S3. */
+    uint32_t fileSize = 0;
+    /* The number of bytes we want to request with in each range of the file bytes. */
+    uint32_t numReqBytes = 0;
+    /* curByte indicates which starting byte we want to download next. */
+    uint32_t curByte = 0;
+    /* Buffer to write the Range: header value string. */
+    char rangeValueStr[ RANGE_VALUE_MAX_LENGTH ] = { 0 };
+    /* The current index in the number of connection tries. */
+    uint32_t connIndex = 0;
+
+    IotLogInfo( "HTTPS Client Synchronous S3 download demo using pre-signed URL: %s", IOT_DEMO_HTTPS_PRESIGNED_GET_URL );
+
+    /* Retrieve the path location and length from IOT_DEMO_HTTPS_PRESIGNED_GET_URL. */
+    httpsClientStatus = IotHttpsClient_GetUrlPath( IOT_DEMO_HTTPS_PRESIGNED_GET_URL,
+                                                   ( size_t ) strlen( IOT_DEMO_HTTPS_PRESIGNED_GET_URL ),
+                                                   &pPath,
+                                                   &pathLen );
+
+    if( httpsClientStatus != IOT_HTTPS_OK )
+    {
+        IotLogError( "An error occurred in IotHttpsClient_GetUrlPath() on URL %s. Error code: %d",
+                     IOT_DEMO_HTTPS_PRESIGNED_GET_URL,
+                     httpsClientStatus );
+        IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+    }
+
+    /* Retrieve the address location and length from the IOT_DEMO_HTTPS_PRESIGNED_GET_URL. */
+    httpsClientStatus = IotHttpsClient_GetUrlAddress( IOT_DEMO_HTTPS_PRESIGNED_GET_URL,
+                                                      ( size_t ) strlen( IOT_DEMO_HTTPS_PRESIGNED_GET_URL ),
+                                                      &pAddress,
+                                                      &addressLen );
+
+    if( httpsClientStatus != IOT_HTTPS_OK )
+    {
+        IotLogError( "An error occurred in IotHttpsClient_GetUrlAddress() on URL %s\r\n. Error code %d",
+                     IOT_DEMO_HTTPS_PRESIGNED_GET_URL,
+                     httpsClientStatus );
+        IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+    }
+
+    /* Set the connection configurations. */
+    connConfig.pAddress = pAddress;
+    connConfig.addressLen = addressLen;
+    connConfig.port = IOT_DEMO_HTTPS_PORT;
+    connConfig.pCaCert = IOT_DEMO_HTTPS_TRUSTED_ROOT_CA;
+    connConfig.caCertLen = sizeof( IOT_DEMO_HTTPS_TRUSTED_ROOT_CA );
+    connConfig.userBuffer.pBuffer = _pConnUserBuffer;
+    connConfig.userBuffer.bufferLen = sizeof( _pConnUserBuffer );
+    connConfig.pClientCert = ( ( IotNetworkCredentials_t * ) pNetworkCredentialInfo )->pClientCert;
+    connConfig.clientCertLen = ( ( IotNetworkCredentials_t * ) pNetworkCredentialInfo )->clientCertSize;
+    connConfig.pPrivateKey = ( ( IotNetworkCredentials_t * ) pNetworkCredentialInfo )->pPrivateKey;
+    connConfig.privateKeyLen = ( ( IotNetworkCredentials_t * ) pNetworkCredentialInfo )->privateKeySize;
+    connConfig.pNetworkInterface = pNetworkInterface;
+
+    /* Set the configurations needed for a synchronous request. */
+    reqSyncInfo.pBody = NULL; /* This is a GET request so there is no data in the body. */
+    reqSyncInfo.bodyLen = 0;  /* Since there is not data in the body the length is 0. */
+
+    /* Set the configurations needed for a synchronous response. */
+    respSyncInfo.pBody = _pRespBodyBuffer;             /* This is a GET request so should configure a place to retreive the
+                                                        * response body. */
+    respSyncInfo.bodyLen = sizeof( _pRespBodyBuffer ); /* The length of the GET request's response body. This should be
+                                                        * greater than or equal to the size of the file requested, for the
+                                                        * best performance. */
+
+    /* Set the request configurations. */
+    reqConfig.pPath = pPath;
+
+    /* The path is everything that is not the address. It also includes the query. So we get the strlen( pPath ) to
+     * acquire everything following in IOT_DEMO_HTTPS_PRESIGNED_GET_URL. */
+    reqConfig.pathLen = strlen( pPath );
+    reqConfig.pHost = pAddress;
+    reqConfig.hostLen = addressLen;
+    reqConfig.method = IOT_HTTPS_METHOD_GET;
+    reqConfig.isNonPersistent = false;
+    reqConfig.userBuffer.pBuffer = _pReqUserBuffer;
+    reqConfig.userBuffer.bufferLen = sizeof( _pReqUserBuffer );
+    reqConfig.isAsync = false;
+    reqConfig.u.pSyncInfo = &reqSyncInfo;
+
+    /* Set the response configurations. */
+    respConfig.userBuffer.pBuffer = _pRespUserBuffer;
+    respConfig.userBuffer.bufferLen = sizeof( _pRespUserBuffer );
+    respConfig.pSyncInfo = &respSyncInfo;
+
+    /* Initialize the HTTPS library. */
+    httpsClientStatus = IotHttpsClient_Init();
+
+    if( httpsClientStatus != IOT_HTTPS_OK )
+    {
+        IotLogError( "An error occurred initializing the HTTPS library. Error code: %d", httpsClientStatus );
+        IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+    }
+
+    /* Connect to S3. */
+    for( connIndex = 1; connIndex <= IOT_DEMO_HTTPS_CONNECTION_NUM_RETRY; connIndex++ )
+    {
+        httpsClientStatus = IotHttpsClient_Connect( &connHandle, &connConfig );
+
+        if( ( httpsClientStatus == IOT_HTTPS_CONNECTION_ERROR ) &&
+            ( connIndex < IOT_DEMO_HTTPS_CONNECTION_NUM_RETRY ) )
+        {
+            IotLogError( "Failed to connect to the S3 server, retrying after %d ms.",
+                         IOT_DEMO_HTTPS_CONNECTION_RETRY_WAIT_MS );
+            IotClock_SleepMs( IOT_DEMO_HTTPS_CONNECTION_RETRY_WAIT_MS );
+            continue;
+        }
+        else
+        {
+            break;
+        }
+    }
+
+    if( httpsClientStatus != IOT_HTTPS_OK )
+    {
+        IotLogError( "Failed to connect to the S3 server. Error code: %d.", httpsClientStatus );
+        IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+    }
+
+    /* Get the size of the file specified in the S3 presigned URL. */
+
+    /* Verify the file was uploaded by retrieving the file size. */
+    if( _IotHttpsDemo_GetS3ObjectFileSize( &fileSize,
+                                           connHandle,
+                                           pPath,
+                                           strlen( pPath ),
+                                           pAddress,
+                                           addressLen,
+                                           _pReqUserBuffer,
+                                           IOT_DEMO_HTTPS_REQ_USER_BUFFER_SIZE,
+                                           _pRespUserBuffer,
+                                           IOT_DEMO_HTTPS_RESP_USER_BUFFER_SIZE ) != EXIT_SUCCESS )
+    {
+        IotLogError( "Failed to retrieve the s3 object size." );
+        IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+    }
+
+    /* The number of bytes we want to request each time is the size of the buffer or the file size if it is smaller than
+     * the buffer size, then the size of the file. */
+    numReqBytes = IOT_DEMO_HTTPS_RESP_BODY_BUFFER_SIZE;
+
+    if( fileSize < IOT_DEMO_HTTPS_RESP_BODY_BUFFER_SIZE )
+    {
+        numReqBytes = fileSize;
+    }
+
+    /* Here we iterate sending byte range requests until the full file has been downloaded. We keep track of the next
+     * byte to download with curByte. When this reaches the fileSize we stop downloading.
+     */
+    while( curByte < fileSize )
+    {
+        /* Re-initialize the request to reuse the request. If we do not reinitialize then data from the last response
+         * associated with this request will linger. We reuse reqHandle because we are sending a new sequential
+         * synchronous request. IotHttpsClient_InitializeRequest will create a new request from the reqConfig and return
+         * a reqHandle that is ready to use as a NEW request. */
+        httpsClientStatus = IotHttpsClient_InitializeRequest( &reqHandle, &reqConfig );
+
+        if( httpsClientStatus != IOT_HTTPS_OK )
+        {
+            IotLogError( "An error occurred in IotHttpsClient_InitializeRequest() with error code: %d", httpsClientStatus );
+            IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+        }
+
+        /* Get the Range header value string. */
+        int numWritten = snprintf( rangeValueStr,
+                                   RANGE_VALUE_MAX_LENGTH,
+                                   "bytes=%u-%u",
+                                   ( unsigned int ) curByte,
+                                   ( unsigned int ) ( curByte + numReqBytes - 1 ) );
+
+        if( ( numWritten < 0 ) || ( numWritten >= RANGE_VALUE_MAX_LENGTH ) )
+        {
+            IotLogError( "Failed to write the header value: \"bytes=%d-%d\" . Error code: %d",
+                         curByte,
+                         curByte + numReqBytes - 1,
+                         numWritten );
+            IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+        }
+
+        /* Set the header for a range request. */
+        httpsClientStatus = IotHttpsClient_AddHeader( reqHandle, RANGE_HEADER_FIELD, RANGE_HEADER_FIELD_LENGTH, rangeValueStr, numWritten );
+
+        if( httpsClientStatus != IOT_HTTPS_OK )
+        {
+            IotLogError( "Failed to write the header Range: %.*s into the request. With error code: %d", numWritten, rangeValueStr, httpsClientStatus );
+            IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+        }
+
+        /* Send the request and receive the response synchronously. */
+        IotLogInfo( "Now requesting Range: %s.", rangeValueStr );
+
+        /* A new response handle is returned from IotHttpsClient_SendSync(). We reuse the respHandle variable because
+         * the last response was already processed fully.  */
+
+        httpsClientStatus = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &respConfig, 0 );
+
+        /* If there was network error try again one more time. */
+        if( httpsClientStatus == IOT_HTTPS_NETWORK_ERROR )
+        {
+            /* Maybe the network error was because the server disconnected us. */
+            httpsClientStatus = IotHttpsClient_Connect( &connHandle, &connConfig );
+
+            if( httpsClientStatus != IOT_HTTPS_OK )
+            {
+                IotLogError( "Failed to reconnect to the S3 server after a network error on IotHttpsClient_SendSync(). Error code %d.", httpsClientStatus );
+                IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+            }
+
+            httpsClientStatus = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &respConfig, 0 );
+
+            if( httpsClientStatus != IOT_HTTPS_OK )
+            {
+                IotLogError( "Failed receiving the response on a second try after a network error. The error code is: %d", httpsClientStatus );
+                IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+            }
+        }
+        else if( httpsClientStatus != IOT_HTTPS_OK )
+        {
+            IotLogError( "There has been an error receiving the response. The error code is: %d", httpsClientStatus );
+            IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+        }
+
+        httpsClientStatus = IotHttpsClient_ReadResponseStatus( respHandle, &respStatus );
+
+        if( httpsClientStatus != IOT_HTTPS_OK )
+        {
+            IotLogError( "Error in retreiving the response status. Error code %d", httpsClientStatus );
+            IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+        }
+
+        if( respStatus != IOT_HTTPS_STATUS_PARTIAL_CONTENT )
+        {
+            IotLogError( "Failed to retrieve the partial content response from s3. Response status: %d", respStatus );
+            IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+        }
+
+        /* Get the content length of the body for printing without a NULL terminator. */
+        httpsClientStatus = IotHttpsClient_ReadContentLength( respHandle, &contentLength );
+
+        if( httpsClientStatus != IOT_HTTPS_OK )
+        {
+            IotLogError( "Failed to read the Content-Length from the response. Error code %d", httpsClientStatus );
+            IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+        }
+
+        /* The response has been fully received. */
+        IotLogInfo( "Response return code: %d", respStatus );
+
+        /* The logging buffer may not fit all of the response body received and the output on the console will be truncated
+         * to the first configLOGGING_MAX_MESSAGE_LENGTH number of characters. */
+        IotLogInfo( "Response Body: \r\n%.*s", contentLength, _pRespBodyBuffer );
+
+        /* We increment by the contentLength because the server may not have sent us the range we request. */
+        curByte += contentLength;
+
+        IotLogInfo( "Downloaded %d/%d", curByte, fileSize );
+
+        /* If amount of file remaining to request is less than the current amount of bytes to request next time, then
+         * udpdate the amount of bytes to request, on the next iteration, to be the amount remaining. */
+        if( curByte > fileSize )
+        {
+            IotLogError( "Received more data than the size of the file specified." );
+            IOT_SET_AND_GOTO_CLEANUP( EXIT_FAILURE );
+        }
+
+        if( ( fileSize - curByte ) < numReqBytes )
+        {
+            numReqBytes = fileSize - curByte;
+        }
+    }
+
+    IOT_FUNCTION_CLEANUP_BEGIN();
+
+    /* Disconnect from the server even if the server may have already disconnected us. */
+    if( connHandle != NULL )
+    {
+        IotHttpsClient_Disconnect( connHandle );
+    }
+
+    /* Deinitialize the library because we are done using it. */
+    IotHttpsClient_Deinit();
+
+    IOT_FUNCTION_CLEANUP_END();
+}
diff --git a/demos/https/presigned_urls_gen.py b/demos/https/presigned_urls_gen.py
new file mode 100644
index 000000000..1f197a601
--- /dev/null
+++ b/demos/https/presigned_urls_gen.py
@@ -0,0 +1,35 @@
+#!/usr/bin/python
+
+import boto3
+import argparse
+
+def get_presigned_urls(bucket_name, key_name):
+    # Get the service client.
+    s3 = boto3.client('s3')
+
+    client_method_dict = {
+        'GET': 'get_object',
+        'PUT': 'put_object'
+    }
+
+    # Generate the URL to get 'key-name' from 'bucket-name'
+    for method in client_method_dict.keys():
+        url = s3.generate_presigned_url(
+            ClientMethod=client_method_dict[method],
+            Params={
+                'Bucket': bucket_name,
+                'Key': key_name
+            }
+        )
+        print('#define IOT_DEMO_HTTPS_PRESIGNED_' + method + '_URL' + '    ' + '\"' + url + '\"')
+
+def main():
+    parser = argparse.ArgumentParser(description='S3 Presigned URL Generator. See README.md')
+    parser.add_argument('--bucket', action='store', required=True, dest='bucket_name', help='The name of the S3 bucket of interest.')
+    parser.add_argument('--key', action='store', required=True, dest='key_name', help='The name of the S3 Object in the bucket. This is referred to as a \'key\'')
+    args = parser.parse_args()
+
+    get_presigned_urls(args.bucket_name, args.key_name)
+
+if __name__ == '__main__':  # pragma: no cover
+    main()
diff --git a/demos/include/aws_application_version.h b/demos/include/aws_application_version.h
index 404f37023..412d541ea 100644
--- a/demos/include/aws_application_version.h
+++ b/demos/include/aws_application_version.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/include/aws_ble_gatt_server_demo.h b/demos/include/aws_ble_gatt_server_demo.h
index a13e2b0a4..813079538 100644
--- a/demos/include/aws_ble_gatt_server_demo.h
+++ b/demos/include/aws_ble_gatt_server_demo.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/include/aws_clientcredential.h b/demos/include/aws_clientcredential.h
index c08eeca43..7a226ef62 100644
--- a/demos/include/aws_clientcredential.h
+++ b/demos/include/aws_clientcredential.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/include/aws_clientcredential_keys.h b/demos/include/aws_clientcredential_keys.h
index 680c7521a..ba8f3c1e6 100644
--- a/demos/include/aws_clientcredential_keys.h
+++ b/demos/include/aws_clientcredential_keys.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/include/aws_demo.h b/demos/include/aws_demo.h
index 4e532753e..5ceec8312 100644
--- a/demos/include/aws_demo.h
+++ b/demos/include/aws_demo.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/include/aws_iot_demo_network.h b/demos/include/aws_iot_demo_network.h
index cf7d0af07..bee891467 100644
--- a/demos/include/aws_iot_demo_network.h
+++ b/demos/include/aws_iot_demo_network.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/include/aws_ota_codesigner_certificate.h b/demos/include/aws_ota_codesigner_certificate.h
index f3553e0e7..01a374c12 100644
--- a/demos/include/aws_ota_codesigner_certificate.h
+++ b/demos/include/aws_ota_codesigner_certificate.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/include/aws_wifi_connect_task.h b/demos/include/aws_wifi_connect_task.h
index 4de1cc557..e169aa625 100644
--- a/demos/include/aws_wifi_connect_task.h
+++ b/demos/include/aws_wifi_connect_task.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/include/iot_ble_numericComparison.h b/demos/include/iot_ble_numericComparison.h
index 59518d015..bddf36670 100644
--- a/demos/include/iot_ble_numericComparison.h
+++ b/demos/include/iot_ble_numericComparison.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/include/iot_config_common.h b/demos/include/iot_config_common.h
index e1c7ea725..63049be54 100644
--- a/demos/include/iot_config_common.h
+++ b/demos/include/iot_config_common.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/include/iot_demo_logging.h b/demos/include/iot_demo_logging.h
index a16cb8278..8d7d2d504 100644
--- a/demos/include/iot_demo_logging.h
+++ b/demos/include/iot_demo_logging.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/include/iot_demo_runner.h b/demos/include/iot_demo_runner.h
index 2d6faa26b..81a4859f5 100644
--- a/demos/include/iot_demo_runner.h
+++ b/demos/include/iot_demo_runner.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
@@ -94,6 +94,10 @@
     #endif
 #elif defined( CONFIG_BLE_GATT_SERVER_DEMO_ENABLED )
     #define DEMO_entryFUNCTION             vGattDemoSvcInit
+#elif defined( CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED )
+    #define DEMO_entryFUNCTION             RunHttpsSyncDownloadDemo
+#elif defined( CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED )
+    #define DEMO_entryFUNCTION             RunHttpsAsyncDownloadDemo
 #else /* if defined( CONFIG_MQTT_DEMO_ENABLED ) */
 /* if no demo was defined there will be no entry point defined and we will not be able to run the demo */
     #error "No demo to run. One demo should be enabled"
diff --git a/demos/mqtt/iot_demo_mqtt.c b/demos/mqtt/iot_demo_mqtt.c
index 9eb0efe77..8bfe19aa2 100644
--- a/demos/mqtt/iot_demo_mqtt.c
+++ b/demos/mqtt/iot_demo_mqtt.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
@@ -691,8 +691,8 @@ static int _publishAllMessages( IotMqttConnection_t mqttConnection,
         /* If a complete burst of messages has been published, wait for an equal
          * number of messages to be received. Note that messages may be received
          * out-of-order, especially if a message was lost and had to be retried. */
-        if( ( publishCount > 0 ) &&
-            ( publishCount % IOT_DEMO_MQTT_PUBLISH_BURST_SIZE == 0 ) )
+        if( ( publishCount % IOT_DEMO_MQTT_PUBLISH_BURST_SIZE ) ==
+            ( IOT_DEMO_MQTT_PUBLISH_BURST_SIZE - 1 ) )
         {
             IotLogInfo( "Waiting for %d publishes to be received.",
                         IOT_DEMO_MQTT_PUBLISH_BURST_SIZE );
@@ -719,30 +719,6 @@ static int _publishAllMessages( IotMqttConnection_t mqttConnection,
         }
     }
 
-    /* Wait for the messages in the last burst to be received. This should also
-     * wait for all previously published messages. */
-    if( status == EXIT_SUCCESS )
-    {
-        IotLogInfo( "Waiting for all publishes to be received." );
-
-        for( i = 0; i < IOT_DEMO_MQTT_PUBLISH_BURST_SIZE; i++ )
-        {
-            if( IotSemaphore_TimedWait( pPublishReceivedCounter,
-                                        MQTT_TIMEOUT_MS ) == false )
-            {
-                IotLogError( "Timed out waiting for incoming PUBLISH messages." );
-                status = EXIT_FAILURE;
-
-                break;
-            }
-        }
-
-        if( i == IOT_DEMO_MQTT_PUBLISH_BURST_SIZE )
-        {
-            IotLogInfo( "All publishes received." );
-        }
-    }
-
     return status;
 }
 
diff --git a/demos/network_manager/aws_iot_demo_network.c b/demos/network_manager/aws_iot_demo_network.c
index bdecc89b1..1415ef9ea 100644
--- a/demos/network_manager/aws_iot_demo_network.c
+++ b/demos/network_manager/aws_iot_demo_network.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/network_manager/aws_iot_network_manager.c b/demos/network_manager/aws_iot_network_manager.c
index f9c3293ef..23411a2de 100644
--- a/demos/network_manager/aws_iot_network_manager.c
+++ b/demos/network_manager/aws_iot_network_manager.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/network_manager/iot_network_manager_private.h b/demos/network_manager/iot_network_manager_private.h
index af4071bf6..013958f76 100644
--- a/demos/network_manager/iot_network_manager_private.h
+++ b/demos/network_manager/iot_network_manager_private.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/ota/aws_iot_ota_update_demo.c b/demos/ota/aws_iot_ota_update_demo.c
index d9639529b..c4caf22a5 100644
--- a/demos/ota/aws_iot_ota_update_demo.c
+++ b/demos/ota/aws_iot_ota_update_demo.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/posix/aws_posix_demo.c b/demos/posix/aws_posix_demo.c
index 01f978088..ca41452eb 100644
--- a/demos/posix/aws_posix_demo.c
+++ b/demos/posix/aws_posix_demo.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/shadow/aws_iot_demo_shadow.c b/demos/shadow/aws_iot_demo_shadow.c
index 2d92f9e3c..e2e5cb4eb 100644
--- a/demos/shadow/aws_iot_demo_shadow.c
+++ b/demos/shadow/aws_iot_demo_shadow.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/tcp/aws_tcp_echo_client_single_task.c b/demos/tcp/aws_tcp_echo_client_single_task.c
index 4015cfb22..6f8fa5044 100644
--- a/demos/tcp/aws_tcp_echo_client_single_task.c
+++ b/demos/tcp/aws_tcp_echo_client_single_task.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/tcp/aws_tcp_echo_client_single_tasks.h b/demos/tcp/aws_tcp_echo_client_single_tasks.h
index 43eec8354..3c6f3a63d 100644
--- a/demos/tcp/aws_tcp_echo_client_single_tasks.h
+++ b/demos/tcp/aws_tcp_echo_client_single_tasks.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/demos/wifi_provisioning/aws_wifi_connect_task.c b/demos/wifi_provisioning/aws_wifi_connect_task.c
index a185e7410..38d82166f 100644
--- a/demos/wifi_provisioning/aws_wifi_connect_task.c
+++ b/demos/wifi_provisioning/aws_wifi_connect_task.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/doc/config/https b/doc/config/https
new file mode 100644
index 000000000..e08dbe243
--- /dev/null
+++ b/doc/config/https
@@ -0,0 +1,33 @@
+# Include common configuration options.
+@INCLUDE_PATH = doc/config
+@INCLUDE = common
+
+# Basic project information.
+PROJECT_NAME = "HTTPS Client"
+PROJECT_BRIEF = "HTTPS Client v1.0.0 library"
+
+# Library documentation output directory.
+HTML_OUTPUT = https
+
+# Directories containing extra files.
+HTML_EXTRA_FILES = doc/extra_files/https/gettysburg.txt
+
+# Generate Doxygen tag file for this library.
+GENERATE_TAGFILE = doc/tag/https.tag
+
+# Directories containing library source code.
+INPUT = doc \
+        doc/lib \
+        libraries/c_sdk/standard/https/include \
+        libraries/c_sdk/standard/https/include/types \
+        libraries/c_sdk/standard/https/src \
+        libraries/c_sdk/standard/https/src/private
+
+# Library file names.
+FILE_PATTERNS = *https*.c *https*.h *https*.txt
+
+# External tag files required by this library.
+TAGFILES = doc/tag/main.tag=../main \
+           doc/tag/linear_containers.tag=../linear_containers \
+           doc/tag/logging.tag=../logging \
+           doc/tag/platform.tag=../platform
diff --git a/doc/extra_files/https/gettysburg.txt b/doc/extra_files/https/gettysburg.txt
new file mode 100644
index 000000000..a7d9e4b2a
--- /dev/null
+++ b/doc/extra_files/https/gettysburg.txt
@@ -0,0 +1,8 @@
+Four score and seven years ago our fathers brought forth on this continent, a new nation, conceived in Liberty, and dedicated to the proposition that all men are created equal.
+
+Now we are engaged in a great civil war, testing whether that nation, or any nation so conceived and so dedicated, can long endure. We are met on a great battle-field of that war. We have come to dedicate a portion of that field, as a final resting place for those who here gave their lives that that nation might live. It is altogether fitting and proper that we should do this.
+
+But, in a larger sense, we can not dedicate -- we can not consecrate -- we can not hallow -- this ground. The brave men, living and dead, who struggled here, have consecrated it, far above our poor power to add or detract. The world will little note, nor long remember what we say here, but it can never forget what they did here. It is for us the living, rather, to be dedicated here to the unfinished work which they who fought here have thus far so nobly advanced. It is rather for us to be here dedicated to the great task remaining before us -- that from these honored dead we take increased devotion to that cause for which they gave the last full measure of devotion -- that we here highly resolve that these dead shall not have died in vain -- that this nation, under God, shall have a new birth of freedom -- and that government of the people, by the people, for the people, shall not perish from the earth.
+
+Abraham Lincoln
+November 19, 1863
\ No newline at end of file
diff --git a/doc/freertos_port_qual/aFreeRTOS_Porting_Guide.pdf b/doc/freertos_port_qual/aFreeRTOS_Porting_Guide.pdf
index 8e179aeba..551ac1e51 100644
Binary files a/doc/freertos_port_qual/aFreeRTOS_Porting_Guide.pdf and b/doc/freertos_port_qual/aFreeRTOS_Porting_Guide.pdf differ
diff --git a/doc/freertos_port_qual/aFreeRTOS_Qualification_Guide.pdf b/doc/freertos_port_qual/aFreeRTOS_Qualification_Guide.pdf
index afc1aaf57..4c027120d 100644
Binary files a/doc/freertos_port_qual/aFreeRTOS_Qualification_Guide.pdf and b/doc/freertos_port_qual/aFreeRTOS_Qualification_Guide.pdf differ
diff --git a/doc/lib/https.txt b/doc/lib/https.txt
new file mode 100644
index 000000000..5262bbba3
--- /dev/null
+++ b/doc/lib/https.txt
@@ -0,0 +1,538 @@
+/**
+@mainpage
+@anchor https
+@brief HTTPS Client v1.0.0 library.
+
+- HTTPS Client Main page text.
+
+> The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.
+
+<span style="float:right;margin-right:4em"> &mdash; <i>Official description of HTTP from [RFC 7231](https://tools.ietf.org/html/rfc7231)</i></span><br>
+
+This HTTP library implements a subset of the HTTP/1.1 standard for compatibility with the [AWS IoT HTTP Server](https://docs.aws.amazon.com/iot/latest/developerguide/http.html) and the [AWS S3 HTTP Server](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectOps.html). It is also compatible with other HTTP servers. Feature of this library include: 
+- Both fully asynchronous and synchronous (blocking) API functions.
+- Application managed memory for internal context and HTTP formatted headers.
+- Thread-aware and parallelized connections.
+
+@dependencies_section{https}
+@dependencies_brief{HTTPS Client library}
+
+@dot "HTTPS Client direct dependencies"
+digraph https_dependencies
+{
+    node[shape=box, fontname=Helvetica, fontsize=10, style=filled];
+    edge[fontname=Helvetica, fontsize=10];
+    subgraph
+    {
+        https[label="HTTPS", fillcolor="#cc00ccff"];
+    }
+    subgraph
+    {
+        node[fillcolor="#aed8a9ff"];
+        rank = same;
+        linear_containers[label="List/Queue", URL="@ref linear_containers"];
+        logging[label="Logging", URL="@ref logging"];
+    }
+    subgraph
+    {
+        rank = same;
+        platform_threads[label="Thread management", fillcolor="#e89025ff", URL="@ref platform_threads"];
+        platform_clock[label="Clock", fillcolor="#e89025ff", URL="@ref platform_clock"];
+        platform_network[label="Network", fillcolor="#e89025ff", URL="@ref platform_network"];
+    }
+    https -> linear_containers;
+    https -> logging [label=" if logging enabled", style="dashed"];
+    https -> platform_threads;
+    https -> platform_clock;
+    https -> platform_network;
+    logging -> platform_clock;
+}
+@enddot
+
+Currently, the HTTPS Client library has the following dependencies:
+- The queue library for maintaining of list of pending requests and responses on the connection.
+- The logging library may be used if @ref IOT_LOG_LEVEL_HTTPS is not @ref IOT_LOG_NONE.
+- The platform layer provides an interface to the operating system for thread management, clock functions, networking, etc.
+
+In addition to the components above, the HTTPS Client library also depends on C standard library headers.
+*/
+
+/**
+@page https_design Design
+@brief Architecture behind the HTTPS library.
+
+The HTTPS Client library will invoke a task pool worker to send a request. It will then receive the response during the network receive callback context. If there are more requests in the connection's request queue, it will schedule another task pool worker to send that request.
+
+@section Synchronous_Design Synchronous Design
+@image html https_client_sync_workflow.png width=100%
+
+@section Asynchronous_Design Asynchronous Design
+@image html https_client_async_workflow.png width=100%
+
+@section Asynchronous_Callback_Order Asynchronous Callbacks Ordering
+@image html https_client_async_callback_order.png width=100%
+*/
+
+/**
+@page https_demo Demos
+@brief The HTTPS Client demos demonstrates usage of the HTTPS Client library.
+
+These demos shows downloading a file from S3 using a pre-signed URL using the Amazon FreeRTOS HTTP Client library. The HTTPS Client library is a generic HTTP/1.1 client library that be used to download files from other web servers as well.
+
+See @subpage https_demo_usage for information on how to get the demo up and running.
+
+The main HTTPS Client demo files are [iot_demo_https_s3_download_async.c](https://github.com/aws/amazon-freertos/tree/master/demos/https/iot_demo_https_s3_download_async.c) and [iot_demo_https_s3_download_sync.c](https://github.com/aws/amazon-freertos/tree/master/demos/https/iot_demo_https_s3_download_sync.c), which contain platform-independent code. See @ref building_demo for instructions on building the HTTPS Client demo.
+
+<h2>iot_demo_https_s3_download_sync.c</h2>
+@brief Synchronously download a file from S3 using a pre-signed URL.
+
+This demo will use @ref https_client_function_sendsync to download the file specified in S3.
+
+<h2>iot_demo_https_s3_download_async.c</h2>
+@brief Asynchronously download a file from S3 using a pre-signed URL.
+
+This demo will use @ref https_client_function_sendasync to download the file specified in S3.
+
+See @subpage https_demo_config for configuration settings that change the behavior of the demo.
+
+@page https_demo_usage Demo Usage Instructions
+
+<ol>
+    <li>
+        Ensure that you have permissions in your AWS account to access S3.  
+        For information on AWS S3 please see: https://docs.aws.amazon.com/AmazonS3/latest/dev/Welcome.html  
+    </li>
+    <li>
+        In an existing bucket or creating a new bucket upload the following file:  
+        <a href='gettysburg.txt'>gettysburg.txt</a>  
+    </li>
+    <li>
+        Install and configured the AWS CLI.  
+        For AWS CLI installation information please see: https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html  
+        For AWS CLI configuration information please see: https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html  
+    </li>
+    <li>
+        Run [demos/https/presigned_url_gen.py](https://github.com/aws/amazon-freertos/tree/master/demos/https/presigned_urls_gen.py) with your s3 **bucket-name** and s3 object key **object-key**.
+        \code
+        python presigned_url_gen.py --bucket my-bucket --key object-key
+        \endcode  
+
+        Please see [demos/https/README.md](https://github.com/aws/amazon-freertos/tree/master/demos/https/README.md) for information on the required Python version and Python package dependencies.
+          
+        Example output:  
+        \code
+        #define IOT_DEMO_HTTPS_PRESIGNED_GET_URL    https://my-bucket.s3.amazonaws.com/object-key.txt?AWSAccessKeyId=AAAAAAAAAAAAAAAAAAAA&Expires=1560555644&Signature=SomeHash12345UrlABcdEFgfIjK%3D
+        #define IOT_DEMO_HTTPS_PRESIGNED_PUT_URL    https://my-bucket.s3.amazonaws.com/object-key.txt?AWSAccessKeyId=ABABABABABABABABABAB&Expires=1560555644&Signature=SomeHash12345UrlLMnmOPqrStUvW
+        \endcode
+
+        Paste this output to iot_config.h.
+        <br>
+        <br>
+        Note:  
+        If your bucket is less than 24 hours old, then you will need to append the region the bucket was created in to the pre-signed URL:  
+        \code
+        https://my-bucket.s3-<region>.amazonaws.com/object-key.txt?AWSAccessKeyId=AAAAAAAAAAAAAAAAAAAA&Expires=1560555644&Signature=SomeHash12345UrlABcdEFgfIjK%3D  
+        \endcode
+        Example: 
+        \code
+        https://my-bucket.s3-us-west-2.amazonaws.com/object-key.txt?AWSAccessKeyId=AAAAAAAAAAAAAAAAAAAA&Expires=1560555644&Signature=SomeHash12345UrlABcdEFgfIjK%3D  
+        \endcode
+        Please see https://aws.amazon.com/premiumsupport/knowledge-center/s3-http-307-response/ for more information.  
+    </li>
+    <li>
+        Paste your RSA-2048 or ECC-P256 keys into [aws_clientcredential_keys.h](https://github.com/aws/amazon-freertos/blob/master/demos/include/aws_clientcredential_keys.h). This is needed to for the TLS handshake with the AWS S3 HTTP Server.  
+    </li>
+    <li>
+        Enable the <b>Synchronous download demo</b> by defining @ref CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED in aws_demo_config.h:
+        \code
+        /* To run a particular demo you need to define one of these.
+        * Only one demo can be configured at a time
+        *
+        *          CONFIG_MQTT_DEMO_ENABLED
+        *          CONFIG_SHADOW_DEMO_ENABLED
+        *          CONFIG_GREENGRASS_DISCOVERY_DEMO_ENABLED
+        *          CONFIG_TCP_ECHO_CLIENT_DEMO_ENABLED
+        *          CONFIG_DEFENDER_DEMO_ENABLED
+        *          CONFIG_POSIX_DEMO_ENABLED
+        *          CONFIG_OTA_UPDATE_DEMO_ENABLED
+        *          CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED
+        *          CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED
+        *
+        *  These defines are used in iot_demo_runner.h for demo selection */
+
+        #define CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED
+        \endcode
+    </li>
+    <li>
+        See @ref building_demo for instructions on building the demo.  
+        A successful output looks like this:
+        \code
+        11 558 [iot_thread] [INFO ][INIT][557] SDK successfully initialized.
+        12 558 [iot_thread] [INFO ][DEMO][558] Successfully initialized the demo. Network type for the demo: 4
+        13 558 [iot_thread] [INFO ][DEMO][558] S3 Download demo using pre-signed URL: https://my-bucket.s3.amazonaws.com/object-key.txt?AWSAccessKeyId=AAAAAAAAAAAAAAAAAAAA&Expires=1560555644&Signature=SomeHash12345UrlABcdEFgfIjK%3D
+        14 2880 [NetRecv] [ERROR][NET][2880] Error 0 while receiving data.
+        15 2880 [NetRecv] [WARN ][NET][2880] Receive requested 760 bytes, but 400 bytes received instead.
+        16 2880 [iot_thread] [INFO ][DEMO][2880] Now requesting Range: bytes=0-511.
+        17 2920 [iot_thread] [INFO ][DEMO][2920] Response return code: 206
+        18 2920 [iot_thread] [INFO ][DEMO][2920] Response Body:
+        Four score and seven years ago our fathers brought forth on this continent, a new nation, conceived in Liberty, and dedicated to the proposition that all men are created equal.
+
+        Now we are engaged in a great civil war, testing whether that nation, or any nation so conceived and so dedicated, can long endure. We are met on a great battle-field of that war. We have come to dedicate a portion of that field, as a final resting place for those who here gave their lives that that nation might live. It is altoge
+        19 2920 [iot_thread] [INFO ][DEMO][2920] Downloaded 512/1517
+        20 2920 [iot_thread] [INFO ][DEMO][2920] Now requesting Range: bytes=512-1023.
+        21 2979 [iot_thread] [INFO ][DEMO][2979] Response return code: 206
+        22 2979 [iot_thread] [INFO ][DEMO][2979] Response Body:
+        ther fitting and proper that we should do this.
+
+        But, in a larger sense, we can not dedicate -- we can not consecrate -- we can not hallow -- this ground. The brave men, living and dead, who struggled here, have consecrated it, far above our poor power to add or detract. The world will little note, nor long remember what we say here, but it can never forget what they did here. It is for us the living, rather, to be dedicated here to the unfinished work which they who fought here have thus far so nobly adv
+        23 2979 [iot_thread] [INFO ][DEMO][2979] Downloaded 1024/1517
+        24 2979 [iot_thread] [INFO ][DEMO][2979] Now requesting Range: bytes=1024-1516.
+        25 5019 [NetRecv] [ERROR][NET][5019] Error 0 while receiving data.
+        26 5019 [NetRecv] [WARN ][NET][5019] Receive requested 159 bytes, but 140 bytes received instead.
+        27 5019 [iot_thread] [INFO ][DEMO][5019] Response return code: 206
+        28 5019 [iot_thread] [INFO ][DEMO][5019] Response Body:
+        anced. It is rather for us to be here dedicated to the great task remaining before us -- that from these honored dead we take increased devotion to that cause for which they gave the last full measure of devotion -- that we here highly resolve that these dead shall not have died in vain -- that this nation, under God, shall have a new birth of freedom -- and that government of the people, by the people, for the people, shall not perish from the earth.
+
+        Abraham Lincoln
+        November 19, 1863
+        29 5019 [iot_thread] [INFO ][DEMO][5019] Downloaded 1517/1517
+        30 5058 [iot_thread] [INFO ][DEMO][5058] Demo completed successfully.
+        31 5060 [iot_thread] [INFO ][INIT][5060] SDK cleanup done.
+        \endcode
+    </li>
+    <li>
+        Enable the <b>Asynchronous download demo</b> by defining either @ref CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED in aws_demo_config.h:  
+        \code
+        /* To run a particular demo you need to define one of these.
+        * Only one demo can be configured at a time
+        *
+        *          CONFIG_MQTT_DEMO_ENABLED
+        *          CONFIG_SHADOW_DEMO_ENABLED
+        *          CONFIG_GREENGRASS_DISCOVERY_DEMO_ENABLED
+        *          CONFIG_TCP_ECHO_CLIENT_DEMO_ENABLED
+        *          CONFIG_DEFENDER_DEMO_ENABLED
+        *          CONFIG_POSIX_DEMO_ENABLED
+        *          CONFIG_OTA_UPDATE_DEMO_ENABLED
+        *          CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED
+        *          CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED
+        *
+        *  These defines are used in iot_demo_runner.h for demo selection */
+
+        #define CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED
+        \endcode
+    </li>
+    <li>
+        See @ref building_demo for instructions on building the demo.  
+        A successful output looks like this:
+
+        \code
+        11 682 [iot_thread] [INFO ][INIT][682] SDK successfully initialized.
+        12 682 [iot_thread] [INFO ][DEMO][682] Successfully initialized the demo. Network type for the demo: 4
+        13 682 [iot_thread] [INFO ][DEMO][682] S3 Download demo using pre-signed URL: https://my-bucket.s3.amazonaws.com/object-key.txt?AWSAccessKeyId=AAAAAAAAAAAAAAAAAAAA&Expires=1560555644&Signature=SomeHash12345UrlABcdEFgfIjK%3D
+        14 2977 [NetRecv] [ERROR][NET][2977] Error 0 while receiving data.
+        15 2977 [NetRecv] [WARN ][NET][2977] Receive requested 768 bytes, but 400 bytes received instead.
+        16 2977 [iot_thread] [INFO ][DEMO][2977] Inside of the append header callback for part bytes=0-511
+        17 3018 [NetRecv] [INFO ][DEMO][3018] Inside of the read ready callback for part bytes=0-511 with network return code: 0
+        18 3018 [NetRecv] [INFO ][DEMO][3018] Response return code: 206 for bytes=0-511
+        19 3018 [NetRecv] [INFO ][DEMO][3018] Response Body for bytes=0-511:
+        Four score and seven years ago our fathers brought forth on this continent, a new nation, conceived in Liberty, and dedicated to the proposition that all men are created equal.
+
+        Now we are engaged in a great civil war, testing whether that nation, or any nation so conceived and so dedicated, can long endure. We are met on a great battle-field of that war. We have come to dedicate a portion of that field, as a final resting place for those who here gave their lives that that nation might live. It is altoge
+        20 3018 [iot_thread] [INFO ][DEMO][3018] Inside of the append header callback for part bytes=512-1023
+        21 3018 [NetRecv] [INFO ][DEMO][3018] Part bytes=0-511 has been fully processed.
+        22 3018 [NetRecv] [INFO ][DEMO][3018] Downloaded: 512/1517
+        23 3078 [NetRecv] [INFO ][DEMO][3078] Inside of the read ready callback for part bytes=512-1023 with network return code: 0
+        24 3078 [NetRecv] [INFO ][DEMO][3078] Response return code: 206 for bytes=512-1023
+        25 3078 [NetRecv] [INFO ][DEMO][3078] Response Body for bytes=512-1023:
+        their fitting and proper that we should do this.
+
+        But, in a larger sense, we can not dedicate -- we can not consecrate -- we can not hallow -- this ground. The brave men, living and dead, who struggled here, have consecrated it, far above our poor power to add or detract. The world will little note, nor long remember what we say here, but it can never forget what they did here. It is for us the living, rather, to be dedicated here to the unfinished work which they who fought here have thus far so nobly adv
+        26 3078 [iot_thread] [INFO ][DEMO][3078] Inside of the append header callback for part bytes=1024-1516
+        27 3079 [NetRecv] [INFO ][DEMO][3079] Part bytes=512-1023 has been fully processed.
+        28 3079 [NetRecv] [INFO ][DEMO][3079] Downloaded: 1024/1517
+        29 3118 [NetRecv] [INFO ][DEMO][3118] Inside of the read ready callback for part bytes=1024-1516 with network return code: 0
+        30 5118 [NetRecv] [ERROR][NET][5118] Error 0 while receiving data.
+        31 5118 [NetRecv] [WARN ][NET][5118] Receive requested 151 bytes, but 132 bytes received instead.
+        32 5118 [NetRecv] [INFO ][DEMO][5118] Response return code: 206 for bytes=1024-1516
+        33 5118 [NetRecv] [INFO ][DEMO][5118] Response Body for bytes=1024-1516:
+        anced. It is rather for us to be here dedicated to the great task remaining before us -- that from these honored dead we take increased devotion to that cause for which they gave the last full measure of devotion -- that we here highly resolve that these dead shall not have died in vain -- that this nation, under God, shall have a new birth of freedom -- and that government of the people, by the people, for the people, shall not perish from the earth.
+
+        Abraham Lincoln
+        November 19, 1863
+        34 5118 [NetRecv] [INFO ][DEMO][5118] Part bytes=1024-1516 has been fully processed.
+        35 5118 [NetRecv] [INFO ][DEMO][5118] Downloaded: 1517/1517
+        36 5177 [iot_thread] [INFO ][DEMO][5177] Demo completed successfully.
+        37 5179 [iot_thread] [INFO ][INIT][5179] SDK cleanup done.
+        \endcode
+          
+    </li>
+</ol>
+
+Note:  
+    Please note that the buffer for printing may be smaller than 512 characters and the printed received response body may be truncated.<br>
+    "[NetRecv] [WARN ][NET][2977] Receive requested 768 bytes, but 400 bytes received instead." is OK because the library requests from the network interface the full size of the header buffer or body buffer.
+
+*/
+
+/**
+@config_page{https_demo,Demo}
+@config_brief{https_demo,HTTP Client demo,demos}
+
+@section IOT_DEMO_HTTPS_PRESIGNED_GET_URL
+@brief Presigned URL for AWS S3 GET Object access.
+
+This is generated using the script demos/https/presigned_url_gen.py. demos/https/README.md explains how to use the script.
+
+@configpossible Presigned URL of the form: `https://my-bucket.s3.amazonaws.com/object-key.txt?AWSAccessKeyId=AAAAAAAAAAAAAAAAAAAA&Expires=1560555644&Signature=SomeHash12345UrlABcdEFgfIjK%3D`. <br>
+@configdefault `"Please configure a presigned GET URL in iot_config.h."`
+
+@section IOT_DEMO_HTTPS_PORT
+@brief The port number for the TLS connection to AWS S3's HTTP server.
+
+@configpossible Any positive integer up to 2^16. <br>
+@configdefault `443`
+
+@section IOT_DEMO_HTTPS_TRUSTED_ROOT_CA
+@brief The trusted root CA needed to connected to AWS S3's HTTP server.
+
+@configpossible A valid PEM encoded certificate string. <br>
+@configdefault The Baltimore Cybertrust root CA.
+
+@section IOT_DEMO_HTTPS_CONN_BUFFER_SIZE
+@brief The size of the static user buffer to store the HTTP Client connection context. 
+
+Size in bytes of the User Buffer used to store the internal connection context. The size presented here accounts for
+   storage of the internal connection context. The minimum size can be found in @ref connectionUserBufferMinimumSize.
+
+@configpossible Any positive integer. <br>
+@configdefault `400`
+
+@section IOT_DEMO_HTTPS_REQ_USER_BUFFER_SIZE
+@brief The size of the static user buffer to store the HTTP Client request context and HTTP formatted request headers.
+
+Size in bytes of the user buffer used to store the internal request context and HTTP request header lines. 
+   The size presented here accounts for the storage of the internal context, the first request line in the HTTP
+   formatted header and extra headers. The minimum size can be found in @ref requestUserBufferMinimumSize. Keep in mind that this @ref requestUserBufferMinimumSize does not include the size of the 
+   path in the request line. The path could be well over 100 characters long as it includes not only the object key name
+   in S3, but also the query following. The query following has the AWSAccessKeyId, the expiration time, and the 
+   AWS Signature Version 4 signature.
+
+@configpossible Any positive integer. <br>
+@configdefault `512`
+
+@section IOT_DEMO_HTTPS_RESP_USER_BUFFER_SIZE
+@brief The size of the static user buffer to store the HTTP Client response context and HTTP formatted response headers.
+
+Size in bytes of the user buffer used to store the internal response context and the HTTP response header lines. 
+   The size presented here accounts for the storage of the internal context, the first request line in the HTTP
+   formatted header and extra headers. The minimum can be found in @ref requestUserBufferMinimumSize.
+   Keep in mind that if the headers from the response do not all fit into this buffer, then the rest of the headers
+   will be discarded. The minimum size can be found in @ref responseUserBufferMinimumSize.
+
+@configpossible Any positive integer. <br>
+@configdefault `1024`
+
+@section IOT_DEMO_HTTPS_RESP_BODY_BUFFER_SIZE
+@brief The size of the static buffer to store an increment of the response body.
+
+Size in bytes of the buffer used to store the response body (parts of it). This should be greater than or equal to
+   the size of the file we want to download
+
+@configpossible Any positive integer. <br>
+@configdefault `512`
+
+@section IOT_DEMO_HTTPS_CONNECTION_RETRY_WAIT_MS
+@brief Time to wait in milliseconds before retrying the HTTPS Connection.
+
+A connection is only attempted again if @ref IOT_HTTPS_CONNECTION_ERROR is returned from IotHttpsClient_Connect(). This 
+indicates an error in the network layer. To view network errors update @ref IOT_LOG_LEVEL_NETWORK to @ref IOT_LOG_ERROR 
+in iot_config.h.
+
+@configpossible Any positive integer.
+@configdefault `3000`
+
+@section IOT_DEMO_HTTPS_CONNECTION_NUM_RETRY
+@brief Number of times to retry the HTTPS connection.
+
+A connection is only attempted again if @ref IOT_HTTPS_CONNECTION_ERROR is returned from IotHttpsClient_Connect(). This 
+indicates an error in the network layer. To view network errors update @ref IOT_LOG_LEVEL_NETWORK to @ref IOT_LOG_ERROR 
+in iot_config.h.
+
+@configpossible Any positive integer.
+@configdefault `3`
+
+<h1> Asynchronous Download Demo specific configurations:  </h1> 
+These configurations apply only to [iot_demo_https_s3_download_async.c](https://github.com/aws/amazon-freertos/tree/master/demos/https/iot_demo_https_s3_download_async.c).
+
+@section IOT_HTTPS_DEMO_MAX_ASYNC_REQUESTS
+@brief The maximum number of inflight asynchronous requests. 
+
+This configures the total number of requests in the pool of HTTPS Client library configurations and handles. In order to send 
+   a request asynchronously the memory for both the request buffers and the response buffers must not be shared between 
+   other asynchronous requests on the same connection. You can reuse the buffer only after the request/response process
+   has been finished. It is finished when the responseCompleteCallback() is invoked. We create a pool of memory so that 
+   all available requests in the pool can be scheduled right away without over-writing each other.
+
+@configpossible Any positive integer. <br>
+@configdefault `3`
+
+@section IOT_HTTPS_DEMO_ASYNC_TIMEOUT_MS
+@brief Timeout in milliseconds to wait for all asynchronous requests to finish.
+
+This timeout starts when the last @ref IOT_HTTPS_DEMO_MAX_ASYNC_REQUESTS sent have been scheduled.
+
+@configpossible Any positive integer. <br>
+@configdefault `300000`
+*/
+
+/**
+@page https_tests Tests
+@brief Tests written for the HTTPS Client library.
+
+The HTTPS Client tests reside in the `tests` directory. They are divided into the following subdirectories:
+- `access`: Helper files that allow access to internal variables and functions of the HTTPS Client library.
+- `system`: HTTPS Client integration testing. These tests require a network connection.
+- `unit`: HTTPS Client unit tests. These tests do not require a network connection.
+
+See @subpage https_tests_config for configuration settings that change the behavior of the tests.
+
+The current HTTPS Client tests use the [Unity test framework](http://www.throwtheswitch.org/unity/). See @ref building_tests for a guide on running the tests.
+*/
+
+/**
+@config_page{https_tests,Test}
+@config_brief{https_tests,HTTPS Client tests,tests}
+
+@section IOT_TEST_HTTPS_SERVER_HOST_NAME
+@brief The HTTP server used for this test.
+
+This server needs to accept methods HEAD, GET, POST, and PUT. This server needs to send some data on a GET request. It can be a simple HTTP echo server. 
+
+@configpossible Any server host name string. This host name must not include "https://" or "http://" in the name. <br>
+@configdefault `"httpbin.org"`
+
+@section IOT_TEST_HTTPS_PORT
+@brief The socket port number of the server to connect to.
+
+@configpossible Any positive integer up to 2^16. <br>
+@configdefault `443`
+
+@section IOT_TEST_HTTPS_ALPN_PROTOCOLS
+@brief APLN protocol string if necessary to connect to a secure testing server configured in @ref IOT_TEST_HTTPS_SERVER_HOST_NAME.
+
+This is a comma separated list of protocol. Please see [Transport Layer Security (TLS) Application-Layer Protocol Negotiation Extension](https://tools.ietf.org/html/rfc7301) for more information.
+
+@configpossible A comma separated string of ALPN protocol names or NULL. An empty string is not allowed. <br>
+@configdefault `NULL`
+
+@section IOT_TEST_HTTPS_ROOT_CA
+@brief Root certificate authority to verify the server that the HTTPS_Client_System tests are connecting to.
+
+@configpossible A valid PEM encoded certificate string. <br>
+@configdefault `NULL`
+
+@section IOT_TEST_HTTPS_CLIENT_CERTIFICATE
+@brief The client certificate used in TLS negotiation with the test HTTP server configured in @ref IOT_TEST_HTTPS_SERVER_HOST_NAME.
+
+With PKCS #11 provisioning of the keys these parameters are deprecated.
+
+@configpossible A valid RSA-2048 or ECC-P256 PEM encoded certificate string. <br>
+@configdefault The system provisioned client certificate.
+
+@section IOT_TEST_HTTPS_CLIENT_PRIVATE_KEY
+@brief The client private key used in TLS negotiation with the test HTTP server configured in @ref IOT_TEST_HTTPS_SERVER_HOST_NAME.
+
+With PKCS #11 provisioning of the keys these parameters are deprecated.
+
+@configpossible A valid RSA-2048 or ECC-P256 PEM encoded private key string. <br>
+@configdefault The system provisioned client private key.
+
+@section IOT_TEST_HTTPS_SYNC_TIMEOUT_MS
+@brief Timeout in milliseconds for tests that synchronously send HTTP requests.
+
+This timeout encompasses the waiting time for the both sending of the request and receiving the response.
+
+@configpossible Any positive integer. <br>
+@configdefault `60000`
+
+@section IOT_TEST_HTTPS_ASYNC_TIMEOUT_MS
+@brief Timeout in milliseconds for tests asynchronously send HTTP requests.
+
+This timeout encompasses the waiting time for the both sending of the request and receiving the response.
+
+@configpossible Any positive integer. <br>
+@configdefault `60000`
+
+@section IOT_TEST_HTTPS_INITIAL_CONNECTION_RETRY_DELAY
+@brief The initial delay in milliseconds that is doubled each retry of server connection.
+
+@configpossible Any positive integer. <br>
+@configdefault `300`
+
+@section IOT_TEST_HTTPS_CONNECTION_NUM_RETRIES
+@brief The amount of times to retry the server connection if it fails.
+
+@configpossible Any positive integer. <br>
+@configdefault `3`
+
+*/
+
+/**
+@config_page{https}
+@config_brief{HTTPS Client library}
+
+@section AWS_IOT_HTTPS_ENABLE_METRICS
+@brief Set this to `1` to enable anonymous metrics reporting to AWS IoT.
+
+Metrics allow AWS IoT to prioritize engineering resources based on SDK usage. SDK name and version are reported; no personal or identifying information is reported.
+
+@configpossible `0` (metrics reporting disabled) or `1` (metrics reporting enabled)<br>
+@configrecommended `1`<br>
+@configdefault `1`
+
+@section IOT_HTTPS_USER_AGENT
+@brief The name of the application type, operating system, software vendor, or software version of the requesting software agent.
+
+This configuration will dictate the header value written to required header field "User-Agent". This value is written when the request is initialized with @ref https_client_function_initializerequest.
+
+@configpossible Any string. <br>
+@configdefault `"amazon-freertos"`
+
+@section IOT_LOG_LEVEL_HTTPS
+@brief Set the log level of the HTTPS Client library.
+
+Log messages from the HTTPS Client library at or below this setting will be printed.
+
+@configpossible One of the @ref logging_constants_levels.<br>
+@configdefault @ref IOT_LOG_LEVEL_GLOBAL; if that is undefined, then @ref IOT_LOG_NONE.
+
+@section IOT_HTTPS_MAX_FLUSH_BUFFER_SIZE
+@brief The size of a buffer instantiated in stack to flush the socket of the rest of possible unread response.
+
+@configpossible Any positive integer.<br>
+@configdefault `1024`
+
+@section IOT_HTTPS_RESPONSE_WAIT_MS
+@brief The time in milliseconds to wait for a response from the network before timing out.
+
+@configpossible Any positive integer.<br>
+@configdefault `1000`
+
+@section IOT_HTTPS_MAX_HOST_NAME_LENGTH
+@brief The maximum length of the DNS resolvable host name string allowed to be configured in #IotHttpsConnectionInfo_t.pAddress.
+
+An array of this length is allocated on stack during @ref https_client_function_connect. 
+
+@configpossible Any positive integer. <br>
+@configrecommended It is recommended that this be less or equal to 255. 255 is the maximum host length according to FQDN. <br>
+@configdefault `255`
+
+@section IOT_HTTPS_MAX_ALPN_PROTOCOLS_LENGTH
+@brief The maximum length of the ALPN protocols names string allowed to be configured in #IotHttpsConnectionInfo_t.pAlpnProtocols.
+
+An array of this length is allocated on stack during @ref https_client_function_connect. 
+
+@configpossible Any positive integer. <br>
+@configdefault `255`
+
+*/
diff --git a/doc/plantuml/https_client_async_callback_order.pu b/doc/plantuml/https_client_async_callback_order.pu
new file mode 100644
index 000000000..ea1f76666
--- /dev/null
+++ b/doc/plantuml/https_client_async_callback_order.pu
@@ -0,0 +1,15 @@
+@startuml
+hide empty description
+[*] -right-> appendHeaderCallback
+appendHeaderCallback -right-> writeCallback : Success
+appendHeaderCallback -down-> errorCallback : Application cancels the request
+writeCallback -down-> readReadyCallback : Success in network send
+writeCallback -down-> errorCallback : Failure in network send \nor application cancels the request
+readReadyCallback -down-> responseCompleteCallback : Success in everything and a \npersistent request
+readReadyCallback -left-> errorCallback : Failure in network receive, response parsing, or the application cancels the request
+readReadyCallback -down-> connectionCloseCallback : Success in everything and a \nnon-persistent request
+errorCallback -down-> connectionCloseCallback : Network error or \nresponse parsing error
+errorCallback -down-> responseCompleteCallback : Application cancels the requset
+connectionCloseCallback -down-> responseCompleteCallback : Always
+responseCompleteCallback -right-> [*]
+@enduml
diff --git a/doc/plantuml/https_client_async_workflow.xml b/doc/plantuml/https_client_async_workflow.xml
new file mode 100644
index 000000000..8d6bbd8bc
--- /dev/null
+++ b/doc/plantuml/https_client_async_workflow.xml
@@ -0,0 +1 @@
+<mxfile modified="2019-08-02T18:19:30.458Z" host="drawio.corp.amazon.com" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36" etag="Qzn3A3lIXDFBRDQqlzFu" version="10.9.7" type="device"><diagram id="3f61b235-5bca-4cc8-8dcf-f3ead469c6fc" name="Page-1">7V1bc9pKEv41rs0+2KXRXY+AHdsVn5zEdp3sPrkEGozWQiKSiO38+p0REkjTLZBjNMKAq0LQ6P51zzd9m+FEG0xfLmN3Nvkr8mhwoirey4l2fqKqqmKq7D/e8rpoIbplLFoeY9/L21YNd/5vmjcqeevc92hSOTCNoiD1Z9XGURSGdJRW2tw4jp6rh42joHrXmfuY31FZNdyN3ICCw374XjpZtNpG6egr6j9OijsTJd8zdYuD84Zk4nrRc6lJuzjRBnEUpYtv05cBDTh6BS6L8z7X7F0+WEzDtMkJ+pdJ1J/d/Lq7TaKbZ6L0p19/n+okv84vN5jnr/yVps9R/NQbJmnsjlI/CvMXSF8LVNi7zPjX+TS48cc08EO21Z/R2J/SlMZsT5A3f1u19Z8nfkrvZu6In/rMFIa1TdJpwLYI+8pEmLrslHi5HQTuLPGH2V0V1hLT0TxO/F/0liYLTeGt0TzldxosNYA3jtnFcm0iDOq+G/iPIdsYMbSyh4HwFUjQOKUvpaYczksasReJX9khxV5dydU7127HXGw+rzSF6NqibVLSEtU09VxFc/V8XF58JUH2JRciLlANSG6dnHqjNOLvzV/PZ/p94w5p8C1K/EzA2vkwStNoyg4I+I6+O3p6jKN56A2igJ/HrqaNs7/SNXo5qGkkiHIL4NpGBdrTghBK2GoKhNZU3g+s7gBk793kacZ4h7X+YH2DadDH6xJbEIppVxVeN6BUCCYWXdmCXEhxt3UqX0JvFvlhmt3P6J8Y54I4ojidRI9R6AZlgYz9ICipvOdSezxi7YwLoyda2mOObDoco7Au9ac5rkoFVtOGqCKgqo76flDnQzPRv9/1bi8+31/+vvxyffP0v1ONGAjSZsBu3Pf8X+zrI/96HaW8Y3xjHePhbjSh3jygn/5dHDiMi+OKFvYspbPXiU5kmCU70dDr8WGdtwXR6AmKbGyP6AgV2dA2uMKyi7z46X94rziz7Xzzv9mmQ5x8+/wl7zXZxmtpo6Qt67sV9QrTokb4MQ3clHXdqtGCyDI/9RvX59Lwo1QpUhe5L4nm8YjmZ5UtA+FCpq2sv1Dqxo80BRfKVGv5Po207fN12vMnTzbrey///J3cDpQvIdO2t/XrdyiHZ1Db0zHlsNWhZprvkmcO56lypplGftJ7Zayb9llVzIRYpGh6q6RtojW4Wo24V1crDozG44S2pBLQLkUIqGhKZm5YURfz55zb1ZkZePqcc2aPHZINRMXeZjzGXmBx/TeRGWP+tDqYx3yEdldDNxyegJEqavrU9zx+fhMjrWwBk2I7fz7EedjQM8WhbOlx5S90UnZqanqFbhY269Ko20onOWVeZfW6TvUSW9FT1H9aDsElPe3NZgET2h44Tlsy5Y3q8GIYiHWDmTeWYtSrQlP7RpVuMzYwQLYAqiPwuI1Y4gioFtmGg4R1Ba3waVtEuiDIgI7T7Q7ub/H6wZBsa9YZptQQfr1F+M2jEbXOiFKWf0ToOQ4501XbsMji09yabbXhynLtrBqtsY52llQ7a0PnPdpZOED229htjwYXxiyNRxe1rdFFJ9DO5cEQ1vIQLvIFt3REmW4NXGZ8DlmP4R17Y1+tghlGmTlcRj5vEmRT218xSznrudRrz74lum2I1K+iJoGqYNmALQhtPh0/qOHzz97L14dhQn/En8fzU2JDoR0D2Voe8gKBEJNg3QyLZmu63ZrIGmR1diDEvUHf2g58G2pb+DvQXSx1mee8yyic+5JD4TfLsCtSsknXzKYq7Xv1O2oOEEM3ZTqbNfhDX/84suQUpmNuYOcji6pgKb0PMrKs9O3DjiyMRhH880xp4d3e8eBL8hqOPpW832HJI3anXP0Xn9wxvHJDPjCog8y7+5lvGn2FiyxrFU5izvGsclQTK30bTEaqnULTYLxSQ3tEaxym1aeYlpAX9IBI49MGcfDt63AcSQPYBLwDIUaVvkWIoQMCIL4O/dRng+1vxs8/5zRpBDau66xVKuKCo24heBty8YbeQ8/zUG5Q0oh/TOjJMsTkR+G/ksXB32ERx/3E5zuzj8VpYz9OsjBlyG8RhQEHhw3W08U1FrJU/LA4IZdgOExyEX7PxFZtTvhjJXlwkF+cn81Mi+KJE0aRZx1xlgMFvKydkCRgLMey7Q5FdqRD6QjemioXbyzsWDdo/8kogeO+btAm3Q3aBlLup0seUaAVBRmONGO4LiA0iQ4HCVMuhLYEDlF3hENMxAiSzSGwnLg9DlEbcYjaHYdYiOEvmUN0GDyCHKLuLodYyLgomUN06DtBE1PAphqn3BDW2QJseiHnwnxTkRgARgXbmENQAxv0hyBsouENR7augdXEMQ2pPZIMLHR8IGzrgFV3EVhbQcKGkoGFDgcIIXWOm2NVExSG2r1CNqhXkA0TsTSQp1bM7qGCJn3DsfWt2bXN9T6b82ttDEwKYhJhwen2RABdgj0XgcC0BuImSBYB9BIOSwSWBQc7uSJAphfysW6PZSAOnLrTuQwwx2KvZcBGZZDjVzAnWaoczAZ1SLLtF21VU1cAZRlYZl2u/YLMe9hv5kbkYOiIHCRrbIP6BukOnbmbGgudkz0nWd1Ud1Blrfp0LXCxy5HIpsLaAnCWIQ5OBjI2Lcsm5UQfLdjVr8NfTC/FZDKIs7uzGQ29K+p6NOaV6rxQHQ25S4qOI/BiVRvY9MgW4YX00BDe55j15d3E1VQdqLZYd28R1wYVYF8v7n/8ffvl4e7i6zkK4CTT3awSgxdWzJOsHnk4H4/5F574CWjIUFY+8ZySHz7yV8keLhovCSS/SHfCwNxtuVk5q0EWdKMwGOxVzJMl5gugh5HHgUhmdOSPfeoVYruO0qs0nSWDwGe4Pvzg/SbPtPbZKfIEUxGLVZhMJbEYksXSIFlaiOX2YnBx/c/Fw6B3c9PvDb7UEQ6DnLOXJwdUoq/KfYs4PhJkVeXiasPYxjnXN7YxUE96iMWRNY/jaLo6QFa+U7er8wyJgmU8JQMIAxP5jDfWeHV//y23y6IwKTFs9sjsiWuXRKpT6g3cn2T28qYxQJK6V6PZDlERw1pyzQUy8429ZUIfChHlWPa7wkykCEdH5wvKLYywoV19P6FxpmhJQQNCVjVrZWpY7P2++AbLOLPmk+6KOQGpEBWDXJNrEyLzmv1mtnahyYNoOgvobpjdDGRdANnG2EAud2sq5G6AB1+Yopi2n9DHKQPhYtVUXhVjFLhJ4o8agrdxwYuyrYWgUrS9ew0Mw6lIphwSeetSF0Q3q2JWDSIsBVCztgXD0H0tHZbPMlrz2Io4UZc9uLbh6eA5xfPVn2M4G85hXxZPv1LEty1sUKObMAZ0S2fUzUrnucc2jeIi5pPbFp6bug368wcN1RFN1wSBowsgSA3VaWqD6PLeUwgMoloqObO11d+fEwq8tLX20tsjGPSljE0Ugz5v5ay2CANaDIdOGMICc8TSOo/tL4tND5sw7DNz9Sc69UTfEnesvYu59i7boxHRfmDvt5FE4DmmFAqBQbaDpxBNEETXFRjLydANA079LNIshpka5m1i6nq37N/rJicSCWMJV1bwprcHu3joHIZn/uwBhNgPfmlJDjIs9kHKP1ubN3w90K7uby7H/b/1Ge35zuTJuzslxaoH9dHhnxuCw7LmwljAT7Ow4HpbCdMa+JrMPhDQkV4jb5hV2JByy9bKUGpgO7TCKSADXZ6VWiMCJOJ7XO4KULSORzHbWvOqRlZ41daO0YxQUUyYNyaz4K0GOmyKyV4XvAE5EAdTYclsA31ipN4Nzt7vtN6NqGieqLWStxrooMu2NyVvhBkjKL1KRdiE/tbHr3ojmoquFthWkrMG2gYrbR1G4RvRUFVvrfatRh717h5cpEmcRF3Zn7mA6MJOUvAVFvkjOkrVsolkvTe4EzPNgXmg65h5INlMO7iZNFAMaPGUXCsNmUhzXOp9TfzOMaQu9V4jtN1cbwCAZWG/UySZZQ7OGSSWLtYbEgtby00uz7yhAn9nS73BYs/o/B3J5h30FWvNO+B3N7HvJFaCC8XFxEbWGpIMrwUdxWMl+EJYQhLV1KSWgteICzqfu1UKDijENKXWgtfABn3EUi34GjdRRWiEKyfmJG5c+hdkcjurHgdEhBbst1Y9XiMk6Gp+7OpxoXjHUaRWj9eADL3SYyHGxy/EAFNwGOV1XoiBzGw/5mPNapCEO4zdO9zIJHmwxC6QkPQwnw3WH8Enmkl2wZGZ8HvugmOSULuP9SGz4JGMLFwLWWZGVuj+NfE2yflYZJ76R83HivSqKDuQREHmq3+4bCwA1tiBXCwyj/0wcrGiNAiq5pIzscg89QaZWMzF7joTC6ZPkpq0iFx8d3AZQ2gKcNeje6PMPrjsKyIINA0u1yZDVmE45l/rQkSq6WCDqmRnsMmv03eQfRWgWk7S75BjDs7xI5aw2ruq21AMkhlmHzKvwiIBGqLckgPFNvQJm+Rdm1tzMlfgEis3VEPvHGDkx9mPmdcTNJitahb2o9OSc6/OrudexZVGFNSYkJt5daBPWGRe3ewzjE6WP7C69MGLuBw32DmMWTI1LGVUmRcub6ktyB42hqzkdKmzb+lS8ed8VFPHer1smj4mTPcyYSrasQZiEGwpXco24yhKS/sumX0++SvyKD/i/w==</diagram></mxfile>
\ No newline at end of file
diff --git a/doc/plantuml/https_client_sync_workflow.xml b/doc/plantuml/https_client_sync_workflow.xml
new file mode 100644
index 000000000..848491c1e
--- /dev/null
+++ b/doc/plantuml/https_client_sync_workflow.xml
@@ -0,0 +1 @@
+<mxfile modified="2019-08-02T18:28:29.292Z" host="drawio.corp.amazon.com" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36" etag="xsUiELOar6DnGkzyGm0W" version="10.9.7" type="device"><diagram id="1LMojzwiS8zcwwm-6fXJ" name="Page-1">5Vxdd5s4E/41PpteNAcQYLi0nXST0zSbxjnNvlc5GITNCUYU5Hz01+8IBAZJjmlr8L7ZXrgwIAHzzIwejUYZodn65c/MS1dfSIDjkaEFLyN0NjIM3Rrb8B+TvJYSA9lWKVlmUcDv2grm0Q/MhRqXbqIA560bKSExjdK20CdJgn3aknlZRp7bt4Ukbj819ZZYEsx9L5al91FAV6XUsbSt/AJHy1X1ZF3jV9ZedTMX5CsvIM8NETofoVlGCC2P1i8zHDPtVXop233acbV+sQwntEuDH7fT+Ns1ecg///X3/OufD5vgy91Ha1x28+TFG/7FkzSNI9+jEUn4i9PXShvwDSk73KzjqyjEcZTA2TTFWbTGFGdwJebim61s+ryKKJ6nns+aPoOhgGxF1zGc6XAI0FEPmmT1eRx7aR4tiqdqIMmwv8ny6Anf4ry0ECYlG8qeNKuRZ8IQOuNWpLPO+OfhjOKXnYrTazjAkDGB985e4ZaqgVZpiRvxR6fC9HlrEjXwq6Y5GDaXetwOl3X3W6jggKP1M8jZEnLXmD6T7HGyyGnm+e8AQABl6sXRMoETH9AqXuYAiBqm5rYRHY91GVETqRDV9Z4Q1SVA34Jv4lPC1MEUAe4aX3kLHN+QPCpwR2cLQilZww0xuzD1/MdlRjZJMCMxawe9obD41+hjwnVNiYDwQbzI1U8twY9cWetI4Ua9OZEhqfzOyx9TGGBAeg++BBb3/+dCh0DLdgQPMTWFh6jAQqgvB0H7HaSh0pRECS1ewZqOrDMBI5LRFVmSxIubKIVRHDccJPCwE/ogh4BKHnHjiu07eBF21fVu29sJQGXyXP22oxhwZN0blUoOrntToXs7hsdOg+gJDpfs8JJQ5j834D8Pc3+Fg02MTz5UNy6y6r5KAm/SaP0WmGKEqqMbToIJo3lMFhP/UQYxdHzsK0FcOJZpMYfBLxH9mznPqePw0/8Vp67u8vOzF+5cxclr46RhPw3vw4HEK/f6XoZjoF1P7XYqJHnTG2bhDZ+Ff2KERa7QTU42mY95yyZbFDuzHXtvZ9TLlphKnRUGVn/Xr9uczE179vcOpnKI2KprhsA+VLFVRSd1ra/Y6vSu64rIxTikilBrYScwVap3jAWy7UMRv7Fg0zrqpHnkop4U70qKZ0EFJA9JSedvsY8hKMw8YAQLoHEsoArIgEJom0+0tZiQgqM0Vc5FAihimF1HQcAeoqQvBZ3EgYK3H4gyGqarCTEIOZaEl6EpeLrRF2WsrEPNGZ85Z9QYiPl/BSh9bItupcsRbWCcVNMpTkQqxjEH9jB/TfyTBiFZNEiKt2bqK39ZgunCS5iWjVkxWH9vngp3ZzhPm5cphEHg6l/yLs57kDHGkLiAZShmW0oG3xsm8nxLwqSayigQOdkDCTu/TEIynI7R/nFcPZz0pmHVHEnQ8GUS0QjiyQ+YSn7f4LyTrgVzh9NhNS1Zs62KMNagupbnRJMgaIcGjRL2s8KjOkUdkeSPvLzrqzw1ultF7GLxUzYLo4xBpEGP8EuSmCkGgvy67KMEUIuSqgGHLVnkHLevBWRtcc5eK+dTNNY5aw3DWPXGOUTG08HAFeiwacvQmoY7ILSGPHg0QBW00h5e9yR6DqEwc2yKkV3BYo1BE2myLzSHwGNrzLXlySxSzLmG1ZmliNVH1pRhu6KmjCpXfjxFyUsdZVg7OLuuFxl+g1/34+GWIiSqMgRuXxjI81Tm4O8ZBFXQqFbd9sDQ26wGybPPdw4DRCQxCaA75pFR6LBUN/gYh0whZow161TOlgwbupE843vnoVuGwbAVMAxrrx1Wzo7PYv8V9qrmse/ZYE1brIX4FxisTI2rqfV2UtGcW3cF6RAKk5KdSJFY090hUxFItXwjpH2uz+/u/7r9/DA/vz5TZnxW2AtwVmQfWDJhkxeJ7MUmDNkBy/rEOPkA/52wvGmULNmXFO9GwhoI3slQiSHAQuRohqngaKog0h8aMlf+eTRA722l57XSS00vSMA0kafYj8IIBxVul4ReUJrmszgCLT7cZxBEeKJvCk0GREbARZNZmzUoLqZMnnficns+O7/8dv4wm1xdTSezz0qMPhQ6f4KwHwyjVcN0nZZW5am5MaxKZSZ8xmxto0hENiJ3mJG16oaBQjiocX+OY2BFykSZL/yC8OLu7oYPciTJG2G2eGN44Z0VNrvses8AkBekY99AMBBU4izc1hX0BA2Llkyo4ZNy/FBBxHU5PZbOhCihInTDLkyZuwvIwNiSllbs7xtSGG9dtPrRLzn0hHnBcnFiWPA9WqlX4fjDtv12TQVnxSJH8ZuQUb1wUpOdikXyxRKtWB9JGoskMPKeNpymfOcddWt9gYrEzOxYhStSMfX+cJWZ51txa1qQFjFaXUvhqkO0YvxH9i+xa8Et1Y2OhJ+OZEY07BKmKTPVncP39z2jd6eszgEUCcxSysvqtsz5DdWGjN40aam45bFTLK4tFCjoimWEYRMslkwY33lCUAZhjI6dX7E6lHuyCuY5P91WdJ5vpU1whPI0xh9hxLwqzs7YNh5FnbZQlvaLpbi/UmjNodFONb2awPx+7bXRRhnZ43YnOyqvQSvea+M2Xlr7xpOQrX7SzlJuuQVPkWxNqHyLzt9WpVj2FIJvu6puJGGY416KxS15KLv3ikJatg1OazAMBdNkNZEfy201jGLqRvoi00hGIj5FSZQDIZzjtZeuCCOUqsrBvcEsY5t4vO3uHrmgunsY67DBq3PNJ69R4m82qiPQ3t0sZUR5w9UM12pPStBhHE8TVhF0oVC7P4uz5aEsJUUxVpGYljjtIe3nAAOTNEusp9BHS4LYcqGHYpfRkfcTddipcND9RIHHDKaF+xE2F0k7J5DpVizmp/cW1ZSz6ssSLKrnjUW2amfRr3ur9uyViQQ/w2sWroMqg5BhusnK5IZHN3kVGrztFvvhiizbcRKNj+7sHdasJkFwUSTSlBkAoSYZ9JZ55e2fIhwHkvQbe9JwJctiCVdldc1cTRXxflPjcLr9QxKll2z/Hgc6/wc=</diagram></mxfile>
\ No newline at end of file
diff --git a/doc/plantuml/images/https_client_async_callback_order.png b/doc/plantuml/images/https_client_async_callback_order.png
new file mode 100644
index 000000000..292854d23
Binary files /dev/null and b/doc/plantuml/images/https_client_async_callback_order.png differ
diff --git a/doc/plantuml/images/https_client_async_workflow.png b/doc/plantuml/images/https_client_async_workflow.png
new file mode 100644
index 000000000..4bf044cc5
Binary files /dev/null and b/doc/plantuml/images/https_client_async_workflow.png differ
diff --git a/doc/plantuml/images/https_client_sync_workflow.png b/doc/plantuml/images/https_client_sync_workflow.png
new file mode 100644
index 000000000..276b88079
Binary files /dev/null and b/doc/plantuml/images/https_client_sync_workflow.png differ
diff --git a/doc/tag/README.md b/doc/tag/README.md
new file mode 100644
index 000000000..5c5e857c5
--- /dev/null
+++ b/doc/tag/README.md
@@ -0,0 +1,4 @@
+This folder is for generating working Doxygen tags.
+During Doxygen generation, this folder needs to be present. 
+\<library-name\>.tag will be created in this folder.
+Deleting this folder may cause generation to fail.
\ No newline at end of file
diff --git a/libraries/3rdparty/CMakeLists.txt b/libraries/3rdparty/CMakeLists.txt
index c0df6f6dc..63e353a08 100644
--- a/libraries/3rdparty/CMakeLists.txt
+++ b/libraries/3rdparty/CMakeLists.txt
@@ -1,6 +1,20 @@
 # -------------------------------------------------------------------------------------------------
 # 3rdparty libraries
 # -------------------------------------------------------------------------------------------------
+# http-parser - HTTP message parser
+if(EXISTS "${AFR_3RDPARTY_DIR}/http-parser")
+    afr_3rdparty_module(http-parser)
+    target_sources(
+        3rdparty::http-parser INTERFACE
+        "${AFR_3RDPARTY_DIR}/http-parser/http_parser.h"
+        "${AFR_3RDPARTY_DIR}/http-parser/http_parser.c"
+    )
+    target_include_directories(
+        3rdparty::http-parser INTERFACE
+        "${AFR_3RDPARTY_DIR}/http-parser"
+    )
+endif()
+
 # jsmn - JSON parser
 if(EXISTS "${AFR_3RDPARTY_DIR}/jsmn")
     afr_3rdparty_module(jsmn)
diff --git a/libraries/3rdparty/http-parser/LICENSE-MIT b/libraries/3rdparty/http-parser/LICENSE-MIT
new file mode 100644
index 000000000..1ec0ab4e1
--- /dev/null
+++ b/libraries/3rdparty/http-parser/LICENSE-MIT
@@ -0,0 +1,19 @@
+Copyright Joyent, Inc. and other Node contributors.
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to
+deal in the Software without restriction, including without limitation the
+rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
+sell copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in
+all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
+IN THE SOFTWARE. 
diff --git a/libraries/3rdparty/http-parser/http_parser.c b/libraries/3rdparty/http-parser/http_parser.c
new file mode 100644
index 000000000..48963853d
--- /dev/null
+++ b/libraries/3rdparty/http-parser/http_parser.c
@@ -0,0 +1,2498 @@
+/* Copyright Joyent, Inc. and other Node contributors.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to
+ * deal in the Software without restriction, including without limitation the
+ * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
+ * sell copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+ * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
+ * IN THE SOFTWARE.
+ */
+#include "http_parser.h"
+#include <assert.h>
+#include <stddef.h>
+#include <ctype.h>
+#include <string.h>
+#include <limits.h>
+
+static uint32_t max_header_size = HTTP_MAX_HEADER_SIZE;
+
+#ifndef ULLONG_MAX
+# define ULLONG_MAX ((uint64_t) -1) /* 2^64-1 */
+#endif
+
+#ifndef MIN
+# define MIN(a,b) ((a) < (b) ? (a) : (b))
+#endif
+
+#ifndef ARRAY_SIZE
+# define ARRAY_SIZE(a) (sizeof(a) / sizeof((a)[0]))
+#endif
+
+#ifndef BIT_AT
+# define BIT_AT(a, i)                                                \
+  (!!((unsigned int) (a)[(unsigned int) (i) >> 3] &                  \
+   (1 << ((unsigned int) (i) & 7))))
+#endif
+
+#ifndef ELEM_AT
+# define ELEM_AT(a, i, v) ((unsigned int) (i) < ARRAY_SIZE(a) ? (a)[(i)] : (v))
+#endif
+
+#define SET_ERRNO(e)                                                 \
+do {                                                                 \
+  parser->nread = nread;                                             \
+  parser->http_errno = (e);                                          \
+} while(0)
+
+#define CURRENT_STATE() p_state
+#define UPDATE_STATE(V) p_state = (enum state) (V);
+#define RETURN(V)                                                    \
+do {                                                                 \
+  parser->nread = nread;                                             \
+  parser->state = CURRENT_STATE();                                   \
+  return (V);                                                        \
+} while (0);
+#define REEXECUTE()                                                  \
+  goto reexecute;                                                    \
+
+
+#ifdef __GNUC__
+# define LIKELY(X) __builtin_expect(!!(X), 1)
+# define UNLIKELY(X) __builtin_expect(!!(X), 0)
+#else
+# define LIKELY(X) (X)
+# define UNLIKELY(X) (X)
+#endif
+
+
+/* Run the notify callback FOR, returning ER if it fails */
+#define CALLBACK_NOTIFY_(FOR, ER)                                    \
+do {                                                                 \
+  assert(HTTP_PARSER_ERRNO(parser) == HPE_OK);                       \
+                                                                     \
+  if (LIKELY(settings->on_##FOR)) {                                  \
+    parser->state = CURRENT_STATE();                                 \
+    if (UNLIKELY(0 != settings->on_##FOR(parser))) {                 \
+      SET_ERRNO(HPE_CB_##FOR);                                       \
+    }                                                                \
+    UPDATE_STATE(parser->state);                                     \
+                                                                     \
+    /* We either errored above or got paused; get out */             \
+    if (UNLIKELY(HTTP_PARSER_ERRNO(parser) != HPE_OK)) {             \
+      return (ER);                                                   \
+    }                                                                \
+  }                                                                  \
+} while (0)
+
+/* Run the notify callback FOR and consume the current byte */
+#define CALLBACK_NOTIFY(FOR)            CALLBACK_NOTIFY_(FOR, p - data + 1)
+
+/* Run the notify callback FOR and don't consume the current byte */
+#define CALLBACK_NOTIFY_NOADVANCE(FOR)  CALLBACK_NOTIFY_(FOR, p - data)
+
+/* Run data callback FOR with LEN bytes, returning ER if it fails */
+#define CALLBACK_DATA_(FOR, LEN, ER)                                 \
+do {                                                                 \
+  assert(HTTP_PARSER_ERRNO(parser) == HPE_OK);                       \
+                                                                     \
+  if (FOR##_mark) {                                                  \
+    if (LIKELY(settings->on_##FOR)) {                                \
+      parser->state = CURRENT_STATE();                               \
+      if (UNLIKELY(0 !=                                              \
+                   settings->on_##FOR(parser, FOR##_mark, (LEN)))) { \
+        SET_ERRNO(HPE_CB_##FOR);                                     \
+      }                                                              \
+      UPDATE_STATE(parser->state);                                   \
+                                                                     \
+      /* We either errored above or got paused; get out */           \
+      if (UNLIKELY(HTTP_PARSER_ERRNO(parser) != HPE_OK)) {           \
+        return (ER);                                                 \
+      }                                                              \
+    }                                                                \
+    FOR##_mark = NULL;                                               \
+  }                                                                  \
+} while (0)
+
+/* Run the data callback FOR and consume the current byte */
+#define CALLBACK_DATA(FOR)                                           \
+    CALLBACK_DATA_(FOR, p - FOR##_mark, p - data + 1)
+
+/* Run the data callback FOR and don't consume the current byte */
+#define CALLBACK_DATA_NOADVANCE(FOR)                                 \
+    CALLBACK_DATA_(FOR, p - FOR##_mark, p - data)
+
+/* Set the mark FOR; non-destructive if mark is already set */
+#define MARK(FOR)                                                    \
+do {                                                                 \
+  if (!FOR##_mark) {                                                 \
+    FOR##_mark = p;                                                  \
+  }                                                                  \
+} while (0)
+
+/* Don't allow the total size of the HTTP headers (including the status
+ * line) to exceed max_header_size.  This check is here to protect
+ * embedders against denial-of-service attacks where the attacker feeds
+ * us a never-ending header that the embedder keeps buffering.
+ *
+ * This check is arguably the responsibility of embedders but we're doing
+ * it on the embedder's behalf because most won't bother and this way we
+ * make the web a little safer.  max_header_size is still far bigger
+ * than any reasonable request or response so this should never affect
+ * day-to-day operation.
+ */
+#define COUNT_HEADER_SIZE(V)                                         \
+do {                                                                 \
+  nread += (uint32_t)(V);                                            \
+  if (UNLIKELY(nread > max_header_size)) {                           \
+    SET_ERRNO(HPE_HEADER_OVERFLOW);                                  \
+    goto error;                                                      \
+  }                                                                  \
+} while (0)
+
+
+#define PROXY_CONNECTION "proxy-connection"
+#define CONNECTION "connection"
+#define CONTENT_LENGTH "content-length"
+#define TRANSFER_ENCODING "transfer-encoding"
+#define UPGRADE "upgrade"
+#define CHUNKED "chunked"
+#define KEEP_ALIVE "keep-alive"
+#define CLOSE "close"
+
+
+static const char *method_strings[] =
+  {
+#define XX(num, name, string) #string,
+  HTTP_METHOD_MAP(XX)
+#undef XX
+  };
+
+
+/* Tokens as defined by rfc 2616. Also lowercases them.
+ *        token       = 1*<any CHAR except CTLs or separators>
+ *     separators     = "(" | ")" | "<" | ">" | "@"
+ *                    | "," | ";" | ":" | "\" | <">
+ *                    | "/" | "[" | "]" | "?" | "="
+ *                    | "{" | "}" | SP | HT
+ */
+static const char tokens[256] = {
+/*   0 nul    1 soh    2 stx    3 etx    4 eot    5 enq    6 ack    7 bel  */
+        0,       0,       0,       0,       0,       0,       0,       0,
+/*   8 bs     9 ht    10 nl    11 vt    12 np    13 cr    14 so    15 si   */
+        0,       0,       0,       0,       0,       0,       0,       0,
+/*  16 dle   17 dc1   18 dc2   19 dc3   20 dc4   21 nak   22 syn   23 etb */
+        0,       0,       0,       0,       0,       0,       0,       0,
+/*  24 can   25 em    26 sub   27 esc   28 fs    29 gs    30 rs    31 us  */
+        0,       0,       0,       0,       0,       0,       0,       0,
+/*  32 sp    33  !    34  "    35  #    36  $    37  %    38  &    39  '  */
+       ' ',     '!',      0,      '#',     '$',     '%',     '&',    '\'',
+/*  40  (    41  )    42  *    43  +    44  ,    45  -    46  .    47  /  */
+        0,       0,      '*',     '+',      0,      '-',     '.',      0,
+/*  48  0    49  1    50  2    51  3    52  4    53  5    54  6    55  7  */
+       '0',     '1',     '2',     '3',     '4',     '5',     '6',     '7',
+/*  56  8    57  9    58  :    59  ;    60  <    61  =    62  >    63  ?  */
+       '8',     '9',      0,       0,       0,       0,       0,       0,
+/*  64  @    65  A    66  B    67  C    68  D    69  E    70  F    71  G  */
+        0,      'a',     'b',     'c',     'd',     'e',     'f',     'g',
+/*  72  H    73  I    74  J    75  K    76  L    77  M    78  N    79  O  */
+       'h',     'i',     'j',     'k',     'l',     'm',     'n',     'o',
+/*  80  P    81  Q    82  R    83  S    84  T    85  U    86  V    87  W  */
+       'p',     'q',     'r',     's',     't',     'u',     'v',     'w',
+/*  88  X    89  Y    90  Z    91  [    92  \    93  ]    94  ^    95  _  */
+       'x',     'y',     'z',      0,       0,       0,      '^',     '_',
+/*  96  `    97  a    98  b    99  c   100  d   101  e   102  f   103  g  */
+       '`',     'a',     'b',     'c',     'd',     'e',     'f',     'g',
+/* 104  h   105  i   106  j   107  k   108  l   109  m   110  n   111  o  */
+       'h',     'i',     'j',     'k',     'l',     'm',     'n',     'o',
+/* 112  p   113  q   114  r   115  s   116  t   117  u   118  v   119  w  */
+       'p',     'q',     'r',     's',     't',     'u',     'v',     'w',
+/* 120  x   121  y   122  z   123  {   124  |   125  }   126  ~   127 del */
+       'x',     'y',     'z',      0,      '|',      0,      '~',       0 };
+
+
+static const int8_t unhex[256] =
+  {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
+  ,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
+  ,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
+  , 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,-1,-1,-1,-1,-1,-1
+  ,-1,10,11,12,13,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1
+  ,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
+  ,-1,10,11,12,13,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1
+  ,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1
+  };
+
+
+#if HTTP_PARSER_STRICT
+# define T(v) 0
+#else
+# define T(v) v
+#endif
+
+
+static const uint8_t normal_url_char[32] = {
+/*   0 nul    1 soh    2 stx    3 etx    4 eot    5 enq    6 ack    7 bel  */
+        0    |   0    |   0    |   0    |   0    |   0    |   0    |   0,
+/*   8 bs     9 ht    10 nl    11 vt    12 np    13 cr    14 so    15 si   */
+        0    | T(2)   |   0    |   0    | T(16)  |   0    |   0    |   0,
+/*  16 dle   17 dc1   18 dc2   19 dc3   20 dc4   21 nak   22 syn   23 etb */
+        0    |   0    |   0    |   0    |   0    |   0    |   0    |   0,
+/*  24 can   25 em    26 sub   27 esc   28 fs    29 gs    30 rs    31 us  */
+        0    |   0    |   0    |   0    |   0    |   0    |   0    |   0,
+/*  32 sp    33  !    34  "    35  #    36  $    37  %    38  &    39  '  */
+        0    |   2    |   4    |   0    |   16   |   32   |   64   |  128,
+/*  40  (    41  )    42  *    43  +    44  ,    45  -    46  .    47  /  */
+        1    |   2    |   4    |   8    |   16   |   32   |   64   |  128,
+/*  48  0    49  1    50  2    51  3    52  4    53  5    54  6    55  7  */
+        1    |   2    |   4    |   8    |   16   |   32   |   64   |  128,
+/*  56  8    57  9    58  :    59  ;    60  <    61  =    62  >    63  ?  */
+        1    |   2    |   4    |   8    |   16   |   32   |   64   |   0,
+/*  64  @    65  A    66  B    67  C    68  D    69  E    70  F    71  G  */
+        1    |   2    |   4    |   8    |   16   |   32   |   64   |  128,
+/*  72  H    73  I    74  J    75  K    76  L    77  M    78  N    79  O  */
+        1    |   2    |   4    |   8    |   16   |   32   |   64   |  128,
+/*  80  P    81  Q    82  R    83  S    84  T    85  U    86  V    87  W  */
+        1    |   2    |   4    |   8    |   16   |   32   |   64   |  128,
+/*  88  X    89  Y    90  Z    91  [    92  \    93  ]    94  ^    95  _  */
+        1    |   2    |   4    |   8    |   16   |   32   |   64   |  128,
+/*  96  `    97  a    98  b    99  c   100  d   101  e   102  f   103  g  */
+        1    |   2    |   4    |   8    |   16   |   32   |   64   |  128,
+/* 104  h   105  i   106  j   107  k   108  l   109  m   110  n   111  o  */
+        1    |   2    |   4    |   8    |   16   |   32   |   64   |  128,
+/* 112  p   113  q   114  r   115  s   116  t   117  u   118  v   119  w  */
+        1    |   2    |   4    |   8    |   16   |   32   |   64   |  128,
+/* 120  x   121  y   122  z   123  {   124  |   125  }   126  ~   127 del */
+        1    |   2    |   4    |   8    |   16   |   32   |   64   |   0, };
+
+#undef T
+
+enum state
+  { s_dead = 1 /* important that this is > 0 */
+
+  , s_start_req_or_res
+  , s_res_or_resp_H
+  , s_start_res
+  , s_res_H
+  , s_res_HT
+  , s_res_HTT
+  , s_res_HTTP
+  , s_res_http_major
+  , s_res_http_dot
+  , s_res_http_minor
+  , s_res_http_end
+  , s_res_first_status_code
+  , s_res_status_code
+  , s_res_status_start
+  , s_res_status
+  , s_res_line_almost_done
+
+  , s_start_req
+
+  , s_req_method
+  , s_req_spaces_before_url
+  , s_req_schema
+  , s_req_schema_slash
+  , s_req_schema_slash_slash
+  , s_req_server_start
+  , s_req_server
+  , s_req_server_with_at
+  , s_req_path
+  , s_req_query_string_start
+  , s_req_query_string
+  , s_req_fragment_start
+  , s_req_fragment
+  , s_req_http_start
+  , s_req_http_H
+  , s_req_http_HT
+  , s_req_http_HTT
+  , s_req_http_HTTP
+  , s_req_http_I
+  , s_req_http_IC
+  , s_req_http_major
+  , s_req_http_dot
+  , s_req_http_minor
+  , s_req_http_end
+  , s_req_line_almost_done
+
+  , s_header_field_start
+  , s_header_field
+  , s_header_value_discard_ws
+  , s_header_value_discard_ws_almost_done
+  , s_header_value_discard_lws
+  , s_header_value_start
+  , s_header_value
+  , s_header_value_lws
+
+  , s_header_almost_done
+
+  , s_chunk_size_start
+  , s_chunk_size
+  , s_chunk_parameters
+  , s_chunk_size_almost_done
+
+  , s_headers_almost_done
+  , s_headers_done
+
+  /* Important: 's_headers_done' must be the last 'header' state. All
+   * states beyond this must be 'body' states. It is used for overflow
+   * checking. See the PARSING_HEADER() macro.
+   */
+
+  , s_chunk_data
+  , s_chunk_data_almost_done
+  , s_chunk_data_done
+
+  , s_body_identity
+  , s_body_identity_eof
+
+  , s_message_done
+  };
+
+
+#define PARSING_HEADER(state) (state <= s_headers_done)
+
+
+enum header_states
+  { h_general = 0
+  , h_C
+  , h_CO
+  , h_CON
+
+  , h_matching_connection
+  , h_matching_proxy_connection
+  , h_matching_content_length
+  , h_matching_transfer_encoding
+  , h_matching_upgrade
+
+  , h_connection
+  , h_content_length
+  , h_content_length_num
+  , h_content_length_ws
+  , h_transfer_encoding
+  , h_upgrade
+
+  , h_matching_transfer_encoding_chunked
+  , h_matching_connection_token_start
+  , h_matching_connection_keep_alive
+  , h_matching_connection_close
+  , h_matching_connection_upgrade
+  , h_matching_connection_token
+
+  , h_transfer_encoding_chunked
+  , h_connection_keep_alive
+  , h_connection_close
+  , h_connection_upgrade
+  };
+
+enum http_host_state
+  {
+    s_http_host_dead = 1
+  , s_http_userinfo_start
+  , s_http_userinfo
+  , s_http_host_start
+  , s_http_host_v6_start
+  , s_http_host
+  , s_http_host_v6
+  , s_http_host_v6_end
+  , s_http_host_v6_zone_start
+  , s_http_host_v6_zone
+  , s_http_host_port_start
+  , s_http_host_port
+};
+
+/* Macros for character classes; depends on strict-mode  */
+#define CR                  '\r'
+#define LF                  '\n'
+#define LOWER(c)            (unsigned char)(c | 0x20)
+#define IS_ALPHA(c)         (LOWER(c) >= 'a' && LOWER(c) <= 'z')
+#define IS_NUM(c)           ((c) >= '0' && (c) <= '9')
+#define IS_ALPHANUM(c)      (IS_ALPHA(c) || IS_NUM(c))
+#define IS_HEX(c)           (IS_NUM(c) || (LOWER(c) >= 'a' && LOWER(c) <= 'f'))
+#define IS_MARK(c)          ((c) == '-' || (c) == '_' || (c) == '.' || \
+  (c) == '!' || (c) == '~' || (c) == '*' || (c) == '\'' || (c) == '(' || \
+  (c) == ')')
+#define IS_USERINFO_CHAR(c) (IS_ALPHANUM(c) || IS_MARK(c) || (c) == '%' || \
+  (c) == ';' || (c) == ':' || (c) == '&' || (c) == '=' || (c) == '+' || \
+  (c) == '$' || (c) == ',')
+
+#define STRICT_TOKEN(c)     ((c == ' ') ? 0 : tokens[(unsigned char)c])
+
+#if HTTP_PARSER_STRICT
+#define TOKEN(c)            STRICT_TOKEN(c)
+#define IS_URL_CHAR(c)      (BIT_AT(normal_url_char, (unsigned char)c))
+#define IS_HOST_CHAR(c)     (IS_ALPHANUM(c) || (c) == '.' || (c) == '-')
+#else
+#define TOKEN(c)            tokens[(unsigned char)c]
+#define IS_URL_CHAR(c)                                                         \
+  (BIT_AT(normal_url_char, (unsigned char)c) || ((c) & 0x80))
+#define IS_HOST_CHAR(c)                                                        \
+  (IS_ALPHANUM(c) || (c) == '.' || (c) == '-' || (c) == '_')
+#endif
+
+/**
+ * Verify that a char is a valid visible (printable) US-ASCII
+ * character or %x80-FF
+ **/
+#define IS_HEADER_CHAR(ch)                                                     \
+  (ch == CR || ch == LF || ch == 9 || ((unsigned char)ch > 31 && ch != 127))
+
+#define start_state (parser->type == HTTP_REQUEST ? s_start_req : s_start_res)
+
+
+#if HTTP_PARSER_STRICT
+# define STRICT_CHECK(cond)                                          \
+do {                                                                 \
+  if (cond) {                                                        \
+    SET_ERRNO(HPE_STRICT);                                           \
+    goto error;                                                      \
+  }                                                                  \
+} while (0)
+# define NEW_MESSAGE() (http_should_keep_alive(parser) ? start_state : s_dead)
+#else
+# define STRICT_CHECK(cond)
+# define NEW_MESSAGE() start_state
+#endif
+
+
+/* Map errno values to strings for human-readable output */
+#define HTTP_STRERROR_GEN(n, s) { "HPE_" #n, s },
+static struct {
+  const char *name;
+  const char *description;
+} http_strerror_tab[] = {
+  HTTP_ERRNO_MAP(HTTP_STRERROR_GEN)
+};
+#undef HTTP_STRERROR_GEN
+
+int http_message_needs_eof(const http_parser *parser);
+
+/* Our URL parser.
+ *
+ * This is designed to be shared by http_parser_execute() for URL validation,
+ * hence it has a state transition + byte-for-byte interface. In addition, it
+ * is meant to be embedded in http_parser_parse_url(), which does the dirty
+ * work of turning state transitions URL components for its API.
+ *
+ * This function should only be invoked with non-space characters. It is
+ * assumed that the caller cares about (and can detect) the transition between
+ * URL and non-URL states by looking for these.
+ */
+static enum state
+parse_url_char(enum state s, const char ch)
+{
+  if (ch == ' ' || ch == '\r' || ch == '\n') {
+    return s_dead;
+  }
+
+#if HTTP_PARSER_STRICT
+  if (ch == '\t' || ch == '\f') {
+    return s_dead;
+  }
+#endif
+
+  switch (s) {
+    case s_req_spaces_before_url:
+      /* Proxied requests are followed by scheme of an absolute URI (alpha).
+       * All methods except CONNECT are followed by '/' or '*'.
+       */
+
+      if (ch == '/' || ch == '*') {
+        return s_req_path;
+      }
+
+      if (IS_ALPHA(ch)) {
+        return s_req_schema;
+      }
+
+      break;
+
+    case s_req_schema:
+      if (IS_ALPHA(ch)) {
+        return s;
+      }
+
+      if (ch == ':') {
+        return s_req_schema_slash;
+      }
+
+      break;
+
+    case s_req_schema_slash:
+      if (ch == '/') {
+        return s_req_schema_slash_slash;
+      }
+
+      break;
+
+    case s_req_schema_slash_slash:
+      if (ch == '/') {
+        return s_req_server_start;
+      }
+
+      break;
+
+    case s_req_server_with_at:
+      if (ch == '@') {
+        return s_dead;
+      }
+
+    /* fall through */
+    case s_req_server_start:
+    case s_req_server:
+      if (ch == '/') {
+        return s_req_path;
+      }
+
+      if (ch == '?') {
+        return s_req_query_string_start;
+      }
+
+      if (ch == '@') {
+        return s_req_server_with_at;
+      }
+
+      if (IS_USERINFO_CHAR(ch) || ch == '[' || ch == ']') {
+        return s_req_server;
+      }
+
+      break;
+
+    case s_req_path:
+      if (IS_URL_CHAR(ch)) {
+        return s;
+      }
+
+      switch (ch) {
+        case '?':
+          return s_req_query_string_start;
+
+        case '#':
+          return s_req_fragment_start;
+      }
+
+      break;
+
+    case s_req_query_string_start:
+    case s_req_query_string:
+      if (IS_URL_CHAR(ch)) {
+        return s_req_query_string;
+      }
+
+      switch (ch) {
+        case '?':
+          /* allow extra '?' in query string */
+          return s_req_query_string;
+
+        case '#':
+          return s_req_fragment_start;
+      }
+
+      break;
+
+    case s_req_fragment_start:
+      if (IS_URL_CHAR(ch)) {
+        return s_req_fragment;
+      }
+
+      switch (ch) {
+        case '?':
+          return s_req_fragment;
+
+        case '#':
+          return s;
+      }
+
+      break;
+
+    case s_req_fragment:
+      if (IS_URL_CHAR(ch)) {
+        return s;
+      }
+
+      switch (ch) {
+        case '?':
+        case '#':
+          return s;
+      }
+
+      break;
+
+    default:
+      break;
+  }
+
+  /* We should never fall out of the switch above unless there's an error */
+  return s_dead;
+}
+
+size_t http_parser_execute (http_parser *parser,
+                            const http_parser_settings *settings,
+                            const char *data,
+                            size_t len)
+{
+  char c, ch;
+  int8_t unhex_val;
+  const char *p = data;
+  const char *header_field_mark = 0;
+  const char *header_value_mark = 0;
+  const char *url_mark = 0;
+  const char *body_mark = 0;
+  const char *status_mark = 0;
+  enum state p_state = (enum state) parser->state;
+  const unsigned int lenient = parser->lenient_http_headers;
+  uint32_t nread = parser->nread;
+
+  /* We're in an error state. Don't bother doing anything. */
+  if (HTTP_PARSER_ERRNO(parser) != HPE_OK) {
+    return 0;
+  }
+
+  if (len == 0) {
+    switch (CURRENT_STATE()) {
+      case s_body_identity_eof:
+        /* Use of CALLBACK_NOTIFY() here would erroneously return 1 byte read if
+         * we got paused.
+         */
+        CALLBACK_NOTIFY_NOADVANCE(message_complete);
+        return 0;
+
+      case s_dead:
+      case s_start_req_or_res:
+      case s_start_res:
+      case s_start_req:
+        return 0;
+
+      default:
+        SET_ERRNO(HPE_INVALID_EOF_STATE);
+        return 1;
+    }
+  }
+
+
+  if (CURRENT_STATE() == s_header_field)
+    header_field_mark = data;
+  if (CURRENT_STATE() == s_header_value)
+    header_value_mark = data;
+  switch (CURRENT_STATE()) {
+  case s_req_path:
+  case s_req_schema:
+  case s_req_schema_slash:
+  case s_req_schema_slash_slash:
+  case s_req_server_start:
+  case s_req_server:
+  case s_req_server_with_at:
+  case s_req_query_string_start:
+  case s_req_query_string:
+  case s_req_fragment_start:
+  case s_req_fragment:
+    url_mark = data;
+    break;
+  case s_res_status:
+    status_mark = data;
+    break;
+  default:
+    break;
+  }
+
+  for (p=data; p != data + len; p++) {
+    ch = *p;
+
+    if (PARSING_HEADER(CURRENT_STATE()))
+      COUNT_HEADER_SIZE(1);
+
+reexecute:
+    switch (CURRENT_STATE()) {
+
+      case s_dead:
+        /* this state is used after a 'Connection: close' message
+         * the parser will error out if it reads another message
+         */
+        if (LIKELY(ch == CR || ch == LF))
+          break;
+
+        SET_ERRNO(HPE_CLOSED_CONNECTION);
+        goto error;
+
+      case s_start_req_or_res:
+      {
+        if (ch == CR || ch == LF)
+          break;
+        parser->flags = 0;
+        parser->content_length = ULLONG_MAX;
+
+        if (ch == 'H') {
+          UPDATE_STATE(s_res_or_resp_H);
+
+          CALLBACK_NOTIFY(message_begin);
+        } else {
+          parser->type = HTTP_REQUEST;
+          UPDATE_STATE(s_start_req);
+          REEXECUTE();
+        }
+
+        break;
+      }
+
+      case s_res_or_resp_H:
+        if (ch == 'T') {
+          parser->type = HTTP_RESPONSE;
+          UPDATE_STATE(s_res_HT);
+        } else {
+          if (UNLIKELY(ch != 'E')) {
+            SET_ERRNO(HPE_INVALID_CONSTANT);
+            goto error;
+          }
+
+          parser->type = HTTP_REQUEST;
+          parser->method = HTTP_HEAD;
+          parser->index = 2;
+          UPDATE_STATE(s_req_method);
+        }
+        break;
+
+      case s_start_res:
+      {
+        if (ch == CR || ch == LF)
+          break;
+        parser->flags = 0;
+        parser->content_length = ULLONG_MAX;
+
+        if (ch == 'H') {
+          UPDATE_STATE(s_res_H);
+        } else {
+          SET_ERRNO(HPE_INVALID_CONSTANT);
+          goto error;
+        }
+
+        CALLBACK_NOTIFY(message_begin);
+        break;
+      }
+
+      case s_res_H:
+        STRICT_CHECK(ch != 'T');
+        UPDATE_STATE(s_res_HT);
+        break;
+
+      case s_res_HT:
+        STRICT_CHECK(ch != 'T');
+        UPDATE_STATE(s_res_HTT);
+        break;
+
+      case s_res_HTT:
+        STRICT_CHECK(ch != 'P');
+        UPDATE_STATE(s_res_HTTP);
+        break;
+
+      case s_res_HTTP:
+        STRICT_CHECK(ch != '/');
+        UPDATE_STATE(s_res_http_major);
+        break;
+
+      case s_res_http_major:
+        if (UNLIKELY(!IS_NUM(ch))) {
+          SET_ERRNO(HPE_INVALID_VERSION);
+          goto error;
+        }
+
+        parser->http_major = ch - '0';
+        UPDATE_STATE(s_res_http_dot);
+        break;
+
+      case s_res_http_dot:
+      {
+        if (UNLIKELY(ch != '.')) {
+          SET_ERRNO(HPE_INVALID_VERSION);
+          goto error;
+        }
+
+        UPDATE_STATE(s_res_http_minor);
+        break;
+      }
+
+      case s_res_http_minor:
+        if (UNLIKELY(!IS_NUM(ch))) {
+          SET_ERRNO(HPE_INVALID_VERSION);
+          goto error;
+        }
+
+        parser->http_minor = ch - '0';
+        UPDATE_STATE(s_res_http_end);
+        break;
+
+      case s_res_http_end:
+      {
+        if (UNLIKELY(ch != ' ')) {
+          SET_ERRNO(HPE_INVALID_VERSION);
+          goto error;
+        }
+
+        UPDATE_STATE(s_res_first_status_code);
+        break;
+      }
+
+      case s_res_first_status_code:
+      {
+        if (!IS_NUM(ch)) {
+          if (ch == ' ') {
+            break;
+          }
+
+          SET_ERRNO(HPE_INVALID_STATUS);
+          goto error;
+        }
+        parser->status_code = ch - '0';
+        UPDATE_STATE(s_res_status_code);
+        break;
+      }
+
+      case s_res_status_code:
+      {
+        if (!IS_NUM(ch)) {
+          switch (ch) {
+            case ' ':
+              UPDATE_STATE(s_res_status_start);
+              break;
+            case CR:
+            case LF:
+              UPDATE_STATE(s_res_status_start);
+              REEXECUTE();
+              break;
+            default:
+              SET_ERRNO(HPE_INVALID_STATUS);
+              goto error;
+          }
+          break;
+        }
+
+        parser->status_code *= 10;
+        parser->status_code += ch - '0';
+
+        if (UNLIKELY(parser->status_code > 999)) {
+          SET_ERRNO(HPE_INVALID_STATUS);
+          goto error;
+        }
+
+        break;
+      }
+
+      case s_res_status_start:
+      {
+        MARK(status);
+        UPDATE_STATE(s_res_status);
+        parser->index = 0;
+
+        if (ch == CR || ch == LF)
+          REEXECUTE();
+
+        break;
+      }
+
+      case s_res_status:
+        if (ch == CR) {
+          UPDATE_STATE(s_res_line_almost_done);
+          CALLBACK_DATA(status);
+          break;
+        }
+
+        if (ch == LF) {
+          UPDATE_STATE(s_header_field_start);
+          CALLBACK_DATA(status);
+          break;
+        }
+
+        break;
+
+      case s_res_line_almost_done:
+        STRICT_CHECK(ch != LF);
+        UPDATE_STATE(s_header_field_start);
+        break;
+
+      case s_start_req:
+      {
+        if (ch == CR || ch == LF)
+          break;
+        parser->flags = 0;
+        parser->content_length = ULLONG_MAX;
+
+        if (UNLIKELY(!IS_ALPHA(ch))) {
+          SET_ERRNO(HPE_INVALID_METHOD);
+          goto error;
+        }
+
+        parser->method = (enum http_method) 0;
+        parser->index = 1;
+        switch (ch) {
+          case 'A': parser->method = HTTP_ACL; break;
+          case 'B': parser->method = HTTP_BIND; break;
+          case 'C': parser->method = HTTP_CONNECT; /* or COPY, CHECKOUT */ break;
+          case 'D': parser->method = HTTP_DELETE; break;
+          case 'G': parser->method = HTTP_GET; break;
+          case 'H': parser->method = HTTP_HEAD; break;
+          case 'L': parser->method = HTTP_LOCK; /* or LINK */ break;
+          case 'M': parser->method = HTTP_MKCOL; /* or MOVE, MKACTIVITY, MERGE, M-SEARCH, MKCALENDAR */ break;
+          case 'N': parser->method = HTTP_NOTIFY; break;
+          case 'O': parser->method = HTTP_OPTIONS; break;
+          case 'P': parser->method = HTTP_POST;
+            /* or PROPFIND|PROPPATCH|PUT|PATCH|PURGE */
+            break;
+          case 'R': parser->method = HTTP_REPORT; /* or REBIND */ break;
+          case 'S': parser->method = HTTP_SUBSCRIBE; /* or SEARCH, SOURCE */ break;
+          case 'T': parser->method = HTTP_TRACE; break;
+          case 'U': parser->method = HTTP_UNLOCK; /* or UNSUBSCRIBE, UNBIND, UNLINK */ break;
+          default:
+            SET_ERRNO(HPE_INVALID_METHOD);
+            goto error;
+        }
+        UPDATE_STATE(s_req_method);
+
+        CALLBACK_NOTIFY(message_begin);
+
+        break;
+      }
+
+      case s_req_method:
+      {
+        const char *matcher;
+        if (UNLIKELY(ch == '\0')) {
+          SET_ERRNO(HPE_INVALID_METHOD);
+          goto error;
+        }
+
+        matcher = method_strings[parser->method];
+        if (ch == ' ' && matcher[parser->index] == '\0') {
+          UPDATE_STATE(s_req_spaces_before_url);
+        } else if (ch == matcher[parser->index]) {
+          ; /* nada */
+        } else if ((ch >= 'A' && ch <= 'Z') || ch == '-') {
+
+          switch (parser->method << 16 | parser->index << 8 | ch) {
+#define XX(meth, pos, ch, new_meth) \
+            case (HTTP_##meth << 16 | pos << 8 | ch): \
+              parser->method = HTTP_##new_meth; break;
+
+            XX(POST,      1, 'U', PUT)
+            XX(POST,      1, 'A', PATCH)
+            XX(POST,      1, 'R', PROPFIND)
+            XX(PUT,       2, 'R', PURGE)
+            XX(CONNECT,   1, 'H', CHECKOUT)
+            XX(CONNECT,   2, 'P', COPY)
+            XX(MKCOL,     1, 'O', MOVE)
+            XX(MKCOL,     1, 'E', MERGE)
+            XX(MKCOL,     1, '-', MSEARCH)
+            XX(MKCOL,     2, 'A', MKACTIVITY)
+            XX(MKCOL,     3, 'A', MKCALENDAR)
+            XX(SUBSCRIBE, 1, 'E', SEARCH)
+            XX(SUBSCRIBE, 1, 'O', SOURCE)
+            XX(REPORT,    2, 'B', REBIND)
+            XX(PROPFIND,  4, 'P', PROPPATCH)
+            XX(LOCK,      1, 'I', LINK)
+            XX(UNLOCK,    2, 'S', UNSUBSCRIBE)
+            XX(UNLOCK,    2, 'B', UNBIND)
+            XX(UNLOCK,    3, 'I', UNLINK)
+#undef XX
+            default:
+              SET_ERRNO(HPE_INVALID_METHOD);
+              goto error;
+          }
+        } else {
+          SET_ERRNO(HPE_INVALID_METHOD);
+          goto error;
+        }
+
+        ++parser->index;
+        break;
+      }
+
+      case s_req_spaces_before_url:
+      {
+        if (ch == ' ') break;
+
+        MARK(url);
+        if (parser->method == HTTP_CONNECT) {
+          UPDATE_STATE(s_req_server_start);
+        }
+
+        UPDATE_STATE(parse_url_char(CURRENT_STATE(), ch));
+        if (UNLIKELY(CURRENT_STATE() == s_dead)) {
+          SET_ERRNO(HPE_INVALID_URL);
+          goto error;
+        }
+
+        break;
+      }
+
+      case s_req_schema:
+      case s_req_schema_slash:
+      case s_req_schema_slash_slash:
+      case s_req_server_start:
+      {
+        switch (ch) {
+          /* No whitespace allowed here */
+          case ' ':
+          case CR:
+          case LF:
+            SET_ERRNO(HPE_INVALID_URL);
+            goto error;
+          default:
+            UPDATE_STATE(parse_url_char(CURRENT_STATE(), ch));
+            if (UNLIKELY(CURRENT_STATE() == s_dead)) {
+              SET_ERRNO(HPE_INVALID_URL);
+              goto error;
+            }
+        }
+
+        break;
+      }
+
+      case s_req_server:
+      case s_req_server_with_at:
+      case s_req_path:
+      case s_req_query_string_start:
+      case s_req_query_string:
+      case s_req_fragment_start:
+      case s_req_fragment:
+      {
+        switch (ch) {
+          case ' ':
+            UPDATE_STATE(s_req_http_start);
+            CALLBACK_DATA(url);
+            break;
+          case CR:
+          case LF:
+            parser->http_major = 0;
+            parser->http_minor = 9;
+            UPDATE_STATE((ch == CR) ?
+              s_req_line_almost_done :
+              s_header_field_start);
+            CALLBACK_DATA(url);
+            break;
+          default:
+            UPDATE_STATE(parse_url_char(CURRENT_STATE(), ch));
+            if (UNLIKELY(CURRENT_STATE() == s_dead)) {
+              SET_ERRNO(HPE_INVALID_URL);
+              goto error;
+            }
+        }
+        break;
+      }
+
+      case s_req_http_start:
+        switch (ch) {
+          case ' ':
+            break;
+          case 'H':
+            UPDATE_STATE(s_req_http_H);
+            break;
+          case 'I':
+            if (parser->method == HTTP_SOURCE) {
+              UPDATE_STATE(s_req_http_I);
+              break;
+            }
+            /* fall through */
+          default:
+            SET_ERRNO(HPE_INVALID_CONSTANT);
+            goto error;
+        }
+        break;
+
+      case s_req_http_H:
+        STRICT_CHECK(ch != 'T');
+        UPDATE_STATE(s_req_http_HT);
+        break;
+
+      case s_req_http_HT:
+        STRICT_CHECK(ch != 'T');
+        UPDATE_STATE(s_req_http_HTT);
+        break;
+
+      case s_req_http_HTT:
+        STRICT_CHECK(ch != 'P');
+        UPDATE_STATE(s_req_http_HTTP);
+        break;
+
+      case s_req_http_I:
+        STRICT_CHECK(ch != 'C');
+        UPDATE_STATE(s_req_http_IC);
+        break;
+
+      case s_req_http_IC:
+        STRICT_CHECK(ch != 'E');
+        UPDATE_STATE(s_req_http_HTTP);  /* Treat "ICE" as "HTTP". */
+        break;
+
+      case s_req_http_HTTP:
+        STRICT_CHECK(ch != '/');
+        UPDATE_STATE(s_req_http_major);
+        break;
+
+      case s_req_http_major:
+        if (UNLIKELY(!IS_NUM(ch))) {
+          SET_ERRNO(HPE_INVALID_VERSION);
+          goto error;
+        }
+
+        parser->http_major = ch - '0';
+        UPDATE_STATE(s_req_http_dot);
+        break;
+
+      case s_req_http_dot:
+      {
+        if (UNLIKELY(ch != '.')) {
+          SET_ERRNO(HPE_INVALID_VERSION);
+          goto error;
+        }
+
+        UPDATE_STATE(s_req_http_minor);
+        break;
+      }
+
+      case s_req_http_minor:
+        if (UNLIKELY(!IS_NUM(ch))) {
+          SET_ERRNO(HPE_INVALID_VERSION);
+          goto error;
+        }
+
+        parser->http_minor = ch - '0';
+        UPDATE_STATE(s_req_http_end);
+        break;
+
+      case s_req_http_end:
+      {
+        if (ch == CR) {
+          UPDATE_STATE(s_req_line_almost_done);
+          break;
+        }
+
+        if (ch == LF) {
+          UPDATE_STATE(s_header_field_start);
+          break;
+        }
+
+        SET_ERRNO(HPE_INVALID_VERSION);
+        goto error;
+        break;
+      }
+
+      /* end of request line */
+      case s_req_line_almost_done:
+      {
+        if (UNLIKELY(ch != LF)) {
+          SET_ERRNO(HPE_LF_EXPECTED);
+          goto error;
+        }
+
+        UPDATE_STATE(s_header_field_start);
+        break;
+      }
+
+      case s_header_field_start:
+      {
+        if (ch == CR) {
+          UPDATE_STATE(s_headers_almost_done);
+          break;
+        }
+
+        if (ch == LF) {
+          /* they might be just sending \n instead of \r\n so this would be
+           * the second \n to denote the end of headers*/
+          UPDATE_STATE(s_headers_almost_done);
+          REEXECUTE();
+        }
+
+        c = TOKEN(ch);
+
+        if (UNLIKELY(!c)) {
+          SET_ERRNO(HPE_INVALID_HEADER_TOKEN);
+          goto error;
+        }
+
+        MARK(header_field);
+
+        parser->index = 0;
+        UPDATE_STATE(s_header_field);
+
+        switch (c) {
+          case 'c':
+            parser->header_state = h_C;
+            break;
+
+          case 'p':
+            parser->header_state = h_matching_proxy_connection;
+            break;
+
+          case 't':
+            parser->header_state = h_matching_transfer_encoding;
+            break;
+
+          case 'u':
+            parser->header_state = h_matching_upgrade;
+            break;
+
+          default:
+            parser->header_state = h_general;
+            break;
+        }
+        break;
+      }
+
+      case s_header_field:
+      {
+        const char* start = p;
+        for (; p != data + len; p++) {
+          ch = *p;
+          c = TOKEN(ch);
+
+          if (!c)
+            break;
+
+          switch (parser->header_state) {
+            case h_general: {
+              size_t left = data + len - p;
+              const char* pe = p + MIN(left, max_header_size);
+              while (p+1 < pe && TOKEN(p[1])) {
+                p++;
+              }
+              break;
+            }
+
+            case h_C:
+              parser->index++;
+              parser->header_state = (c == 'o' ? h_CO : h_general);
+              break;
+
+            case h_CO:
+              parser->index++;
+              parser->header_state = (c == 'n' ? h_CON : h_general);
+              break;
+
+            case h_CON:
+              parser->index++;
+              switch (c) {
+                case 'n':
+                  parser->header_state = h_matching_connection;
+                  break;
+                case 't':
+                  parser->header_state = h_matching_content_length;
+                  break;
+                default:
+                  parser->header_state = h_general;
+                  break;
+              }
+              break;
+
+            /* connection */
+
+            case h_matching_connection:
+              parser->index++;
+              if (parser->index > sizeof(CONNECTION)-1
+                  || c != CONNECTION[parser->index]) {
+                parser->header_state = h_general;
+              } else if (parser->index == sizeof(CONNECTION)-2) {
+                parser->header_state = h_connection;
+              }
+              break;
+
+            /* proxy-connection */
+
+            case h_matching_proxy_connection:
+              parser->index++;
+              if (parser->index > sizeof(PROXY_CONNECTION)-1
+                  || c != PROXY_CONNECTION[parser->index]) {
+                parser->header_state = h_general;
+              } else if (parser->index == sizeof(PROXY_CONNECTION)-2) {
+                parser->header_state = h_connection;
+              }
+              break;
+
+            /* content-length */
+
+            case h_matching_content_length:
+              parser->index++;
+              if (parser->index > sizeof(CONTENT_LENGTH)-1
+                  || c != CONTENT_LENGTH[parser->index]) {
+                parser->header_state = h_general;
+              } else if (parser->index == sizeof(CONTENT_LENGTH)-2) {
+                parser->header_state = h_content_length;
+              }
+              break;
+
+            /* transfer-encoding */
+
+            case h_matching_transfer_encoding:
+              parser->index++;
+              if (parser->index > sizeof(TRANSFER_ENCODING)-1
+                  || c != TRANSFER_ENCODING[parser->index]) {
+                parser->header_state = h_general;
+              } else if (parser->index == sizeof(TRANSFER_ENCODING)-2) {
+                parser->header_state = h_transfer_encoding;
+              }
+              break;
+
+            /* upgrade */
+
+            case h_matching_upgrade:
+              parser->index++;
+              if (parser->index > sizeof(UPGRADE)-1
+                  || c != UPGRADE[parser->index]) {
+                parser->header_state = h_general;
+              } else if (parser->index == sizeof(UPGRADE)-2) {
+                parser->header_state = h_upgrade;
+              }
+              break;
+
+            case h_connection:
+            case h_content_length:
+            case h_transfer_encoding:
+            case h_upgrade:
+              if (ch != ' ') parser->header_state = h_general;
+              break;
+
+            default:
+              assert(0 && "Unknown header_state");
+              break;
+          }
+        }
+
+        if (p == data + len) {
+          --p;
+          COUNT_HEADER_SIZE(p - start);
+          break;
+        }
+
+        COUNT_HEADER_SIZE(p - start);
+
+        if (ch == ':') {
+          UPDATE_STATE(s_header_value_discard_ws);
+          CALLBACK_DATA(header_field);
+          break;
+        }
+
+        SET_ERRNO(HPE_INVALID_HEADER_TOKEN);
+        goto error;
+      }
+
+      case s_header_value_discard_ws:
+        if (ch == ' ' || ch == '\t') break;
+
+        if (ch == CR) {
+          UPDATE_STATE(s_header_value_discard_ws_almost_done);
+          break;
+        }
+
+        if (ch == LF) {
+          UPDATE_STATE(s_header_value_discard_lws);
+          break;
+        }
+
+        /* fall through */
+
+      case s_header_value_start:
+      {
+        MARK(header_value);
+
+        UPDATE_STATE(s_header_value);
+        parser->index = 0;
+
+        c = LOWER(ch);
+
+        switch (parser->header_state) {
+          case h_upgrade:
+            parser->flags |= F_UPGRADE;
+            parser->header_state = h_general;
+            break;
+
+          case h_transfer_encoding:
+            /* looking for 'Transfer-Encoding: chunked' */
+            if ('c' == c) {
+              parser->header_state = h_matching_transfer_encoding_chunked;
+            } else {
+              parser->header_state = h_general;
+            }
+            break;
+
+          case h_content_length:
+            if (UNLIKELY(!IS_NUM(ch))) {
+              SET_ERRNO(HPE_INVALID_CONTENT_LENGTH);
+              goto error;
+            }
+
+            if (parser->flags & F_CONTENTLENGTH) {
+              SET_ERRNO(HPE_UNEXPECTED_CONTENT_LENGTH);
+              goto error;
+            }
+
+            parser->flags |= F_CONTENTLENGTH;
+            parser->content_length = ch - '0';
+            parser->header_state = h_content_length_num;
+            break;
+
+          /* when obsolete line folding is encountered for content length
+           * continue to the s_header_value state */
+          case h_content_length_ws:
+            break;
+
+          case h_connection:
+            /* looking for 'Connection: keep-alive' */
+            if (c == 'k') {
+              parser->header_state = h_matching_connection_keep_alive;
+            /* looking for 'Connection: close' */
+            } else if (c == 'c') {
+              parser->header_state = h_matching_connection_close;
+            } else if (c == 'u') {
+              parser->header_state = h_matching_connection_upgrade;
+            } else {
+              parser->header_state = h_matching_connection_token;
+            }
+            break;
+
+          /* Multi-value `Connection` header */
+          case h_matching_connection_token_start:
+            break;
+
+          default:
+            parser->header_state = h_general;
+            break;
+        }
+        break;
+      }
+
+      case s_header_value:
+      {
+        const char* start = p;
+        enum header_states h_state = (enum header_states) parser->header_state;
+        for (; p != data + len; p++) {
+          ch = *p;
+          if (ch == CR) {
+            UPDATE_STATE(s_header_almost_done);
+            parser->header_state = h_state;
+            CALLBACK_DATA(header_value);
+            break;
+          }
+
+          if (ch == LF) {
+            UPDATE_STATE(s_header_almost_done);
+            COUNT_HEADER_SIZE(p - start);
+            parser->header_state = h_state;
+            CALLBACK_DATA_NOADVANCE(header_value);
+            REEXECUTE();
+          }
+
+          if (!lenient && !IS_HEADER_CHAR(ch)) {
+            SET_ERRNO(HPE_INVALID_HEADER_TOKEN);
+            goto error;
+          }
+
+          c = LOWER(ch);
+
+          switch (h_state) {
+            case h_general:
+              {
+                size_t left = data + len - p;
+                const char* pe = p + MIN(left, max_header_size);
+
+                for (; p != pe; p++) {
+                  ch = *p;
+                  if (ch == CR || ch == LF) {
+                    --p;
+                    break;
+                  }
+                  if (!lenient && !IS_HEADER_CHAR(ch)) {
+                    SET_ERRNO(HPE_INVALID_HEADER_TOKEN);
+                    goto error;
+                  }
+                }
+                if (p == data + len)
+                  --p;
+                break;
+              }
+
+            case h_connection:
+            case h_transfer_encoding:
+              assert(0 && "Shouldn't get here.");
+              break;
+
+            case h_content_length:
+              if (ch == ' ') break;
+              h_state = h_content_length_num;
+              /* fall through */
+
+            case h_content_length_num:
+            {
+              uint64_t t;
+
+              if (ch == ' ') {
+                h_state = h_content_length_ws;
+                break;
+              }
+
+              if (UNLIKELY(!IS_NUM(ch))) {
+                SET_ERRNO(HPE_INVALID_CONTENT_LENGTH);
+                parser->header_state = h_state;
+                goto error;
+              }
+
+              t = parser->content_length;
+              t *= 10;
+              t += ch - '0';
+
+              /* Overflow? Test against a conservative limit for simplicity. */
+              if (UNLIKELY((ULLONG_MAX - 10) / 10 < parser->content_length)) {
+                SET_ERRNO(HPE_INVALID_CONTENT_LENGTH);
+                parser->header_state = h_state;
+                goto error;
+              }
+
+              parser->content_length = t;
+              break;
+            }
+
+            case h_content_length_ws:
+              if (ch == ' ') break;
+              SET_ERRNO(HPE_INVALID_CONTENT_LENGTH);
+              parser->header_state = h_state;
+              goto error;
+
+            /* Transfer-Encoding: chunked */
+            case h_matching_transfer_encoding_chunked:
+              parser->index++;
+              if (parser->index > sizeof(CHUNKED)-1
+                  || c != CHUNKED[parser->index]) {
+                h_state = h_general;
+              } else if (parser->index == sizeof(CHUNKED)-2) {
+                h_state = h_transfer_encoding_chunked;
+              }
+              break;
+
+            case h_matching_connection_token_start:
+              /* looking for 'Connection: keep-alive' */
+              if (c == 'k') {
+                h_state = h_matching_connection_keep_alive;
+              /* looking for 'Connection: close' */
+              } else if (c == 'c') {
+                h_state = h_matching_connection_close;
+              } else if (c == 'u') {
+                h_state = h_matching_connection_upgrade;
+              } else if (STRICT_TOKEN(c)) {
+                h_state = h_matching_connection_token;
+              } else if (c == ' ' || c == '\t') {
+                /* Skip lws */
+              } else {
+                h_state = h_general;
+              }
+              break;
+
+            /* looking for 'Connection: keep-alive' */
+            case h_matching_connection_keep_alive:
+              parser->index++;
+              if (parser->index > sizeof(KEEP_ALIVE)-1
+                  || c != KEEP_ALIVE[parser->index]) {
+                h_state = h_matching_connection_token;
+              } else if (parser->index == sizeof(KEEP_ALIVE)-2) {
+                h_state = h_connection_keep_alive;
+              }
+              break;
+
+            /* looking for 'Connection: close' */
+            case h_matching_connection_close:
+              parser->index++;
+              if (parser->index > sizeof(CLOSE)-1 || c != CLOSE[parser->index]) {
+                h_state = h_matching_connection_token;
+              } else if (parser->index == sizeof(CLOSE)-2) {
+                h_state = h_connection_close;
+              }
+              break;
+
+            /* looking for 'Connection: upgrade' */
+            case h_matching_connection_upgrade:
+              parser->index++;
+              if (parser->index > sizeof(UPGRADE) - 1 ||
+                  c != UPGRADE[parser->index]) {
+                h_state = h_matching_connection_token;
+              } else if (parser->index == sizeof(UPGRADE)-2) {
+                h_state = h_connection_upgrade;
+              }
+              break;
+
+            case h_matching_connection_token:
+              if (ch == ',') {
+                h_state = h_matching_connection_token_start;
+                parser->index = 0;
+              }
+              break;
+
+            case h_transfer_encoding_chunked:
+              if (ch != ' ') h_state = h_general;
+              break;
+
+            case h_connection_keep_alive:
+            case h_connection_close:
+            case h_connection_upgrade:
+              if (ch == ',') {
+                if (h_state == h_connection_keep_alive) {
+                  parser->flags |= F_CONNECTION_KEEP_ALIVE;
+                } else if (h_state == h_connection_close) {
+                  parser->flags |= F_CONNECTION_CLOSE;
+                } else if (h_state == h_connection_upgrade) {
+                  parser->flags |= F_CONNECTION_UPGRADE;
+                }
+                h_state = h_matching_connection_token_start;
+                parser->index = 0;
+              } else if (ch != ' ') {
+                h_state = h_matching_connection_token;
+              }
+              break;
+
+            default:
+              UPDATE_STATE(s_header_value);
+              h_state = h_general;
+              break;
+          }
+        }
+        parser->header_state = h_state;
+
+        if (p == data + len)
+          --p;
+
+        COUNT_HEADER_SIZE(p - start);
+        break;
+      }
+
+      case s_header_almost_done:
+      {
+        if (UNLIKELY(ch != LF)) {
+          SET_ERRNO(HPE_LF_EXPECTED);
+          goto error;
+        }
+
+        UPDATE_STATE(s_header_value_lws);
+        break;
+      }
+
+      case s_header_value_lws:
+      {
+        if (ch == ' ' || ch == '\t') {
+          if (parser->header_state == h_content_length_num) {
+              /* treat obsolete line folding as space */
+              parser->header_state = h_content_length_ws;
+          }
+          UPDATE_STATE(s_header_value_start);
+          REEXECUTE();
+        }
+
+        /* finished the header */
+        switch (parser->header_state) {
+          case h_connection_keep_alive:
+            parser->flags |= F_CONNECTION_KEEP_ALIVE;
+            break;
+          case h_connection_close:
+            parser->flags |= F_CONNECTION_CLOSE;
+            break;
+          case h_transfer_encoding_chunked:
+            parser->flags |= F_CHUNKED;
+            break;
+          case h_connection_upgrade:
+            parser->flags |= F_CONNECTION_UPGRADE;
+            break;
+          default:
+            break;
+        }
+
+        UPDATE_STATE(s_header_field_start);
+        REEXECUTE();
+      }
+
+      case s_header_value_discard_ws_almost_done:
+      {
+        STRICT_CHECK(ch != LF);
+        UPDATE_STATE(s_header_value_discard_lws);
+        break;
+      }
+
+      case s_header_value_discard_lws:
+      {
+        if (ch == ' ' || ch == '\t') {
+          UPDATE_STATE(s_header_value_discard_ws);
+          break;
+        } else {
+          switch (parser->header_state) {
+            case h_connection_keep_alive:
+              parser->flags |= F_CONNECTION_KEEP_ALIVE;
+              break;
+            case h_connection_close:
+              parser->flags |= F_CONNECTION_CLOSE;
+              break;
+            case h_connection_upgrade:
+              parser->flags |= F_CONNECTION_UPGRADE;
+              break;
+            case h_transfer_encoding_chunked:
+              parser->flags |= F_CHUNKED;
+              break;
+            case h_content_length:
+              /* do not allow empty content length */
+              SET_ERRNO(HPE_INVALID_CONTENT_LENGTH);
+              goto error;
+              break;
+            default:
+              break;
+          }
+
+          /* header value was empty */
+          MARK(header_value);
+          UPDATE_STATE(s_header_field_start);
+          CALLBACK_DATA_NOADVANCE(header_value);
+          REEXECUTE();
+        }
+      }
+
+      case s_headers_almost_done:
+      {
+        STRICT_CHECK(ch != LF);
+
+        if (parser->flags & F_TRAILING) {
+          /* End of a chunked request */
+          UPDATE_STATE(s_message_done);
+          CALLBACK_NOTIFY_NOADVANCE(chunk_complete);
+          REEXECUTE();
+        }
+
+        /* Cannot use chunked encoding and a content-length header together
+           per the HTTP specification. */
+        if ((parser->flags & F_CHUNKED) &&
+            (parser->flags & F_CONTENTLENGTH)) {
+          SET_ERRNO(HPE_UNEXPECTED_CONTENT_LENGTH);
+          goto error;
+        }
+
+        UPDATE_STATE(s_headers_done);
+
+        /* Set this here so that on_headers_complete() callbacks can see it */
+        if ((parser->flags & F_UPGRADE) &&
+            (parser->flags & F_CONNECTION_UPGRADE)) {
+          /* For responses, "Upgrade: foo" and "Connection: upgrade" are
+           * mandatory only when it is a 101 Switching Protocols response,
+           * otherwise it is purely informational, to announce support.
+           */
+          parser->upgrade =
+              (parser->type == HTTP_REQUEST || parser->status_code == 101);
+        } else {
+          parser->upgrade = (parser->method == HTTP_CONNECT);
+        }
+
+        /* Here we call the headers_complete callback. This is somewhat
+         * different than other callbacks because if the user returns 1, we
+         * will interpret that as saying that this message has no body. This
+         * is needed for the annoying case of recieving a response to a HEAD
+         * request.
+         *
+         * We'd like to use CALLBACK_NOTIFY_NOADVANCE() here but we cannot, so
+         * we have to simulate it by handling a change in errno below.
+         */
+        if (settings->on_headers_complete) {
+          switch (settings->on_headers_complete(parser)) {
+            case 0:
+              break;
+
+            case 2:
+              parser->upgrade = 1;
+
+              /* fall through */
+            case 1:
+              parser->flags |= F_SKIPBODY;
+              break;
+
+            default:
+              SET_ERRNO(HPE_CB_headers_complete);
+              RETURN(p - data); /* Error */
+          }
+        }
+
+        if (HTTP_PARSER_ERRNO(parser) != HPE_OK) {
+          RETURN(p - data);
+        }
+
+        REEXECUTE();
+      }
+
+      case s_headers_done:
+      {
+        int hasBody;
+        STRICT_CHECK(ch != LF);
+
+        parser->nread = 0;
+        nread = 0;
+
+        hasBody = parser->flags & F_CHUNKED ||
+          (parser->content_length > 0 && parser->content_length != ULLONG_MAX);
+        if (parser->upgrade && (parser->method == HTTP_CONNECT ||
+                                (parser->flags & F_SKIPBODY) || !hasBody)) {
+          /* Exit, the rest of the message is in a different protocol. */
+          UPDATE_STATE(NEW_MESSAGE());
+          CALLBACK_NOTIFY(message_complete);
+          RETURN((p - data) + 1);
+        }
+
+        if (parser->flags & F_SKIPBODY) {
+          UPDATE_STATE(NEW_MESSAGE());
+          CALLBACK_NOTIFY(message_complete);
+        } else if (parser->flags & F_CHUNKED) {
+          /* chunked encoding - ignore Content-Length header */
+          UPDATE_STATE(s_chunk_size_start);
+        } else {
+          if (parser->content_length == 0) {
+            /* Content-Length header given but zero: Content-Length: 0\r\n */
+            UPDATE_STATE(NEW_MESSAGE());
+            CALLBACK_NOTIFY(message_complete);
+          } else if (parser->content_length != ULLONG_MAX) {
+            /* Content-Length header given and non-zero */
+            UPDATE_STATE(s_body_identity);
+          } else {
+            if (!http_message_needs_eof(parser)) {
+              /* Assume content-length 0 - read the next */
+              UPDATE_STATE(NEW_MESSAGE());
+              CALLBACK_NOTIFY(message_complete);
+            } else {
+              /* Read body until EOF */
+              UPDATE_STATE(s_body_identity_eof);
+            }
+          }
+        }
+
+        break;
+      }
+
+      case s_body_identity:
+      {
+        uint64_t to_read = MIN(parser->content_length,
+                               (uint64_t) ((data + len) - p));
+
+        assert(parser->content_length != 0
+            && parser->content_length != ULLONG_MAX);
+
+        /* The difference between advancing content_length and p is because
+         * the latter will automaticaly advance on the next loop iteration.
+         * Further, if content_length ends up at 0, we want to see the last
+         * byte again for our message complete callback.
+         */
+        MARK(body);
+        parser->content_length -= to_read;
+        p += to_read - 1;
+
+        if (parser->content_length == 0) {
+          UPDATE_STATE(s_message_done);
+
+          /* Mimic CALLBACK_DATA_NOADVANCE() but with one extra byte.
+           *
+           * The alternative to doing this is to wait for the next byte to
+           * trigger the data callback, just as in every other case. The
+           * problem with this is that this makes it difficult for the test
+           * harness to distinguish between complete-on-EOF and
+           * complete-on-length. It's not clear that this distinction is
+           * important for applications, but let's keep it for now.
+           */
+          CALLBACK_DATA_(body, p - body_mark + 1, p - data);
+          REEXECUTE();
+        }
+
+        break;
+      }
+
+      /* read until EOF */
+      case s_body_identity_eof:
+        MARK(body);
+        p = data + len - 1;
+
+        break;
+
+      case s_message_done:
+        UPDATE_STATE(NEW_MESSAGE());
+        CALLBACK_NOTIFY(message_complete);
+        if (parser->upgrade) {
+          /* Exit, the rest of the message is in a different protocol. */
+          RETURN((p - data) + 1);
+        }
+        break;
+
+      case s_chunk_size_start:
+      {
+        assert(nread == 1);
+        assert(parser->flags & F_CHUNKED);
+
+        unhex_val = unhex[(unsigned char)ch];
+        if (UNLIKELY(unhex_val == -1)) {
+          SET_ERRNO(HPE_INVALID_CHUNK_SIZE);
+          goto error;
+        }
+
+        parser->content_length = unhex_val;
+        UPDATE_STATE(s_chunk_size);
+        break;
+      }
+
+      case s_chunk_size:
+      {
+        uint64_t t;
+
+        assert(parser->flags & F_CHUNKED);
+
+        if (ch == CR) {
+          UPDATE_STATE(s_chunk_size_almost_done);
+          break;
+        }
+
+        unhex_val = unhex[(unsigned char)ch];
+
+        if (unhex_val == -1) {
+          if (ch == ';' || ch == ' ') {
+            UPDATE_STATE(s_chunk_parameters);
+            break;
+          }
+
+          SET_ERRNO(HPE_INVALID_CHUNK_SIZE);
+          goto error;
+        }
+
+        t = parser->content_length;
+        t *= 16;
+        t += unhex_val;
+
+        /* Overflow? Test against a conservative limit for simplicity. */
+        if (UNLIKELY((ULLONG_MAX - 16) / 16 < parser->content_length)) {
+          SET_ERRNO(HPE_INVALID_CONTENT_LENGTH);
+          goto error;
+        }
+
+        parser->content_length = t;
+        break;
+      }
+
+      case s_chunk_parameters:
+      {
+        assert(parser->flags & F_CHUNKED);
+        /* just ignore this shit. TODO check for overflow */
+        if (ch == CR) {
+          UPDATE_STATE(s_chunk_size_almost_done);
+          break;
+        }
+        break;
+      }
+
+      case s_chunk_size_almost_done:
+      {
+        assert(parser->flags & F_CHUNKED);
+        STRICT_CHECK(ch != LF);
+
+        parser->nread = 0;
+        nread = 0;
+
+        if (parser->content_length == 0) {
+          parser->flags |= F_TRAILING;
+          UPDATE_STATE(s_header_field_start);
+        } else {
+          UPDATE_STATE(s_chunk_data);
+        }
+        CALLBACK_NOTIFY(chunk_header);
+        break;
+      }
+
+      case s_chunk_data:
+      {
+        uint64_t to_read = MIN(parser->content_length,
+                               (uint64_t) ((data + len) - p));
+
+        assert(parser->flags & F_CHUNKED);
+        assert(parser->content_length != 0
+            && parser->content_length != ULLONG_MAX);
+
+        /* See the explanation in s_body_identity for why the content
+         * length and data pointers are managed this way.
+         */
+        MARK(body);
+        parser->content_length -= to_read;
+        p += to_read - 1;
+
+        if (parser->content_length == 0) {
+          UPDATE_STATE(s_chunk_data_almost_done);
+        }
+
+        break;
+      }
+
+      case s_chunk_data_almost_done:
+        assert(parser->flags & F_CHUNKED);
+        assert(parser->content_length == 0);
+        STRICT_CHECK(ch != CR);
+        UPDATE_STATE(s_chunk_data_done);
+        CALLBACK_DATA(body);
+        break;
+
+      case s_chunk_data_done:
+        assert(parser->flags & F_CHUNKED);
+        STRICT_CHECK(ch != LF);
+        parser->nread = 0;
+        nread = 0;
+        UPDATE_STATE(s_chunk_size_start);
+        CALLBACK_NOTIFY(chunk_complete);
+        break;
+
+      default:
+        assert(0 && "unhandled state");
+        SET_ERRNO(HPE_INVALID_INTERNAL_STATE);
+        goto error;
+    }
+  }
+
+  /* Run callbacks for any marks that we have leftover after we ran out of
+   * bytes. There should be at most one of these set, so it's OK to invoke
+   * them in series (unset marks will not result in callbacks).
+   *
+   * We use the NOADVANCE() variety of callbacks here because 'p' has already
+   * overflowed 'data' and this allows us to correct for the off-by-one that
+   * we'd otherwise have (since CALLBACK_DATA() is meant to be run with a 'p'
+   * value that's in-bounds).
+   */
+
+  assert(((header_field_mark ? 1 : 0) +
+          (header_value_mark ? 1 : 0) +
+          (url_mark ? 1 : 0)  +
+          (body_mark ? 1 : 0) +
+          (status_mark ? 1 : 0)) <= 1);
+
+  CALLBACK_DATA_NOADVANCE(header_field);
+  CALLBACK_DATA_NOADVANCE(header_value);
+  CALLBACK_DATA_NOADVANCE(url);
+  CALLBACK_DATA_NOADVANCE(body);
+  CALLBACK_DATA_NOADVANCE(status);
+
+  RETURN(len);
+
+error:
+  if (HTTP_PARSER_ERRNO(parser) == HPE_OK) {
+    SET_ERRNO(HPE_UNKNOWN);
+  }
+
+  RETURN(p - data);
+}
+
+
+/* Does the parser need to see an EOF to find the end of the message? */
+int
+http_message_needs_eof (const http_parser *parser)
+{
+  if (parser->type == HTTP_REQUEST) {
+    return 0;
+  }
+
+  /* See RFC 2616 section 4.4 */
+  if (parser->status_code / 100 == 1 || /* 1xx e.g. Continue */
+      parser->status_code == 204 ||     /* No Content */
+      parser->status_code == 304 ||     /* Not Modified */
+      parser->flags & F_SKIPBODY) {     /* response to a HEAD request */
+    return 0;
+  }
+
+  if ((parser->flags & F_CHUNKED) || parser->content_length != ULLONG_MAX) {
+    return 0;
+  }
+
+  return 1;
+}
+
+
+int
+http_should_keep_alive (const http_parser *parser)
+{
+  if (parser->http_major > 0 && parser->http_minor > 0) {
+    /* HTTP/1.1 */
+    if (parser->flags & F_CONNECTION_CLOSE) {
+      return 0;
+    }
+  } else {
+    /* HTTP/1.0 or earlier */
+    if (!(parser->flags & F_CONNECTION_KEEP_ALIVE)) {
+      return 0;
+    }
+  }
+
+  return !http_message_needs_eof(parser);
+}
+
+
+const char *
+http_method_str (enum http_method m)
+{
+  return ELEM_AT(method_strings, m, "<unknown>");
+}
+
+const char *
+http_status_str (enum http_status s)
+{
+  switch (s) {
+#define XX(num, name, string) case HTTP_STATUS_##name: return #string;
+    HTTP_STATUS_MAP(XX)
+#undef XX
+    default: return "<unknown>";
+  }
+}
+
+void
+http_parser_init (http_parser *parser, enum http_parser_type t)
+{
+  void *data = parser->data; /* preserve application data */
+  memset(parser, 0, sizeof(*parser));
+  parser->data = data;
+  parser->type = t;
+  parser->state = (t == HTTP_REQUEST ? s_start_req : (t == HTTP_RESPONSE ? s_start_res : s_start_req_or_res));
+  parser->http_errno = HPE_OK;
+}
+
+void
+http_parser_settings_init(http_parser_settings *settings)
+{
+  memset(settings, 0, sizeof(*settings));
+}
+
+const char *
+http_errno_name(enum http_errno err) {
+  assert(((size_t) err) < ARRAY_SIZE(http_strerror_tab));
+  return http_strerror_tab[err].name;
+}
+
+const char *
+http_errno_description(enum http_errno err) {
+  assert(((size_t) err) < ARRAY_SIZE(http_strerror_tab));
+  return http_strerror_tab[err].description;
+}
+
+static enum http_host_state
+http_parse_host_char(enum http_host_state s, const char ch) {
+  switch(s) {
+    case s_http_userinfo:
+    case s_http_userinfo_start:
+      if (ch == '@') {
+        return s_http_host_start;
+      }
+
+      if (IS_USERINFO_CHAR(ch)) {
+        return s_http_userinfo;
+      }
+      break;
+
+    case s_http_host_start:
+      if (ch == '[') {
+        return s_http_host_v6_start;
+      }
+
+      if (IS_HOST_CHAR(ch)) {
+        return s_http_host;
+      }
+
+      break;
+
+    case s_http_host:
+      if (IS_HOST_CHAR(ch)) {
+        return s_http_host;
+      }
+
+    /* fall through */
+    case s_http_host_v6_end:
+      if (ch == ':') {
+        return s_http_host_port_start;
+      }
+
+      break;
+
+    case s_http_host_v6:
+      if (ch == ']') {
+        return s_http_host_v6_end;
+      }
+
+    /* fall through */
+    case s_http_host_v6_start:
+      if (IS_HEX(ch) || ch == ':' || ch == '.') {
+        return s_http_host_v6;
+      }
+
+      if (s == s_http_host_v6 && ch == '%') {
+        return s_http_host_v6_zone_start;
+      }
+      break;
+
+    case s_http_host_v6_zone:
+      if (ch == ']') {
+        return s_http_host_v6_end;
+      }
+
+    /* fall through */
+    case s_http_host_v6_zone_start:
+      /* RFC 6874 Zone ID consists of 1*( unreserved / pct-encoded) */
+      if (IS_ALPHANUM(ch) || ch == '%' || ch == '.' || ch == '-' || ch == '_' ||
+          ch == '~') {
+        return s_http_host_v6_zone;
+      }
+      break;
+
+    case s_http_host_port:
+    case s_http_host_port_start:
+      if (IS_NUM(ch)) {
+        return s_http_host_port;
+      }
+
+      break;
+
+    default:
+      break;
+  }
+  return s_http_host_dead;
+}
+
+static int
+http_parse_host(const char * buf, struct http_parser_url *u, int found_at) {
+  enum http_host_state s;
+
+  const char *p;
+  size_t buflen = u->field_data[UF_HOST].off + u->field_data[UF_HOST].len;
+
+  assert(u->field_set & (1 << UF_HOST));
+
+  u->field_data[UF_HOST].len = 0;
+
+  s = found_at ? s_http_userinfo_start : s_http_host_start;
+
+  for (p = buf + u->field_data[UF_HOST].off; p < buf + buflen; p++) {
+    enum http_host_state new_s = http_parse_host_char(s, *p);
+
+    if (new_s == s_http_host_dead) {
+      return 1;
+    }
+
+    switch(new_s) {
+      case s_http_host:
+        if (s != s_http_host) {
+          u->field_data[UF_HOST].off = (uint16_t)(p - buf);
+        }
+        u->field_data[UF_HOST].len++;
+        break;
+
+      case s_http_host_v6:
+        if (s != s_http_host_v6) {
+          u->field_data[UF_HOST].off = (uint16_t)(p - buf);
+        }
+        u->field_data[UF_HOST].len++;
+        break;
+
+      case s_http_host_v6_zone_start:
+      case s_http_host_v6_zone:
+        u->field_data[UF_HOST].len++;
+        break;
+
+      case s_http_host_port:
+        if (s != s_http_host_port) {
+          u->field_data[UF_PORT].off = (uint16_t)(p - buf);
+          u->field_data[UF_PORT].len = 0;
+          u->field_set |= (1 << UF_PORT);
+        }
+        u->field_data[UF_PORT].len++;
+        break;
+
+      case s_http_userinfo:
+        if (s != s_http_userinfo) {
+          u->field_data[UF_USERINFO].off = (uint16_t)(p - buf);
+          u->field_data[UF_USERINFO].len = 0;
+          u->field_set |= (1 << UF_USERINFO);
+        }
+        u->field_data[UF_USERINFO].len++;
+        break;
+
+      default:
+        break;
+    }
+    s = new_s;
+  }
+
+  /* Make sure we don't end somewhere unexpected */
+  switch (s) {
+    case s_http_host_start:
+    case s_http_host_v6_start:
+    case s_http_host_v6:
+    case s_http_host_v6_zone_start:
+    case s_http_host_v6_zone:
+    case s_http_host_port_start:
+    case s_http_userinfo:
+    case s_http_userinfo_start:
+      return 1;
+    default:
+      break;
+  }
+
+  return 0;
+}
+
+void
+http_parser_url_init(struct http_parser_url *u) {
+  memset(u, 0, sizeof(*u));
+}
+
+int
+http_parser_parse_url(const char *buf, size_t buflen, int is_connect,
+                      struct http_parser_url *u)
+{
+  enum state s;
+  const char *p;
+  enum http_parser_url_fields uf, old_uf;
+  int found_at = 0;
+
+  if (buflen == 0) {
+    return 1;
+  }
+
+  u->port = u->field_set = 0;
+  s = is_connect ? s_req_server_start : s_req_spaces_before_url;
+  old_uf = UF_MAX;
+
+  for (p = buf; p < buf + buflen; p++) {
+    s = parse_url_char(s, *p);
+
+    /* Figure out the next field that we're operating on */
+    switch (s) {
+      case s_dead:
+        return 1;
+
+      /* Skip delimeters */
+      case s_req_schema_slash:
+      case s_req_schema_slash_slash:
+      case s_req_server_start:
+      case s_req_query_string_start:
+      case s_req_fragment_start:
+        continue;
+
+      case s_req_schema:
+        uf = UF_SCHEMA;
+        break;
+
+      case s_req_server_with_at:
+        found_at = 1;
+
+      /* fall through */
+      case s_req_server:
+        uf = UF_HOST;
+        break;
+
+      case s_req_path:
+        uf = UF_PATH;
+        break;
+
+      case s_req_query_string:
+        uf = UF_QUERY;
+        break;
+
+      case s_req_fragment:
+        uf = UF_FRAGMENT;
+        break;
+
+      default:
+        assert(!"Unexpected state");
+        return 1;
+    }
+
+    /* Nothing's changed; soldier on */
+    if (uf == old_uf) {
+      u->field_data[uf].len++;
+      continue;
+    }
+
+    u->field_data[uf].off = (uint16_t)(p - buf);
+    u->field_data[uf].len = 1;
+
+    u->field_set |= (1 << uf);
+    old_uf = uf;
+  }
+
+  /* host must be present if there is a schema */
+  /* parsing http:///toto will fail */
+  if ((u->field_set & (1 << UF_SCHEMA)) &&
+      (u->field_set & (1 << UF_HOST)) == 0) {
+    return 1;
+  }
+
+  if (u->field_set & (1 << UF_HOST)) {
+    if (http_parse_host(buf, u, found_at) != 0) {
+      return 1;
+    }
+  }
+
+  /* CONNECT requests can only contain "hostname:port" */
+  if (is_connect && u->field_set != ((1 << UF_HOST)|(1 << UF_PORT))) {
+    return 1;
+  }
+
+  if (u->field_set & (1 << UF_PORT)) {
+    uint16_t off;
+    uint16_t len;
+    const char* p;
+    const char* end;
+    unsigned long v;
+
+    off = u->field_data[UF_PORT].off;
+    len = u->field_data[UF_PORT].len;
+    end = buf + off + len;
+
+    /* NOTE: The characters are already validated and are in the [0-9] range */
+    assert(off + len <= buflen && "Port number overflow");
+    v = 0;
+    for (p = buf + off; p < end; p++) {
+      v *= 10;
+      v += *p - '0';
+
+      /* Ports have a max value of 2^16 */
+      if (v > 0xffff) {
+        return 1;
+      }
+    }
+
+    u->port = (uint16_t) v;
+  }
+
+  return 0;
+}
+
+void
+http_parser_pause(http_parser *parser, int paused) {
+  /* Users should only be pausing/unpausing a parser that is not in an error
+   * state. In non-debug builds, there's not much that we can do about this
+   * other than ignore it.
+   */
+  if (HTTP_PARSER_ERRNO(parser) == HPE_OK ||
+      HTTP_PARSER_ERRNO(parser) == HPE_PAUSED) {
+    uint32_t nread = parser->nread; /* used by the SET_ERRNO macro */
+    SET_ERRNO((paused) ? HPE_PAUSED : HPE_OK);
+  } else {
+    assert(0 && "Attempting to pause parser in error state");
+  }
+}
+
+int
+http_body_is_final(const struct http_parser *parser) {
+    return parser->state == s_message_done;
+}
+
+unsigned long
+http_parser_version(void) {
+  return HTTP_PARSER_VERSION_MAJOR * 0x10000 |
+         HTTP_PARSER_VERSION_MINOR * 0x00100 |
+         HTTP_PARSER_VERSION_PATCH * 0x00001;
+}
+
+void
+http_parser_set_max_header_size(uint32_t size) {
+  max_header_size = size;
+}
diff --git a/libraries/3rdparty/http-parser/http_parser.h b/libraries/3rdparty/http-parser/http_parser.h
new file mode 100644
index 000000000..16b5281d1
--- /dev/null
+++ b/libraries/3rdparty/http-parser/http_parser.h
@@ -0,0 +1,439 @@
+/* Copyright Joyent, Inc. and other Node contributors. All rights reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy
+ * of this software and associated documentation files (the "Software"), to
+ * deal in the Software without restriction, including without limitation the
+ * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
+ * sell copies of the Software, and to permit persons to whom the Software is
+ * furnished to do so, subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in
+ * all copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+ * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
+ * IN THE SOFTWARE.
+ */
+#ifndef http_parser_h
+#define http_parser_h
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+/* Also update SONAME in the Makefile whenever you change these. */
+#define HTTP_PARSER_VERSION_MAJOR 2
+#define HTTP_PARSER_VERSION_MINOR 9
+#define HTTP_PARSER_VERSION_PATCH 2
+
+#include <stddef.h>
+#if defined(_WIN32) && !defined(__MINGW32__) && \
+  (!defined(_MSC_VER) || _MSC_VER<1600) && !defined(__WINE__)
+#include <BaseTsd.h>
+typedef __int8 int8_t;
+typedef unsigned __int8 uint8_t;
+typedef __int16 int16_t;
+typedef unsigned __int16 uint16_t;
+typedef __int32 int32_t;
+typedef unsigned __int32 uint32_t;
+typedef __int64 int64_t;
+typedef unsigned __int64 uint64_t;
+#else
+#include <stdint.h>
+#endif
+
+/* Compile with -DHTTP_PARSER_STRICT=0 to make less checks, but run
+ * faster
+ */
+#ifndef HTTP_PARSER_STRICT
+# define HTTP_PARSER_STRICT 1
+#endif
+
+/* Maximium header size allowed. If the macro is not defined
+ * before including this header then the default is used. To
+ * change the maximum header size, define the macro in the build
+ * environment (e.g. -DHTTP_MAX_HEADER_SIZE=<value>). To remove
+ * the effective limit on the size of the header, define the macro
+ * to a very large number (e.g. -DHTTP_MAX_HEADER_SIZE=0x7fffffff)
+ */
+#ifndef HTTP_MAX_HEADER_SIZE
+# define HTTP_MAX_HEADER_SIZE (80*1024)
+#endif
+
+typedef struct http_parser http_parser;
+typedef struct http_parser_settings http_parser_settings;
+
+
+/* Callbacks should return non-zero to indicate an error. The parser will
+ * then halt execution.
+ *
+ * The one exception is on_headers_complete. In a HTTP_RESPONSE parser
+ * returning '1' from on_headers_complete will tell the parser that it
+ * should not expect a body. This is used when receiving a response to a
+ * HEAD request which may contain 'Content-Length' or 'Transfer-Encoding:
+ * chunked' headers that indicate the presence of a body.
+ *
+ * Returning `2` from on_headers_complete will tell parser that it should not
+ * expect neither a body nor any futher responses on this connection. This is
+ * useful for handling responses to a CONNECT request which may not contain
+ * `Upgrade` or `Connection: upgrade` headers.
+ *
+ * http_data_cb does not return data chunks. It will be called arbitrarily
+ * many times for each string. E.G. you might get 10 callbacks for "on_url"
+ * each providing just a few characters more data.
+ */
+typedef int (*http_data_cb) (http_parser*, const char *at, size_t length);
+typedef int (*http_cb) (http_parser*);
+
+
+/* Status Codes */
+#define HTTP_STATUS_MAP(XX)                                                 \
+  XX(100, CONTINUE,                        Continue)                        \
+  XX(101, SWITCHING_PROTOCOLS,             Switching Protocols)             \
+  XX(102, PROCESSING,                      Processing)                      \
+  XX(200, OK,                              OK)                              \
+  XX(201, CREATED,                         Created)                         \
+  XX(202, ACCEPTED,                        Accepted)                        \
+  XX(203, NON_AUTHORITATIVE_INFORMATION,   Non-Authoritative Information)   \
+  XX(204, NO_CONTENT,                      No Content)                      \
+  XX(205, RESET_CONTENT,                   Reset Content)                   \
+  XX(206, PARTIAL_CONTENT,                 Partial Content)                 \
+  XX(207, MULTI_STATUS,                    Multi-Status)                    \
+  XX(208, ALREADY_REPORTED,                Already Reported)                \
+  XX(226, IM_USED,                         IM Used)                         \
+  XX(300, MULTIPLE_CHOICES,                Multiple Choices)                \
+  XX(301, MOVED_PERMANENTLY,               Moved Permanently)               \
+  XX(302, FOUND,                           Found)                           \
+  XX(303, SEE_OTHER,                       See Other)                       \
+  XX(304, NOT_MODIFIED,                    Not Modified)                    \
+  XX(305, USE_PROXY,                       Use Proxy)                       \
+  XX(307, TEMPORARY_REDIRECT,              Temporary Redirect)              \
+  XX(308, PERMANENT_REDIRECT,              Permanent Redirect)              \
+  XX(400, BAD_REQUEST,                     Bad Request)                     \
+  XX(401, UNAUTHORIZED,                    Unauthorized)                    \
+  XX(402, PAYMENT_REQUIRED,                Payment Required)                \
+  XX(403, FORBIDDEN,                       Forbidden)                       \
+  XX(404, NOT_FOUND,                       Not Found)                       \
+  XX(405, METHOD_NOT_ALLOWED,              Method Not Allowed)              \
+  XX(406, NOT_ACCEPTABLE,                  Not Acceptable)                  \
+  XX(407, PROXY_AUTHENTICATION_REQUIRED,   Proxy Authentication Required)   \
+  XX(408, REQUEST_TIMEOUT,                 Request Timeout)                 \
+  XX(409, CONFLICT,                        Conflict)                        \
+  XX(410, GONE,                            Gone)                            \
+  XX(411, LENGTH_REQUIRED,                 Length Required)                 \
+  XX(412, PRECONDITION_FAILED,             Precondition Failed)             \
+  XX(413, PAYLOAD_TOO_LARGE,               Payload Too Large)               \
+  XX(414, URI_TOO_LONG,                    URI Too Long)                    \
+  XX(415, UNSUPPORTED_MEDIA_TYPE,          Unsupported Media Type)          \
+  XX(416, RANGE_NOT_SATISFIABLE,           Range Not Satisfiable)           \
+  XX(417, EXPECTATION_FAILED,              Expectation Failed)              \
+  XX(421, MISDIRECTED_REQUEST,             Misdirected Request)             \
+  XX(422, UNPROCESSABLE_ENTITY,            Unprocessable Entity)            \
+  XX(423, LOCKED,                          Locked)                          \
+  XX(424, FAILED_DEPENDENCY,               Failed Dependency)               \
+  XX(426, UPGRADE_REQUIRED,                Upgrade Required)                \
+  XX(428, PRECONDITION_REQUIRED,           Precondition Required)           \
+  XX(429, TOO_MANY_REQUESTS,               Too Many Requests)               \
+  XX(431, REQUEST_HEADER_FIELDS_TOO_LARGE, Request Header Fields Too Large) \
+  XX(451, UNAVAILABLE_FOR_LEGAL_REASONS,   Unavailable For Legal Reasons)   \
+  XX(500, INTERNAL_SERVER_ERROR,           Internal Server Error)           \
+  XX(501, NOT_IMPLEMENTED,                 Not Implemented)                 \
+  XX(502, BAD_GATEWAY,                     Bad Gateway)                     \
+  XX(503, SERVICE_UNAVAILABLE,             Service Unavailable)             \
+  XX(504, GATEWAY_TIMEOUT,                 Gateway Timeout)                 \
+  XX(505, HTTP_VERSION_NOT_SUPPORTED,      HTTP Version Not Supported)      \
+  XX(506, VARIANT_ALSO_NEGOTIATES,         Variant Also Negotiates)         \
+  XX(507, INSUFFICIENT_STORAGE,            Insufficient Storage)            \
+  XX(508, LOOP_DETECTED,                   Loop Detected)                   \
+  XX(510, NOT_EXTENDED,                    Not Extended)                    \
+  XX(511, NETWORK_AUTHENTICATION_REQUIRED, Network Authentication Required) \
+
+enum http_status
+  {
+#define XX(num, name, string) HTTP_STATUS_##name = num,
+  HTTP_STATUS_MAP(XX)
+#undef XX
+  };
+
+
+/* Request Methods */
+#define HTTP_METHOD_MAP(XX)         \
+  XX(0,  DELETE,      DELETE)       \
+  XX(1,  GET,         GET)          \
+  XX(2,  HEAD,        HEAD)         \
+  XX(3,  POST,        POST)         \
+  XX(4,  PUT,         PUT)          \
+  /* pathological */                \
+  XX(5,  CONNECT,     CONNECT)      \
+  XX(6,  OPTIONS,     OPTIONS)      \
+  XX(7,  TRACE,       TRACE)        \
+  /* WebDAV */                      \
+  XX(8,  COPY,        COPY)         \
+  XX(9,  LOCK,        LOCK)         \
+  XX(10, MKCOL,       MKCOL)        \
+  XX(11, MOVE,        MOVE)         \
+  XX(12, PROPFIND,    PROPFIND)     \
+  XX(13, PROPPATCH,   PROPPATCH)    \
+  XX(14, SEARCH,      SEARCH)       \
+  XX(15, UNLOCK,      UNLOCK)       \
+  XX(16, BIND,        BIND)         \
+  XX(17, REBIND,      REBIND)       \
+  XX(18, UNBIND,      UNBIND)       \
+  XX(19, ACL,         ACL)          \
+  /* subversion */                  \
+  XX(20, REPORT,      REPORT)       \
+  XX(21, MKACTIVITY,  MKACTIVITY)   \
+  XX(22, CHECKOUT,    CHECKOUT)     \
+  XX(23, MERGE,       MERGE)        \
+  /* upnp */                        \
+  XX(24, MSEARCH,     M-SEARCH)     \
+  XX(25, NOTIFY,      NOTIFY)       \
+  XX(26, SUBSCRIBE,   SUBSCRIBE)    \
+  XX(27, UNSUBSCRIBE, UNSUBSCRIBE)  \
+  /* RFC-5789 */                    \
+  XX(28, PATCH,       PATCH)        \
+  XX(29, PURGE,       PURGE)        \
+  /* CalDAV */                      \
+  XX(30, MKCALENDAR,  MKCALENDAR)   \
+  /* RFC-2068, section 19.6.1.2 */  \
+  XX(31, LINK,        LINK)         \
+  XX(32, UNLINK,      UNLINK)       \
+  /* icecast */                     \
+  XX(33, SOURCE,      SOURCE)       \
+
+enum http_method
+  {
+#define XX(num, name, string) HTTP_##name = num,
+  HTTP_METHOD_MAP(XX)
+#undef XX
+  };
+
+
+enum http_parser_type { HTTP_REQUEST, HTTP_RESPONSE, HTTP_BOTH };
+
+
+/* Flag values for http_parser.flags field */
+enum flags
+  { F_CHUNKED               = 1 << 0
+  , F_CONNECTION_KEEP_ALIVE = 1 << 1
+  , F_CONNECTION_CLOSE      = 1 << 2
+  , F_CONNECTION_UPGRADE    = 1 << 3
+  , F_TRAILING              = 1 << 4
+  , F_UPGRADE               = 1 << 5
+  , F_SKIPBODY              = 1 << 6
+  , F_CONTENTLENGTH         = 1 << 7
+  };
+
+
+/* Map for errno-related constants
+ *
+ * The provided argument should be a macro that takes 2 arguments.
+ */
+#define HTTP_ERRNO_MAP(XX)                                           \
+  /* No error */                                                     \
+  XX(OK, "success")                                                  \
+                                                                     \
+  /* Callback-related errors */                                      \
+  XX(CB_message_begin, "the on_message_begin callback failed")       \
+  XX(CB_url, "the on_url callback failed")                           \
+  XX(CB_header_field, "the on_header_field callback failed")         \
+  XX(CB_header_value, "the on_header_value callback failed")         \
+  XX(CB_headers_complete, "the on_headers_complete callback failed") \
+  XX(CB_body, "the on_body callback failed")                         \
+  XX(CB_message_complete, "the on_message_complete callback failed") \
+  XX(CB_status, "the on_status callback failed")                     \
+  XX(CB_chunk_header, "the on_chunk_header callback failed")         \
+  XX(CB_chunk_complete, "the on_chunk_complete callback failed")     \
+                                                                     \
+  /* Parsing-related errors */                                       \
+  XX(INVALID_EOF_STATE, "stream ended at an unexpected time")        \
+  XX(HEADER_OVERFLOW,                                                \
+     "too many header bytes seen; overflow detected")                \
+  XX(CLOSED_CONNECTION,                                              \
+     "data received after completed connection: close message")      \
+  XX(INVALID_VERSION, "invalid HTTP version")                        \
+  XX(INVALID_STATUS, "invalid HTTP status code")                     \
+  XX(INVALID_METHOD, "invalid HTTP method")                          \
+  XX(INVALID_URL, "invalid URL")                                     \
+  XX(INVALID_HOST, "invalid host")                                   \
+  XX(INVALID_PORT, "invalid port")                                   \
+  XX(INVALID_PATH, "invalid path")                                   \
+  XX(INVALID_QUERY_STRING, "invalid query string")                   \
+  XX(INVALID_FRAGMENT, "invalid fragment")                           \
+  XX(LF_EXPECTED, "LF character expected")                           \
+  XX(INVALID_HEADER_TOKEN, "invalid character in header")            \
+  XX(INVALID_CONTENT_LENGTH,                                         \
+     "invalid character in content-length header")                   \
+  XX(UNEXPECTED_CONTENT_LENGTH,                                      \
+     "unexpected content-length header")                             \
+  XX(INVALID_CHUNK_SIZE,                                             \
+     "invalid character in chunk size header")                       \
+  XX(INVALID_CONSTANT, "invalid constant string")                    \
+  XX(INVALID_INTERNAL_STATE, "encountered unexpected internal state")\
+  XX(STRICT, "strict mode assertion failed")                         \
+  XX(PAUSED, "parser is paused")                                     \
+  XX(UNKNOWN, "an unknown error occurred")
+
+
+/* Define HPE_* values for each errno value above */
+#define HTTP_ERRNO_GEN(n, s) HPE_##n,
+enum http_errno {
+  HTTP_ERRNO_MAP(HTTP_ERRNO_GEN)
+};
+#undef HTTP_ERRNO_GEN
+
+
+/* Get an http_errno value from an http_parser */
+#define HTTP_PARSER_ERRNO(p)            ((enum http_errno) (p)->http_errno)
+
+
+struct http_parser {
+  /** PRIVATE **/
+  unsigned int type : 2;         /* enum http_parser_type */
+  unsigned int flags : 8;        /* F_* values from 'flags' enum; semi-public */
+  unsigned int state : 7;        /* enum state from http_parser.c */
+  unsigned int header_state : 7; /* enum header_state from http_parser.c */
+  unsigned int index : 7;        /* index into current matcher */
+  unsigned int lenient_http_headers : 1;
+
+  uint32_t nread;          /* # bytes read in various scenarios */
+  uint64_t content_length; /* # bytes in body (0 if no Content-Length header) */
+
+  /** READ-ONLY **/
+  unsigned short http_major;
+  unsigned short http_minor;
+  unsigned int status_code : 16; /* responses only */
+  unsigned int method : 8;       /* requests only */
+  unsigned int http_errno : 7;
+
+  /* 1 = Upgrade header was present and the parser has exited because of that.
+   * 0 = No upgrade header present.
+   * Should be checked when http_parser_execute() returns in addition to
+   * error checking.
+   */
+  unsigned int upgrade : 1;
+
+  /** PUBLIC **/
+  void *data; /* A pointer to get hook to the "connection" or "socket" object */
+};
+
+
+struct http_parser_settings {
+  http_cb      on_message_begin;
+  http_data_cb on_url;
+  http_data_cb on_status;
+  http_data_cb on_header_field;
+  http_data_cb on_header_value;
+  http_cb      on_headers_complete;
+  http_data_cb on_body;
+  http_cb      on_message_complete;
+  /* When on_chunk_header is called, the current chunk length is stored
+   * in parser->content_length.
+   */
+  http_cb      on_chunk_header;
+  http_cb      on_chunk_complete;
+};
+
+
+enum http_parser_url_fields
+  { UF_SCHEMA           = 0
+  , UF_HOST             = 1
+  , UF_PORT             = 2
+  , UF_PATH             = 3
+  , UF_QUERY            = 4
+  , UF_FRAGMENT         = 5
+  , UF_USERINFO         = 6
+  , UF_MAX              = 7
+  };
+
+
+/* Result structure for http_parser_parse_url().
+ *
+ * Callers should index into field_data[] with UF_* values iff field_set
+ * has the relevant (1 << UF_*) bit set. As a courtesy to clients (and
+ * because we probably have padding left over), we convert any port to
+ * a uint16_t.
+ */
+struct http_parser_url {
+  uint16_t field_set;           /* Bitmask of (1 << UF_*) values */
+  uint16_t port;                /* Converted UF_PORT string */
+
+  struct {
+    uint16_t off;               /* Offset into buffer in which field starts */
+    uint16_t len;               /* Length of run in buffer */
+  } field_data[UF_MAX];
+};
+
+
+/* Returns the library version. Bits 16-23 contain the major version number,
+ * bits 8-15 the minor version number and bits 0-7 the patch level.
+ * Usage example:
+ *
+ *   unsigned long version = http_parser_version();
+ *   unsigned major = (version >> 16) & 255;
+ *   unsigned minor = (version >> 8) & 255;
+ *   unsigned patch = version & 255;
+ *   printf("http_parser v%u.%u.%u\n", major, minor, patch);
+ */
+unsigned long http_parser_version(void);
+
+void http_parser_init(http_parser *parser, enum http_parser_type type);
+
+
+/* Initialize http_parser_settings members to 0
+ */
+void http_parser_settings_init(http_parser_settings *settings);
+
+
+/* Executes the parser. Returns number of parsed bytes. Sets
+ * `parser->http_errno` on error. */
+size_t http_parser_execute(http_parser *parser,
+                           const http_parser_settings *settings,
+                           const char *data,
+                           size_t len);
+
+
+/* If http_should_keep_alive() in the on_headers_complete or
+ * on_message_complete callback returns 0, then this should be
+ * the last message on the connection.
+ * If you are the server, respond with the "Connection: close" header.
+ * If you are the client, close the connection.
+ */
+int http_should_keep_alive(const http_parser *parser);
+
+/* Returns a string version of the HTTP method. */
+const char *http_method_str(enum http_method m);
+
+/* Returns a string version of the HTTP status code. */
+const char *http_status_str(enum http_status s);
+
+/* Return a string name of the given error */
+const char *http_errno_name(enum http_errno err);
+
+/* Return a string description of the given error */
+const char *http_errno_description(enum http_errno err);
+
+/* Initialize all http_parser_url members to 0 */
+void http_parser_url_init(struct http_parser_url *u);
+
+/* Parse a URL; return nonzero on failure */
+int http_parser_parse_url(const char *buf, size_t buflen,
+                          int is_connect,
+                          struct http_parser_url *u);
+
+/* Pause or un-pause the parser; a nonzero value pauses */
+void http_parser_pause(http_parser *parser, int paused);
+
+/* Checks if this is the final chunk of the body. */
+int http_body_is_final(const http_parser *parser);
+
+/* Change the maximum header size provided at compile time. */
+void http_parser_set_max_header_size(uint32_t size);
+
+#ifdef __cplusplus
+}
+#endif
+#endif
diff --git a/libraries/abstractions/ble_hal/include/bt_hal_avsrc_profile.h b/libraries/abstractions/ble_hal/include/bt_hal_avsrc_profile.h
index fe6ae07ae..419768966 100644
--- a/libraries/abstractions/ble_hal/include/bt_hal_avsrc_profile.h
+++ b/libraries/abstractions/ble_hal/include/bt_hal_avsrc_profile.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE HAL V1.0.0
+ * Amazon FreeRTOS BLE HAL V2.0.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/ble_hal/include/bt_hal_gatt_client.h b/libraries/abstractions/ble_hal/include/bt_hal_gatt_client.h
index 11a2f92d4..e97eefb73 100644
--- a/libraries/abstractions/ble_hal/include/bt_hal_gatt_client.h
+++ b/libraries/abstractions/ble_hal/include/bt_hal_gatt_client.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE HAL V1.0.0
+ * Amazon FreeRTOS BLE HAL V2.0.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/ble_hal/include/bt_hal_gatt_server.h b/libraries/abstractions/ble_hal/include/bt_hal_gatt_server.h
index f439bc332..8c8e2bf34 100644
--- a/libraries/abstractions/ble_hal/include/bt_hal_gatt_server.h
+++ b/libraries/abstractions/ble_hal/include/bt_hal_gatt_server.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE HAL V1.0.0
+ * Amazon FreeRTOS BLE HAL V2.0.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/ble_hal/include/bt_hal_gatt_types.h b/libraries/abstractions/ble_hal/include/bt_hal_gatt_types.h
index 97d34af3e..47162b3fa 100644
--- a/libraries/abstractions/ble_hal/include/bt_hal_gatt_types.h
+++ b/libraries/abstractions/ble_hal/include/bt_hal_gatt_types.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE HAL V1.0.0
+ * Amazon FreeRTOS BLE HAL V2.0.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/ble_hal/include/bt_hal_manager.h b/libraries/abstractions/ble_hal/include/bt_hal_manager.h
index 164419b2e..4dd38b8cc 100644
--- a/libraries/abstractions/ble_hal/include/bt_hal_manager.h
+++ b/libraries/abstractions/ble_hal/include/bt_hal_manager.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE HAL V1.0.0
+ * Amazon FreeRTOS BLE HAL V2.0.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/ble_hal/include/bt_hal_manager_adapter_ble.h b/libraries/abstractions/ble_hal/include/bt_hal_manager_adapter_ble.h
index dc2bc37a5..b1b8513d1 100644
--- a/libraries/abstractions/ble_hal/include/bt_hal_manager_adapter_ble.h
+++ b/libraries/abstractions/ble_hal/include/bt_hal_manager_adapter_ble.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE HAL V1.0.0
+ * Amazon FreeRTOS BLE HAL V2.0.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/ble_hal/include/bt_hal_manager_adapter_classic.h b/libraries/abstractions/ble_hal/include/bt_hal_manager_adapter_classic.h
index fcf38b753..fca348586 100644
--- a/libraries/abstractions/ble_hal/include/bt_hal_manager_adapter_classic.h
+++ b/libraries/abstractions/ble_hal/include/bt_hal_manager_adapter_classic.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE HAL V1.0.0
+ * Amazon FreeRTOS BLE HAL V2.0.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/ble_hal/include/bt_hal_manager_types.h b/libraries/abstractions/ble_hal/include/bt_hal_manager_types.h
index e2049d494..065a355fd 100644
--- a/libraries/abstractions/ble_hal/include/bt_hal_manager_types.h
+++ b/libraries/abstractions/ble_hal/include/bt_hal_manager_types.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE HAL V1.0.0
+ * Amazon FreeRTOS BLE HAL V2.0.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/ble_hal/test/src/iot_test_ble_hal_afqp.c b/libraries/abstractions/ble_hal/test/src/iot_test_ble_hal_afqp.c
index b941ceab1..38de92e49 100644
--- a/libraries/abstractions/ble_hal/test/src/iot_test_ble_hal_afqp.c
+++ b/libraries/abstractions/ble_hal/test/src/iot_test_ble_hal_afqp.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE HAL V1.0.0
+ * Amazon FreeRTOS BLE HAL V2.0.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/pkcs11/include/iot_pkcs11_pal.h b/libraries/abstractions/pkcs11/include/iot_pkcs11_pal.h
index 98f1a9d44..06c865586 100644
--- a/libraries/abstractions/pkcs11/include/iot_pkcs11_pal.h
+++ b/libraries/abstractions/pkcs11/include/iot_pkcs11_pal.h
@@ -1,3 +1,28 @@
+/*
+ * Amazon FreeRTOS PKCS #11 V2.0.0
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
 #ifndef AWS_PKCS11_PAL
 #define AWS_PKCS11_PAL
 /*-----------------------------------------------------------*/
diff --git a/libraries/abstractions/pkcs11/mbedtls/threading_alt.h b/libraries/abstractions/pkcs11/mbedtls/threading_alt.h
index 115f100c2..55b41b551 100644
--- a/libraries/abstractions/pkcs11/mbedtls/threading_alt.h
+++ b/libraries/abstractions/pkcs11/mbedtls/threading_alt.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS PKCS#11 V1.0.8
+ * Amazon FreeRTOS PKCS #11 V2.0.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/pkcs11/test/iot_test_pkcs11.c b/libraries/abstractions/pkcs11/test/iot_test_pkcs11.c
index c37dcbdbd..322162ffa 100644
--- a/libraries/abstractions/pkcs11/test/iot_test_pkcs11.c
+++ b/libraries/abstractions/pkcs11/test/iot_test_pkcs11.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS PKCS#11 V1.0.8
+ * Amazon FreeRTOS PKCS #11 V2.0.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/platform/freertos/include/platform/iot_network_ble.h b/libraries/abstractions/platform/freertos/include/platform/iot_network_ble.h
index f3189a34a..35339cd2d 100644
--- a/libraries/abstractions/platform/freertos/include/platform/iot_network_ble.h
+++ b/libraries/abstractions/platform/freertos/include/platform/iot_network_ble.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Platform V1.0.0
+ * Amazon FreeRTOS Platform V1.1.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/platform/freertos/include/platform/iot_network_freertos.h b/libraries/abstractions/platform/freertos/include/platform/iot_network_freertos.h
index 756f34802..c51afa1c2 100644
--- a/libraries/abstractions/platform/freertos/include/platform/iot_network_freertos.h
+++ b/libraries/abstractions/platform/freertos/include/platform/iot_network_freertos.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Platform V1.0.0
+ * Amazon FreeRTOS Platform V1.1.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
@@ -151,6 +151,14 @@ size_t IotNetworkAfr_Receive( void * pConnection,
                               uint8_t * pBuffer,
                               size_t bytesRequested );
 
+/**
+ * @brief An implementation of #IotNetworkInterface_t::receiveUpto for Amazon FreeRTOS
+ * Secure Sockets.
+ */
+size_t IotNetworkAfr_ReceiveUpto( void * pConnection,
+                                  uint8_t * pBuffer,
+                                  size_t bufferSize );
+
 /**
  * @brief An implementation of #IotNetworkInterface_t::close for Amazon FreeRTOS
  * Secure Sockets.
diff --git a/libraries/abstractions/platform/freertos/include/platform/iot_platform_types_freertos.h b/libraries/abstractions/platform/freertos/include/platform/iot_platform_types_freertos.h
index 02aafa558..777045e11 100644
--- a/libraries/abstractions/platform/freertos/include/platform/iot_platform_types_freertos.h
+++ b/libraries/abstractions/platform/freertos/include/platform/iot_platform_types_freertos.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Platform V1.0.0
+ * Amazon FreeRTOS Platform V1.1.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/platform/freertos/iot_clock_freertos.c b/libraries/abstractions/platform/freertos/iot_clock_freertos.c
index 996dc5e75..334c3fb94 100644
--- a/libraries/abstractions/platform/freertos/iot_clock_freertos.c
+++ b/libraries/abstractions/platform/freertos/iot_clock_freertos.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Platform V1.0.0
+ * Amazon FreeRTOS Platform V1.1.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/platform/freertos/iot_metrics.c b/libraries/abstractions/platform/freertos/iot_metrics.c
index d64c341e8..1d696362a 100644
--- a/libraries/abstractions/platform/freertos/iot_metrics.c
+++ b/libraries/abstractions/platform/freertos/iot_metrics.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Platform V1.0.0
+ * Amazon FreeRTOS Platform V1.1.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/platform/freertos/iot_network_freertos.c b/libraries/abstractions/platform/freertos/iot_network_freertos.c
index e96d913e0..501a33c89 100644
--- a/libraries/abstractions/platform/freertos/iot_network_freertos.c
+++ b/libraries/abstractions/platform/freertos/iot_network_freertos.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Platform V1.0.0
+ * Amazon FreeRTOS Platform V1.1.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
@@ -106,6 +106,7 @@ const IotNetworkInterface_t IotNetworkAfr =
     .setReceiveCallback = IotNetworkAfr_SetReceiveCallback,
     .send               = IotNetworkAfr_Send,
     .receive            = IotNetworkAfr_Receive,
+    .receiveUpto        = IotNetworkAfr_ReceiveUpto,
     .close              = IotNetworkAfr_Close,
     .destroy            = IotNetworkAfr_Destroy
 };
@@ -514,6 +515,9 @@ size_t IotNetworkAfr_Receive( void * pConnection,
     /* Cast network connection to the correct type. */
     _networkConnection_t * pNetworkConnection = ( _networkConnection_t * ) pConnection;
 
+    /* Caller should never request zero bytes. */
+    configASSERT( bytesRequested > 0 );
+
     /* Write the buffered byte. THIS IS A TEMPORARY WORKAROUND AND ASSUMES THIS
      * FUNCTION IS ALWAYS CALLED FROM THE RECEIVE CALLBACK. */
     if( pNetworkConnection->bufferedByteValid == true )
@@ -538,7 +542,7 @@ size_t IotNetworkAfr_Receive( void * pConnection,
              * the socket timeout. Ignore it and try again. */
             continue;
         }
-        else if( socketStatus <= 0 )
+        else if( socketStatus < 0 )
         {
             IotLogError( "Error %ld while receiving data.", ( long int ) socketStatus );
             break;
@@ -569,6 +573,54 @@ size_t IotNetworkAfr_Receive( void * pConnection,
 
 /*-----------------------------------------------------------*/
 
+size_t IotNetworkAfr_ReceiveUpto( void * pConnection,
+                                  uint8_t * pBuffer,
+                                  size_t bufferSize )
+{
+    int32_t socketStatus = 0;
+    size_t bytesReceived = 0;
+
+    /* Cast network connection to the correct type. */
+    _networkConnection_t * pNetworkConnection = ( _networkConnection_t * ) pConnection;
+
+    /* Caller should never pass a zero-length buffer. */
+    configASSERT( bufferSize > 0 );
+
+    /* Write the buffered byte. THIS IS A TEMPORARY WORKAROUND AND ASSUMES THIS
+     * FUNCTION IS ALWAYS CALLED FROM THE RECEIVE CALLBACK. */
+    if( pNetworkConnection->bufferedByteValid == true )
+    {
+        *pBuffer = pNetworkConnection->bufferedByte;
+        bytesReceived = 1;
+        pNetworkConnection->bufferedByteValid = false;
+    }
+
+    if( bufferSize - bytesReceived > 0 )
+    {
+        /* Block and wait for incoming data. */
+        socketStatus = SOCKETS_Recv( pNetworkConnection->socket,
+                                     pBuffer + bytesReceived,
+                                     bufferSize - bytesReceived,
+                                     0 );
+
+        if( socketStatus <= 0 )
+        {
+            IotLogError( "Error %ld while receiving data.", ( long int ) socketStatus );
+        }
+        else
+        {
+            bytesReceived += ( size_t ) socketStatus;
+        }
+    }
+
+    IotLogDebug( "Received %lu bytes.",
+                 ( unsigned long ) bytesReceived );
+
+    return bytesReceived;
+}
+
+/*-----------------------------------------------------------*/
+
 IotNetworkError_t IotNetworkAfr_Close( void * pConnection )
 {
     int32_t socketStatus = SOCKETS_ERROR_NONE;
diff --git a/libraries/abstractions/platform/freertos/iot_threads_freertos.c b/libraries/abstractions/platform/freertos/iot_threads_freertos.c
index d08d1dcfa..8ab272a97 100644
--- a/libraries/abstractions/platform/freertos/iot_threads_freertos.c
+++ b/libraries/abstractions/platform/freertos/iot_threads_freertos.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Platform V1.0.0
+ * Amazon FreeRTOS Platform V1.1.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/platform/include/platform/iot_clock.h b/libraries/abstractions/platform/include/platform/iot_clock.h
index d9887e953..f75054cef 100644
--- a/libraries/abstractions/platform/include/platform/iot_clock.h
+++ b/libraries/abstractions/platform/include/platform/iot_clock.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Platform V1.0.0
+ * Amazon FreeRTOS Platform V1.1.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/platform/include/platform/iot_metrics.h b/libraries/abstractions/platform/include/platform/iot_metrics.h
index 8c3f3be25..b9be3af1b 100644
--- a/libraries/abstractions/platform/include/platform/iot_metrics.h
+++ b/libraries/abstractions/platform/include/platform/iot_metrics.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Platform V1.0.0
+ * Amazon FreeRTOS Platform V1.1.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/platform/include/platform/iot_network.h b/libraries/abstractions/platform/include/platform/iot_network.h
index ed39a60e7..61181155e 100644
--- a/libraries/abstractions/platform/include/platform/iot_network.h
+++ b/libraries/abstractions/platform/include/platform/iot_network.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Platform V1.0.0
+ * Amazon FreeRTOS Platform V1.1.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
@@ -69,6 +69,8 @@ typedef enum IotNetworkError
  * @function_brief{platform_network_function_send}
  * - @function_name{platform_network_function_receive}
  * @function_brief{platform_network_function_receive}
+ * - @function_name{platform_network_function_receiveupto}
+ * @function_brief{platform_network_function_receiveupto}
  * - @function_name{platform_network_function_close}
  * @function_brief{platform_network_function_close}
  * - @function_name{platform_network_function_destroy}
@@ -90,6 +92,9 @@ typedef enum IotNetworkError
  * @function_page{IotNetworkInterface_t::receive,platform_network,receive}
  * @function_snippet{platform_network,receive,this}
  * @copydoc IotNetworkInterface_t::receive
+ * @function_page{IotNetworkInterface_t::receiveUpto,platform_network,receiveupto}
+ * @function_snippet{platform_network,receiveupto,this}
+ * @copydoc IotNetworkInterface_t::receiveUpto
  * @function_page{IotNetworkInterface_t::close,platform_network,close}
  * @function_snippet{platform_network,close,this}
  * @copydoc IotNetworkInterface_t::close
@@ -212,6 +217,29 @@ typedef struct IotNetworkInterface
                           size_t bytesRequested );
     /* @[declare_platform_network_receive] */
 
+    /**
+     * @brief Read incoming data available in the network buffers.
+     *
+     * Reads bytes available in the network buffers into `pBuffer`.
+     * - If there is less data available than requested, it will return
+     *   the available number of bytes.
+     * - If there is more data available than requested, it will fill the
+     *   whole `pBuffer`.
+     * - If there is no data available, it will return 0.
+     *
+     * @param[in] pConnection The connection to receive data on, defined by
+     * the network stack.
+     * @param[out] pBuffer The buffer to place the incoming network data.
+     * @param[in] bufferSize The size of `pBuffer`.
+     *
+     * @return The number of bytes successfully received.
+     */
+    /* @[declare_platform_network_receiveupto] */
+    size_t ( * receiveUpto )( void * pConnection,
+                              uint8_t * pBuffer,
+                              size_t bufferSize );
+    /* @[declare_platform_network_receiveupto] */
+
     /**
      * @brief Close a network connection.
      *
diff --git a/libraries/abstractions/platform/include/platform/iot_threads.h b/libraries/abstractions/platform/include/platform/iot_threads.h
index def6ebff3..c77bd52cc 100644
--- a/libraries/abstractions/platform/include/platform/iot_threads.h
+++ b/libraries/abstractions/platform/include/platform/iot_threads.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Platform V1.0.0
+ * Amazon FreeRTOS Platform V1.1.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/platform/include/types/iot_platform_types.h b/libraries/abstractions/platform/include/types/iot_platform_types.h
index b99704d02..ee4847ab9 100644
--- a/libraries/abstractions/platform/include/types/iot_platform_types.h
+++ b/libraries/abstractions/platform/include/types/iot_platform_types.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Platform V1.0.0
+ * Amazon FreeRTOS Platform V1.1.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/platform/test/iot_test_platform_clock.c b/libraries/abstractions/platform/test/iot_test_platform_clock.c
index df7c4029f..f6b031dd3 100644
--- a/libraries/abstractions/platform/test/iot_test_platform_clock.c
+++ b/libraries/abstractions/platform/test/iot_test_platform_clock.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Platform V1.0.0
+ * Amazon FreeRTOS Platform V1.1.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/platform/test/iot_test_platform_threads.c b/libraries/abstractions/platform/test/iot_test_platform_threads.c
index bf8e1537b..d267a1610 100644
--- a/libraries/abstractions/platform/test/iot_test_platform_threads.c
+++ b/libraries/abstractions/platform/test/iot_test_platform_threads.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Platform V1.0.0
+ * Amazon FreeRTOS Platform V1.1.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/posix/include/FreeRTOS_POSIX/errno.h b/libraries/abstractions/posix/include/FreeRTOS_POSIX/errno.h
index 136e04bc4..d3131da11 100644
--- a/libraries/abstractions/posix/include/FreeRTOS_POSIX/errno.h
+++ b/libraries/abstractions/posix/include/FreeRTOS_POSIX/errno.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/posix/include/FreeRTOS_POSIX/fcntl.h b/libraries/abstractions/posix/include/FreeRTOS_POSIX/fcntl.h
index 1e921cea0..86fbc4b2d 100644
--- a/libraries/abstractions/posix/include/FreeRTOS_POSIX/fcntl.h
+++ b/libraries/abstractions/posix/include/FreeRTOS_POSIX/fcntl.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/posix/include/FreeRTOS_POSIX/mqueue.h b/libraries/abstractions/posix/include/FreeRTOS_POSIX/mqueue.h
index a35294844..175861390 100644
--- a/libraries/abstractions/posix/include/FreeRTOS_POSIX/mqueue.h
+++ b/libraries/abstractions/posix/include/FreeRTOS_POSIX/mqueue.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/posix/include/FreeRTOS_POSIX/pthread.h b/libraries/abstractions/posix/include/FreeRTOS_POSIX/pthread.h
index 77f949a05..8b6d7a540 100644
--- a/libraries/abstractions/posix/include/FreeRTOS_POSIX/pthread.h
+++ b/libraries/abstractions/posix/include/FreeRTOS_POSIX/pthread.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/posix/include/FreeRTOS_POSIX/sched.h b/libraries/abstractions/posix/include/FreeRTOS_POSIX/sched.h
index 6e97af500..4e76310eb 100644
--- a/libraries/abstractions/posix/include/FreeRTOS_POSIX/sched.h
+++ b/libraries/abstractions/posix/include/FreeRTOS_POSIX/sched.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/posix/include/FreeRTOS_POSIX/semaphore.h b/libraries/abstractions/posix/include/FreeRTOS_POSIX/semaphore.h
index fa1da91ea..e9d55e1ab 100644
--- a/libraries/abstractions/posix/include/FreeRTOS_POSIX/semaphore.h
+++ b/libraries/abstractions/posix/include/FreeRTOS_POSIX/semaphore.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/posix/include/FreeRTOS_POSIX/signal.h b/libraries/abstractions/posix/include/FreeRTOS_POSIX/signal.h
index a90c6bed6..46991cbe7 100644
--- a/libraries/abstractions/posix/include/FreeRTOS_POSIX/signal.h
+++ b/libraries/abstractions/posix/include/FreeRTOS_POSIX/signal.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/posix/include/FreeRTOS_POSIX/sys/types.h b/libraries/abstractions/posix/include/FreeRTOS_POSIX/sys/types.h
index edddf65ee..9df374233 100644
--- a/libraries/abstractions/posix/include/FreeRTOS_POSIX/sys/types.h
+++ b/libraries/abstractions/posix/include/FreeRTOS_POSIX/sys/types.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/posix/include/FreeRTOS_POSIX/time.h b/libraries/abstractions/posix/include/FreeRTOS_POSIX/time.h
index f0775e57f..c462c037d 100644
--- a/libraries/abstractions/posix/include/FreeRTOS_POSIX/time.h
+++ b/libraries/abstractions/posix/include/FreeRTOS_POSIX/time.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/posix/include/FreeRTOS_POSIX/unistd.h b/libraries/abstractions/posix/include/FreeRTOS_POSIX/unistd.h
index 3b8af2230..cf94e2264 100644
--- a/libraries/abstractions/posix/include/FreeRTOS_POSIX/unistd.h
+++ b/libraries/abstractions/posix/include/FreeRTOS_POSIX/unistd.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/posix/include/FreeRTOS_POSIX/utils.h b/libraries/abstractions/posix/include/FreeRTOS_POSIX/utils.h
index c893a95b9..1de5f90ba 100644
--- a/libraries/abstractions/posix/include/FreeRTOS_POSIX/utils.h
+++ b/libraries/abstractions/posix/include/FreeRTOS_POSIX/utils.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/secure_sockets/freertos_plus_tcp/iot_secure_sockets.c b/libraries/abstractions/secure_sockets/freertos_plus_tcp/iot_secure_sockets.c
index e72f87d44..db9e366ab 100644
--- a/libraries/abstractions/secure_sockets/freertos_plus_tcp/iot_secure_sockets.c
+++ b/libraries/abstractions/secure_sockets/freertos_plus_tcp/iot_secure_sockets.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Secure Sockets V1.1.5
+ * Amazon FreeRTOS Secure Sockets V1.1.6
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/secure_sockets/include/iot_secure_sockets.h b/libraries/abstractions/secure_sockets/include/iot_secure_sockets.h
index aa4563d8a..1aa435af6 100644
--- a/libraries/abstractions/secure_sockets/include/iot_secure_sockets.h
+++ b/libraries/abstractions/secure_sockets/include/iot_secure_sockets.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Secure Sockets V1.1.5
+ * Amazon FreeRTOS Secure Sockets V1.1.6
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/secure_sockets/include/iot_secure_sockets_config_defaults.h b/libraries/abstractions/secure_sockets/include/iot_secure_sockets_config_defaults.h
index dab8f4246..c86f03b1e 100644
--- a/libraries/abstractions/secure_sockets/include/iot_secure_sockets_config_defaults.h
+++ b/libraries/abstractions/secure_sockets/include/iot_secure_sockets_config_defaults.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Secure Sockets V1.1.5
+ * Amazon FreeRTOS Secure Sockets V1.1.6
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/secure_sockets/include/iot_secure_sockets_wrapper_metrics.h b/libraries/abstractions/secure_sockets/include/iot_secure_sockets_wrapper_metrics.h
index 1b65cb0f0..0e88bb630 100644
--- a/libraries/abstractions/secure_sockets/include/iot_secure_sockets_wrapper_metrics.h
+++ b/libraries/abstractions/secure_sockets/include/iot_secure_sockets_wrapper_metrics.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Secure Sockets V1.1.5
+ * Amazon FreeRTOS Secure Sockets V1.1.6
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/secure_sockets/lwip/iot_secure_sockets.c b/libraries/abstractions/secure_sockets/lwip/iot_secure_sockets.c
index ecd5f2c3f..5e4f75e38 100644
--- a/libraries/abstractions/secure_sockets/lwip/iot_secure_sockets.c
+++ b/libraries/abstractions/secure_sockets/lwip/iot_secure_sockets.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Secure Sockets V1.1.5
+ * Amazon FreeRTOS Secure Sockets V1.1.6
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/secure_sockets/test/iot_test_tcp.c b/libraries/abstractions/secure_sockets/test/iot_test_tcp.c
index b7ec43214..8d5e8a634 100644
--- a/libraries/abstractions/secure_sockets/test/iot_test_tcp.c
+++ b/libraries/abstractions/secure_sockets/test/iot_test_tcp.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Secure Sockets V1.1.5
+ * Amazon FreeRTOS Secure Sockets V1.1.6
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/wifi/include/iot_wifi.h b/libraries/abstractions/wifi/include/iot_wifi.h
index 76d4fdaea..8eb4e7946 100644
--- a/libraries/abstractions/wifi/include/iot_wifi.h
+++ b/libraries/abstractions/wifi/include/iot_wifi.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS WiFi V1.0.3
+ * Amazon FreeRTOS WiFi V1.0.4
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/wifi/test/iot_test_wifi.c b/libraries/abstractions/wifi/test/iot_test_wifi.c
index 294353701..b95f425bb 100644
--- a/libraries/abstractions/wifi/test/iot_test_wifi.c
+++ b/libraries/abstractions/wifi/test/iot_test_wifi.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS WiFi V1.0.3
+ * Amazon FreeRTOS WiFi V1.0.4
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/abstractions/wifi/test/iot_test_wifi.h b/libraries/abstractions/wifi/test/iot_test_wifi.h
index c7c2a2617..c47fd0d3f 100644
--- a/libraries/abstractions/wifi/test/iot_test_wifi.h
+++ b/libraries/abstractions/wifi/test/iot_test_wifi.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS WiFi V1.0.3
+ * Amazon FreeRTOS WiFi V1.0.4
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/defender/include/aws_defender.h b/libraries/c_sdk/aws/defender/include/aws_defender.h
index 14198a8c3..50aa66b87 100644
--- a/libraries/c_sdk/aws/defender/include/aws_defender.h
+++ b/libraries/c_sdk/aws/defender/include/aws_defender.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Defender V2.0.0
+ * Amazon FreeRTOS Defender V2.0.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/defender/include/aws_iot_defender.h b/libraries/c_sdk/aws/defender/include/aws_iot_defender.h
index 9fcfae67c..a8a8ed00b 100644
--- a/libraries/c_sdk/aws/defender/include/aws_iot_defender.h
+++ b/libraries/c_sdk/aws/defender/include/aws_iot_defender.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Defender V2.0.0
+ * Amazon FreeRTOS Defender V2.0.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/defender/src/aws_iot_defender_api.c b/libraries/c_sdk/aws/defender/src/aws_iot_defender_api.c
index 24491909d..41e488841 100644
--- a/libraries/c_sdk/aws/defender/src/aws_iot_defender_api.c
+++ b/libraries/c_sdk/aws/defender/src/aws_iot_defender_api.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Defender V2.0.0
+ * Amazon FreeRTOS Defender V2.0.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/defender/src/aws_iot_defender_collector.c b/libraries/c_sdk/aws/defender/src/aws_iot_defender_collector.c
index e972d5046..bd247dea1 100644
--- a/libraries/c_sdk/aws/defender/src/aws_iot_defender_collector.c
+++ b/libraries/c_sdk/aws/defender/src/aws_iot_defender_collector.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Defender V2.0.0
+ * Amazon FreeRTOS Defender V2.0.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/defender/src/aws_iot_defender_mqtt.c b/libraries/c_sdk/aws/defender/src/aws_iot_defender_mqtt.c
index 9a8f35c92..2b5a7e9c8 100644
--- a/libraries/c_sdk/aws/defender/src/aws_iot_defender_mqtt.c
+++ b/libraries/c_sdk/aws/defender/src/aws_iot_defender_mqtt.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Defender V2.0.0
+ * Amazon FreeRTOS Defender V2.0.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/defender/src/aws_iot_defender_v1.c b/libraries/c_sdk/aws/defender/src/aws_iot_defender_v1.c
index 3cf76debf..83765f729 100644
--- a/libraries/c_sdk/aws/defender/src/aws_iot_defender_v1.c
+++ b/libraries/c_sdk/aws/defender/src/aws_iot_defender_v1.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Defender V2.0.0
+ * Amazon FreeRTOS Defender V2.0.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/defender/src/private/aws_iot_defender_internal.h b/libraries/c_sdk/aws/defender/src/private/aws_iot_defender_internal.h
index 124996313..daee2285f 100644
--- a/libraries/c_sdk/aws/defender/src/private/aws_iot_defender_internal.h
+++ b/libraries/c_sdk/aws/defender/src/private/aws_iot_defender_internal.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Defender V2.0.0
+ * Amazon FreeRTOS Defender V2.0.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/defender/test/aws_iot_tests_defender_api.c b/libraries/c_sdk/aws/defender/test/aws_iot_tests_defender_api.c
index 0449b22c4..932e4eacf 100644
--- a/libraries/c_sdk/aws/defender/test/aws_iot_tests_defender_api.c
+++ b/libraries/c_sdk/aws/defender/test/aws_iot_tests_defender_api.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Defender V2.0.0
+ * Amazon FreeRTOS Defender V2.0.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/shadow/include/aws_iot_shadow.h b/libraries/c_sdk/aws/shadow/include/aws_iot_shadow.h
index 30740e976..a35688a29 100644
--- a/libraries/c_sdk/aws/shadow/include/aws_iot_shadow.h
+++ b/libraries/c_sdk/aws/shadow/include/aws_iot_shadow.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Shadow V2.0.0
+ * Amazon FreeRTOS Shadow V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/shadow/include/aws_shadow.h b/libraries/c_sdk/aws/shadow/include/aws_shadow.h
index a8454c003..fabb7b168 100644
--- a/libraries/c_sdk/aws/shadow/include/aws_shadow.h
+++ b/libraries/c_sdk/aws/shadow/include/aws_shadow.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Shadow V2.0.0
+ * Amazon FreeRTOS Shadow V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/shadow/include/types/aws_iot_shadow_types.h b/libraries/c_sdk/aws/shadow/include/types/aws_iot_shadow_types.h
index 3aad89ddf..ab1e7abca 100644
--- a/libraries/c_sdk/aws/shadow/include/types/aws_iot_shadow_types.h
+++ b/libraries/c_sdk/aws/shadow/include/types/aws_iot_shadow_types.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Shadow V2.0.0
+ * Amazon FreeRTOS Shadow V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_api.c b/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_api.c
index 110b94c88..5be6c966d 100644
--- a/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_api.c
+++ b/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_api.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Shadow V2.0.0
+ * Amazon FreeRTOS Shadow V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_operation.c b/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_operation.c
index 725d67b2c..1a41bcc0a 100644
--- a/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_operation.c
+++ b/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_operation.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Shadow V2.0.0
+ * Amazon FreeRTOS Shadow V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_parser.c b/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_parser.c
index 945296a9f..0dbb1f007 100644
--- a/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_parser.c
+++ b/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_parser.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Shadow V2.0.0
+ * Amazon FreeRTOS Shadow V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_static_memory.c b/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_static_memory.c
index 91e9f313a..b3ff719e3 100644
--- a/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_static_memory.c
+++ b/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_static_memory.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Shadow V2.0.0
+ * Amazon FreeRTOS Shadow V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_subscription.c b/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_subscription.c
index d10b37ab4..bd2975164 100644
--- a/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_subscription.c
+++ b/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_subscription.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Shadow V2.0.0
+ * Amazon FreeRTOS Shadow V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/shadow/src/aws_shadow.c b/libraries/c_sdk/aws/shadow/src/aws_shadow.c
index f5ee43684..f9a7431b9 100644
--- a/libraries/c_sdk/aws/shadow/src/aws_shadow.c
+++ b/libraries/c_sdk/aws/shadow/src/aws_shadow.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Shadow V2.0.0
+ * Amazon FreeRTOS Shadow V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/shadow/src/aws_shadow_config_defaults.h b/libraries/c_sdk/aws/shadow/src/aws_shadow_config_defaults.h
index 3222bd814..dfa23a999 100644
--- a/libraries/c_sdk/aws/shadow/src/aws_shadow_config_defaults.h
+++ b/libraries/c_sdk/aws/shadow/src/aws_shadow_config_defaults.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Shadow V2.0.0
+ * Amazon FreeRTOS Shadow V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/shadow/src/private/aws_iot_shadow_internal.h b/libraries/c_sdk/aws/shadow/src/private/aws_iot_shadow_internal.h
index 982d0fe43..7ea000307 100644
--- a/libraries/c_sdk/aws/shadow/src/private/aws_iot_shadow_internal.h
+++ b/libraries/c_sdk/aws/shadow/src/private/aws_iot_shadow_internal.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Shadow V2.0.0
+ * Amazon FreeRTOS Shadow V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/shadow/test/aws_test_shadow.c b/libraries/c_sdk/aws/shadow/test/aws_test_shadow.c
index 6d27d324f..aab705764 100644
--- a/libraries/c_sdk/aws/shadow/test/aws_test_shadow.c
+++ b/libraries/c_sdk/aws/shadow/test/aws_test_shadow.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Shadow V2.0.0
+ * Amazon FreeRTOS Shadow V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/shadow/test/system/aws_iot_tests_shadow_system.c b/libraries/c_sdk/aws/shadow/test/system/aws_iot_tests_shadow_system.c
index 200a2b63b..0c6b19531 100644
--- a/libraries/c_sdk/aws/shadow/test/system/aws_iot_tests_shadow_system.c
+++ b/libraries/c_sdk/aws/shadow/test/system/aws_iot_tests_shadow_system.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Shadow V2.0.0
+ * Amazon FreeRTOS Shadow V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_api.c b/libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_api.c
index 0b9529c63..06ecf2e21 100644
--- a/libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_api.c
+++ b/libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_api.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Shadow V2.0.0
+ * Amazon FreeRTOS Shadow V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_parser.c b/libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_parser.c
index 9b6a34928..d74c19747 100644
--- a/libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_parser.c
+++ b/libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_parser.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Shadow V2.0.0
+ * Amazon FreeRTOS Shadow V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/ble/include/iot_ble.h b/libraries/c_sdk/standard/ble/include/iot_ble.h
index 34c334eca..4973eb404 100644
--- a/libraries/c_sdk/standard/ble/include/iot_ble.h
+++ b/libraries/c_sdk/standard/ble/include/iot_ble.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE V1.0.0
+ * Amazon FreeRTOS BLE V2.0.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/ble/include/iot_ble_config_defaults.h b/libraries/c_sdk/standard/ble/include/iot_ble_config_defaults.h
index fd0adbf0b..963b3fae3 100644
--- a/libraries/c_sdk/standard/ble/include/iot_ble_config_defaults.h
+++ b/libraries/c_sdk/standard/ble/include/iot_ble_config_defaults.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE V1.0.0
+ * Amazon FreeRTOS BLE V2.0.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/ble/include/iot_ble_data_transfer.h b/libraries/c_sdk/standard/ble/include/iot_ble_data_transfer.h
index db101f719..1ca7c3afa 100644
--- a/libraries/c_sdk/standard/ble/include/iot_ble_data_transfer.h
+++ b/libraries/c_sdk/standard/ble/include/iot_ble_data_transfer.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE V1.0.0
+ * Amazon FreeRTOS BLE V2.0.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/ble/include/iot_ble_device_information.h b/libraries/c_sdk/standard/ble/include/iot_ble_device_information.h
index 16c062c7d..e99a961ee 100644
--- a/libraries/c_sdk/standard/ble/include/iot_ble_device_information.h
+++ b/libraries/c_sdk/standard/ble/include/iot_ble_device_information.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE V1.0.0
+ * Amazon FreeRTOS BLE V2.0.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/ble/include/iot_ble_mqtt_serialize.h b/libraries/c_sdk/standard/ble/include/iot_ble_mqtt_serialize.h
index 10d718636..c8e3ebfbe 100644
--- a/libraries/c_sdk/standard/ble/include/iot_ble_mqtt_serialize.h
+++ b/libraries/c_sdk/standard/ble/include/iot_ble_mqtt_serialize.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE V1.0.0
+ * Amazon FreeRTOS BLE V2.0.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/ble/include/iot_ble_wifi_provisioning.h b/libraries/c_sdk/standard/ble/include/iot_ble_wifi_provisioning.h
index 94ea9f845..5e899b2e8 100644
--- a/libraries/c_sdk/standard/ble/include/iot_ble_wifi_provisioning.h
+++ b/libraries/c_sdk/standard/ble/include/iot_ble_wifi_provisioning.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE V1.0.0
+ * Amazon FreeRTOS BLE V2.0.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/ble/src/iot_ble_gap.c b/libraries/c_sdk/standard/ble/src/iot_ble_gap.c
index 526f564c6..319a30423 100644
--- a/libraries/c_sdk/standard/ble/src/iot_ble_gap.c
+++ b/libraries/c_sdk/standard/ble/src/iot_ble_gap.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE V1.0.0
+ * Amazon FreeRTOS BLE V2.0.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/ble/src/iot_ble_gatt.c b/libraries/c_sdk/standard/ble/src/iot_ble_gatt.c
index e0e802859..64b18d707 100644
--- a/libraries/c_sdk/standard/ble/src/iot_ble_gatt.c
+++ b/libraries/c_sdk/standard/ble/src/iot_ble_gatt.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE V1.0.0
+ * Amazon FreeRTOS BLE V2.0.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/ble/src/iot_ble_internal.h b/libraries/c_sdk/standard/ble/src/iot_ble_internal.h
index b450fb8ca..12dd306b5 100644
--- a/libraries/c_sdk/standard/ble/src/iot_ble_internal.h
+++ b/libraries/c_sdk/standard/ble/src/iot_ble_internal.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE V1.0.0
+ * Amazon FreeRTOS BLE V2.0.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/ble/src/services/device_information/iot_ble_device_information.c b/libraries/c_sdk/standard/ble/src/services/device_information/iot_ble_device_information.c
index a846f0563..f15705b2a 100644
--- a/libraries/c_sdk/standard/ble/src/services/device_information/iot_ble_device_information.c
+++ b/libraries/c_sdk/standard/ble/src/services/device_information/iot_ble_device_information.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE V1.0.0
+ * Amazon FreeRTOS BLE V2.0.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/ble/src/services/mqtt_ble/iot_ble_data_transfer.c b/libraries/c_sdk/standard/ble/src/services/mqtt_ble/iot_ble_data_transfer.c
index 0ee15ab93..a32baf2a9 100644
--- a/libraries/c_sdk/standard/ble/src/services/mqtt_ble/iot_ble_data_transfer.c
+++ b/libraries/c_sdk/standard/ble/src/services/mqtt_ble/iot_ble_data_transfer.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE V1.0.0
+ * Amazon FreeRTOS BLE V2.0.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/ble/src/services/mqtt_ble/iot_network_ble.c b/libraries/c_sdk/standard/ble/src/services/mqtt_ble/iot_network_ble.c
index 4afd48d46..c77e0d92f 100644
--- a/libraries/c_sdk/standard/ble/src/services/mqtt_ble/iot_network_ble.c
+++ b/libraries/c_sdk/standard/ble/src/services/mqtt_ble/iot_network_ble.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE V1.0.0
+ * Amazon FreeRTOS BLE V2.0.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/ble/src/services/wifi_provisioning/iot_ble_wifi_provisioning.c b/libraries/c_sdk/standard/ble/src/services/wifi_provisioning/iot_ble_wifi_provisioning.c
index 2c5839db5..eee2da8c9 100644
--- a/libraries/c_sdk/standard/ble/src/services/wifi_provisioning/iot_ble_wifi_provisioning.c
+++ b/libraries/c_sdk/standard/ble/src/services/wifi_provisioning/iot_ble_wifi_provisioning.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE V1.0.0
+ * Amazon FreeRTOS BLE V2.0.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/ble/test/iot_ble_wifi_prov_test_access_declare.h b/libraries/c_sdk/standard/ble/test/iot_ble_wifi_prov_test_access_declare.h
index 1d5c4aeea..b0e404425 100644
--- a/libraries/c_sdk/standard/ble/test/iot_ble_wifi_prov_test_access_declare.h
+++ b/libraries/c_sdk/standard/ble/test/iot_ble_wifi_prov_test_access_declare.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE V1.0.0
+ * Amazon FreeRTOS BLE V2.0.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/ble/test/iot_ble_wifi_prov_test_access_define.h b/libraries/c_sdk/standard/ble/test/iot_ble_wifi_prov_test_access_define.h
index ba1352108..a76eb7626 100644
--- a/libraries/c_sdk/standard/ble/test/iot_ble_wifi_prov_test_access_define.h
+++ b/libraries/c_sdk/standard/ble/test/iot_ble_wifi_prov_test_access_define.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE V1.0.0
+ * Amazon FreeRTOS BLE V2.0.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/ble/test/iot_test_ble_end_to_end.c b/libraries/c_sdk/standard/ble/test/iot_test_ble_end_to_end.c
index 7edac38c0..ec3db1ab6 100644
--- a/libraries/c_sdk/standard/ble/test/iot_test_ble_end_to_end.c
+++ b/libraries/c_sdk/standard/ble/test/iot_test_ble_end_to_end.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE V1.0.0
+ * Amazon FreeRTOS BLE V2.0.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/ble/test/iot_test_wifi_provisioning.c b/libraries/c_sdk/standard/ble/test/iot_test_wifi_provisioning.c
index e212003aa..94d01709e 100644
--- a/libraries/c_sdk/standard/ble/test/iot_test_wifi_provisioning.c
+++ b/libraries/c_sdk/standard/ble/test/iot_test_wifi_provisioning.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS BLE V1.0.0
+ * Amazon FreeRTOS BLE V2.0.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/include/iot_appversion32.h b/libraries/c_sdk/standard/common/include/iot_appversion32.h
index 93a32819e..ce93934a0 100644
--- a/libraries/c_sdk/standard/common/include/iot_appversion32.h
+++ b/libraries/c_sdk/standard/common/include/iot_appversion32.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/include/iot_atomic.h b/libraries/c_sdk/standard/common/include/iot_atomic.h
index 6d8fff17a..176f491de 100644
--- a/libraries/c_sdk/standard/common/include/iot_atomic.h
+++ b/libraries/c_sdk/standard/common/include/iot_atomic.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/include/iot_init.h b/libraries/c_sdk/standard/common/include/iot_init.h
index 180f916f1..6232d674e 100644
--- a/libraries/c_sdk/standard/common/include/iot_init.h
+++ b/libraries/c_sdk/standard/common/include/iot_init.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/include/iot_linear_containers.h b/libraries/c_sdk/standard/common/include/iot_linear_containers.h
index f3a153254..f32c7efea 100644
--- a/libraries/c_sdk/standard/common/include/iot_linear_containers.h
+++ b/libraries/c_sdk/standard/common/include/iot_linear_containers.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/include/iot_logging_setup.h b/libraries/c_sdk/standard/common/include/iot_logging_setup.h
index cd437a0cf..3be28c07e 100644
--- a/libraries/c_sdk/standard/common/include/iot_logging_setup.h
+++ b/libraries/c_sdk/standard/common/include/iot_logging_setup.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/include/iot_logging_task.h b/libraries/c_sdk/standard/common/include/iot_logging_task.h
index 377b14038..906a95a1c 100644
--- a/libraries/c_sdk/standard/common/include/iot_logging_task.h
+++ b/libraries/c_sdk/standard/common/include/iot_logging_task.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/include/iot_taskpool.h b/libraries/c_sdk/standard/common/include/iot_taskpool.h
index 0ddf37e1d..643b42a9e 100644
--- a/libraries/c_sdk/standard/common/include/iot_taskpool.h
+++ b/libraries/c_sdk/standard/common/include/iot_taskpool.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/include/private/iot_default_root_certificates.h b/libraries/c_sdk/standard/common/include/private/iot_default_root_certificates.h
index 96c5c4f3a..62ccf36b2 100644
--- a/libraries/c_sdk/standard/common/include/private/iot_default_root_certificates.h
+++ b/libraries/c_sdk/standard/common/include/private/iot_default_root_certificates.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/include/private/iot_doubly_linked_list.h b/libraries/c_sdk/standard/common/include/private/iot_doubly_linked_list.h
index 338c539a6..481e88b3c 100644
--- a/libraries/c_sdk/standard/common/include/private/iot_doubly_linked_list.h
+++ b/libraries/c_sdk/standard/common/include/private/iot_doubly_linked_list.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/include/private/iot_error.h b/libraries/c_sdk/standard/common/include/private/iot_error.h
index 5c799eb51..f48d0f98f 100644
--- a/libraries/c_sdk/standard/common/include/private/iot_error.h
+++ b/libraries/c_sdk/standard/common/include/private/iot_error.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/include/private/iot_lib_init.h b/libraries/c_sdk/standard/common/include/private/iot_lib_init.h
index 48a64eea0..20dbf7496 100644
--- a/libraries/c_sdk/standard/common/include/private/iot_lib_init.h
+++ b/libraries/c_sdk/standard/common/include/private/iot_lib_init.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/include/private/iot_logging.h b/libraries/c_sdk/standard/common/include/private/iot_logging.h
index cf7bf52ab..e1af155a2 100644
--- a/libraries/c_sdk/standard/common/include/private/iot_logging.h
+++ b/libraries/c_sdk/standard/common/include/private/iot_logging.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/include/private/iot_static_memory.h b/libraries/c_sdk/standard/common/include/private/iot_static_memory.h
index a03ec5a4e..b0b042478 100644
--- a/libraries/c_sdk/standard/common/include/private/iot_static_memory.h
+++ b/libraries/c_sdk/standard/common/include/private/iot_static_memory.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/include/private/iot_taskpool_internal.h b/libraries/c_sdk/standard/common/include/private/iot_taskpool_internal.h
index 7daa8b691..56202bed6 100644
--- a/libraries/c_sdk/standard/common/include/private/iot_taskpool_internal.h
+++ b/libraries/c_sdk/standard/common/include/private/iot_taskpool_internal.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/include/types/iot_network_types.h b/libraries/c_sdk/standard/common/include/types/iot_network_types.h
index 9e91a2103..7b96a2a87 100644
--- a/libraries/c_sdk/standard/common/include/types/iot_network_types.h
+++ b/libraries/c_sdk/standard/common/include/types/iot_network_types.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/include/types/iot_taskpool_types.h b/libraries/c_sdk/standard/common/include/types/iot_taskpool_types.h
index 494c30ebe..67a52e110 100644
--- a/libraries/c_sdk/standard/common/include/types/iot_taskpool_types.h
+++ b/libraries/c_sdk/standard/common/include/types/iot_taskpool_types.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/iot_device_metrics.c b/libraries/c_sdk/standard/common/iot_device_metrics.c
index a4a28b7b5..da24ea472 100644
--- a/libraries/c_sdk/standard/common/iot_device_metrics.c
+++ b/libraries/c_sdk/standard/common/iot_device_metrics.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/iot_init.c b/libraries/c_sdk/standard/common/iot_init.c
index 281f4e594..5c381266e 100644
--- a/libraries/c_sdk/standard/common/iot_init.c
+++ b/libraries/c_sdk/standard/common/iot_init.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/iot_static_memory_common.c b/libraries/c_sdk/standard/common/iot_static_memory_common.c
index 1da789c2f..db684875f 100644
--- a/libraries/c_sdk/standard/common/iot_static_memory_common.c
+++ b/libraries/c_sdk/standard/common/iot_static_memory_common.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/logging/iot_logging.c b/libraries/c_sdk/standard/common/logging/iot_logging.c
index 973dc75b2..6f851a68d 100644
--- a/libraries/c_sdk/standard/common/logging/iot_logging.c
+++ b/libraries/c_sdk/standard/common/logging/iot_logging.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/logging/iot_logging_task_dynamic_buffers.c b/libraries/c_sdk/standard/common/logging/iot_logging_task_dynamic_buffers.c
index d924ea5b4..a6f7b5a65 100644
--- a/libraries/c_sdk/standard/common/logging/iot_logging_task_dynamic_buffers.c
+++ b/libraries/c_sdk/standard/common/logging/iot_logging_task_dynamic_buffers.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/taskpool/iot_taskpool.c b/libraries/c_sdk/standard/common/taskpool/iot_taskpool.c
index 2e4bac604..4eff34223 100644
--- a/libraries/c_sdk/standard/common/taskpool/iot_taskpool.c
+++ b/libraries/c_sdk/standard/common/taskpool/iot_taskpool.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/taskpool/iot_taskpool_static_memory.c b/libraries/c_sdk/standard/common/taskpool/iot_taskpool_static_memory.c
index a3fc96ca2..13e16ef2f 100644
--- a/libraries/c_sdk/standard/common/taskpool/iot_taskpool_static_memory.c
+++ b/libraries/c_sdk/standard/common/taskpool/iot_taskpool_static_memory.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/test/iot_memory_leak.c b/libraries/c_sdk/standard/common/test/iot_memory_leak.c
index b63a49096..3ad11d1a6 100644
--- a/libraries/c_sdk/standard/common/test/iot_memory_leak.c
+++ b/libraries/c_sdk/standard/common/test/iot_memory_leak.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/common/test/iot_tests_taskpool.c b/libraries/c_sdk/standard/common/test/iot_tests_taskpool.c
index 18602f4d5..7b9f46573 100644
--- a/libraries/c_sdk/standard/common/test/iot_tests_taskpool.c
+++ b/libraries/c_sdk/standard/common/test/iot_tests_taskpool.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Common V1.0.0
+ * Amazon FreeRTOS Common V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/https/CMakeLists.txt b/libraries/c_sdk/standard/https/CMakeLists.txt
new file mode 100644
index 000000000..a6d6f7b7b
--- /dev/null
+++ b/libraries/c_sdk/standard/https/CMakeLists.txt
@@ -0,0 +1,65 @@
+afr_module()
+
+afr_set_lib_metadata(ID "https")
+afr_set_lib_metadata(DESCRIPTION "This library implements the HTTPS client side protocol.")
+afr_set_lib_metadata(DISPLAY_NAME "HTTPS Client")
+afr_set_lib_metadata(CATEGORY "Connectivity")
+afr_set_lib_metadata(VERSION "1.0.0")
+afr_set_lib_metadata(IS_VISIBLE "true")
+
+set(src_dir "${CMAKE_CURRENT_LIST_DIR}/src")
+set(inc_dir "${CMAKE_CURRENT_LIST_DIR}/include")
+set(test_dir "${CMAKE_CURRENT_LIST_DIR}/test")
+
+# Enable test access if building tests.
+if(${AFR_IS_TESTING})
+    list(APPEND extra_https_test_includes "${test_dir}/access")
+endif()
+
+afr_module_sources(
+    ${AFR_CURRENT_MODULE}
+    PRIVATE
+        "${src_dir}/iot_https_client.c"
+        "${src_dir}/iot_https_utils.c"
+)
+
+afr_module_include_dirs(
+    ${AFR_CURRENT_MODULE}
+    PUBLIC 
+        "${inc_dir}"
+        "$<${AFR_IS_TESTING}:${src_dir}>"
+    PRIVATE
+        ${extra_https_test_includes}
+)
+
+afr_module_dependencies(
+    ${AFR_CURRENT_MODULE}
+    PUBLIC
+        AFR::common
+        3rdparty::http-parser
+)
+
+# HTTPS Client test
+afr_test_module()
+
+afr_module_sources(
+    ${AFR_CURRENT_MODULE}
+    INTERFACE
+        "${test_dir}/unit/iot_tests_https_client.c"
+        "${test_dir}/unit/iot_tests_https_utils.c"
+        "${test_dir}/unit/iot_tests_https_common.c"
+        "${test_dir}/unit/iot_tests_https_sync.c"
+        "${test_dir}/unit/iot_tests_https_async.c"
+        "${test_dir}/system/iot_tests_https_system.c"
+)
+
+afr_module_include_dirs(
+    ${AFR_CURRENT_MODULE}
+    INTERFACE
+        "${test_dir}/access"
+)
+afr_module_dependencies(
+    ${AFR_CURRENT_MODULE}
+    INTERFACE
+        INTERFACE AFR::https
+)
diff --git a/libraries/c_sdk/standard/https/include/iot_https_client.h b/libraries/c_sdk/standard/https/include/iot_https_client.h
new file mode 100644
index 000000000..5c8695318
--- /dev/null
+++ b/libraries/c_sdk/standard/https/include/iot_https_client.h
@@ -0,0 +1,890 @@
+/*
+ * Amazon FreeRTOS HTTPS Client V1.0.0
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+/**
+ * @file iot_https_client.h
+ * @brief User-facing functions of the Amazon FreeRTOS HTTPS Client library.
+ */
+
+#ifndef IOT_HTTPS_CLIENT_H_
+#define IOT_HTTPS_CLIENT_H_
+
+/* The config header is always included first. */
+#include "iot_config.h"
+
+/* HTTP types include. */
+#include "types/iot_https_types.h"
+
+/**
+ * @functions_page{https_client,HTTPS Client Library}
+ * @functions_brief{https_client}
+ * - @function_name{https_client_function_init}
+ * @function_brief{https_client_function_init}
+ * - @function_name{https_client_function_deinit}
+ * @function_brief{https_client_function_deinit}
+ * - @function_name{https_client_function_disconnect}
+ * @function_brief{https_client_function_disconnect}
+ * - @function_name{https_client_function_connect}
+ * @function_brief{https_client_function_connect}
+ * - @function_name{https_client_function_initializerequest}
+ * @function_brief{https_client_function_initializerequest}
+ * - @function_name{https_client_function_addheader}
+ * @function_brief{https_client_function_addheader}
+ * - @function_name{https_client_function_writerequestbody}
+ * @function_brief{https_client_function_writerequestbody}
+ * - @function_name{https_client_function_sendsync}
+ * @function_brief{https_client_function_sendsync}
+ * - @function_name{https_client_function_sendasync}
+ * @function_brief{https_client_function_sendasync}
+ * - @function_name{https_client_function_cancelrequestasync}
+ * @function_brief{https_client_function_cancelrequestasync}
+ * - @function_name{https_client_function_cancelresponseasync}
+ * @function_brief{https_client_function_cancelresponseasync}
+ * - @function_name{https_client_function_readresponsestatus}
+ * @function_brief{https_client_function_readresponsestatus}
+ * - @function_name{https_client_function_readcontentlength}
+ * @function_brief{https_client_function_readcontentlength}
+ * - @function_name{https_client_function_readheader}
+ * @function_brief{https_client_function_readheader}
+ * - @function_name{https_client_function_readresponsebody}
+ * @function_brief{https_client_function_readresponsebody}
+ */
+
+/**
+ * @page https_client_function_init IotHttpsClient_Init
+ * @snippet this declare_https_client_init
+ * @copydoc IotHttpsClient_Init
+ * @page https_client_function_deinit IotHttpsClient_Deinit
+ * @snippet this declare_https_client_deinit
+ * @copydoc IotHttpsClient_Deinit
+ * @page https_client_function_disconnect IotHttpsClient_Disconnect
+ * @snippet this declare_https_client_disconnect
+ * @copydoc IotHttpsClient_Disconnect
+ * @page https_client_function_connect IotHttpsClient_Connect
+ * @snippet this declare_https_client_connect
+ * @copydoc IotHttpsClient_Connect
+ * @page https_client_function_initializerequest IotHttpsClient_InitializeRequest
+ * @snippet this declare_https_client_initializerequest
+ * @copydoc IotHttpsClient_InitializeRequest
+ * @page https_client_function_addheader IotHttpsClient_AddHeader
+ * @snippet this declare_https_client_addheader
+ * @copydoc IotHttpsClient_AddHeader
+ * @page https_client_function_writerequestbody IotHttpsClient_WriteRequestBody
+ * @snippet this declare_https_client_writerequestbody
+ * @copydoc IotHttpsClient_WriteRequestBody
+ * @page https_client_function_sendsync IotHttpsClient_SendSync
+ * @snippet this declare_https_client_sendsync
+ * @copydoc IotHttpsClient_SendSync
+ * @page https_client_function_sendasync IotHttpsClient_SendAsync
+ * @snippet this declare_https_client_sendasync
+ * @copydoc IotHttpsClient_SendAsync
+ * @page https_client_function_cancelrequestasync IotHttpsClient_CancelRequestAsync
+ * @snippet this declare_https_client_cancelrequestasync
+ * @copydoc IotHttpsClient_CancelRequestAsync
+ * @page https_client_function_cancelresponseasync IotHttpsClient_CancelResponseAsync
+ * @snippet this declare_https_client_cancelresponseasync
+ * @copydoc IotHttpsClient_CancelResponseAsync
+ * @page https_client_function_readresponsestatus IotHttpsClient_ReadResponseStatus
+ * @snippet this declare_https_client_readresponsestatus
+ * @copydoc IotHttpsClient_ReadResponseStatus
+ * @page https_client_function_readcontentlength IotHttpsClient_ReadContentLength
+ * @snippet this declare_https_client_readcontentlength
+ * @copydoc IotHttpsClient_ReadContentLength
+ * @page https_client_function_readheader IotHttpsClient_ReadHeader
+ * @snippet this declare_https_client_readheader
+ * @copydoc IotHttpsClient_ReadHeader
+ * @page https_client_function_readresponsebody IotHttpsClient_ReadResponseBody
+ * @snippet this declare_https_client_readresponsebody
+ * @copydoc IotHttpsClient_ReadResponseBody
+ */
+
+
+/**
+ * @brief One-time initialization of the IoT HTTPS Client library.
+ *
+ * <b>This must be called once before calling any API.</b>
+ *
+ * @warning No thread safety guarantees are provided for this function.
+ *
+ * @return One of the following:
+ * - #IOT_HTTPS_OK if the HTTPS library is successfully initialized.
+ *
+ * @see @ref https_client_function_deinit
+ */
+/* @[declare_https_client_init] */
+IotHttpsReturnCode_t IotHttpsClient_Init( void );
+/* @[declare_https_client_init] */
+
+/**
+ * @brief One time deinitialization of the IoT HTTPS Client library.
+ *
+ * This function frees resources taken in in @ref https_client_function_init. It should be called after
+ * all HTTPS Connections have been close. HTTPS Connections are represented by #IotHttpsConnectionHandle_t and returned
+ * by @ref https_client_function_connect. After this function returns @ref https_client_function_init
+ * must be called again to use this library.
+ *
+ * @warning No thread safety guarantees are provided for this function.
+ */
+/* @[declare_https_client_deinit] */
+void IotHttpsClient_Deinit( void );
+/* @[declare_https_client_deinit] */
+
+/**
+ * @brief Explicitly connect to the HTTPS server given the connection configuration pConnConfig.
+ *
+ * This routine blocks until the connection is complete.
+ *
+ * This function opens a new HTTPS connection with the server specified in #IotHttpsConnectionInfo_t.pAddress. The
+ * connection is established by default on top of TLS over TCP. If the application wants to connect over TCP only, then
+ * it must add the @ref IOT_HTTPS_IS_NON_TLS_FLAG to #IotHttpsConnectionInfo_t.flags. This is done at the application's
+ * own risk.
+ *
+ * When the the last HTTP request sent on the connection is specified as persistent and we want to close the connection,
+ * @ref https_client_function_disconnect must always be called on the valid #IotHttpsConnectionHandle_t. For more
+ * information about persistent HTTP connections please see #IotHttpsRequestInfo_t.isNonPersistent.
+ *
+ * If the application receives a #IOT_HTTPS_NETWORK_ERROR from @ref https_client_function_sendsync or
+ * @ref https_client_function_sendasync, on a persistent request, then the connection will be closed. The application
+ * can call this this function again to reestablish the connection.
+ *
+ * If pConnHandle passed in is valid and represents a previously opened connection, this function will disconnect,
+ * then reconnect. Before calling this function make sure that all outstanding requests on the connection have
+ * completed. Outstanding requests are completed when @ref https_client_function_sendsync has returned or when
+ * #IotHttpsClientCallbacks_t.responseCompleteCallback has been invoked for requests scheduled with
+ * @ref https_client_function_sendasync.
+ *
+ * Keep in mind that many HTTP servers will close a connection, if it does not receive any requests, after a certain
+ * amount of time. Many webservers may close the connection after 30-60 seconds. The state of pConnHandle will still be
+ * in a connected state if this happens. If the server closed the connection, then the next request on the connection
+ * will fail to send with a network error and the connection will move to a closed state.
+ *
+ * Also keep in mind that some HTTP servers do not accept persistent requests. Some HTTP servers will ignore that the
+ * request contains the "Connection: keep-alive" header and close the connection immediately after sending the response.
+ * If this happens, then the next request on the connection will fail to send with a network error and the connection
+ * will close.
+ *
+ * To know if the connection was closed by the server, debug logging can be turned on to view the network error code
+ * received. Debug logging is configured when @ref IOT_LOG_LEVEL_HTTPS is set to @ref IOT_LOG_DEBUG in iot_config.h.
+ *
+ * #IotHttpsConnectionInfo_t.userBuffer is used to store the internal context and therefore, multiple threads
+ * calling this function simultaneously must ensure to use different #IotHttpsConnectionInfo_t objects.
+ *
+ * See @ref connectionUserBufferMinimumSize for information about the user buffer configured in
+ * #IotHttpsConnectionInfo_t.userBuffer needed to create a valid connection handle.
+ *
+ * @param[out] pConnHandle - Handle returned representing the open connection. NULL if the function failed.
+ * @param[in] pConnInfo - Configurations for the HTTPS connection.
+ *
+ * @return One of the following:
+ * - #IOT_HTTPS_OK if the connection was successful.
+ * - #IOT_HTTPS_CONNECTION_ERROR if the connection failed.
+ * - #IOT_HTTPS_INVALID_PARAMETER if NULL parameters were passed in.
+ * - #IOT_HTTPS_INTERNAL_ERROR if there was an error creating resources for the connection context.
+ *
+ * <b>Example</b>
+ * @code{c}
+ * // An initialized network interface.
+ * IotNetworkInterface_t* pNetworkInterface;
+ *
+ * // Parameters to HTTPS Client connect.
+ * IotHttpsConnectionInfo_t connInfo = IOT_HTTPS_CONNECTION_INFO_INITIALIZER;
+ * IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+ * uint8_t* pConnUserBuffer = (uint8_t*)malloc(connectionUserBufferMinimumSize);
+ *
+ * // Set the connection configuration information.
+ * connInfo.pAddress = "www.amazon.com";
+ * connInfo.addressLen = strlen("www.amazon.com");
+ * connInfo.port = 443;
+ * connInfo.flags = 0;
+ * connInfo.pAlpnProtocols = "alpnproto0,alpnproto1"
+ * connInfo.pCaCert = HTTPS_TRUSTED_ROOT_CA; // defined elsewhere
+ * connInfo.caCertLen = sizeof( HTTPS_TRUSTED_ROOT_CA );
+ * connInfo.userBuffer.pBuffer = pConnUserBuffer;
+ * connInfo.userBuffer.bufferLen = connectionUserBufferMinimumSize;
+ * connInfo.pClientCert = TLS_CLIENT_CERT;
+ * connInfo.clientCertLen = sizeof( TLS_CLIENT_CERT );
+ * connInfo.pPrivateKey = TLS_CLIENT_PRIV_KEY;
+ * connInfo.privateKeyLen = sizeof( TLS_CLIENT_PRIV_KEY );
+ * connInfo.pNetworkInterface = pNetworkInterface;
+ *
+ * IotHttpsReturnCode_t returnCode = IotHttpsClient_Connect(&connHandle, &connInfo);
+ * if( returnCode == IOT_HTTPS_OK )
+ * {
+ *      // Do something with the HTTPS connection...
+ *
+ *      // Clean up and close the HTTPS connection once it's no longer needed.
+ *      IotHttpsClient_Disconnect(connHandle);
+ * }
+ * @endcode
+ */
+/* @[declare_https_client_connect] */
+IotHttpsReturnCode_t IotHttpsClient_Connect( IotHttpsConnectionHandle_t * pConnHandle,
+                                             IotHttpsConnectionInfo_t * pConnInfo );
+/* @[declare_https_client_connect] */
+
+/**
+ * @brief Disconnect from the HTTPS server given the connection handle connHandle.
+ *
+ * This routine blocks until the disconnect is complete.
+ * If the connection handle is not valid, the behavior is undefined.
+ * If the connection handle is already disconnected then this routine will return IOT_HTTPS_OK.
+ *
+ * When the HTTP request is specified as persistent and we want to close the connection, this API must always
+ * be called on the valid #IotHttpsConnectionHandle_t. For more information about persistent HTTP connections please see
+ * #IotHttpsRequestInfo_t.isNonPersistent.
+ *
+ * When the HTTP request is specified as non-persistent, by setting #IotHttpsRequestInfo_t.isNonPersistent to true, then
+ * this function will be called automatically on the valid IotHttpsConnectionHandle_t after receiving the response. There
+ * is no need to call this function in case of a non-persistent request.
+ *
+ * This will put the internal connection state in #IotHttpsConnectionHandle_t to disconnected.
+ *
+ * If the application receives a #IOT_HTTPS_NETWORK_ERROR from @ref https_client_function_sendsync or
+ * @ref https_client_function_sendasync, on a persistent request, that does not always mean the connection has been
+ * disconnected. This function MUST be called to close the connection and clean up connection resources taken by
+ * #IotHttpsConnectionHandle_t.
+ *
+ * This function will cancel all pending requests on the connection. If a request currently being sent on the connection,
+ * then this function will disconnect the connection, but it will not free network connection resource and will return
+ * with #IOT_HTTPS_BUSY. The application may call this function again later to try again.
+ *
+ * Multiple threads must not call this function for the same #IotHttpsConnectionHandle_t. Multiple threads
+ * can call this function for different #IotHttpsConnectionHandle_t. Make sure that all request/responses
+ * have finished on the connection before calling this API. Outstanding requests are completed when
+ * @ref https_client_function_sendsync has returned or when #IotHttpsClientCallbacks_t.responseCompleteCallback
+ * has been invoked for requests scheduled with @ref https_client_function_sendasync.
+ *
+ * @param[in] connHandle - Valid handle representing an open connection.
+ *
+ * @return One of the following:
+ * - #IOT_HTTPS_OK if the disconnect was successful
+ * - #IOT_HTTPS_INVALID_PARAMETER if NULL parameters were passed in.
+ * - #IOT_HTTPS_BUSY if the connection is in use and cannot be destroyed.
+ */
+/* @[declare_https_client_disconnect] */
+IotHttpsReturnCode_t IotHttpsClient_Disconnect( IotHttpsConnectionHandle_t connHandle );
+/* @[declare_https_client_disconnect] */
+
+/**
+ * @brief Initializes the request by adding a formatted Request Line to the start of HTTPS request header buffer.
+ *
+ * This function will initialize the HTTP request context by setting where to write the next headers to the start
+ * of the configured header buffer in #IotHttpsRequestInfo_t.userBuffer.
+ *
+ * The request line will be added to the start of the headers space in #IotHttpsRequestInfo_t.userBuffer.
+ * The header space follows the request context in the user buffer. See @ref requestUserBufferMinimumSize for more
+ * information on sizing the #IotHttpsRequestInfo_t.userBuffer so that this function does not fail.
+ *
+ * The request line generated is of the following format:
+ *
+ * \code
+ * method path version\r\n
+ * \endcode
+ *
+ * Example:
+ *
+ * \code
+ * GET /path/to/item.file?possible_query HTTP/1.1\r\n
+ * \endcode
+ *
+ * The initial required headers are also added to the #IotHttpsRequestInfo_t.userBuffer. These headers are User-Agent
+ * and Host. The User-Agent value is configured in iot_config.h using IOT_HTTPS_USER_AGENT. The Host value is the DNS
+ * resolvable server address.
+ *
+ * @param[out] pReqHandle - request handle representing the internal request context is returned. NULL if the function failed.
+ * @param[in] pReqInfo - HTTPS request information.
+ *
+ * @return One of the following:
+ * - #IOT_HTTPS_OK if the request line was successfully added to the header space in #IotHttpsRequestInfo_t.userBuffer.
+ * - #IOT_HTTPS_INSUFFICIENT_MEMORY if the request line generated exceeds #IotHttpsUserBuffer_t.bufferLen in #IotHttpsRequestInfo_t.userBuffer.
+ * - #IOT_HTTPS_INVALID_PARAMETER for NULL parameters.
+ * - #IOT_HTTPS_INTERNAL_ERROR for library internal errors.
+ *
+ * <b>Example</b>
+ * @code{c}
+ * // An initialized network interface.
+ * IotNetworkInterface_t* pNetworkInterface;
+ *
+ * // Parameters to HTTPS Client request initialization.
+ * IotHttpsRequestInfo_t reqInfo = IOT_HTTPS_REQUEST_INFO_INITIALIZER;
+ * IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+ * IotHttpsSyncInfo_t syncInfo = IOT_HTTPS_SYNC_INFO_INITIALIZER;
+ * // Leave some room for extra headers.
+ * uint32_t userBufferSize = requestUserBufferMinimumSize + 256;
+ * uint8_t* pRequestUserBuffer = (uint8_t*)malloc(userBufferSize);
+ *
+ * // Set the synchronous information.
+ * syncInfo.pBody = PREDEFINED_BODY_BUFFER;
+ * syncInfo.bodyLen = PREDEFINED_BODY_BUFFER_LEN;
+ *
+ * // Set the request configuration information.
+ * reqInfo.pPath = "/path_to_item?query_maybe";
+ * reqInfo.pPathLen = strlen("/path_to_item?query_maybe");
+ * reqInfo.method = IOT_HTTPS_METHOD_GET;
+ * reqInfo.pHost = "www.amazon.com";
+ * reqInfo.hostLen = strlen("www.amazon.com");
+ * reqInfo.isNonPersistent = false;
+ * reqInfo.userBuffer.pBuffer = pRequestUserBuffer;
+ * reqInfo.userBuffer.bufferLen = userBufferSize;
+ * reqInfo.isAsync = false;
+ * reqInfo.pSyncInfo = &syncInfo;
+ *
+ * IotHttpsReturnCode_t returnCode = IotHttpsClient_InitializeRequest(&reqHandle, &reqInfo);
+ * if( returnCode == IOT_HTTPS_OK )
+ * {
+ *      // Handle the error.
+ * }
+ * @endcode
+ */
+/* @[declare_https_client_initializerequest] */
+IotHttpsReturnCode_t IotHttpsClient_InitializeRequest( IotHttpsRequestHandle_t * pReqHandle,
+                                                       IotHttpsRequestInfo_t * pReqInfo );
+/* @[declare_https_client_initializerequest] */
+
+/**
+ * @brief Add a header to the current HTTPS request represented by reqHandle.
+ *
+ * The header line is appended to the request header buffer space in #IotHttpsRequestInfo_t.userBuffer.
+ * Please see #requestUserBufferMinimumSize for information about sizing the #IotHttpsRequestInfo_t.userBuffer so
+ * that this function does not fail.
+ *
+ * Header lines are appended in the following format:
+ * \code
+ * header_field_name: header_value\r\n"
+ * \endcode
+ * Example:
+ * \code
+ * Range: bytes=1024-2047\r\n
+ * \endcode
+ * The last header line must be followed by a "\r\n" to separate the last header line from
+ * the entity body. These 2 characters are accounted for in #requestUserBufferMinimumSize.
+ *
+ * The remaining length, after the header is added, is printed to the system configured standard debug output when
+ * IOT_LOG_LEVEL_HTTPS is set to IOT_LOG_DEBUG in iot_config.h.
+ *
+ * For an asynchronous request, this function can be invoked before the request is sent with
+ * @ref https_client_function_sendasync, or during #IotHttpsClientCallbacks_t.appendHeaderCallback. It is
+ * recommended to invoke this function in #IotHttpsClientCallbacks_t.appendHeaderCallback.
+ *
+ * <b> Asynchronous Example </b>
+ * @code{c}
+ * void _applicationDefined_appendHeaderCallback(void * pPrivData, IotHttpsRequestHandle_t reqHandle)
+ * {
+ *      ...
+ *      char date_in_iso8601[17] = { 0 };
+ *      GET_DATE_IN_ISO8601(date_in_iso8601);
+ *      const char amz_date_header[] = "x-amz-date";
+ *      uint32_t amz_date_header_length = strlen(amz_date_header);
+ *      IotHttpsClient_AddHeader(reqHandle, amz_date_header, amz_date_header_length, date_in_iso8601, strlen(date_in_iso8601));
+ *      ...
+ * }
+ * @endcode
+ *
+ * For a synchronous request, if extra headers are desired to be added, this function must be invoked before
+ * @ref https_client_function_sendsync.
+ * <b> Synchronous Example </b>
+ * @code{c}
+ * ...
+ * char date_in_iso8601[17] = { 0 };
+ * GET_DATE_IN_ISO8601(date_in_iso8601);
+ * const char amz_date_header[] = "x-amz-date";
+ * uint32_t amz_date_header_length = strlen(amz_date_header);
+ * IotHttpsClient_AddHeader(reqHandle, amz_date_header, amz_date_header_length, date_in_iso8601, strlen(date_in_iso8601));
+ * ...
+ * IotHttpsClient_SendSync(connHandle, reqHandle, &respHandle, &respInfo, timeout);
+ * ...
+ * @endcode
+ *
+ * The following header fields are automatically added to the request header buffer and must NOT be added again with
+ * this routine:
+ * - Connection:     - This header is added to the request when the headers are being sent on the network.
+ * - User-agent:     - This header is added during @ref https_client_function_initializerequest
+ * - Host:           - This header is added during @ref https_client_function_initializerequest
+ * - Content-Length: - This header is added to the request when the headers are being sent on the network.
+ *
+ * The reqHandle is not thread safe. If two threads have the same reqHandle and attempt to add headers at the same
+ * time, garbage strings may be written to the reqHandle.
+ *
+ * @param[in] reqHandle - HTTPS request to write the header line to.
+ * @param[in] pName - String header field name to write.
+ * @param[in] nameLen - The length of the header name to write.
+ * @param[in] pValue - https header value buffer pointer. Do not include token name.
+ * @param[in] valueLen - length of header value to write.
+ *
+ * @return One of the following:
+ * - #IOT_HTTPS_OK if the header line was successfully added to the header space in #IotHttpsRequestInfo_t.userBuffer.
+ * - #IOT_HTTPS_INSUFFICIENT_MEMORY if the header line cannot fit into the header buffer.
+ * - #IOT_HTTPS_INVALID_PARAMETER for NULL parameters or if an attempt to add automatically added headers is made.
+ */
+/* @[declare_https_client_addheader] */
+IotHttpsReturnCode_t IotHttpsClient_AddHeader( IotHttpsRequestHandle_t reqHandle,
+                                               char * pName,
+                                               uint32_t nameLen,
+                                               char * pValue,
+                                               uint32_t valueLen );
+/* @[declare_https_client_addheader] */
+
+/**
+ * @brief Writes the request body to the network for the request represented by reqHandle.
+ *
+ * This function is intended to be used by an asynchronous request. It must be called within the
+ * #IotHttpsClientCallbacks_t.writeCallback.
+ *
+ * In HTTP/1.1 the headers are sent on the network first before any body can be sent. The auto-generated header
+ * Content-Length is taken from the len parameter and sent first before the data in parameter pBuf is sent.
+ * This library does not support Transfer-Encoding: chunked or other requests where the Content-Length is unknown, so
+ * this function cannot be called more than once in #IotHttpsClientCallbacks_t.writeCallback for an HTTP/1.1 request.
+ *
+ * isComplete must always be set to 1 in this current version of the HTTPS client library.
+ *
+ * If there are network errors in sending the HTTP headers, then the #IotHttpsClientCallbacks_t.errorCallback will be
+ * invoked following a return from the #IotHttpsClientCallbacks_t.writeCallback.
+ *
+ * <b> Example Asynchronous Code </b>
+ * @code{c}
+ * void applicationDefined_writeCallback(void * pPrivData, IotHttpsRequestHandle_t reqHandle)
+ * {
+ *      ...
+ *      char * writeData[1024];
+ *      IotHttpsClient_WriteRequestBody(reqHandle, writeData, 1024, 1);
+ *      ...
+ * }
+ * @endcode
+ *
+ * @param[in] reqHandle - identifier of the connection.
+ * @param[in] pBuf - client write data buffer pointer.
+ * @param[in] len - length of data to write.
+ * @param[in] isComplete - This parameter parameter must be set to 1.
+ *
+ * @return one of the following:
+ * - #IOT_HTTPS_OK if write successfully, failure code otherwise.
+ * - #IOT_HTTPS_MESSAGE_FINISHED if this function is called a second time with the same reqHandle.
+ * - #IOT_HTTPS_NOT_SUPPORTED if isComplete is set to 0.
+ * - #IOT_HTTPS_INVALID_PARAMETER if this API is used for a synchronous request.
+ * - #IOT_HTTPS_NETWORK_ERROR if there was an error sending the headers or body on the network.
+ * - Please see #IotHttpsReturnCode_t for other failure codes.
+ */
+/* @[declare_https_client_writerequestbody] */
+IotHttpsReturnCode_t IotHttpsClient_WriteRequestBody( IotHttpsRequestHandle_t reqHandle,
+                                                      uint8_t * pBuf,
+                                                      uint32_t len,
+                                                      int isComplete );
+/* @[declare_https_client_writerequestbody] */
+
+/**
+ * @brief Synchronous send of the HTTPS request.
+ *
+ * This function blocks waiting for the entirety of sending the request and receiving the response.
+ *
+ * If #IotHttpsRequestInfo_t.isNonPersistent is set to true, then the connection will disconnect, close, and clean all
+ * taken resources automatically after receiving the first response.
+ *
+ * See @ref connectionUserBufferMinimumSize for information about the user buffer configured in
+ * #IotHttpsConnectionInfo_t.userBuffer needed to create a valid connection handle.
+ *
+ * To retrieve the response body applications must directly refer #IotHttpsSyncInfo_t.pBody configured in #IotHttpsRequestInfo_t.u.
+ *
+ * If the response body does not fit in the configured #IotHttpsSyncInfo_t.pBody, then this function will return with error
+ * #IOT_HTTPS_MESSAGE_TOO_LARGE. To avoid this issue, the application needs to determine beforehand how large the file
+ * to download is. This can be done with a HEAD request first, then extracting the "Content-Length" with
+ * @ref https_client_function_readcontentlength. This could also be done with a GET request with the header
+ * "Range: bytes=0-0", then extracing the "Content-Range" with @ref https_client_function_readheader. Keep in mind that
+ * not all HTTP servers support Partial Content responses.
+ *
+ * Once a the file size is known, the application can initialize the request with a large
+ * enough buffer or the application can make a partial content request with the header
+ * "Range: bytes=N-M", where N is the starting byte requested and M is the ending byte requested.
+ *
+ * The response headers as received from the network will be stored in the header buffer space in
+ * #IotHttpsResponseInfo_t.userBuffer. If the configured #IotHttpsResponseInfo_t.userBuffer is too small
+ * to fit the headers received, then headers that don't fit will be thrown away. Please see
+ * #responseUserBufferMinimumSize for information about sizing the #IotHttpsResponseInfo_t.userBuffer.
+ * To receive feedback on headers discarded, debug logging must be turned on in iot_config.h by setting
+ * @ref IOT_LOG_LEVEL_HTTPS to IOT_LOG_DEBUG.
+ *
+ * Multiple threads must not call this function for the same #IotHttpsRequestHandle_t. Multiple threads can call this
+ * function for a different #IotHttpsRequestHandle_t, even on the same #IotHttpsConnectionHandle_t. An application must
+ * wait util a request is fully sent, before scheduling it again. A request is fully sent when this function has returned.
+ *
+ * @param[in] connHandle - Handle from an HTTPS connection created with @ref https_client_function_connect.
+ * @param[in] reqHandle - Handle from a request created with @ref https_client_function_initializerequest.
+ * @param[out] pRespHandle - HTTPS response handle resulting from a successful send and receive.
+ * @param[in] pRespInfo - HTTP response configuration information.
+ * @param[in] timeoutMs - Timeout waiting for the sync request to finish. Set this to 0 to wait forever.
+ *
+ * @return One of the following:
+ * - #IOT_HTTPS_OK if the request was sent and the response was received successfully.
+ * - #IOT_HTTPS_MESSAGE_TOO_LARGE if the response cannot fit in the configured struct IotHttpsRequestHandle.userBuffer.pBuffer and struct IotHttpsRequestHandle.u.pSyncInfo.pRespData.
+ * - #IOT_HTTPS_CONNECTION_ERROR if the connection failed.
+ * - #IOT_HTTPS_INVALID_PARAMETER if there are NULL parameters or the request is asynchronous.
+ * - #IOT_HTTPS_NETWORK_ERROR if there was an error sending the data on the network.
+ * - #IOT_HTTPS_PARSING_ERROR if there was an error parsing the HTTP response.
+ * - #IOT_HTTPS_TIMEOUT_ERROR if the timeoutMs is reached when waiting for a response to the request.
+ */
+/* @[declare_https_client_sendsync] */
+IotHttpsReturnCode_t IotHttpsClient_SendSync( IotHttpsConnectionHandle_t connHandle,
+                                              IotHttpsRequestHandle_t reqHandle,
+                                              IotHttpsResponseHandle_t * pRespHandle,
+                                              IotHttpsResponseInfo_t * pRespInfo,
+                                              uint32_t timeoutMs );
+/* @[declare_https_client_sendsync] */
+
+/**
+ * @brief Asynchronous send of the the HTTPS request.
+ *
+ * This function will invoke, as needed, each of the non-NULL callbacks configured in #IotHttpsAsyncInfo_t.callbacks
+ * when the scheduled asynchronous request is progress. Please see #IotHttpsClientCallbacks_t for information on each of
+ * the callbacks.
+ *
+ * After this API is executed, the scheduled async response will store the response headers as received from
+ * the network, in the header buffer space configured in #IotHttpsResponseInfo_t.userBuffer. If the
+ * configured #IotHttpsResponseInfo_t.userBuffer is too small to fit the headers received, then headers that don't
+ * fit will be thrown away. Please see #responseUserBufferMinimumSize for information about sizing the
+ * #IotHttpsResponseInfo_t.userBuffer.
+ *
+ * If #IotHttpsRequestInfo_t.isNonPersistent is set to true, then the connection will disconnect, close, and clean all
+ * taken resources automatically after receiving the first response.
+ *
+ * See @ref connectionUserBufferMinimumSize for information about the user buffer configured in
+ * #IotHttpsConnectionInfo_t.userBuffer needed to create a valid connection handle.
+ *
+ * A #IotHttpsRequestHandle_t cannot be schedule again or reused until the request has finished sending. The request
+ * has safely finished sending once #IotHttpsClientCallbacks_t.readReadyCallback is invoked. After the
+ * #IotHttpsClientCallbacks_t.readReadyCallback is invoked the #IotHttpsRequestInfo_t.userBuffer can freed,
+ * modified, or reused.
+ *
+ * @param[in] connHandle - Handle from an HTTPS connection.
+ * @param[in] reqHandle - Handle from a request created with IotHttpsClient_initialize_request.
+ * @param[out] pRespHandle - HTTPS response handle.
+ * @param[in] pRespInfo - HTTP response configuration information.
+ *
+ * @return One of the following:
+ * - #IOT_HTTPS_OK if the request was sent and the response was received successfully.
+ * - #IOT_HTTPS_MESSAGE_TOO_LARGE if the response cannot fit in the configured
+ *      IotHttpsRequestHandle_t.response_message.headers and IotHttpsRequestHandle_t.response_message.body.
+ * - #IOT_HTTPS_CONNECTION_ERROR if the connection failed.
+ * - #IOT_HTTPS_FATAL if there was a grave error with the last async job finishing.
+ * - #IOT_HTTPS_ASYNC_SCHEDULING_ERROR if there was an error scheduling the asynchronous request.
+ * - #IOT_HTTPS_INTERNAL_ERROR if there was an internal error with starting an asyncrhonous request servicing task.
+ * - #IOT_HTTPS_INVALID_PARAMETER if there were NULL parameters or the request passed in was a synchronous type.
+ *
+ */
+/* @[declare_https_client_sendasync] */
+IotHttpsReturnCode_t IotHttpsClient_SendAsync( IotHttpsConnectionHandle_t connHandle,
+                                               IotHttpsRequestHandle_t reqHandle,
+                                               IotHttpsResponseHandle_t * pRespHandle,
+                                               IotHttpsResponseInfo_t * pRespInfo );
+/* @[declare_https_client_sendasync] */
+
+/**
+ * @brief Cancel an Asynchronous request.
+ *
+ * This will stop an asynchronous request. When an asynchronous request is stopped it will not proceed to do any of
+ * the following: send headers, send body, receive headers, or receive body. This depends on where in the process
+ * the request is. For example, if the request is cancelled after sending the headers, then it will not attempt tp
+ * send the body. A cancelled return code will be returned to the application.
+ *
+ * If this is called before the scheduled asynchronous request actually runs, then request will not be sent.
+ * If this is called during any of the asynchronous callbacks, then the library will stop processing the request when
+ * the callback returns. This is useful for any error conditions, found during the asynchronous callbacks, where the
+ * application wants to stop the rest of the request processing.
+ *
+ * If the asynchronous request stops processing, the buffers in #IotHttpsRequestInfo_t.userBuffer can be safely freed,
+ * modified, or resused, only once #IotHttpsClientCallbacks_t.readReadyCallback is invoked.
+ *
+ * <b> Example Asynchronous Code </b>
+ * @code{c}
+ * void _applicationDefined_appendHeaderCallback(void * pPrivData, IotHttpsRequestHandle_t reqHandle)
+ * {
+ *      char token[MAX_TOKEN_LENGTH] = { 0 }
+ *      int len = MAX_TOKEN_LENGTH;
+ *      int status = gen_auth_token(token, &len);
+ *      if( status == GEN_TOKEN_FAIL)
+ *      {
+ *          IotHttpsClient_CancelRequestAsync(reqHandle);
+ *      }
+ *      ...
+ * }
+ *
+ * void _applicationDefined_writeCallback(void * pPrivData, IotHttpsRequestHandle_t reqHandle)
+ * {
+ *      if( application_data_get(writeBuffer, writeBufferLen) == GEN_TOKEN_FAIL)
+ *      {
+ *          IotHttpsClient_CancelRequestAsync(reqHandle);
+ *      }
+ *      ...
+ * }
+ * @endcode
+ *
+ * @param[in] reqHandle - Request handle associated with the request.
+ *
+ * @return One of the following:
+ * - IOT_HTTPS_OK if the request was successfully cancelled.
+ */
+/* @[declare_https_client_cancelrequestasync] */
+IotHttpsReturnCode_t IotHttpsClient_CancelRequestAsync( IotHttpsRequestHandle_t reqHandle );
+/* @[declare_https_client_cancelrequestasync] */
+
+/**
+ * @brief Cancel an Asynchronous response.
+ *
+ * This will stop an asynchronous response. When an asynchronous response is stopped it will not proceed to do any of
+ * the following: send headers, send body, receive headers, or receive body. This depends on where in the process
+ * the response is. For example, if the response is cancelled after receiving the headers, then it will not attempt tp
+ * receive the body. A cancelled return code will be returned to the application.
+ *
+ * If this is called during ANY of the asynchronous callbacks, then the library will stop processing the response when
+ * the callback returns. This is useful for any error conditions, found during the asynchronous callbacks, where the
+ * application wants to stop the rest of the response processing.
+ *
+ * If the asynchronous response stops processing, the buffers configured in #IotHttpsResponseInfo_t.userBuffer can
+ * be freed, modified, or reused only after the #IotHttpsClientCallbacks_t.responseCompleteCallback in invoked.
+ *
+ * <b> Example Asynchronous Code </b>
+ * @code{c}
+ *
+ * void applicationDefined_readReadyCallback(void * pPrivData, IotHttpsResponseHandle_t respHandle, IotHttpsReturnCode_t rc, uint16_t status)
+ * {
+ *      ...
+ *      if (status != IOT_HTTPS_STATUS_OK)
+ *      {
+ *          IotHttpsClient_CancelResponseAsync(NULL, respHandle);
+ *      }
+ *      ...
+ * }
+ * @endcode
+ *
+ * @param[in] respHandle - Response handle associated with the response.
+ *
+ * @return One of the following:
+ * - #IOT_HTTPS_OK if the response was successfully cancelled.
+ */
+/* @[declare_https_client_cancelresponseasync] */
+IotHttpsReturnCode_t IotHttpsClient_CancelResponseAsync( IotHttpsResponseHandle_t respHandle );
+/* @[declare_https_client_cancelresponseasync] */
+
+/**
+ * @brief Retrieve the HTTPS response status.
+ *
+ * The HTTP response status code is contained in the status line of the response header buffer configured in
+ * #IotHttpsResponseInfo_t.userBuffer. It is the first line of a standard HTTP response message. If the response
+ * status line could not fit into #IotHttpsResponseInfo_t.userBuffer, then this function will return an error code.
+ * Please see #responseUserBufferMinimumSize for information about sizing the #IotHttpsResponseInfo_t.userBuffer.
+ *
+ * This routine can be used for both a synchronous and asynchronous response.
+ *
+ * <b> Example Synchronous Code </b>
+ * @code{c}
+ *      ...
+ *      IotHttpsClient_SendSync(connHandle, reqHandle, &respHandle, &respInfo, timeout);
+ *      uint16_t status = 0;
+ *      IotHttpsClient_ReadResponseStatus(respHandle, &status);
+ *      if (status != IOT_HTTPS_STATUS_OK)
+ *      {
+ *          // Handle server response status.
+ *      }
+ *      ...
+ * @endcode
+ *
+ * For an asynchronous response the response status is the status parameter in
+ * #IotHttpsClientCallbacks_t.readReadyCallback and #IotHttpsClientCallbacks_t.responseCompleteCallback. The application
+ * should refer to that instead of using this function.
+ * <b> Example Asynchronous Code </b>
+ * @code
+ * void applicationDefined_readReadyCallback(void * pPrivData, IotHttpsResponseHandle_t respHandle, IotHttpsReturnCode_t rc, uint16_t status)
+ * {
+ *      ...
+ *      if (status != IOT_HTTPS_STATUS_OK)
+ *      {
+ *          // Handle error server response status.
+ *      }
+ *      ...
+ * }
+ * @endcode
+ *
+ * @param[in] respHandle - Unique handle representing the HTTPS response.
+ * @param[out] pStatus - Integer status returned by the server.
+ *
+ * @return One of the following:
+ * - #IOT_HTTPS_OK if the response status was successfully read into *status.
+ * - #IOT_HTTPS_INVALID_PARAMETER for NULL parameters.
+ * - #IOT_HTTPS_NOT_FOUND if the HTTP response status was not found in the header buffer.
+ */
+/* @[declare_https_client_readresponsestatus] */
+IotHttpsReturnCode_t IotHttpsClient_ReadResponseStatus( IotHttpsResponseHandle_t respHandle,
+                                                        uint16_t * pStatus );
+/* @[declare_https_client_readresponsestatus] */
+
+/**
+ * @brief Retrieve the HTTPS response content length.
+ *
+ * If the "Content-Length" header is available in #IotHttpsResponseInfo_t.userBuffer, this routine extracts that
+ * value. In some cases the "Content-Length" header is not available. This could be because the server sent a multi-part
+ * encoded response (For example, "Transfer-Encoding: chunked") or the "Content-Length" header was far down in the list
+ * of response headers and could not fit into the header buffer configured in #IotHttpsResponseInfo_t.userBuffer.
+ * Please see #responseUserBufferMinimumSize for information about sizing the #IotHttpsResponseInfo_t.userBuffer.
+ *
+ * In the asynchronous request process, the Content-Length is not available until the
+ * #IotHttpsClientCallbacks_t.readReadyCallback. Before the #IotHttpsClientCallbacks_t.readReadyCallback is invoked, the
+ * headers are read into as much as can fit in in the header buffer space of #IotHttpsResponseInfo_t.userBuffer.
+ * <b> Example Asynchronous Code </b>
+ * @code{c}
+ * void applicationDefined_readReadyCallback(void * pPrivData, IotHttpsResponseHandle_t respHandle, IotHttpsReturnCode_t rc, uint16_t status)
+ * {
+ *      uint8_t * readBuffer = NULL;
+ *      uint32_t contentLength = 0;
+ *      IotHttpsClient_ReadContentLength(respHandle, &contentLength);
+ *      readBuffer = (uint8_t*)malloc(contentLength);
+ *      ...
+ * }
+ * @endcode
+ *
+ * In a synchronous request process, the Content-Length is available after @ref https_client_function_sendsync has
+ * returned successfully.
+ * <b> Example Synchronous Code </b>
+ * @code{c}
+ *      ...
+ *      IotHttpsClient_SendSync(connHandle, reqHandle, &respHandle, &respInfo, timeout);
+ *      uint32_t contentLength = 0;
+ *      IotHttpsClient_ReadContentLength(respHandle, &contentLength);
+ *      printf("Content-Length: %u", (unsigned int)contentLength);
+ *      ...
+ * @endcode
+ *
+ * @param[in] respHandle - Unique handle representing the HTTPS response.
+ * @param[out] pContentLength - Integer content length from the Content-Length header from the server. If the content
+ *      length is not found this will be 0.
+ *
+ * @return One of the following:
+ * - #IOT_HTTPS_OK if the response body Content-Length was successfully read into contentLength.
+ * - #IOT_HTTPS_NOT_FOUND if the Content-Length header was not found in the header buffer.
+ * - #IOT_HTTPS_INVALID_PARAMETER if NULL parameters are passed in.
+ */
+/* @[declare_https_client_readcontentlength] */
+IotHttpsReturnCode_t IotHttpsClient_ReadContentLength( IotHttpsResponseHandle_t respHandle,
+                                                       uint32_t * pContentLength );
+/* @[declare_https_client_readcontentlength] */
+
+/**
+ * @brief Retrieve the header of interest from the response represented by respHandle.
+ *
+ * The response headers as received from the network will be stored in the header buffer space in
+ * #IotHttpsResponseInfo_t.userBuffer. If the configured #IotHttpsResponseInfo_t.userBuffer is too small to fit
+ * the headers received, then headers that don't fit will be thrown away. Please see #responseUserBufferMinimumSize for
+ * information about sizing the #IotHttpsResponseInfo_t.userBuffer.
+ *
+ * This routine parses the formatted HTTPS header lines in the header buffer for the header field name specified. If the
+ * header is not available, then #IOT_HTTPS_NOT_FOUND is returned.
+ *
+ * For an asynchronous response, this routine is to be called during the #IotHttpsClientCallbacks_t.readReadyCallback.
+ * Before the #IotHttpsClientCallbacks_t.readReadyCallback is invoked, the
+ * headers are read into as much as can fit in in the header buffer space of #IotHttpsResponseInfo_t.userBuffer.
+ * <b> Example Asynchronous Code </b>
+ * @code{c}
+ * void applicationDefined_readReadyCallback(void * pPrivData, IotHttpsResponseHandle_t respHandle, IotHttpsReturnCode_t rc, uint16_t status)
+ * {
+ *      ...
+ *      char valueBuf[64];
+ *      const char contentTypeName[] = "Content-Type";
+ *      uint32_t contentTypeNmeLength = strlen(contentTypeName);
+ *      IotHttpsClient_ReadHeader(respHandle, contentTypeName, contentTypeNameLength, valueBuf, sizeof(valueBuf));
+ *      ...
+ * }
+ * @endcode
+ *
+ * For a syncrhonous response, this routine is to be called after @ref https_client_function_sendsync has
+ * returned successfully.
+ * <b> Example Synchronous Code </b>
+ * @code{c}
+ *      ...
+ *      IotHttpsClient_SendSync(&connHandle, reqHandle, &respHandle, &respInfo, timeout);
+ *      char valueBuf[10];
+ *      const char contentTypeName[] = "Content-Type";
+ *      uint32_t contentTypeNmeLength = strlen(contentTypeName);
+ *      IotHttpsClient_ReadHeader(respHandle, contentTypeName, contentTypeNmeLength, valueBuf, sizeof(valueBuf));
+ *      uint32_t length = strtoul(valueBuf, NULL, 10);
+ *      ...
+ * @endcode
+ *
+ * @param[in] respHandle - Unique handle representing the HTTPS response.
+ * @param[in] pName - HTTPS Header field name we want the value of. This must be NULL terminated.
+ * @param[in] nameLen - The length of the name string.
+ * @param[out] pValue - Buffer to hold the HTTPS field's value. The returned value will be NULL terminated
+ *                      and therfore the buffer must be large enough to hold the terminating NULL character.
+ * @param[in] valueLen - The length of the value buffer.
+ *
+ * @return One of the following:
+ * - #IOT_HTTPS_OK if the header's corresponding value was read into *pValue.
+ * - #IOT_HTTPS_NOT_FOUND if the header value was not found.
+ * - #IOT_HTTPS_INVALID_PARAMETER if the respHandle is not valid, there is no response saved or the handle does not exist.
+ * - #IOT_HTTPS_INSUFFICIENT_MEMORY if the value is too large to fit into *pValue.
+ */
+/* @[declare_https_client_readheader] */
+IotHttpsReturnCode_t IotHttpsClient_ReadHeader( IotHttpsResponseHandle_t respHandle,
+                                                char * pName,
+                                                uint32_t nameLen,
+                                                char * pValue,
+                                                uint32_t valueLen );
+/* @[declare_https_client_readheader] */
+
+/**
+ * @brief Read the HTTPS response body from the network.
+ *
+ * This is intended to be used with an asynchronous response, this is to be invoked during the
+ * #IotHttpsClientCallbacks_t.readReadyCallback to read data directly from the network into pBuf.
+ * <b> Example Asynchronous Code </b>
+ * @code{c}
+ * void applicationDefined_readReadyCallback(void * pPrivData, IotHttpsRequestHandle_t handle, IotHttpsReturnCode_t rc, uint16_t status)
+ * {
+ *      ...
+ *      char * myBuf = STORE_ADDRESS;
+ *      uint32_t len = STORE_READ_SIZE;
+ *      IotHttpsClient_ReadResponseBody(handle, myBuf, &len);
+ *      ...
+ * }
+ * @endcode
+ *
+ * For a syncrhonous response, to retrieve the response body applications must directly refer to the memory configured
+ * to receive the response body: #IotHttpsSyncInfo_t.pBody in #IotHttpsResponseInfo_t.pSyncInfo. Otherwise this function
+ * will return an #IOT_HTTPS_INVALID_PARAMETER error code. This function is intended to read the response entity body
+ * from the network and the synchronous response process handles all of that in @ref https_client_function_sendsync.
+ *
+ * @param[in] respHandle - Unique handle representing the HTTPS response.
+ * @param[out] pBuf - Pointer to the response body memory location. This is not a char* because the body may have binary data.
+ * @param[in,out] pLen - The length of the response to read. This should not exceed the size of the buffer that we are reading into. This will be replace with the amount of data read upon return.
+ *
+ * @return One of the following:
+ * - #IOT_HTTPS_OK if the response body was successfully retrieved.
+ * - #IOT_HTTPS_INVALID_PARAMETER if there are NULL parameters or if the response is a synchronous type.
+ * - #IOT_HTTPS_NETWORK_ERROR if there was an error sending the data on the network.
+ * - #IOT_HTTPS_PARSING_ERROR if there was an error parsing the HTTP response.
+ */
+/* @[declare_https_client_readresponsebody] */
+IotHttpsReturnCode_t IotHttpsClient_ReadResponseBody( IotHttpsResponseHandle_t respHandle,
+                                                      uint8_t * pBuf,
+                                                      uint32_t * pLen );
+/* @[declare_https_client_readresponsebody] */
+
+#endif /* IOT_HTTPS_CLIENT_ */
diff --git a/libraries/c_sdk/standard/https/include/iot_https_utils.h b/libraries/c_sdk/standard/https/include/iot_https_utils.h
new file mode 100644
index 000000000..d7b8df84b
--- /dev/null
+++ b/libraries/c_sdk/standard/https/include/iot_https_utils.h
@@ -0,0 +1,95 @@
+/*
+ * Amazon FreeRTOS HTTPS Client V1.0.0
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+/**
+ * @file iot_https_utils.h
+ * @brief User facing HTTPS Client library utilities.
+ */
+
+#ifndef IOT_HTTPS_UTILS_H_
+#define IOT_HTTPS_UTILS_H_
+
+#include "types/iot_https_types.h"
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Retrieve the path from the input URL.
+ *
+ * This function retrieves the location and length of the path from within the
+ * input the URL. The query is not included in the length returned.
+ *
+ * The URL MUST start with "http://" or "https://" to find the path.
+ *
+ * For example, if the URL is:
+ * pUrl = "https://www.somewebsite.com/path/to/item.txt?optionalquery=stuff"
+ *
+ * *pPath = "/path/to/item.txt?optionalquery=stuff"
+ * *pPathLen = 17
+ *
+ * @param[in] pUrl - URL string to parse.
+ * @param[in] urlLen - The length of the URL string input.
+ * @param[out] pPath - pointer within input url that the path starts at.
+ * @param[out] pPathLen - Length of the path.
+ *
+ * - #IOT_HTTPS_OK if the path was successfully parsed.
+ * - #IOT_HTTPS_PARSING_ERROR if there was an error parsing the URL.
+ * - #IOT_HTTPS_NOT_FOUND if the path was not found.
+ */
+IotHttpsReturnCode_t IotHttpsClient_GetUrlPath( const char * pUrl,
+                                                size_t urlLen,
+                                                const char ** pPath,
+                                                size_t * pPathLen );
+
+/**
+ * @brief Retrieve the Address from the input URL.
+ *
+ * This function retrieves the location and length of the address from within
+ * the input URL. The path and query are not included in the length returned.
+ *
+ * The URL MUST start with "http://" or "https://" to find the address.
+ *
+ * For example, if the URL is:
+ * pUrl = "https://www.somewebsite.com/path/to/item.txt?optionalquery=stuff"
+ *
+ * *pAddress = "www.somewebsite.com/path/to/item.txt?optionalquery=stuff"
+ * *pAddressLen = 19
+ *
+ * @param[in] pUrl - URL string to parse.
+ * @param[in] urlLen - The length of the URL string input.
+ * @param[out] pAddress - pointer within input url that the address starts at.
+ * @param[out] pAddressLen - Length of the address.
+ *
+ * @return One of the following:
+ * - #IOT_HTTPS_OK if the path was successfully parsed.
+ * - #IOT_HTTPS_PARSING_ERROR if there was an error parsing the URL.
+ * - #IOT_HTTPS_NOT_FOUND if the address was not found.
+ */
+IotHttpsReturnCode_t IotHttpsClient_GetUrlAddress( const char * pUrl,
+                                                   size_t urlLen,
+                                                   const char ** pAddress,
+                                                   size_t * pAddressLen );
+
+#endif /* IOT_HTTPS_UTILS_H_ */
diff --git a/libraries/c_sdk/standard/https/include/types/iot_https_types.h b/libraries/c_sdk/standard/https/include/types/iot_https_types.h
new file mode 100644
index 000000000..04b9d3005
--- /dev/null
+++ b/libraries/c_sdk/standard/https/include/types/iot_https_types.h
@@ -0,0 +1,887 @@
+/*
+ * Amazon FreeRTOS HTTPS Client V1.0.0
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+/**
+ * @file iot_https_types.h
+ * @brief Types of the HTTPS Client library.
+ */
+
+#ifndef IOT_HTTPS_TYPES_H_
+#define IOT_HTTPS_TYPES_H_
+
+/* The config header is always included first. */
+#include "iot_config.h"
+
+/* C standard includes. */
+#include <stdint.h>
+#include <stddef.h>
+#include <stdbool.h>
+
+/*------------------------- HTTPS defined constants --------------------------*/
+
+/**
+ * @constants_page{https_client}
+ * @constants_brief{HTTPS Client library}
+ *
+ * @section https_minimum_user_buffer_sizes HTTPS Client Minimum User Buffer Sizes
+ * @brief Variables calculating the size of #IotHttpsUserBuffer_t.bufferLen needed for the request, response, and
+ * connection.
+ *
+ * @note These user buffer minumum values may change at any time in future versions, but their names will remain the
+ * same.
+ * - @ref requestUserBufferMinimumSize <br>
+ *   @copybrief requestUserBufferMinimumSize
+ * - @ref responseUserBufferMinimumSize <br>
+ *   @copybrief responseUserBufferMinimumSize
+ * - @ref connectionUserBufferMinimumSize <br>
+ *   @copybrief connectionUserBufferMinimumSize
+ *
+ * @section https_connection_flags HTTPS Client Connection Flags
+ * @brief Flags that modify the behavior of the HTTPS Connection.
+ *
+ * Flags should be bitwised-ORed with each other to change the behavior of @ref https_client_function_sendasync and
+ * @ref https_client_function_sendsync. These flags are set in #IotHttpsConnectionInfo_t.flags.
+ *
+ * @note The values of flags may change at any time in future versions, but their names will remain the same.
+ *
+ * @section https_initializers HTTP Initializers
+ * @brief Provide default values for the data types of the HTTP Client Library.
+ *
+ * @snippet this define_https_initializers
+ *
+ * All user-facing data types of the HTTPS Client library should be initialized using one of the following.
+ *
+ * @warning Failing to initialize an HTTPS Client data type with the appropriate initializer may result in undefined
+ * behavior.
+ * @note The initializers may change at any time in future versions, but their names will remain the same.
+ *
+ * <b>Example</b>
+ * @code{c}
+ * IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+ * IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+ * IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+ * IotHttpsUserBuffer_t userBuffer = IOT_HTTPS_USER_BUFFER_INITIALIZER;
+ * IotHttpsSyncInfo_t syncInfoReq = IOT_HTTPS_SYNC_INFO_INITIALIZER;
+ * IotHttpsSyncInfo_t syncInfoResp = IOT_HTTPS_SYNC_INFO_INITIALIZER;
+ * IotHttpsConnectionInfo_t connInfo = IOT_HTTPS_CONNECTION_INFO_INITIALIZER;
+ * IotHttpsRequestInfo_t reqInfo = IOT_HTTPS_REQUEST_INFO_INITIALIZER
+ * IotHttpsResponseInfo_t respInfo = IOT_HTTPS_RESPONSE_INFO_INITIALIZER
+ * @endcode
+ *
+ * @section http_constants_connection_flags HTTPS Client Connection Flags
+ * @brief Flags that modify the behavior the HTTPS connection.
+ * - #IOT_HTTPS_IS_NON_TLS_FLAG <br>
+ *   @copybrief IOT_HTTPS_IS_NON_TLS_FLAG
+ * - #IOT_HTTPS_DISABLE_SNI <br>
+ *   @copybrief IOT_HTTPS_DISABLE_SNI
+ */
+
+/**
+ * @brief The minimum user buffer size for the HTTP request context and headers.
+ *
+ * This helps to calculate the size of the buffer needed for #IotHttpsRequestInfo_t.userBuffer.
+ *
+ * This buffer size is calculated to fit the HTTP request line and the default headers. It does not account for the
+ * length of the path in the request line nor does it account for the length of the host name. It also does not account
+ * for extra headers that the application may add. These sizes need to be accounted for by the application when
+ * assigning a buffer.
+ *
+ * A typical value for sizing the request user buffer for the request context is 512 bytes. See the example below.
+ * @code{c}
+ * uint8_t requestUserBuffer[512] = { 0 };
+ * IotHttpsRequestInfo_t requestInfo = IOT_HTTPS_REQUEST_INFO_INITIALIZER;
+ * requestInfo.userBuffer.pBuffer = requestUserBuffer;
+ * @endcode
+ *
+ * By the application providing the memory for the internal context, no memory is needed to be allocated internally to
+ * the library for the internal context. The application has control over the memory allocation related to the request,
+ * response, and connection.
+ */
+extern const uint32_t requestUserBufferMinimumSize;
+
+/**
+ * @brief The minimum user buffer size for the HTTP response context and headers.
+ *
+ * This helps to calculate the size of the buffer needed for #IotHttpsResponseInfo_t.userBuffer.
+ *
+ * The buffer size is calculated to fit the HTTP response context only. It does not account for the HTTP response status
+ * line. It does not account for any HTTP response headers. If the buffer assigned to
+ * #IotHttpsResponseInfo_t.userBuffer is of this minimum size, then the response status line and the response headers
+ * will not be stored. These sizes need to be accounted for by the application when assigning a buffer.
+ *
+ * If the response status line and response headers cannot fit into #IotHttpsResponseInfo_t.userBuffer, then after a
+ * call to @ref https_client_function_sendsync, calls to @ref https_client_function_readresponsestatus,
+ * @ref https_client_function_readcontentlength, and @ref https_client_function_readheader will return a failure code.
+ *
+ * A typical value for sizing the response user buffer for the response context is 512 bytes. See the example below.
+ * @code{c}
+ * uint8_t responseUserBuffer[512] = { 0 };
+ * IotHttpsResponseInfo_t responseInfo = IOT_HTTPS_RESPONSE_INFO_INITIALIZER;
+ * responseInfo.userBuffer.pBuffer = responseUserBuffer;
+ * @endcode
+ *
+ * By the application providing the memory for the internal context, no memory is needed to be allocated internally to
+ * the library for the internal context. The application has control over the memory allocation related to the request,
+ * response, and connection.
+ */
+extern const uint32_t responseUserBufferMinimumSize;
+
+/**
+ * @brief The minimum user buffer size for the HTTP connection conext and headers.
+ *
+ * This helps to calculate the size of the buffer needed for #IotHttpsConnectionInfo_t.userBuffer.
+ *
+ * The buffer size is calculated to fit the HTTP connection context only. The buffer assigned by the application must be
+ * at least this size.
+ *
+ * A typical value for sizing the request user buffer for the connection context is 512 bytes. See the example below.
+ * @code{c}
+ * uint8_t connectionUserBuffer[512] = { 0 };
+ * IotHttpsConnectionInfo_t connectionInfo = IOT_HTTPS_CONNECTION_INFO_INITIALIZER;
+ * connectionInfo.userBuffer.pBuffer = connectionUserBuffer;
+ * @endcode
+ *
+ * By the application providing the memory for the internal context, no memory is needed to be allocated internally to
+ * the library for the internal context. The application has control over the memory allocation related to the request,
+ * response, and connection.
+ */
+extern const uint32_t connectionUserBufferMinimumSize;
+
+/**
+ * @brief Flag for #IotHttpsConnectionInfo_t that disables TLS.
+ *
+ * Set this bit in #IotHttpsConnectionInfo_t.flags to disable use of TLS when the connection is created. This library
+ * creates secure connections by default.
+ */
+#define IOT_HTTPS_IS_NON_TLS_FLAG    ( 0x00000001 )
+
+/**
+ * @brief Flag for #IotHttpsConnectionInfo_t that disables Server Name Indication (SNI).
+ *
+ * Set this bit  #IotHttpsConnectionInfo_t.flags to disable SNI. SNI is enabled by default in this library. When SNI is
+ * enabled  #IotHttpsConnectionInfo_t.pAddress will be used for the server name verification.
+ */
+#define IOT_HTTPS_DISABLE_SNI        ( 0x00000008 )
+
+/* @[define_https_initializers] */
+/** @brief Initializer for #IotHttpsConnectionHandle_t. */
+#define IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER    NULL
+/** @brief Initializer for #IotHttpsRequestHandle_t. */
+#define IOT_HTTPS_REQUEST_HANDLE_INITIALIZER       NULL
+/** @brief Initializer for #IotHttpsResponseHandle_t. */
+#define IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER      NULL
+/** @brief Initializer for #IotHttpsUserBuffer_t. */
+#define IOT_HTTPS_USER_BUFFER_INITIALIZER          { 0 }
+/** @brief Initializer for #IotHttpsSyncInfo_t. */
+#define IOT_HTTPS_SYNC_INFO_INITIALIZER            { 0 }
+/** @brief Initializer for #IotHttpsAsyncInfo_t. */
+#define IOT_HTTPS_ASYNC_INFO_INITIALIZER           { 0 }
+/** @brief Initializer for #IotHttpsConnectionInfo_t. */
+#define IOT_HTTPS_CONNECTION_INFO_INITIALIZER      { 0 }
+/** @brief Initializer for #IotHttpsRequestInfo_t. */
+#define IOT_HTTPS_REQUEST_INFO_INITIALIZER         { 0 }
+/** @brief Initializer for #IotHttpsResponseInfo_t. */
+#define IOT_HTTPS_RESPONSE_INFO_INITIALIZER        { 0 }
+/* @[define_https_initializers] */
+
+/* Network include for the network types below. */
+#include "platform/iot_network.h"
+
+/**
+ * @brief Type for the network interface containing the operations to send, receive, connect, and disconnect from
+ * the network.
+ */
+#define IOT_HTTPS_NETWORK_INTERFACE_TYPE    const IotNetworkInterface_t *
+
+/*---------------------------- HTTPS handle types ----------------------------*/
+
+/**
+ * @handles_group{https_client}
+ * @handles_brief{HTTPS Client library}
+ */
+
+/**
+ * @ingroup https_client_datatypes_handles
+ * @brief Opaque handle of an HTTP connection.
+ *
+ * A connection handle is needed to send many requests over a single persistent connection. This handle is valid after
+ * a successful call to @ref https_client_function_connect or @ref https_client_function_sendsync or
+ * @ref https_client_function_sendasync. A variable of this type is passed to @ref https_client_function_sendsync,
+ * @ref https_client_function_sendasync, and @ref https_client_function_disconnect to identify which connection that
+ * function acts on.
+ *
+ * A call to @ref https_client_function_disconnect makes a connection handle invalid. Once @ref https_client_function_disconnect
+ * returns, the connection handle should no longer be used. The application must call @ref https_client_function_connect
+ * again to retrieve a new handle and a new connection.
+ *
+ * Typical webservers disconnect the client in around 30-60 seconds. The application needs to be aware of this, when
+ * taking time between requests in a persistent connection.
+ *
+ * A connection handle is not thread safe. Multiple threads cannot connect and disconnect with the same handle at the
+ * same time.
+ *
+ * Multiple threads can call @ref https_client_function_sendasync or @ref https_client_function_sendsync with the same
+ * connection handle.
+ */
+typedef struct _httpsConnection   * IotHttpsConnectionHandle_t;
+
+/**
+ * @ingroup https_client_datatypes_handles
+ * @brief Opaque handle of an HTTP request.
+ *
+ * Having a separate handle for the HTTP request allows the application to re-use a request.
+ *
+ * This handle is valid after a successful call to @ref https_client_function_initializerequest. A variable of this type
+ * is passed to @ref https_client_function_sendasync or @ref https_client_function_sendsync.
+ *
+ * A request handle cannot be sent on multiple connections at the same time.
+ *
+ * A request handle is not thread safe. Multiple threads cannot write headers to the same request handle.
+ */
+typedef struct _httpsRequest      * IotHttpsRequestHandle_t;
+
+/**
+ * @ingroup https_client_datatypes_handles
+ * @brief Opaque handle of an HTTP response.
+ *
+ * This handle is valid after a successful call to @ref https_client_function_sendsync or
+ * @ref https_client_function_sendasync. A variable of this type is passed to
+ * @ref https_client_function_readresponsestatus, @ref https_client_function_readcontentlength,
+ * @ref https_client_function_readheader, and @ref https_client_function_readresponsebody.
+ *
+ * When returned from @ref https_client_function_sendsync or @ref https_client_function_sendasync, there is an
+ * associated #IotHttpsRequestHandle_t. If the #IotHttpsRequestHandle_t associated with this response is re-initialized
+ * with @ref https_client_function_initializerequest, then this response handle is no longer valid.
+ *
+ * A response handle is not thread safe. Multiple threads cannot read the headers in a response at the same time.
+ */
+typedef struct _httpsResponse     * IotHttpsResponseHandle_t;
+
+/*-------------------------- HTTPS enumerated types --------------------------*/
+
+/**
+ * @enums_group{https_client}
+ * @enums_brief{HTTPS Client library}
+ */
+
+/**
+ * @ingroup https_client_datatypes_enums
+ * @brief Return codes of [HTTPS Client functions](@ref https_client_functions).
+ */
+typedef enum IotHttpsReturnCode
+{
+    /**
+     * @brief Returned for a successful operation.
+     */
+    IOT_HTTPS_OK = 0,
+
+    /**
+     * @brief An invalid parameter was passed into an API function.
+     */
+    IOT_HTTPS_INVALID_PARAMETER = 101,
+
+    /**
+     * @brief Invalid payload.
+     */
+    IOT_HTTPS_INVALID_PAYLOAD = 102,
+
+    /**
+     * @brief HTTPS message was too large to fit into a configured synchronous body buffer.
+     */
+    IOT_HTTPS_MESSAGE_TOO_LARGE = 103,
+
+    /**
+     * @brief Overflow occurred somewhere.
+     */
+    IOT_HTTPS_OVERFLOW = 104,
+
+    /**
+     * @brief A buffer provided could not hold data required by the library.
+     */
+    IOT_HTTPS_INSUFFICIENT_MEMORY = 105,
+
+    /**
+     * @brief Queue full.
+     */
+    IOT_HTTPS_QUEUE_FULL = 106,
+
+    /**
+     * @brief Operation retry.
+     */
+    IOT_HTTPS_RETRY = 107,
+
+    /**
+     * @brief Could not find an item specified by an API.
+     *
+     * Returned for not being able to find the address in a URL, the path in a URL, or a header field from the response
+     * headers.
+     */
+    IOT_HTTPS_NOT_FOUND = 108,
+
+    /**
+     * @brief The HTTP request message was finished being written and we cannot write more with @ref https_client_function_writerequestbody.
+     */
+    IOT_HTTPS_MESSAGE_FINISHED = 109,
+
+    /**
+     * @brief An error occurred internally to the library.
+     */
+    IOT_HTTPS_INTERNAL_ERROR = 201,
+
+    /**
+     * @brief A network error occurred.
+     */
+    IOT_HTTPS_NETWORK_ERROR = 202,
+
+    /**
+     * @brief A network connection error occurred.
+     */
+    IOT_HTTPS_CONNECTION_ERROR = 203,
+
+    /**
+     * @brief A stream error occurred.
+     */
+    IOT_HTTPS_STREAM_ERROR = 204,
+
+    /**
+     * @brief An authentication error occurred.
+     */
+    IOT_HTTPS_AUTHENTICATION_ERROR = 205,
+
+    /**
+     * @brief A TLS error occurred.
+     */
+    IOT_HTTPS_TLS_ERROR = 206,
+
+    /**
+     * @brief An error occurred during the user callback.
+     */
+    IOT_HTTPS_USER_CALLBACK_ERROR = 207,
+
+    /**
+     * @brief The synchronous response could not be received in the specified timeout in @ref https_client_function_sendsync.
+     */
+    IOT_HTTPS_TIMEOUT_ERROR = 208,
+
+    /**
+     * @brief An error in the HTTP protocol.
+     */
+    IOT_HTTPS_PROTOCOL_ERROR = 209,
+
+    /**
+     * @brief The HTTPS request send was cancelled.
+     */
+    IOT_HTTPS_SEND_ABORT = 210,
+
+    /**
+     * @brief The HTTPS response receiving was cancelled.
+     */
+    IOT_HTTPS_RECEIVE_ABORT = 211,
+
+    /**
+     * @brief The asynchronous request had an error being scheduled.
+     */
+    IOT_HTTPS_ASYNC_SCHEDULING_ERROR = 212,
+
+    /**
+     * @brief There was an error parsing the HTTP response.
+     */
+    IOT_HTTPS_PARSING_ERROR = 213,
+
+    /**
+     * @brief Fatal HTTP library error.
+     */
+    IOT_HTTPS_FATAL = 901,
+
+    /**
+     * @brief The connection is busy and cannot be cleaned up.
+     *
+     * The connection was closed, but @ref https_client_function_disconnect must be called again to cleanup connection
+     * resources.
+     */
+    IOT_HTTPS_BUSY = 902,
+
+    /**
+     * @brief Try again.
+     */
+    IOT_HTTPS_TRY_AGAIN = 903,
+
+    /**
+     * @brief Data exists.
+     */
+    IOT_HTTPS_DATA_EXIST = 904,
+
+    /**
+     * @brief The operation on the public API is not supported.
+     */
+    IOT_HTTPS_NOT_SUPPORTED = 905
+} IotHttpsReturnCode_t;
+
+/**
+ * @ingroup https_client_datatypes_enums
+ * @brief Types of HTTP methods.
+ *
+ * The HTTP method is configured in  #IotHttpsRequestInfo_t.method.
+ */
+typedef enum IotHttpsMethod
+{
+    IOT_HTTPS_METHOD_GET = 0, /* Client-to-server method GET */
+    IOT_HTTPS_METHOD_HEAD     /* Client-to-server method HEAD */
+} IotHttpsMethod_t;
+
+/**
+ * @ingroup https_client_datatypes_enums
+ * @brief Types of standard HTTP Response status codes.
+ *
+ * These status codes are taken from RFC 2616. Please see RFC 2616 for a description of each response status.
+ */
+enum IotHttpsResponseStatus
+{
+    IOT_HTTPS_STATUS_CONTINUE = 100,
+    IOT_HTTPS_STATUS_SWITCHING_PROTOCOLS,
+    IOT_HTTPS_STATUS_OK = 200,
+    IOT_HTTPS_STATUS_CREATED,
+    IOT_HTTPS_STATUS_ACCEPTED,
+    IOT_HTTPS_STATUS_NON_AUTHORITIVE_INFORMATION,
+    IOT_HTTPS_STATUS_NO_CONTENT,
+    IOT_HTTPS_STATUS_RESET_CONTENT,
+    IOT_HTTPS_STATUS_PARTIAL_CONTENT,
+    IOT_HTTPS_STATUS_MULTIPLE_CHOICES = 300,
+    IOT_HTTPS_STATUS_MOVED_PERMANENTLY,
+    IOT_HTTPS_STATUS_FOUND,
+    IOT_HTTPS_STATUS_SEE_OTHER,
+    IOT_HTTPS_STATUS_NOT_MODIFIED,
+    IOT_HTTPS_STATUS_USE_PROXY,
+    IOT_HTTPS_STATUS_UNUSED,
+    IOT_HTTPS_STATUS_TEMPORARY_REDIRECT,
+    IOT_HTTPS_STATUS_BAD_REQUEST = 400,
+    IOT_HTTPS_STATUS_UNAUTHORIZED,
+    IOT_HTTPS_STATUS_PAYMENT_REQUIRED,
+    IOT_HTTPS_STATUS_FORBIDDEN,
+    IOT_HTTPS_STATUS_NOT_FOUND,
+    IOT_HTTPS_STATUS_METHOD_NOT_ALLOWED,
+    IOT_HTTPS_STATUS_NOT_ACCEPTABLE,
+    IOT_HTTPS_STATUS_PROXY_AUTHENTICATION_REQUIRED,
+    IOT_HTTPS_STATUS_REQUEST_TIMEOUT,
+    IOT_HTTPS_STATUS_CONFLICT,
+    IOT_HTTPS_STATUS_GONE,
+    IOT_HTTPS_STATUS_LENGTH_REQUIRED,
+    IOT_HTTPS_STATUS_PRECONDITION_FAILED,
+    IOT_HTTPS_STATUS_REQUEST_ENTITY_TOO_LARGE,
+    IOT_HTTPS_STATUS_REQUEST_URI_TOO_LONG,
+    IOT_HTTPS_STATUS_UNSUPPORTED_MEDIA_TYPE,
+    IOT_HTTPS_STATUS_REQUEST_RANGE_NOT_SATISFIABLE,
+    IOT_HTTPS_STATUS_EXPECTATION_FAILED,
+    IOT_HTTPS_STATUS_INTERNAL_SERVER_ERROR = 500,
+    IOT_HTTPS_STATUS_NOT_IMPLEMENTED,
+    IOT_HTTPS_STATUS_BAD_GATEWAY,
+    IOT_HTTPS_STATUS_SERVICE_UNAVAILABLE,
+    IOT_HTTPS_STATUS_GATEWAY_TIMEOUT,
+    IOT_HTTPS_STATUS_HTTP_VERSION_NOT_SUPPORTED
+};
+
+/*------------------------- HTTPS parameter structs --------------------------*/
+
+/**
+ * @paramstructs_group{https_client}
+ * @paramstructs_brief{https_client,HTTPS Client Libray}
+ */
+
+/**
+ * @ingroup https_client_datatypes_paramstructs
+ *
+ * @brief HTTPS Client library callbacks for asynchronous requests.
+ *
+ * @paramfor @ref https_client_function_initializerequest
+ *
+ * This type is a parameter in #IotHttpsResponseInfo_t.
+ *
+ * If any of the members in this type are set to NULL, then they will not be invoked during the asynchronous
+ * request/response process.
+ *
+ * See @ref Asynchronous_Callback_Order for the order of the order of the callbacks and when they will be invoked.
+ */
+typedef struct IotHttpsClientCallbacks
+{
+    /**
+     * @brief User-provided callback function signature for appending a header to current asynchronous request.
+     *
+     * If this is set to NULL, then it will not be invoked.
+     * See @ref https_client_function_addheader for more information on adding a header in this callback.
+     *
+     * Appending the header when request is in progress is good for things like time limitted authentication tokens.
+     *
+     * @param[in] pPrivData - User context configured in #IotHttpsAsyncInfo_t.pPrivData
+     * @param[in] reqHandle - The handle for the current HTTP request in progress.
+     */
+    void ( * appendHeaderCallback )( void * pPrivData,
+                                     IotHttpsRequestHandle_t reqHandle );
+
+    /**
+     * @brief User-provided callback function signature for writing data to the network for a current asynchronous
+     * request.
+     *
+     * If this is set to NULL, then it will not be invoked.
+     * See @ref https_client_function_writerequestbody for more information on writing request body.
+     *
+     * @param[in] pPrivData - User context configured in #IotHttpsAsyncInfo_t.pPrivData
+     * @param[in] reqHandle - The handle for the current HTTP request in progress.
+     */
+    void ( * writeCallback )( void * pPrivData,
+                              IotHttpsRequestHandle_t reqHandle );
+
+    /**
+     * @brief User-provided callback function signature for reading data from the network for a current asynchronous
+     * response.
+     *
+     * The network indicated that after sending the associated request, the response is available for reading.
+     * If this is set to NULL, then it will not be invoked and any response body received will be ignored.
+     * See @ref https_client_function_readresponsebody for more information about reading the response body in this
+     * callback.
+     *
+     * @param[in] pPrivData - User context configured in #IotHttpsAsyncInfo_t.pPrivData
+     * @param[in] respHandle - The handle for the current HTTP response in progress.
+     * @param[in] rc - A return code indicating any errors before this callback was invoked.
+     * @param[in] status - The HTTP response status code of the current response in progress.
+     */
+    void ( * readReadyCallback )( void * pPrivData,
+                                  IotHttpsResponseHandle_t respHandle,
+                                  IotHttpsReturnCode_t rc,
+                                  uint16_t status );
+
+    /**
+     * @brief User-provided callback function signature to indicate that the asynchronous response is completed.
+     *
+     * If this is set to NULL, then it will not be invoked.
+     *
+     * This callback is invoked when the response is fully received from the network and the request/response pair is
+     * complete.
+     * If there was an error in sending the request or an error in receiving the associated response, this callback will
+     * be invoked, if the error caused the request or associated response to finish.
+     * #IotHttpsClientCallbacks_t.errorCallback will be invoked first before this callback.
+     * This callback is invoked to let the application know that memory used by #IotHttpsRequestInfo_t.userBuffer and
+     * #IotHttpsResponseInfo_t.userBuffer can be freed, modified, or reused.
+     *
+     * For a non-persistent connection, the connection will be closed first before invoking this callback.
+     *
+     * @param[in] pPrivData - User context configured in #IotHttpsAsyncInfo_t.pPrivData
+     * @param[in] respHandle - The handle for the current HTTP response in progress.
+     * @param[in] rc - A return code indicating any errors before this callback was invoked.
+     * @param[in] status - The HTTP response status code of the current response in progress.
+     */
+    void ( * responseCompleteCallback )( void * pPrivData,
+                                         IotHttpsResponseHandle_t respHandle,
+                                         IotHttpsReturnCode_t rc,
+                                         uint16_t status );
+
+    /**
+     * @brief User-provided callback function signature to indicate that the connection has been close in an asynchronous
+     * request process.
+     *
+     * If this is set to NULL, then it will not be invoked.
+     * If there are errors during sending/receiving in the asynchronous process, the connection is not automatically
+     * closed. If the server closes the connection during the asynchronous process, this callback is not invoked.
+     * This callback is invoked only if the connection was flagged as non-persistent in
+     * #IotHttpsConnectionInfo_t.flags.
+     *
+     * @param[in] pPrivData - User context configured in #IotHttpsAsyncInfo_t.pPrivData
+     * @param[in] connHandle - The handle for the current HTTP connection.
+     * @param[in] rc - A return code indicating any errors before this callback was invoked.
+     */
+    void ( * connectionClosedCallback )( void * pPrivData,
+                                         IotHttpsConnectionHandle_t connHandle,
+                                         IotHttpsReturnCode_t rc );
+
+    /**
+     * @brief User-provided callback function signature to indicate that an error occurred during the asynchronous
+     * request process.
+     *
+     * If respHandle is NULL, then reqHandle will not be NULL and vise-versa. This signals which handle the error
+     * occurred and if it is during the sending or receiving.
+     *
+     * @param[in] pPrivData - User context configured in #IotHttpsAsyncInfo_t.pPrivData
+     * @param[in] respHandle - The handle for the current HTTP response.
+     * @param[in] reqHandle - The handle for the current HTTP request.
+     * @param[in] rc - A return code indicating any errors before this callback was invoked.
+     */
+    void ( * errorCallback )( void * pPrivData,
+                              IotHttpsRequestHandle_t reqHandle,
+                              IotHttpsResponseHandle_t respHandle,
+                              IotHttpsReturnCode_t rc );
+} IotHttpsClientCallbacks_t;
+
+/**
+ * @ingroup https_client_datatypes_paramstructs
+ * @brief User-provided buffer for storing the HTTPS headers and library internal context.
+ *
+ * @paramfor @ref https_client_function_initializerequest.
+ *
+ * The user buffer is configured in #IotHttpsConnectionInfo_t.userBuffer, #IotHttpsRequestInfo_t.userBuffer and
+ * #IotHttpsResponseInfo_t.userBuffer.
+ *
+ * The minimum size that the buffer must be configured to is indicated by requestUserBufferMinimumSize,
+ * responseUserBufferMinimumSize, connectionUserBufferMinimumSize.
+ */
+typedef struct IotHttpsUserBuffer
+{
+    uint8_t * pBuffer;  /**< @brief Application provided buffer pointer. */
+    uint32_t bufferLen; /**< @brief The length of the application provided buffer. */
+} IotHttpsUserBuffer_t;
+
+/**
+ * @ingroup https_client_datatypes_paramstructs
+ * @brief HTTPS Client synchronous request information.
+ *
+ * @paramfor @ref https_client_function_initializerequest, @ref https_client_function_sendsync,
+ * @ref https_client_function_sendasync
+ *
+ * This structure is configured in #IotHttpsRequestInfo_t.u and #IotHttpsResponseInfo_t.
+ *
+ * A synchronous request will block until the response is fully received from the network.
+ * This structure defines memory locations to store the response body.
+ */
+typedef struct IotHttpsSyncRequestInfo
+{
+    /**
+     * Pointer to the HTTP message body.
+     *
+     * For a request this is the file or data we want to send.  The data is separated from the headers for the
+     * flexibility to point to an already established file elsewhere in memory.
+     *
+     * For a response this is where to receive the response entity body.
+     * If the length of the buffer provided to store the response body is smaller than the amount of body received,
+     * then @ref https_client_function_sendsync will return a IOT_HTTPS_INSUFFICIENT_MEMORY error code. Although an error
+     * was returned, the first #IotHttpsSyncInfo_t.bodyLen of the response received on the network will
+     * still be available in the buffer.
+     */
+    uint8_t * pBody;
+    uint32_t bodyLen; /**< @brief The length of the HTTP message body. */
+} IotHttpsSyncInfo_t;
+
+/**
+ * @ingroup https_client_datatypes_paramstructs
+ * @brief HTTPS Client asynchronous request information.
+ *
+ * @paramfor @ref https_client_function_initializerequest.
+ *
+ * This is parameter in #IotHttpsRequestInfo_t.u.
+ *
+ * An asynchronous request will ask the application for headers and body right before the request is ready
+ * to be sent onto the network.
+ * An asynchronous request will have the application read headers and body as soon as the response is received
+ * on the network.
+ */
+typedef struct IotHttpsAsyncInfo
+{
+    /**
+     * @brief Callbacks are used for an asynchronous request.
+     * See #IotHttpsClientCallbacks_t for more information.
+     */
+    IotHttpsClientCallbacks_t callbacks;
+    void * pPrivData; /**< @brief User private data to provide context to the asynchronous callbacks. */
+} IotHttpsAsyncInfo_t;
+
+/**
+ * @ingroup https_client_datatypes_paramstructs
+ * @brief HTTP connection configuration.
+ *
+ * @paramfor @ref https_client_function_connect or @ref https_client_function_sendsync or
+ * @ref https_client_function_sendasync.
+ *
+ * This parameter is used to connection in @ref https_client_function_connect.
+ *
+ * @note The lengths of the strings in this struct should not include the NULL
+ * terminator. Strings in this struct do not need to be NULL-terminated.
+ */
+typedef struct IotHttpsConnectionInfo
+{
+    /**
+     * @brief Remote server address that is DNS discoverable.
+     *
+     * For example: avs-alexa-na.amazon.com.
+     */
+    const char * pAddress;
+    uint32_t addressLen; /**< @brief remote address length. */
+
+    uint16_t port;       /**< @brief Remote port number */
+
+    /**
+     * @brief Flags to configure the HTTPS connection.
+     *
+     * See @ref https_connection_flags for the available flags.
+     *
+     * Unknown flags are ignored.
+     */
+    uint32_t flags; /**< @brief Flags to configure the HTTPS connection. */
+
+    /**
+     * @brief Timeout waiting for a response from the network in milliseconds.
+     *
+     * If this is set to zero, it will default to @ref IOT_HTTPS_RESPONSE_WAIT_MS.
+     */
+    uint32_t timeout;
+
+    const char * pCaCert;     /**< @brief Server trusted certificate store for this connection. */
+    uint32_t caCertLen;       /**< @brief Server trusted certificate store size. */
+
+    const char * pClientCert; /**< @brief Client certificate store for this connection. */
+    uint32_t clientCertLen;   /**< @brief Client certificate store size. */
+
+    const char * pPrivateKey; /**< @brief Client private key store for this connection. */
+    uint32_t privateKeyLen;   /**< @brief Client private key store size. */
+
+    /**
+     * @brief String of all the ALPN protocols separated by commas needed for this connection.
+     *
+     * For the protocols needed for the AWS Iot Message broker endpoint please see:
+     * https://docs.aws.amazon.com/iot/latest/developerguide/protocols.html
+     */
+    char * pAlpnProtocols;
+    uint32_t alpnProtocolsLen; /**< @brief ALPN protocol string length. */
+
+    /**
+     * @brief User buffer to store the internal connection context.
+     *
+     * See @ref connectionUserBufferMinimumSize for information about the user buffer configured in
+     * #IotHttpsConnectionInfo_t.userBuffer needed to create a valid connection handle.
+     */
+    IotHttpsUserBuffer_t userBuffer;
+
+    /**
+     * @brief The IOT network abstraction interface.
+     *
+     * This contains the interface to connect, disconnect, send data, and receive data from the network.
+     *
+     * In Amazon FreeRTOS this should be of the type IotNetworkInterface_t.
+     */
+    IOT_HTTPS_NETWORK_INTERFACE_TYPE pNetworkInterface;
+} IotHttpsConnectionInfo_t;
+
+/**
+ * @ingroup https_client_datatypes_paramstructs
+ * @brief HTTP request configuration.
+ *
+ * @paramfor @ref https_client_function_initializerequest.
+ *
+ * This parameter is used to configure the request in https_client_function_initializerequest.
+ *
+ * @note The lengths of the strings in this struct should not include the NULL
+ * terminator. Strings in this struct do not need to be NULL-terminated.
+ */
+typedef struct IotHttpsRequestInfo
+{
+    /* The path and the method are used to generate the first request line in the HTTP request message. See
+     * @ref https_client_function_initializerequest for more information. */
+    const char * pPath;      /**< @brief URI path, e.g., "/v20160207/directives?query". If this is NULL, a "/" will be added to the request line automaticaly. */
+    uint32_t pathLen;        /**< @brief URI path length */
+    IotHttpsMethod_t method; /**< @brief HTTP method. See #IotHttpsMethod_t for the list of available methods. */
+
+    /**
+     * @brief Host address this request is intended for, e.g., "awsamazon.com".
+     *
+     * This is the same as the address in #IotHttpsConnectionInfo_t.pAddress. This is here in the request structure to
+     * automatically generate the "Host" header field in the header buffer space configured in
+     * #IotHttpsRequestInfo_t.userBuffer. See @ref https_client_function_initializerequest for more informaiton.
+     */
+    const char * pHost;
+    uint32_t hostLen; /**< @brief Host address length. */
+
+    /**
+     * @brief Flag denoting if the connection should be non-persistent.
+     *
+     * If this flag is set to false, then the connection is persistent. When the connection is persistent, the HTTP
+     * header "Connection: keep-alive" is automatically added to the headers to send to the server. This header
+     * asks the server to not close the connection after sending the response.
+     *
+     * If this flag is set to true, then the connection is non-persistent. When the connection is non-persistent, then
+     * HTTP header "Connection: close" is automatically added to the headers to send to the server. This header asks
+     * the server to close the connection after sending the response.
+     *
+     * Please see https://tools.ietf.org/html/rfc2616#section-8.1.1 for more details.
+     */
+    bool isNonPersistent;
+
+    /**
+     * @brief Application owned buffer for storing the request headers and internal request context.
+     *
+     * For an asychronous request, if the application owns the memory for this buffer, then it must not be modified,
+     * freed, or reused until the the #IotHttpsClientCallbacks_t.responseCompleteCallback is invoked.
+     *
+     * Please see #IotHttpsUserBuffer_t for more information.
+     */
+    IotHttpsUserBuffer_t userBuffer;
+
+    /**
+     * @brief Indicator if this request is sync or async.
+     *
+     * Set this to false to use a synchronous request. Set this to true to use an asynchronous request.
+     */
+    bool isAsync;
+
+    /**
+     * @brief Specific information for either a synchronous request or an asynchronous request.
+     *
+     * See #IotHttpsAsyncInfo_t for information on pAsyncInfo.
+     * See #IotHttpsSyncInfo_t for information on u.pSyncInfo.
+     */
+    union
+    {
+        IotHttpsAsyncInfo_t * pAsyncInfo; /**< @brief Information specifically for Asynchronous requests. */
+        IotHttpsSyncInfo_t * pSyncInfo;   /**< @brief Information specifically for synchronous requests. */
+    } u;
+} IotHttpsRequestInfo_t;
+
+/**
+ * @ingroup https_client_datatypes_paramstructs
+ * @brief HTTP request configuration.
+ *
+ * @paramfor @ref https_client_function_sendsync and @ref https_client_function_sendasync
+ *
+ * A separate response info is defined so that the application can re-initialize a request for re-use while still
+ * processing a response that was already completed.
+ */
+typedef struct IotHttpsResponseInfo
+{
+    /**
+     * The application owned buffer for storing the response headers and internal response context.
+     *
+     * For an asychronous request, if the application owns the memory for this buffer, then it must not be modified,
+     * freed, or reused until the the #IotHttpsClientCallbacks_t.responseCompleteCallback is invoked.
+     *
+     * Please see #IotHttpsUserBuffer_t for more information.
+     */
+    IotHttpsUserBuffer_t userBuffer;
+
+    /**
+     * @brief Specific information for a synchronously received response.
+     *
+     * Set this to NULL if the response is to be received asynchronously.
+     *
+     * See #IotHttpsSyncInfo_t for more information.
+     */
+    IotHttpsSyncInfo_t * pSyncInfo;
+} IotHttpsResponseInfo_t;
+
+#endif /* ifndef IOT_HTTPS_TYPES_H_ */
diff --git a/libraries/c_sdk/standard/https/src/iot_https_client.c b/libraries/c_sdk/standard/https/src/iot_https_client.c
new file mode 100644
index 000000000..6f2ca45f6
--- /dev/null
+++ b/libraries/c_sdk/standard/https/src/iot_https_client.c
@@ -0,0 +1,3336 @@
+/*
+ * Amazon FreeRTOS HTTPS Client V1.0.0
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+/**
+ * @file iot_https_client.h
+ * @brief Implementation of the user-facing functions of the Amazon FreeRTOS HTTPS Client library.
+ */
+
+/* The config header is always included first. */
+#include "iot_config.h"
+
+/* HTTPS Client library private includes. */
+#include "private/iot_https_internal.h"
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Partial HTTPS request first line.
+ *
+ * This is used for the calculation of the requestUserBufferMinimumSize.
+ * The minimum path is "/" because we cannot know how long the application requested path is is going to be.
+ * CONNECT is the longest string length HTTP method according to RFC 2616.
+ */
+#define HTTPS_PARTIAL_REQUEST_LINE                        HTTPS_CONNECT_METHOD " " HTTPS_EMPTY_PATH " " HTTPS_PROTOCOL_VERSION
+
+/**
+ * @brief The User-Agent header line string.
+ *
+ * This is of the form:
+ * "User-Agent: <configured-user-agent>\r\n"
+ * This is used for the calculation of the requestUserBufferMinimumSize.
+ */
+#define HTTPS_USER_AGENT_HEADER_LINE                      HTTPS_USER_AGENT_HEADER HTTPS_HEADER_FIELD_SEPARATOR IOT_HTTPS_USER_AGENT HTTPS_END_OF_HEADER_LINES_INDICATOR
+
+/**
+ * @brief The Host header line with the field only and not the value.
+ *
+ * This is of the form:
+ * "Host: \r\n"
+ * This is used for the calculation of the requestUserBufferMinimumSize. The Host value is not specified because we
+ * cannot anticipate what server the client is making requests to.
+ */
+#define HTTPS_PARTIAL_HOST_HEADER_LINE                    HTTPS_HOST_HEADER HTTPS_HEADER_FIELD_SEPARATOR HTTPS_END_OF_HEADER_LINES_INDICATOR
+
+/*
+ * String constants for the Connection header and possible values.
+ *
+ * This is used for writing headers automatically during the sending of the HTTP request.
+ * "Connection: keep-alive\r\n" is written automatically for a persistent connection.
+ * "Connection: close\r\n" is written automatically for a non-presistent connection.
+ */
+#define HTTPS_CONNECTION_KEEP_ALIVE_HEADER_LINE           HTTPS_CONNECTION_HEADER HTTPS_HEADER_FIELD_SEPARATOR HTTPS_CONNECTION_KEEP_ALIVE_HEADER_VALUE HTTPS_END_OF_HEADER_LINES_INDICATOR
+#define HTTPS_CONNECTION_CLOSE_HEADER_LINE                HTTPS_CONNECTION_HEADER HTTPS_HEADER_FIELD_SEPARATOR HTTPS_CONNECTION_CLOSE_HEADER_VALUE HTTPS_END_OF_HEADER_LINES_INDICATOR
+
+/**
+ * @brief The length of the "Connection: keep-alive\r\n" header.
+ *
+ * This is used for sizing a local buffer for the final headers to send that include the "Connection: keep-alive\r\n"
+ * header line.
+ *
+ * This is used to initialize a local array for the final headers to send.
+ */
+#define HTTPS_CONNECTION_KEEP_ALIVE_HEADER_LINE_LENGTH    ( 24 )
+
+/**
+ * @brief Indicates for the http-parser parsing execution function to tell it to keep parsing or to stop parsing.
+ *
+ * A value of 0 means the parser should keep parsing if there is more unparsed length.
+ * A value greater than 0 tells the parser to stop parsing.
+ */
+#define KEEP_PARSING                                      ( ( int ) 0 )
+#define STOP_PARSING                                      ( ( int ) 1 )
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Minimum size of the request user buffer.
+ *
+ * The request user buffer is configured in IotHttpsClientRequestInfo_t.userBuffer. This buffer stores the internal context
+ * of the request and then the request headers right after. The minimum size for the buffer is the total size of the
+ * internal request context, the HTTP formatted request line, the User-Agent header line, and the part of the Host
+ * header line.
+ */
+const uint32_t requestUserBufferMinimumSize = sizeof( _httpsRequest_t ) +
+                                              sizeof( HTTPS_PARTIAL_REQUEST_LINE ) +
+                                              sizeof( HTTPS_USER_AGENT_HEADER_LINE ) +
+                                              sizeof( HTTPS_PARTIAL_HOST_HEADER_LINE );
+
+/**
+ * @brief Minimum size of the response user buffer.
+ *
+ * The response user buffer is configured in IotHttpsClientRequestInfo_t.userBuffer. This buffer stores the internal context
+ * of the response and then the response headers right after. This minimum size is calculated for the case if no bytes
+ * from the HTTP response headers are to be stored.
+ */
+const uint32_t responseUserBufferMinimumSize = sizeof( _httpsResponse_t );
+
+/**
+ * @brief Minimum size of the connection user buffer.
+ *
+ * The connection user buffer is configured in IotHttpsConnectionInfo_t.userBuffer. This buffer stores the internal context of the
+ * connection.
+ */
+const uint32_t connectionUserBufferMinimumSize = sizeof( _httpsConnection_t );
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Callback from http-parser to indicate the start of the HTTP response message is reached.
+ *
+ * See https://github.com/nodejs/http-parser for more information.
+ *
+ * @param[in] pHttpParser - http-parser state structure.
+ *
+ * @return 0 to tell http-parser to keep parsing.
+ *         1 to tell http-parser that parsing should stop return from http_parser_execute with error HPE_CB_message_begin.
+ */
+static int _httpParserOnMessageBeginCallback( http_parser * pHttpParser );
+
+/**
+ * @brief Callback from http-parser to indicate it found the HTTP response status code.
+ *
+ * See https://github.com/nodejs/http-parser for more information.
+ *
+ * @param[in] pHttpParser - http-parser state structure.
+ * @param[in] pLoc - Pointer to the HTTP response status code string in the response message buffer.
+ * @param[in] length - The length of the HTTP response status code string.
+ *
+ * @return 0 to tell http-parser to keep parsing.
+ *         1 to tell http-parser that parsing should stop return from http_parser_execute with error HPE_CB_status.
+ */
+static int _httpParserOnStatusCallback( http_parser * pHttpParser,
+                                        const char * pLoc,
+                                        size_t length );
+
+/**
+ * @brief Callback from http-parser to indicate it found an HTTP response header field.
+ *
+ * If only part of the header field was returned here in this callback, then this callback will be invoked again the
+ * next time the parser executes on the next part of the header field.
+ *
+ * See https://github.com/nodejs/http-parser for more information.
+ *
+ * @param[in] pHttpParser - http-parser state structure.
+ * @param[in] pLoc - Pointer to the header field string in the response message buffer.
+ * @param[in] length - The length of the header field.
+ *
+ * @return 0 to tell http-parser to keep parsing.
+ *         1 to tell http-parser that parsing should stop return from http_parser_execute with error HPE_CB_header_field.
+ */
+static int _httpParserOnHeaderFieldCallback( http_parser * pHttpParser,
+                                             const char * pLoc,
+                                             size_t length );
+
+/**
+ * @brief Callback from http-parser to indicate it found an HTTP response header value.
+ *
+ * This value corresponds to the field that was found in the _httpParserOnHeaderFieldCallback() called immediately
+ * before this callback was called.
+ *
+ * If only part of the header value was returned here in this callback, then this callback will be invoked again the
+ * next time the parser executes on the next part of the header value.
+ *
+ * See https://github.com/nodejs/http-parser for more information.
+ *
+ * @param[in] pHttpParser - http-parser state structure.
+ * @param[in] pLoc - Pointer to the header value string in the response message buffer.
+ * @param[in] length - The length of the header value.
+ *
+ * @return 0 to tell http-parser to keep parsing.
+ *         1 to tell http-parser that parsing should stop return from http_parser_execute with error HPE_CB_header_value.
+ */
+static int _httpParserOnHeaderValueCallback( http_parser * pHttpParser,
+                                             const char * pLoc,
+                                             size_t length );
+
+/**
+ * @brief Callback from http-parser to indicate it reached the end of the headers in the HTTP response messsage.
+ *
+ * The end of the headers is signalled in a HTTP response message by another "\r\n" after the final header line.
+ *
+ * See https://github.com/nodejs/http-parser for more information.
+ *
+ * @param[in] pHttpParser - http-parser state structure.
+ *
+ * @return 0 to tell http-parser to keep parsing.
+ *         1 to tell http-parser that parsing should stop return from http_parser_execute with error HPE_CB_headers_complete.
+ */
+static int _httpParserOnHeadersCompleteCallback( http_parser * pHttpParser );
+
+/**
+ * @brief Callback from http-parser to indicate it found HTTP response body.
+ *
+ * This callback will be invoked multiple times if the response body is of "Transfer-Encoding: chunked".
+ * _httpParserOnChunkHeaderCallback() will be invoked first, then _httpParserOnBodyCallback(), then
+ * _httpParserOnChunkCompleteCallback(), then repeated back to _httpParserOnChunkHeaderCallback() if there are more
+ * "chunks".
+ *
+ * See https://github.com/nodejs/http-parser for more information.
+ *
+ * @param[in] pHttpParser - http-parser state structure.
+ * @param[in] pLoc - Pointer to the body string in the response message buffer.
+ * @param[in] length - The length of the body found.
+ *
+ * @return 0 to tell http-parser to keep parsing.
+ *         1 to tell http-parser that parsing should stop return from http_parser_execute with error HPE_CB_body.
+ */
+static int _httpParserOnBodyCallback( http_parser * pHttpParser,
+                                      const char * pLoc,
+                                      size_t length );
+
+/**
+ * @brief Callback from http-parser to indicate it reached the end of the HTTP response messsage.
+ *
+ * The end of the message is signalled in a HTTP response message by another "\r\n" after the final header line, with no
+ * entity body; or it is singalled by "\r\n" at the end of the entity body.
+ *
+ * For a Transfer-Encoding: chunked type of response message, the end of the message is signalled by a terminating
+ * chunk header with length zero.
+ *
+ * See https://github.com/nodejs/http-parser for more information.
+ *
+ * @param[in] pHttpParser - http-parser state structure.
+ *
+ * @return 0 to tell http-parser to keep parsing.
+ *         1 to tell http-parser that parsing should stop return from http_parser_execute with error HPE_CB_message_complete.
+ */
+static int _httpParserOnMessageCompleteCallback( http_parser * pHttpParser );
+
+/* This code prints debugging information and is, therefore, compiled only when
+ * log level is set to IOT_LOG_DEBUG. */
+#if ( LIBRARY_LOG_LEVEL == IOT_LOG_DEBUG )
+
+/**
+ * @brief Callback from http-parser to indicate it found an HTTP Transfer-Encoding: chunked header.
+ *
+ * Transfer-Encoding: chunked headers are embedded in the HTTP response entity body by a "\r\n" followed by the size of
+ * the chunk followed by another "\r\n".
+ *
+ * If only part of the header field was returned here in this callback, then this callback will be invoked again the
+ * next time the parser executes on the next part of the header field.
+ *
+ * See https://github.com/nodejs/http-parser for more information.
+ *
+ * @param[in] pHttpParser - http-parser state structure.
+ *
+ * @return 0 to tell http-parser to keep parsing.
+ *         1 to tell http-parser that parsing should stop return from http_parser_execute with error HPE_CB_chunk_header.
+ */
+    static int _httpParserOnChunkHeaderCallback( http_parser * pHttpParser );
+
+/**
+ * @brief Callback from http-parser to indicate it reached the end of an HTTP response messsage "chunk".
+ *
+ * A chunk is complete when the chunk header size is read fully in the body.
+ *
+ * See https://github.com/nodejs/http-parser for more information.
+ *
+ * @param[in] pHttpParser - http-parser state structure.
+ *
+ * @return 0 to tell http-parser to keep parsing.
+ *         1 to tell http-parser that parsing should stop return from http_parser_execute with error HPE_CB_chunk_complete.
+ */
+    static int _httpParserOnChunkCompleteCallback( http_parser * pHttpParser );
+#endif
+
+/**
+ * @brief Network receive callback for the HTTPS Client library.
+ *
+ * This function is called by the network layer whenever data is available for the HTTP library.
+ *
+ * @param[in] pNetworkConnection - The network connection with the HTTPS connection, passed by the network stack.
+ * @param[in] pReceiveContext - A pointer to the HTTPS Client connection handle for which the packet was received.
+ */
+static void _networkReceiveCallback( void * pNetworkConnection,
+                                     void * pReceiveContext );
+
+/**
+ * @brief Connects to HTTPS server and initializes the connection context.
+ *
+ * @param[out] pConnHandle - The out parameter to return handle representing the open connection.
+ * @param[in] pConnInfo - The connection configuration.
+ *
+ * @return #IOT_HTTPS_OK if the connection context initialization was successful.
+ *         #IOT_HTTPS_CONNECTION_ERROR if the connection failed.
+ *         #IOT_HTTPS_INTERNAL_ERROR if the context initialization failed.
+ */
+static IotHttpsReturnCode_t _createHttpsConnection( IotHttpsConnectionHandle_t * pConnHandle,
+                                                    IotHttpsConnectionInfo_t * pConnInfo );
+
+/**
+ * @brief Disconnects from the network.
+ *
+ * @param[in] pHttpsConnection - HTTPS connection handle.
+ */
+static void _networkDisconnect( _httpsConnection_t * pHttpsConnection );
+
+/**
+ * @brief Destroys the network connection.
+ *
+ * @param[in] pHttpsConnection - HTTPS connection handle.
+ */
+static void _networkDestroy( _httpsConnection_t * pHttpsConnection );
+
+/**
+ * @brief Add a header to the current HTTP request.
+ *
+ * The headers are stored in reqHandle->pHeaders.
+ *
+ * @param[in] pHttpsRequest - HTTP request context.
+ * @param[in] pName - The name of the header to add.
+ * @param[in] nameLen - The length of the header name string.
+ * @param[in] pValue - The buffer containing the value string.
+ * @param[in] valueLen - The length of the header value string.
+ *
+ * @return #IOT_HTTPS_OK if the header was added to the request successfully.
+ *         #IOT_HTTPS_INSUFFICIENT_MEMORY if there was not enough room in the IotHttpsRequestHandle_t->pHeaders.
+ */
+static IotHttpsReturnCode_t _addHeader( _httpsRequest_t * pHttpsRequest,
+                                        const char * pName,
+                                        uint32_t nameLen,
+                                        const char * pValue,
+                                        uint32_t valueLen );
+
+/**
+ * @brief Send data on the network.
+ *
+ * @param[in] pHttpsConnection - HTTP connection context.
+ * @param[in] pBuf - The buffer containing the data to send.
+ * @param[in] len - The length of the data to send.
+ *
+ * @return #IOT_HTTPS_OK if the data sent successfully.
+ *         #IOT_HTTPS_NETWORK_ERROR if there was an error sending the data on the network.
+ */
+static IotHttpsReturnCode_t _networkSend( _httpsConnection_t * pHttpsConnection,
+                                          uint8_t * pBuf,
+                                          size_t len );
+
+/**
+ * @brief Receive data on the network.
+ *
+ * @param[in] pHttpsConnection - HTTP connection context.
+ * @param[in] pBuf - The buffer to receive the data into.
+ * @param[in] len - The length of the data to receive.
+ * @param[in] numBytesRecv - The number of bytes read from the network.
+ *
+ * @return #IOT_HTTPS_OK if the data was received successfully.
+ *         #IOT_HTTPS_NETWORK_ERROR if we timedout trying to receive data from the network.
+ */
+static IotHttpsReturnCode_t _networkRecv( _httpsConnection_t * pHttpsConnection,
+                                          uint8_t * pBuf,
+                                          size_t bufLen,
+                                          size_t * numBytesRecv );
+
+/**
+ * @brief Send all of the HTTP request headers in the pHeadersBuf and the final Content-Length and Connection headers.
+ *
+ * All of the headers in headerbuf are sent first followed by the computed content length and persistent connection
+ * indication.
+ *
+ * @param[in] pHttpsConnection - HTTP connection context.
+ * @param[in] pHeadersBuf - The buffer containing the request headers to send. This buffer must contain HTTP headers
+ *            lines without the indicator for the the end of the HTTP headers.
+ * @param[in] headersLength - The length of the request headers to send.
+ * @param[in] isNonPersistent - Indicator of whether the connection is persistent or not.
+ * @param[in] contentLength - The length of the request body used for automatically creating a "Content-Length" header.
+ *
+ * @return #IOT_HTTPS_OK if the headers were fully sent successfully.
+ *         #IOT_HTTPS_NETWORK_ERROR if there was an error receiving the data on the network.
+ */
+static IotHttpsReturnCode_t _sendHttpsHeaders( _httpsConnection_t * pHttpsConnection,
+                                               uint8_t * pHeadersBuf,
+                                               uint32_t headersLength,
+                                               bool isNonPersistent,
+                                               uint32_t contentLength );
+
+/**
+ * @brief Send all of the HTTP request body in pBodyBuf.
+ *
+ * @param[in] pHttpsConnection - HTTP connection context.
+ * @param[in] pBodyBuf - Buffer of the request body to send.
+ * @param[in] bodyLength - The length of the body to send.
+ *
+ * @return #IOT_HTTPS_OK if the body was fully sent successfully.
+ *         #IOT_HTTPS_NETWORK_ERROR if there was an error receiving the data on the network.
+ */
+static IotHttpsReturnCode_t _sendHttpsBody( _httpsConnection_t * pHttpsConnection,
+                                            uint8_t * pBodyBuf,
+                                            uint32_t bodyLength );
+
+/**
+ * @brief Parse the HTTP response message in pBuf.
+ *
+ * @param[in] pHttpParserInfo - Pointer to the information containing the instance of the http-parser and the execution function.
+ * @param[in] pBuf - The buffer containing the data to parse.
+ * @param[in] len - The length of data to parse.
+ *
+ * @return #IOT_HTTPS_OK if the data was parsed successfully.
+ *         #IOT_HTTPS_PARSING_ERROR if there was an error with parsing the data.
+ */
+static IotHttpsReturnCode_t _parseHttpsMessage( _httpParserInfo_t * pHttpParserInfo,
+                                                char * pBuf,
+                                                size_t len );
+
+/**
+ * @brief Receive any part of an HTTP response.
+ *
+ * This function is used for both receiving the body into the body buffer and receiving the header into the header
+ * buffer.
+ *
+ * @param[in] pHttpsConnection - HTTP Connection context.
+ * @param[in] pParser - Pointer to the instance of the http-parser.
+ * @param[in] pCurrentParserState - The current state of what has been parsed in the HTTP response.
+ * @param[in] finalParserState - The final state of the parser expected after this function finishes.
+ * @param[in] currentBufferProcessingState - The current buffer that is the HTTPS message is being received into.
+ * @param[in] pBufCur - Pointer to the next location to write data into the buffer pBuf. This is a double pointer to update the response context buffer pointers.
+ * @param[in] pBufEnd - Pointer to the end of the buffer to receive the HTTP response into.
+ *
+ * @return #IOT_HTTPS_OK if we received the HTTP response message part successfully.
+ *         #IOT_HTTPS_PARSING_ERROR if there was an error with parsing the data.
+ *         #IOT_HTTPS_NETWORK_ERROR if there was an error receiving the data on the network.
+ */
+static IotHttpsReturnCode_t _receiveHttpsMessage( _httpsConnection_t * pHttpsConnection,
+                                                  _httpParserInfo_t * pParser,
+                                                  IotHttpsResponseParserState_t * pCurrentParserState,
+                                                  IotHttpsResponseParserState_t finalParserState,
+                                                  IotHttpsResponseBufferState_t currentBufferProcessingState,
+                                                  uint8_t ** pBufCur,
+                                                  uint8_t ** pBufEnd );
+
+/**
+ * @brief Receive the HTTP response headers.
+ *
+ * Receiving the response headers is always the first step in receiving the response, therefore the
+ * pHttpsResponse->httpParserInfo will be initialized to a starting state when this function is called.
+ *
+ * This function also sets internal states to indicate that the header buffer is being processed now for a new response.
+ *
+ * @param[in] pHttpsConnection - HTTP connection context.
+ * @param[in] pHttpsResponse - HTTP response context.
+ *
+ * @return #IOT_HTTPS_OK if we received the HTTP headers successfully.
+ *         #IOT_HTTPS_PARSING_ERROR if there was an error with parsing the header buffer.
+ *         #IOT_HTTPS_NETWORK_ERROR if there was an error receiving the data on the network.
+ */
+static IotHttpsReturnCode_t _receiveHttpsHeaders( _httpsConnection_t * pHttpsConnection,
+                                                  _httpsResponse_t * pHttpsResponse );
+
+/**
+ * @brief Receive the HTTP response body.
+ *
+ * Sets internal states to indicate that the the body buffer is being processed now for a new response.
+ *
+ * @param[in] pHttpsConnection - HTTP connection context.
+ * @param[in] pHttpsResponse - HTTP response context.
+ *
+ * @return #IOT_HTTPS_OK if we received the HTTP body successfully.
+ *         #IOT_HTTPS_PARSING_ERROR if there was an error with parsing the body buffer.
+ *         #IOT_HTTPS_NETWORK_ERROR if there was an error receiving the data on the network.
+ */
+static IotHttpsReturnCode_t _receiveHttpsBody( _httpsConnection_t * pHttpsConnection,
+                                               _httpsResponse_t * pHttpsResponse );
+
+/**
+ * @brief Read the rest of any HTTP response that may be on the network.
+ *
+ * This reads the rest of any left over response data that might still be on the network buffers. We do not want this
+ * data left over because it will spill into the header and body buffers of next response that we try to receive.
+ *
+ * If we performed a request without a body and the headers received exceeds the size of the
+ * pHttpsResponse->pHeaders buffer, then we need to flush the network buffer.
+ *
+ * If the application configured the body buffer as null in IotHttpsResponseInfo_t.syncInfo.respData and the server
+ * sends body in the response, but it exceeds the size of  pHttpsResponse->pHeaders buffer, then we need to flush the
+ * network buffer.
+ *
+ * If the amount of body received on the network does not fit into a non-null IotHttpsResponseInfo_t.syncInfo.respData,
+ * then we need to flush the network buffer.
+ *
+ * If an asynchronous request cancels in the middle of a response process, after already sending the request message,
+ * then we need to flush the network buffer.
+ *
+ * @param[in] pHttpsConnection - HTTP connection context.
+ * @param[in] pHttpsResponse - HTTP response context.
+ *
+ * @return #IOT_HTTPS_OK if we successfully flushed the network data.
+ *         #IOT_HTTPS_PARSING_ERROR if there was an error with parsing the data.
+ *         #IOT_HTTPS_NETWORK_ERROR if there was an error receiving the data on the network.
+ */
+static IotHttpsReturnCode_t _flushHttpsNetworkData( _httpsConnection_t * pHttpsConnection,
+                                                    _httpsResponse_t * pHttpsResponse );
+
+/**
+ * @brief Task pool job routine to send the HTTP request within the pUserContext.
+ *
+ * @param[in] pTaskPool Pointer to the system task pool.
+ * @param[in] pJob Pointer the to the HTTP request sending job.
+ * @param[in] pContext Pointer to an HTTP request, passed as an opaque context.
+ */
+static void _sendHttpsRequest( IotTaskPool_t pTaskPool,
+                               IotTaskPoolJob_t pJob,
+                               void * pUserContext );
+
+
+/**
+ * @brief Receive the HTTPS body specific to an asynchronous type of response.
+ *
+ * @param[in] pHttpsResponse - HTTP response context.
+ *
+ * @return  #IOT_HTTPS_OK - If the the response body was received with no issues.
+ *          #IOT_HTTPS_RECEIVE_ABORT - If the request was cancelled by the Application
+ *          #IOT_HTTPS_PARSING_ERROR - If there was an issue parsing the HTTP response body.
+ *          #IOT_HTTPS_NETWORK_ERROR if there was an error receiving the data on the network.
+ */
+static IotHttpsReturnCode_t _receiveHttpsBodyAsync( _httpsResponse_t * pHttpsResponse );
+
+/**
+ * @brief Receive the HTTPS body specific to a synchronous type of response.
+ *
+ * @param[in] pHttpsResponse - HTTP response context.
+ *
+ * @return  #IOT_HTTPS_OK - If the the response body was received with no issues.
+ *          #IOT_HTTPS_MESSAGE_TOO_LARGE - If the body from the network is too large to fit into the configured body buffer.
+ *          #IOT_HTTPS_PARSING_ERROR - If there was an issue parsing the HTTP response body.
+ *          #IOT_HTTPS_NETWORK_ERROR if there was an error receiving the data on the network.
+ */
+static IotHttpsReturnCode_t _receiveHttpsBodySync( _httpsResponse_t * pHttpsResponse );
+
+/**
+ * @brief Schedule the task to send the the HTTP request.
+ *
+ * @param[in] pHttpsRequest - HTTP request context.
+ *
+ * @return  #IOT_HTTPS_OK - If the task to send the HTTP request was successfully scheduled.
+ *          #IOT_HTTPS_INTERNAL_ERROR - If a taskpool job could not be created.
+ *          #IOT_HTTPS_ASYNC_SCHEDULING_ERROR - If there was an error scheduling the job.
+ */
+IotHttpsReturnCode_t _scheduleHttpsRequestSend( _httpsRequest_t * pHttpsRequest );
+
+/**
+ * @brief Add the request to the connection's request queue.
+ *
+ * This will schedule a task if the request is first and only request in the queue.
+ *
+ * @param[in] pHttpsRequest - HTTP request context.
+ *
+ * @return  #IOT_HTTPS_OK - If the request was successfully added to the connection's request queue.
+ *          #IOT_HTTPS_INTERNAL_ERROR - If a taskpool job could not be created.
+ *          #IOT_HTTPS_ASYNC_SCHEDULING_ERROR - If there was an error scheduling the job.
+ */
+IotHttpsReturnCode_t _addRequestToConnectionReqQ( _httpsRequest_t * pHttpsRequest );
+
+/**
+ * @brief Cancel the HTTP request's processing.
+ *
+ * pHttpsRequest->cancelled will be checked and the request cancelled if specified so at the following intervals:
+ *  - Before sending the HTTPS headers at the start of the scheduled sending of the HTTPS request.
+ *  - After Sending the HTTPS headers.
+ *  - After Sending the HTTPS body.
+ *
+ * @param[in] pHttpsRequest - HTTP request context.
+ */
+static void _cancelRequest( _httpsRequest_t * pHttpsRequest );
+
+/**
+ * @brief Cancel the HTTP response's processing.
+ *
+ * pHttpsResponse->cancelled will be checked and the response cancelled if specified so at the following intervals:
+ *  - At the start of the network receive callback.
+ *  - After receiving the HTTPS headers.
+ *  - After Receiving the HTTPS body.
+ *
+ * @param[in] pHttpsResponse - HTTP response context.
+ */
+static void _cancelResponse( _httpsResponse_t * pHttpsResponse );
+
+/**
+ * @brief Initialize the input pHttpsResponse with pRespInfo.
+ *
+ * @param[in] pHttpsResponse - Non-null HTTP response context.
+ * @param[in] pRespInfo - Response configuration information.
+ * @param[in] pHttpsRequest - HTTP request to grab async information, persistence, and method from.
+ */
+static IotHttpsReturnCode_t _initializeResponse( IotHttpsResponseHandle_t * pRespHandle,
+                                                 IotHttpsResponseInfo_t * pRespInfo,
+                                                 _httpsRequest_t * pHttpsRequest );
+
+/**
+ * @brief Increment the pointer stored in pBufCur depending on the character found in there.
+ *
+ * This function increments the pHeadersCur pointer further if the message ended with a header line delimitter.
+ *
+ * @param[in] pBufCur - Pointer to the next location to write data into the buffer pBuf. This is a double pointer to update the response context buffer pointers.
+ * @param[in] pBufEnd - Pointer to the end of the buffer to receive the HTTP response into.
+ */
+static void _incrementNextLocationToWriteBeyondParsed( uint8_t ** pBufCur,
+                                                       uint8_t ** pBufEnd );
+
+/**
+ * @brief Send the HTTPS headers and body referenced in pHttpsRequest.
+ *
+ * Sends both the headers and body over the network.
+ *
+ * @param[in] pHttpsConnection - HTTPS connection context.
+ * @param[in] pHttpsRequest - HTTPS request context.
+ */
+static IotHttpsReturnCode_t _sendHttpsHeadersAndBody( _httpsConnection_t * pHttpsConnection,
+                                                      _httpsRequest_t * pHttpsRequest );
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Definition of the http-parser settings.
+ *
+ * The http_parser_settings holds all of the callbacks invoked by the http-parser.
+ */
+static http_parser_settings _httpParserSettings = { 0 };
+
+/*-----------------------------------------------------------*/
+
+static int _httpParserOnMessageBeginCallback( http_parser * pHttpParser )
+{
+    int retVal = KEEP_PARSING;
+
+    IotLogDebug( "Parser: Start of HTTPS Response message." );
+
+    _httpsResponse_t * pHttpsResponse = ( _httpsResponse_t * ) ( pHttpParser->data );
+    /* Set the state of the parser. The headers are at the start of the message always. */
+    pHttpsResponse->parserState = PARSER_STATE_IN_HEADERS;
+    return retVal;
+}
+
+/*-----------------------------------------------------------*/
+
+static int _httpParserOnStatusCallback( http_parser * pHttpParser,
+                                        const char * pLoc,
+                                        size_t length )
+{
+    _httpsResponse_t * pHttpsResponse = ( _httpsResponse_t * ) ( pHttpParser->data );
+
+    IotLogDebug( "Parser: Status %.*s retrieved from HTTPS response.", length, pLoc );
+
+    /* Save the status code so it can be retrieved with IotHttpsClient_ReadResponseStatus(). */
+    pHttpsResponse->status = ( uint16_t ) ( pHttpParser->status_code );
+
+    /* If we are parsing the network data received in the header buffer then we
+     * increment pHttpsResponse->pHeadersCur. The status line in the response is
+     * part of the data stored in header buffer _httpResponse->pHeaders. */
+    if( pHttpsResponse->bufferProcessingState == PROCESSING_STATE_FILLING_HEADER_BUFFER )
+    {
+        /* pHeadersCur will never exceed the pHeadersEnd here because PROCESSING_STATE_FILLING_HEADER_BUFFER
+         * indicates we are currently in the header buffer and the total size of the header buffer is passed
+         * into http_parser_execute() as the maximum length to parse. */
+        pHttpsResponse->pHeadersCur = ( uint8_t * ) ( pLoc += length );
+    }
+
+    return KEEP_PARSING;
+}
+
+/*-----------------------------------------------------------*/
+
+static int _httpParserOnHeaderFieldCallback( http_parser * pHttpParser,
+                                             const char * pLoc,
+                                             size_t length )
+{
+    IotLogDebug( "Parser: HTTPS header field parsed %.*s", length, pLoc );
+
+    _httpsResponse_t * pHttpsResponse = ( _httpsResponse_t * ) ( pHttpParser->data );
+
+    /* If we are parsing the network data received in the header buffer then we can increment
+     * pHttpsResponse->pHeadersCur. */
+    if( pHttpsResponse->bufferProcessingState == PROCESSING_STATE_FILLING_HEADER_BUFFER )
+    {
+        pHttpsResponse->pHeadersCur = ( uint8_t * ) ( pLoc += length );
+    }
+
+    /* If the IotHttpsClient_ReadHeader() was called, then we check for the header field of interest. */
+    if( pHttpsResponse->bufferProcessingState == PROCESSING_STATE_SEARCHING_HEADER_BUFFER )
+    {
+        if( pHttpsResponse->readHeaderFieldLength != length )
+        {
+            pHttpsResponse->foundHeaderField = false;
+        }
+        else if( strncmp( pHttpsResponse->pReadHeaderField, pLoc, length ) == 0 )
+        {
+            pHttpsResponse->foundHeaderField = true;
+        }
+    }
+
+    return KEEP_PARSING;
+}
+
+/*-----------------------------------------------------------*/
+
+static int _httpParserOnHeaderValueCallback( http_parser * pHttpParser,
+                                             const char * pLoc,
+                                             size_t length )
+{
+    int retVal = KEEP_PARSING;
+
+    IotLogDebug( "Parser: HTTPS header value parsed %.*s", length, pLoc );
+    _httpsResponse_t * pHttpsResponse = ( _httpsResponse_t * ) ( pHttpParser->data );
+
+    /* If we are parsing the network data received in the header buffer then we can increment
+     * pHttpsResponse->pHeadersCur. */
+    if( pHttpsResponse->bufferProcessingState == PROCESSING_STATE_FILLING_HEADER_BUFFER )
+    {
+        pHttpsResponse->pHeadersCur = ( uint8_t * ) ( pLoc += length );
+    }
+
+    /* If the IotHttpsClient_ReadHeader() was called, then we check if we found the header field of interest. */
+    if( pHttpsResponse->bufferProcessingState == PROCESSING_STATE_SEARCHING_HEADER_BUFFER )
+    {
+        if( pHttpsResponse->foundHeaderField )
+        {
+            pHttpsResponse->pReadHeaderValue = ( char * ) ( pLoc );
+            pHttpsResponse->readHeaderValueLength = length;
+            /* We found a header field so we don't want to keep parsing.*/
+            retVal = STOP_PARSING;
+        }
+    }
+
+    return retVal;
+}
+
+/*-----------------------------------------------------------*/
+
+static int _httpParserOnHeadersCompleteCallback( http_parser * pHttpParser )
+{
+    IotLogDebug( "Parser: End of the headers reached." );
+
+    int retVal = KEEP_PARSING;
+    _httpsResponse_t * pHttpsResponse = ( _httpsResponse_t * ) ( pHttpParser->data );
+    pHttpsResponse->parserState = PARSER_STATE_HEADERS_COMPLETE;
+
+    /* If the IotHttpsClient_ReadHeader() was called, we return after finishing looking through all of the headers.
+     * Returning a non-zero value exits the http parsing. */
+    if( pHttpsResponse->bufferProcessingState == PROCESSING_STATE_SEARCHING_HEADER_BUFFER )
+    {
+        retVal = STOP_PARSING;
+    }
+
+    /* When in this callback the pHeaderCur pointer is at the first "\r" in the last header line. HTTP/1.1
+     * headers end with another "\r\n" at the end of the last line. This means we must increment
+     * the headerCur pointer to the length of "\r\n\r\n". */
+    if( pHttpsResponse->bufferProcessingState == PROCESSING_STATE_FILLING_HEADER_BUFFER )
+    {
+        pHttpsResponse->pHeadersCur += ( 2 * HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH );
+    }
+
+    if( pHttpsResponse->bufferProcessingState < PROCESSING_STATE_FINISHED )
+    {
+        /* For a HEAD method, there is no body expected in the response, so we return 1 to skip body parsing. */
+        if( ( pHttpsResponse->method == IOT_HTTPS_METHOD_HEAD ) )
+        {
+            retVal = STOP_PARSING;
+
+            /* Since the message is considered complete now for a HEAD response, then we set the parser state
+             * to the completed state. */
+            pHttpsResponse->parserState = PARSER_STATE_BODY_COMPLETE;
+        }
+
+        /* If this is NOT a HEAD method and there is body configured, but the server does not send a body in the
+         * response, then the body buffer will be filled with the zeros from rest of the header buffer. http-parser
+         * will invoke the on_body callback and consider the zeros following the headers as body. */
+
+        /* If there is not body configured for a synchronous reponse, we do not stop the parser from continueing. */
+
+        /* Skipping the body will cause the parser to invoke the _httpParserOnMessageComplete() callback. This is
+         * not desired when there is actaully HTTP response body sent by the server because this will set the parser
+         * state to PARSER_STATE_BODY_COMPLETE. If this state is set then the rest of possible body will not be
+         * flushed out. The network flush looks for the state being PARSER_STATE_BODY_COMPLETE to finish flushing. */
+    }
+
+    return retVal;
+}
+
+/*-----------------------------------------------------------*/
+
+static int _httpParserOnBodyCallback( http_parser * pHttpParser,
+                                      const char * pLoc,
+                                      size_t length )
+{
+    IotLogDebug( "Parser: Reached the HTTPS message body. It is of length: %d", length );
+
+    _httpsResponse_t * pHttpsResponse = ( _httpsResponse_t * ) ( pHttpParser->data );
+    pHttpsResponse->parserState = PARSER_STATE_IN_BODY;
+
+    /* If the header buffer is currently being processed, but HTTP response body was found, then for an asynchronous
+     * request this if-case saves where the body is located. In the asynchronous case, the body buffer is not available
+     * until the readReadyCallback is invoked, which happens after the headers are processed.  */
+    if( ( pHttpsResponse->bufferProcessingState == PROCESSING_STATE_FILLING_HEADER_BUFFER ) && ( pHttpsResponse->isAsync ) )
+    {
+        /* For an asynchronous response, the buffer to store the body will be available after the headers
+         * are read first. We may receive part of the body in the header buffer. We will want to leave this here
+         * and copy it over when the body buffer is available in the _readReadyCallback().
+         */
+        if( pHttpsResponse->pBodyInHeaderBuf == NULL )
+        {
+            pHttpsResponse->pBodyInHeaderBuf = ( uint8_t * ) ( pLoc );
+            pHttpsResponse->pBodyCurInHeaderBuf = pHttpsResponse->pBodyInHeaderBuf;
+        }
+
+        /* If there is a chunk encoded body in the header buffer, we will want to overwrite the chunk headers with the
+         * actual body. This is so that when the application calls IotHttpsClient_ReadResponseBody(), in the
+         * readReadyCallback(), we can pass the body into the body buffer provided right away. */
+        if( pHttpsResponse->pBodyCurInHeaderBuf != ( uint8_t * ) pLoc )
+        {
+            memcpy( pHttpsResponse->pBodyCurInHeaderBuf, pLoc, length );
+        }
+
+        pHttpsResponse->pBodyCurInHeaderBuf += length;
+    }
+    else if( pHttpsResponse->bufferProcessingState < PROCESSING_STATE_FINISHED )
+    {
+        /* Has the user provided a buffer and is it large enough to fit the body? The
+         * case of body buffer not being large enough can happen if the body was received
+         * in the header buffer and the body buffer can not fit in all the body. */
+        if( ( pHttpsResponse->pBodyCur != NULL ) && ( pHttpsResponse->pBodyEnd - pHttpsResponse->pBodyCur > 0 ) )
+        {
+            /* There are two scenarios when we need to copy data around:
+             * 1. Some or all of the response body may have been received in the header
+             * buffer. If that is the case, we copy the response body received in the
+             * header buffer to the user provided body buffer.
+             * 2. When we receive chunked header, the actual body is separated in
+             * multiple chunks which are preceeded by length. For example, a chunked
+             * body may look like:
+             *
+             * 7\r\n
+             * Mozilla\r\n
+             * 9\r\n
+             * Developer\r\n
+             * 7\r\n
+             * Network\r\n
+             * 0\r\n
+             * \r\n
+             *
+             * In this case, we want the parsed body buffer to contain actual body only
+             * (MozillaDeveloperNetwork in the above example).
+             */
+
+            /* If the response body found by the parser (pLoc) is not equal to the
+             * current writable location in the body buffer (_httpsResponse->pBodyCur),
+             * it indicates that:
+             * - Either the data is in the header buffer and needs to be copied into the
+             * body buffer.
+             * - Or it is a chunked response and the data needs to be moved up in the
+             * body buffer. */
+            if( ( pHttpsResponse->pBodyCur + length ) <= pHttpsResponse->pBodyEnd )
+            {
+                if( pHttpsResponse->pBodyCur != ( uint8_t * ) pLoc )
+                {
+                    memcpy( pHttpsResponse->pBodyCur, pLoc, length );
+                }
+
+                pHttpsResponse->pBodyCur += length;
+            }
+        }
+    }
+
+    return KEEP_PARSING;
+}
+
+/*-----------------------------------------------------------*/
+
+static int _httpParserOnMessageCompleteCallback( http_parser * pHttpParser )
+{
+    IotLogDebug( "Parser: End of the HTTPS message reached." );
+
+    _httpsResponse_t * pHttpsResponse = ( _httpsResponse_t * ) ( pHttpParser->data );
+    pHttpsResponse->parserState = PARSER_STATE_BODY_COMPLETE;
+
+    /* This callback is invoked when the complete HTTP response has been received.
+     * We tell the parser to parse the whole body buffer as opposed to the size of
+     * the response body. For example, if the size of the body buffer is 1000 but
+     * the size of the actual body is 500, we tell the parser to parse the whole
+     * buffer of length 1000. We do zero out the buffer in the beginning so that all
+     * the buffer after the actual body contains zeros. We return greater than zero to stop parsing
+     * since the end of the HTTP message has been reached. Any data beyond the end of the message is
+     * ignored. */
+    return STOP_PARSING;
+}
+
+/*-----------------------------------------------------------*/
+
+/* This code prints debugging information and is, therefore, compiled only when
+ * log level is set to IOT_LOG_DEBUG. */
+#if ( LIBRARY_LOG_LEVEL == IOT_LOG_DEBUG )
+    static int _httpParserOnChunkHeaderCallback( http_parser * pHttpParser )
+    {
+        ( void ) pHttpParser;
+        IotLogDebug( "Parser: HTTPS message Chunked encoding header callback." );
+        IotLogDebug( "Parser: HTTPS message Chunk size: %d", pHttpParser->content_length );
+        return 0;
+    }
+
+/*-----------------------------------------------------------*/
+
+    static int _httpParserOnChunkCompleteCallback( http_parser * pHttpParser )
+    {
+        ( void ) pHttpParser;
+        IotLogDebug( "End of a HTTPS message Chunk complete callback." );
+        return 0;
+    }
+#endif /* if ( LIBRARY_LOG_LEVEL == IOT_LOG_DEBUG ) */
+
+/*-----------------------------------------------------------*/
+
+static IotHttpsReturnCode_t _receiveHttpsBodyAsync( _httpsResponse_t * pHttpsResponse )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    if( pHttpsResponse->pCallbacks->readReadyCallback )
+    {
+        /* If there is still more body that has not been passed back to the user, then this callback is invoked again. */
+        do
+        {
+            IotLogDebug( "Invoking the readReadyCallback." );
+            pHttpsResponse->pCallbacks->readReadyCallback( pHttpsResponse->pUserPrivData,
+                                                           pHttpsResponse,
+                                                           pHttpsResponse->bodyRxStatus,
+                                                           pHttpsResponse->status );
+
+            if( pHttpsResponse->cancelled == true )
+            {
+                IotLogDebug( "Cancelled HTTP response %d.", pHttpsResponse );
+                status = IOT_HTTPS_RECEIVE_ABORT;
+
+                /* We break out of the loop and do not goto clean up because we want to print debugging logs for
+                 * the parser state and the networks status. */
+                break;
+            }
+        } while( ( pHttpsResponse->parserState < PARSER_STATE_BODY_COMPLETE ) && ( pHttpsResponse->bodyRxStatus == IOT_HTTPS_OK ) );
+
+        if( HTTPS_FAILED( pHttpsResponse->bodyRxStatus ) )
+        {
+            IotLogError( "Error receiving the HTTP response body for response %d. Error code: %d",
+                         pHttpsResponse,
+                         pHttpsResponse->bodyRxStatus );
+            /* An error in the network or the parser takes precedence  */
+            status = pHttpsResponse->bodyRxStatus;
+        }
+
+        if( pHttpsResponse->parserState < PARSER_STATE_BODY_COMPLETE )
+        {
+            IotLogDebug( "Did not receive all of the HTTP response body for response %d.",
+                         pHttpsResponse );
+        }
+    }
+
+    /* This GOTO cleanup is here for compiler warnings about using HTTPS_FUNCTION_EXIT_NO_CLEANUP() without a
+     * corresponding goto. */
+    HTTPS_GOTO_CLEANUP();
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+static IotHttpsReturnCode_t _receiveHttpsBodySync( _httpsResponse_t * pHttpsResponse )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+    _httpsConnection_t * pHttpsConnection = pHttpsResponse->pHttpsConnection;
+
+    /* The header buffer is now filled or the end of the headers has been reached already. If part of the response
+     *  body was read from the network into the header buffer, then it was already copied to the body buffer in the
+     *  _httpParserOnBodyCallback(). */
+    if( pHttpsResponse->pBody != NULL )
+    {
+        /* If there is room left in the body buffer and we have not received the whole response body,
+         * then try to receive more. */
+        if( ( ( pHttpsResponse->pBodyEnd - pHttpsResponse->pBodyCur ) > 0 ) &&
+            ( pHttpsResponse->parserState < PARSER_STATE_BODY_COMPLETE ) )
+        {
+            status = _receiveHttpsBody( pHttpsConnection,
+                                        pHttpsResponse );
+
+            if( HTTPS_FAILED( status ) )
+            {
+                IotLogError( "Error receiving the HTTPS response body for response %d. Error code: %d.",
+                             pHttpsResponse,
+                             status );
+                HTTPS_GOTO_CLEANUP();
+            }
+        }
+        else
+        {
+            IotLogDebug( "Received the maximum amount of HTTP body when filling the header buffer for response %d.",
+                         pHttpsResponse );
+        }
+
+        /* If we don't reach the end of the HTTPS body in the parser, then we only received part of the body.
+         *  The rest of body will be on the network socket. */
+        if( HTTPS_SUCCEEDED( status ) && ( pHttpsResponse->parserState < PARSER_STATE_BODY_COMPLETE ) )
+        {
+            IotLogError( "HTTPS response body does not fit into application provided response buffer at location 0x%x "
+                         "with length: %d",
+                         pHttpsResponse->pBody,
+                         pHttpsResponse->pBodyEnd - pHttpsResponse->pBody );
+            HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_MESSAGE_TOO_LARGE );
+        }
+    }
+    else
+    {
+        IotLogDebug( "No response body was configure for response %d.", pHttpsResponse );
+    }
+
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+static void _networkReceiveCallback( void * pNetworkConnection,
+                                     void * pReceiveContext )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    IotHttpsReturnCode_t flushStatus = IOT_HTTPS_OK;
+    IotHttpsReturnCode_t disconnectStatus = IOT_HTTPS_OK;
+    IotHttpsReturnCode_t scheduleStatus = IOT_HTTPS_OK;
+    _httpsConnection_t * pHttpsConnection = ( _httpsConnection_t * ) pReceiveContext;
+    _httpsResponse_t * pCurrentHttpsResponse = NULL;
+    _httpsRequest_t * pNextHttpsRequest = NULL;
+    IotLink_t * pQItem = NULL;
+    bool fatalDisconnect = false;
+
+    /* The network connection is already in the connection context. */
+    ( void ) pNetworkConnection;
+
+    /* Get the response from the response queue. */
+    IotMutex_Lock( &( pHttpsConnection->connectionMutex ) );
+    pQItem = IotDeQueue_PeekHead( &( pHttpsConnection->respQ ) );
+    IotMutex_Unlock( &( pHttpsConnection->connectionMutex ) );
+
+    /* If the receive callback is invoked and there is no response expected, then this a violation of the HTTP/1.1
+     * protocol. */
+    if( pQItem == NULL )
+    {
+        IotLogError( "Received data on the network, when no response was expected..." );
+        fatalDisconnect = true;
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_NETWORK_ERROR );
+    }
+
+    /* Set the current HTTP response context to use. */
+    pCurrentHttpsResponse = IotLink_Container( _httpsResponse_t, pQItem, link );
+
+    /* If the receive callback has invoked, but the request associated with this response has not finished sending
+     * to the server, then this is a violation of the HTTP/1.1 protocol.  */
+    if( pCurrentHttpsResponse->reqFinishedSending == false )
+    {
+        IotLogError( "Received response data on the network when the request was not finished sending. This is unexpected." );
+        fatalDisconnect = true;
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_NETWORK_ERROR );
+    }
+
+    /* If the current response was cancelled, then don't bother receiving the headers and body. */
+    if( pCurrentHttpsResponse->cancelled )
+    {
+        IotLogDebug( "Response ID: %d was cancelled.", pCurrentHttpsResponse );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_RECEIVE_ABORT );
+    }
+
+    /* Reset the http-parser state to an initial state. This is done so that a new response can be parsed from the
+     * beginning. */
+    pCurrentHttpsResponse->parserState = PARSER_STATE_NONE;
+
+    /* Receive the response from the network. */
+    /* Receive the headers first. */
+    status = _receiveHttpsHeaders( pHttpsConnection, pCurrentHttpsResponse );
+
+    if( HTTPS_FAILED( status ) )
+    {
+        if( status == IOT_HTTPS_PARSING_ERROR )
+        {
+            /* There was an error parsing the HTTPS response body. This may be an indication of a server that does
+             *  not adhere to protocol correctly. We should disconnect. */
+            IotLogError( "Failed to parse the HTTPS headers for response %d, Error code: %d.",
+                         pCurrentHttpsResponse,
+                         status );
+            fatalDisconnect = true;
+        }
+        else if( status == IOT_HTTPS_NETWORK_ERROR )
+        {
+            /* Given the function signature of IotNetworkInterface_t.receive, we can only receive 0 to the number of bytes
+             * requested. Receiving less than the number of bytes requests is OK since we do not how much data is expected, so
+             * we ask for the full size of the receive buffer. Thereofore, the only error that can be returned from receiving
+             * the headers or body is a timeout. We always disconnect from the network when there is a timeout because the
+             * server may be slow to respond. If the server happens to send the response later at the same time another response
+             * is waiting in the queue, then the workflow is corrupted. Pipelining is not current supported in this library. */
+            IotLogError( "Network error receiving the HTTPS headers for response %d. Error code: %d",
+                         pCurrentHttpsResponse,
+                         status );
+            fatalDisconnect = true;
+        }
+        else /* Any other error. */
+        {
+            IotLogError( "Failed to retrive the HTTPS body for response %d. Error code: %d", pCurrentHttpsResponse, status );
+        }
+
+        HTTPS_GOTO_CLEANUP();
+    }
+
+    /* Check if we received all of the headers into the header buffer. */
+    if( pCurrentHttpsResponse->parserState < PARSER_STATE_HEADERS_COMPLETE )
+    {
+        IotLogDebug( "Headers received on the network did not all fit into the configured header buffer for response %d."
+                     " The length of the headers buffer is: %d",
+                     pCurrentHttpsResponse,
+                     pCurrentHttpsResponse->pHeadersEnd - pCurrentHttpsResponse->pHeaders );
+        /* It is not error if the headers did not all fit into the buffer. */
+    }
+
+    /* Receive the body. */
+    if( pCurrentHttpsResponse->isAsync )
+    {
+        status = _receiveHttpsBodyAsync( pCurrentHttpsResponse );
+    }
+    else
+    {
+        /* Otherwise receive synchronously. */
+        status = _receiveHttpsBodySync( pCurrentHttpsResponse );
+    }
+
+    if( HTTPS_FAILED( status ) )
+    {
+        if( status == IOT_HTTPS_RECEIVE_ABORT )
+        {
+            /* If the request was cancelled, this is logged, but does not close the connection. */
+            IotLogDebug( "User cancelled during the async readReadyCallback() for response %d.",
+                         pCurrentHttpsResponse );
+        }
+        else if( status == IOT_HTTPS_PARSING_ERROR )
+        {
+            /* There was an error parsing the HTTPS response body. This may be an indication of a server that does
+             *  not adhere to protocol correctly. We should disconnect. */
+            IotLogError( "Failed to parse the HTTPS body for response %d, Error code: %d.",
+                         pCurrentHttpsResponse,
+                         status );
+            fatalDisconnect = true;
+        }
+        else if( status == IOT_HTTPS_NETWORK_ERROR )
+        {
+            /* We walways disconnect for a network error because failure to receive the HTTPS body will result in a
+             * corruption of the workflow. */
+            IotLogError( "Network error receiving the HTTPS body for response %d. Error code: %d",
+                         pCurrentHttpsResponse,
+                         status );
+            fatalDisconnect = true;
+        }
+        else /* Any other error. */
+        {
+            IotLogError( "Failed to retrive the HTTPS body for response %d. Error code: %d", pCurrentHttpsResponse, status );
+        }
+
+        HTTPS_GOTO_CLEANUP();
+    }
+
+    IOT_FUNCTION_CLEANUP_BEGIN();
+
+    /* Report errors back to the application. */
+    if( HTTPS_FAILED( status ) )
+    {
+        if( pCurrentHttpsResponse->isAsync && pCurrentHttpsResponse->pCallbacks->errorCallback )
+        {
+            pCurrentHttpsResponse->pCallbacks->errorCallback( pCurrentHttpsResponse->pUserPrivData, NULL, pCurrentHttpsResponse, status );
+        }
+
+        pCurrentHttpsResponse->syncStatus = status;
+    }
+
+    /* If this is not a persistent request, the server would have closed it after sending a response, but we
+     * disconnect anyways. If we are disconnecting there is is no point in wasting time
+     * flushing the network. If the network is being disconnected we also do not schedule any pending requests. */
+    if( fatalDisconnect || pCurrentHttpsResponse->isNonPersistent )
+    {
+        IotLogDebug( "Disconnecting response %d.", pCurrentHttpsResponse );
+        disconnectStatus = IotHttpsClient_Disconnect( pHttpsConnection );
+
+        if( ( pCurrentHttpsResponse != NULL ) && pCurrentHttpsResponse->isAsync && pCurrentHttpsResponse->pCallbacks->connectionClosedCallback )
+        {
+            pCurrentHttpsResponse->pCallbacks->connectionClosedCallback( pCurrentHttpsResponse->pUserPrivData, pHttpsConnection, disconnectStatus );
+        }
+
+        if( HTTPS_FAILED( disconnectStatus ) )
+        {
+            IotLogWarn( "Failed to disconnect response %d. Error code: %d.", pCurrentHttpsResponse, disconnectStatus );
+        }
+
+        /* If we disconnect, we do not process anymore requests. */
+    }
+    else
+    {
+        /* Set the processing state of the buffer to finished for completeness. This is also to prevent the parsing of the flush
+         * data from incrementing any pointer in the HTTP response context. */
+        pCurrentHttpsResponse->bufferProcessingState = PROCESSING_STATE_FINISHED;
+
+        /* Flush the socket of the rest of the data if there is data left from this response. We need to do this
+         * so that for the next request on this connection, there is not left over response from this request in
+         * the next response buffer.
+         *
+         * If a continuous stream of data is coming in from the connection, with an unknown end, we may not be able to
+         * flush the network data. It may sit here forever. A continuous stream should be ingested with the async workflow.
+         *
+         * All network errors are ignore here because network read will have read the data from network buffer despite
+         * errors. */
+        flushStatus = _flushHttpsNetworkData( pHttpsConnection, pCurrentHttpsResponse );
+
+        if( flushStatus == IOT_HTTPS_PARSING_ERROR )
+        {
+            IotLogWarn( "There an error parsing the network flush data. The network buffer might not be fully flushed." );
+        }
+        else if( flushStatus != IOT_HTTPS_OK )
+        {
+            IotLogDebug( "Network error when flushing the https network data: %d", flushStatus );
+        }
+
+        IotMutex_Lock( &( pHttpsConnection->connectionMutex ) );
+        /* Get the next request to process. */
+        pQItem = IotDeQueue_PeekHead( &( pHttpsConnection->reqQ ) );
+        IotMutex_Unlock( &( pHttpsConnection->connectionMutex ) );
+
+        /* If there is a next request to process, then create a taskpool job to send the request. */
+        if( pQItem != NULL )
+        {
+            /* Set this next request to send. */
+            pNextHttpsRequest = IotLink_Container( _httpsRequest_t, pQItem, link );
+
+            if( pNextHttpsRequest->scheduled == false )
+            {
+                IotLogDebug( "Request %d is next in the queue. Now scheduling a task to send the request.", pNextHttpsRequest );
+                scheduleStatus = _scheduleHttpsRequestSend( pNextHttpsRequest );
+
+                /* If there was an error with scheduling the new task, then report it. */
+                if( HTTPS_FAILED( scheduleStatus ) )
+                {
+                    IotLogError( "Error scheduling HTTPS request %d. Error code: %d", pNextHttpsRequest, scheduleStatus );
+
+                    if( pNextHttpsRequest->isAsync && pNextHttpsRequest->pCallbacks->errorCallback )
+                    {
+                        pNextHttpsRequest->pCallbacks->errorCallback( pNextHttpsRequest->pUserPrivData, pNextHttpsRequest, NULL, scheduleStatus );
+                    }
+                    else
+                    {
+                        pNextHttpsRequest->pHttpsResponse->syncStatus = scheduleStatus;
+                    }
+                }
+            }
+        }
+        else
+        {
+            IotLogDebug( "Network receive callback found the request queue empty. A network send task was not scheduled." );
+        }
+    }
+
+    /* Dequeue response from the response queue now that it is finished. */
+    IotMutex_Lock( &( pHttpsConnection->connectionMutex ) );
+
+    /* There could be a scenario where the request fails to send and the network server still responds,
+     * In this case, the failed response will have been cancelled and removed from the queue. If the network
+     * server still got a response, then the safest way to remove the current response is to remove it explicitly
+     * from the queue instead of dequeuing the header of the queue which might not be the current response. */
+    if( IotLink_IsLinked( &( pCurrentHttpsResponse->link ) ) )
+    {
+        IotDeQueue_Remove( &( pCurrentHttpsResponse->link ) );
+    }
+
+    IotMutex_Unlock( &( pHttpsConnection->connectionMutex ) );
+
+    /* Signal to a synchronous reponse that the response is complete. */
+    if( pCurrentHttpsResponse->isAsync && pCurrentHttpsResponse->pCallbacks->responseCompleteCallback )
+    {
+        pCurrentHttpsResponse->pCallbacks->responseCompleteCallback( pCurrentHttpsResponse->pUserPrivData, pCurrentHttpsResponse, status, pCurrentHttpsResponse->status );
+    }
+
+    /* For a synchronous request release the semaphore. */
+    if( pCurrentHttpsResponse->isAsync == false )
+    {
+        IotSemaphore_Post( &( pCurrentHttpsResponse->respFinishedSem ) );
+    }
+}
+
+/*-----------------------------------------------------------*/
+
+static IotHttpsReturnCode_t _createHttpsConnection( IotHttpsConnectionHandle_t * pConnHandle,
+                                                    IotHttpsConnectionInfo_t * pConnInfo )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    IotNetworkError_t networkStatus = IOT_NETWORK_SUCCESS;
+
+    /* The maximum string length of the ALPN protocols is configured in IOT_HTTPS_MAX_ALPN_PROTOCOLS_LENGTH.
+     * The +1 is for the NULL terminator needed by IotNetworkCredentials_t.pAlpnProtos. */
+    char pAlpnProtos[ IOT_HTTPS_MAX_ALPN_PROTOCOLS_LENGTH + 1 ] = { 0 };
+
+    /* The maximum string length of the Server host name is configured in IOT_HTTPS_MAX_HOST_NAME_LENGTH.
+     * This +1 is for the NULL terminator needed by IotNetworkServerInfo_t.pHostName. */
+    char pHostName[ IOT_HTTPS_MAX_HOST_NAME_LENGTH + 1 ] = { 0 };
+    bool connectionMutexCreated = false;
+    IotNetworkServerInfo_t networkServerInfo = { 0 };
+    IotNetworkCredentials_t networkCredentials = { 0 };
+    _httpsConnection_t * pHttpsConnection = NULL;
+    IotNetworkCredentials_t * pNetworkCredentials = NULL;
+
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pConnInfo->userBuffer.pBuffer );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pConnInfo->pNetworkInterface );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pConnInfo->pAddress );
+    HTTPS_ON_ARG_ERROR_GOTO_CLEANUP( pConnInfo->addressLen > 0 );
+
+    /* Make sure the connection context can fit in the user buffer. */
+    HTTPS_ON_ARG_ERROR_MSG_GOTO_CLEANUP( pConnInfo->userBuffer.bufferLen >= connectionUserBufferMinimumSize,
+                                         IOT_HTTPS_INSUFFICIENT_MEMORY,
+                                         "Buffer size is too small to initialize the connection context. User buffer size: %d, required minimum size; %d.",
+                                         ( *pConnInfo ).userBuffer.bufferLen,
+                                         connectionUserBufferMinimumSize );
+
+    /* Make sure that the server address does not exceed the maximum permitted length. */
+    HTTPS_ON_ARG_ERROR_MSG_GOTO_CLEANUP( pConnInfo->addressLen <= IOT_HTTPS_MAX_HOST_NAME_LENGTH,
+                                         IOT_HTTPS_INVALID_PARAMETER,
+                                         "IotHttpsConnectionInfo_t.addressLen has a host name length %d that exceeds maximum length %d.",
+                                         pConnInfo->addressLen,
+                                         IOT_HTTPS_MAX_HOST_NAME_LENGTH );
+
+    /* Make sure that the ALPN protocols does not exceed the maximum permitted length. */
+    HTTPS_ON_ARG_ERROR_MSG_GOTO_CLEANUP( pConnInfo->alpnProtocolsLen <= IOT_HTTPS_MAX_ALPN_PROTOCOLS_LENGTH,
+                                         IOT_HTTPS_INVALID_PARAMETER,
+                                         "IotHttpsConnectionInfo_t.alpnProtocolsLen of %d exceeds the configured maximum protocol length %d. See IOT_HTTPS_MAX_ALPN_PROTOCOLS_LENGTH for more information.",
+                                         pConnInfo->alpnProtocolsLen,
+                                         IOT_HTTPS_MAX_ALPN_PROTOCOLS_LENGTH );
+
+    pHttpsConnection = ( _httpsConnection_t * ) ( pConnInfo->userBuffer.pBuffer );
+
+    /* Start with the disconnected state. */
+    pHttpsConnection->isConnected = false;
+
+    /* Initialize disconnection state keeper. */
+    pHttpsConnection->isDestroyed = false;
+
+    /* Initialize the queue of responses and requests. */
+    IotDeQueue_Create( &( pHttpsConnection->reqQ ) );
+    IotDeQueue_Create( &( pHttpsConnection->respQ ) );
+
+    /* This timeout is used to wait for a response on the connection as well as
+     * for the timeout for the connect operation. */
+    if( pConnInfo->timeout == 0 )
+    {
+        pHttpsConnection->timeout = IOT_HTTPS_RESPONSE_WAIT_MS;
+    }
+    else
+    {
+        pHttpsConnection->timeout = pConnInfo->timeout;
+    }
+
+    /* pNetworkInterface contains all the routines to be able to send/receive data on the network. */
+    pHttpsConnection->pNetworkInterface = pConnInfo->pNetworkInterface;
+
+    /* The address from the connection configuration information is copied to a local buffer because a NULL pointer
+     * is required in IotNetworkServerInfo_t.pHostName. IotNetworkServerInfo_t contains the server information needed
+     * by the network interface to create the connection. */
+    memcpy( pHostName, pConnInfo->pAddress, pConnInfo->addressLen );
+    pHostName[ pConnInfo->addressLen ] = '\0';
+    /* Set it in the IOT network abstractions server information parameter. */
+    networkServerInfo.pHostName = pHostName;
+    networkServerInfo.port = pConnInfo->port;
+
+    /* If this is TLS connection, then set the network credentials. */
+    if( ( pConnInfo->flags & IOT_HTTPS_IS_NON_TLS_FLAG ) == 0 )
+    {
+        if( pConnInfo->flags & IOT_HTTPS_DISABLE_SNI )
+        {
+            networkCredentials.disableSni = true;
+        }
+        else
+        {
+            networkCredentials.disableSni = false;
+        }
+
+        if( pConnInfo->pAlpnProtocols != NULL )
+        {
+            /* The alpn protocol strings in IotNetworkCredentials_t require a NULL terminator, so the alpn protocol
+             * string in the connection configuration information is copied to a local buffer to append the NULL
+             * terminator. */
+            memcpy( pAlpnProtos, pConnInfo->pAlpnProtocols, pConnInfo->alpnProtocolsLen );
+            pAlpnProtos[ pConnInfo->alpnProtocolsLen ] = '\0';
+            networkCredentials.pAlpnProtos = pAlpnProtos;
+        }
+        else
+        {
+            networkCredentials.pAlpnProtos = NULL;
+        }
+
+        /* If any of these are NULL a network error will result when trying to make the connection. Because there is
+         * no invalid memory access resulting from these configurations being NULL, it is not check at the start
+         * of the function. */
+        networkCredentials.pRootCa = pConnInfo->pCaCert;
+        networkCredentials.rootCaSize = pConnInfo->caCertLen;
+        networkCredentials.pClientCert = pConnInfo->pClientCert;
+        networkCredentials.clientCertSize = pConnInfo->clientCertLen;
+        networkCredentials.pPrivateKey = pConnInfo->pPrivateKey;
+        networkCredentials.privateKeySize = pConnInfo->privateKeyLen;
+
+        pNetworkCredentials = &networkCredentials;
+    }
+    else
+    {
+        /* create() takes a NULL if there is no TLS configuration. */
+        pNetworkCredentials = NULL;
+    }
+
+    /* create() will connect to the server specified in addition to creating other network layer
+     *  specific resources. */
+    networkStatus = pHttpsConnection->pNetworkInterface->create( &networkServerInfo,
+                                                                 pNetworkCredentials,
+                                                                 &( pHttpsConnection->pNetworkConnection ) );
+
+    /* Check to see if the network connection succeeded. If it did not succeed,
+     * then the output parameter pConnHandle will be used to return NULL and the
+     * function returns an error. */
+    if( networkStatus != IOT_NETWORK_SUCCESS )
+    {
+        IotLogError( "Failed to connect to the server at %.*s on port %d with error: %d",
+                     pConnInfo->addressLen,
+                     pConnInfo->pAddress,
+                     pConnInfo->port,
+                     networkStatus );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_CONNECTION_ERROR );
+    }
+
+    /* The connection succeeded so set the state to connected. */
+    pHttpsConnection->isConnected = true;
+
+    /* The receive callback is invoked by the network layer when data is ready
+     * to be read from the network. */
+    networkStatus = pHttpsConnection->pNetworkInterface->setReceiveCallback( pHttpsConnection->pNetworkConnection,
+                                                                             _networkReceiveCallback,
+                                                                             pHttpsConnection );
+
+    if( networkStatus != IOT_NETWORK_SUCCESS )
+    {
+        IotLogError( "Failed to connect to set the HTTPS receive callback. " );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_INTERNAL_ERROR );
+    }
+
+    /* Connection was successful, so create synchronization primitives. */
+
+    connectionMutexCreated = IotMutex_Create( &( pHttpsConnection->connectionMutex ), false );
+
+    if( !connectionMutexCreated )
+    {
+        IotLogError( "Failed to create an internal mutex." );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_INTERNAL_ERROR );
+    }
+
+    /* Return the new connection information. */
+    *pConnHandle = pHttpsConnection;
+
+    HTTPS_FUNCTION_CLEANUP_BEGIN();
+
+    /* If we failed anywhere in the connection process, then destroy the semaphores created. */
+    if( HTTPS_FAILED( status ) )
+    {
+        /* If there was a connect was successful, disconnect from the network.  */
+        if( ( pHttpsConnection != NULL ) && ( pHttpsConnection->isConnected ) )
+        {
+            _networkDisconnect( pHttpsConnection );
+            _networkDestroy( pHttpsConnection );
+        }
+
+        if( connectionMutexCreated )
+        {
+            IotMutex_Destroy( &( pHttpsConnection->connectionMutex ) );
+        }
+
+        /* Set the connection handle as NULL if everything failed. */
+        *pConnHandle = NULL;
+    }
+
+    HTTPS_FUNCTION_CLEANUP_END();
+}
+
+/*-----------------------------------------------------------*/
+
+static void _networkDisconnect( _httpsConnection_t * pHttpsConnection )
+{
+    IotNetworkError_t networkStatus = IOT_NETWORK_SUCCESS;
+
+    networkStatus = pHttpsConnection->pNetworkInterface->close( pHttpsConnection->pNetworkConnection );
+
+    if( networkStatus != IOT_NETWORK_SUCCESS )
+    {
+        IotLogWarn( "Failed to shutdown the socket with error code: %d", networkStatus );
+    }
+}
+
+/*-----------------------------------------------------------*/
+
+static void _networkDestroy( _httpsConnection_t * pHttpsConnection )
+{
+    IotNetworkError_t networkStatus = IOT_NETWORK_SUCCESS;
+
+    networkStatus = pHttpsConnection->pNetworkInterface->destroy( pHttpsConnection->pNetworkConnection );
+
+    if( networkStatus != IOT_NETWORK_SUCCESS )
+    {
+        IotLogWarn( "Failed to shutdown the socket with error code: %d", networkStatus );
+    }
+}
+
+/*-----------------------------------------------------------*/
+
+static IotHttpsReturnCode_t _addHeader( _httpsRequest_t * pHttpsRequest,
+                                        const char * pName,
+                                        uint32_t nameLen,
+                                        const char * pValue,
+                                        uint32_t valueLen )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    int headerFieldSeparatorLen = HTTPS_HEADER_FIELD_SEPARATOR_LENGTH;
+    uint32_t additionalLength = nameLen + headerFieldSeparatorLen + valueLen + HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH;
+    uint32_t possibleLastHeaderAdditionalLength = HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH;
+
+    /* Check if there is enough space to add the header field and value
+     * (name:value\r\n). We need to add a "\r\n" at the end of headers. The use of
+     * possibleLastHeaderAdditionalLength is to make sure that there is always
+     * space for the last "\r\n". */
+    if( ( additionalLength + possibleLastHeaderAdditionalLength + pHttpsRequest->pHeadersCur ) > ( pHttpsRequest->pHeadersEnd ) )
+    {
+        IotLogError( "There is %d space left in the header buffer, but we want to add %d more of header.",
+                     pHttpsRequest->pHeadersEnd - pHttpsRequest->pHeadersCur,
+                     additionalLength + possibleLastHeaderAdditionalLength );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_INSUFFICIENT_MEMORY );
+    }
+
+    memcpy( pHttpsRequest->pHeadersCur, pName, nameLen );
+    pHttpsRequest->pHeadersCur += nameLen;
+    memcpy( pHttpsRequest->pHeadersCur, HTTPS_HEADER_FIELD_SEPARATOR, headerFieldSeparatorLen );
+    pHttpsRequest->pHeadersCur += headerFieldSeparatorLen;
+    memcpy( pHttpsRequest->pHeadersCur, pValue, valueLen );
+    pHttpsRequest->pHeadersCur += valueLen;
+    memcpy( pHttpsRequest->pHeadersCur, HTTPS_END_OF_HEADER_LINES_INDICATOR, HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH );
+    pHttpsRequest->pHeadersCur += HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH;
+    IotLogDebug( "Wrote header: \"%s: %.*s\r\n\". Space left in request user buffer: %d",
+                 pName,
+                 valueLen,
+                 pValue,
+                 pHttpsRequest->pHeadersEnd - pHttpsRequest->pHeadersCur );
+
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+static IotHttpsReturnCode_t _networkSend( _httpsConnection_t * pHttpsConnection,
+                                          uint8_t * pBuf,
+                                          size_t len )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    size_t numBytesSent = 0;
+    size_t numBytesSentTotal = 0;
+    size_t sendLength = len;
+
+    while( numBytesSentTotal < sendLength )
+    {
+        numBytesSent = pHttpsConnection->pNetworkInterface->send( pHttpsConnection->pNetworkConnection,
+                                                                  &( pBuf[ numBytesSentTotal ] ),
+                                                                  sendLength - numBytesSentTotal );
+
+        /* pNetworkInterface->send returns 0 on error. */
+        if( numBytesSent == 0 )
+        {
+            IotLogError( "Error in sending the HTTPS headers. Error code: %d", numBytesSent );
+            break;
+        }
+
+        numBytesSentTotal += numBytesSent;
+    }
+
+    if( numBytesSentTotal != sendLength )
+    {
+        IotLogError( "Error sending data on the network. We sent %d but there were total %d.", numBytesSentTotal, sendLength );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_NETWORK_ERROR );
+    }
+
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+static IotHttpsReturnCode_t _networkRecv( _httpsConnection_t * pHttpsConnection,
+                                          uint8_t * pBuf,
+                                          size_t bufLen,
+                                          size_t * numBytesRecv )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    /* The HTTP server could send the header and the body in two separate TCP packets. If that is the case, then
+     * receiveUpTo will return return the full headers first. Then on a second call, the body will be returned.
+     * If the http parser receives just the headers despite the content length being greater than  */
+    *numBytesRecv = pHttpsConnection->pNetworkInterface->receiveUpto( pHttpsConnection->pNetworkConnection,
+                                                                      pBuf,
+                                                                      bufLen );
+
+    IotLogDebug( "The network interface receive returned %d.", numBytesRecv );
+
+    /* We return IOT_HTTPS_NETWORK_ERROR only if we receive nothing. Receiving less
+     * data than requested is okay because it is not known in advance how much data
+     * we are going to receive and therefore we request for the available buffer
+     * size. */
+    if( *numBytesRecv == 0 )
+    {
+        IotLogError( "Error in receiving the HTTPS response message. Socket Error code %d", *numBytesRecv );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_NETWORK_ERROR );
+
+        /* A network error is returned when zero is received because that would indicate that either there
+        * was a network error or there was a timeout reading data. If there was timeout reading data, then
+        * the server was too slow to respond. If the server is too slow to respond, then a network error must
+        * be returned to trigger a connection close. The connection must close after the network error so
+        * that the response from this request does not piggyback on the response from the next request. */
+    }
+
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+static IotHttpsReturnCode_t _sendHttpsHeaders( _httpsConnection_t * pHttpsConnection,
+                                               uint8_t * pHeadersBuf,
+                                               uint32_t headersLength,
+                                               bool isNonPersistent,
+                                               uint32_t contentLength )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    const char * connectionHeader = NULL;
+    int numWritten = 0;
+    int connectionHeaderLen = 0;
+    /* The Content-Length header of the form "Content-Length: N\r\n" with a NULL terminator for snprintf. */
+    char contentLengthHeaderStr[ HTTPS_MAX_CONTENT_LENGTH_LINE_LENGTH + 1 ];
+
+    /* The HTTP headers to send after the headers in pHeadersBuf are the Content-Length and the Connection type and
+     * the final "\r\n" to indicate the end of the the header lines. Note that we are using
+     * HTTPS_CONNECTION_KEEP_ALIVE_HEADER_LINE_LENGTH because length of "Connection: keep-alive\r\n" is
+     * more than "Connection: close\r\n". Creating a buffer of bigger size ensures that
+     * both the connection type strings will fit in the buffer. */
+    char finalHeaders[ HTTPS_MAX_CONTENT_LENGTH_LINE_LENGTH + HTTPS_CONNECTION_KEEP_ALIVE_HEADER_LINE_LENGTH + HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH ] = { 0 };
+
+    /* Send the headers passed into this function first. These headers are not termined with a second set of "\r\n". */
+    status = _networkSend( pHttpsConnection, pHeadersBuf, headersLength );
+
+    if( HTTPS_FAILED( status ) )
+    {
+        IotLogError( "Error sending the HTTPS headers in the request user buffer. Error code: %d", status );
+        HTTPS_GOTO_CLEANUP();
+    }
+
+    /* If there is a Content-Length, then write that to the finalHeaders to send. */
+    if( contentLength > 0 )
+    {
+        numWritten = snprintf( contentLengthHeaderStr,
+                               sizeof( contentLengthHeaderStr ),
+                               "%s: %u\r\n",
+                               HTTPS_CONTENT_LENGTH_HEADER,
+                               ( unsigned int ) contentLength );
+    }
+
+    if( ( numWritten < 0 ) || ( numWritten >= sizeof( contentLengthHeaderStr ) ) )
+    {
+        IotLogError( "Internal error in snprintf() in _sendHttpsHeaders(). Error code %d.", numWritten );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_INTERNAL_ERROR );
+    }
+
+    /* snprintf() succeeded so copy that to the finalHeaders. */
+    memcpy( finalHeaders, contentLengthHeaderStr, numWritten );
+
+    /* Write the connection persistence type to the final headers. */
+    if( isNonPersistent )
+    {
+        connectionHeader = HTTPS_CONNECTION_CLOSE_HEADER_LINE;
+        connectionHeaderLen = FAST_MACRO_STRLEN( HTTPS_CONNECTION_CLOSE_HEADER_LINE );
+    }
+    else
+    {
+        connectionHeader = HTTPS_CONNECTION_KEEP_ALIVE_HEADER_LINE;
+        connectionHeaderLen = FAST_MACRO_STRLEN( HTTPS_CONNECTION_KEEP_ALIVE_HEADER_LINE );
+    }
+
+    memcpy( &finalHeaders[ numWritten ], connectionHeader, connectionHeaderLen );
+    numWritten += connectionHeaderLen;
+    memcpy( &finalHeaders[ numWritten ], HTTPS_END_OF_HEADER_LINES_INDICATOR, HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH );
+    numWritten += HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH;
+
+    status = _networkSend( pHttpsConnection, ( uint8_t * ) finalHeaders, numWritten );
+
+    if( HTTPS_FAILED( status ) )
+    {
+        IotLogError( "Error sending final HTTPS Headers \r\n%s. Error code: %d", finalHeaders, status );
+        HTTPS_GOTO_CLEANUP();
+    }
+
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+static IotHttpsReturnCode_t _sendHttpsBody( _httpsConnection_t * pHttpsConnection,
+                                            uint8_t * pBodyBuf,
+                                            uint32_t bodyLength )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    status = _networkSend( pHttpsConnection, pBodyBuf, bodyLength );
+
+    if( HTTPS_FAILED( status ) )
+    {
+        IotLogError( "Error sending final HTTPS body at location 0x%x. Error code: %d", pBodyBuf, status );
+        HTTPS_GOTO_CLEANUP();
+    }
+
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+static IotHttpsReturnCode_t _parseHttpsMessage( _httpParserInfo_t * pHttpParserInfo,
+                                                char * pBuf,
+                                                size_t len )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    size_t parsedBytes = 0;
+    const char * pHttpParserErrorDescription = NULL;
+    http_parser * pHttpParser = &( pHttpParserInfo->responseParser );
+
+    IotLogDebug( "Now parsing HTTP message buffer to process a response." );
+    parsedBytes = pHttpParserInfo->parseFunc( pHttpParser, &_httpParserSettings, pBuf, len );
+    IotLogDebug( "http-parser parsed %d bytes out of %d specified.", parsedBytes, len );
+
+    /* If the parser fails with HPE_CLOSED_CONNECTION or HPE_INVALID_CONSTANT that simply means there
+     * was data beyond the end of the message. We do not fail in this case because we give the whole
+     * header buffer or body buffer to the parser even if it is only partly filled with data.
+     * Errors <= HPE_CB_chunk_complete means that a non-zero number was returned from some callback.
+     * A nonzero number is returned from some callbacks when we want to stop the parser early
+     * for example - a HEAD request or the user explicitly asked to ignore the body by not
+     * providing the body buffer. */
+    if( ( pHttpParser->http_errno != 0 ) &&
+        ( HTTP_PARSER_ERRNO( pHttpParser ) != HPE_CLOSED_CONNECTION ) &&
+        ( HTTP_PARSER_ERRNO( pHttpParser ) != HPE_INVALID_CONSTANT ) &&
+        ( HTTP_PARSER_ERRNO( pHttpParser ) > HPE_CB_chunk_complete ) )
+    {
+        pHttpParserErrorDescription = http_errno_description( HTTP_PARSER_ERRNO( pHttpParser ) );
+        IotLogError( "http_parser failed on the http response with error: %s", pHttpParserErrorDescription );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_PARSING_ERROR );
+    }
+
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+static void _incrementNextLocationToWriteBeyondParsed( uint8_t ** pBufCur,
+                                                       uint8_t ** pBufEnd )
+{
+    /* There is an edge case where the final one or two character received in the header buffer is part of
+     * the header field separator ": " or part of the header line end "\r\n" delimitters. When this
+     * happens, pHeadersCur in the response will point not the end of the buffer, but to a character in
+     * the delimiter. For example:
+     * Let's say this is our current header buffer after receiving and parsing:
+     * ["HTTP/1.1 200 OK\r\n\header0: value0\r\nheader1: value1\r\n"]
+     * pHeadersCur will point to \r because the http-parser does not invoke a callback on the
+     * delimitters. Since no callback is invoked, pHeadersCur is not incremented. pHeadersEnd points to
+     * the end of the header buffer which is the unwritable memory location right after the final '\n'.
+     * Because pHeadersCur is less than pHeaderEnd we loop again and receive on the network causing the
+     * buffer to look like this:
+     * ["HTTP/1.1 200 OK\r\n\header0: value0\r\nheader1: value1he"]
+     * Which will cause an incorrect header1 value to be read if the application decides to read it with
+     * IotHttpsClient_ReadHeader().
+     *
+     * If our header buffer looks like:
+     * ["HTTP/1.1 200 OK\r\n\header0: value0\r\nheader1: "]
+     * then pHeaderCur will point to the colon.
+     *
+     * If our header buffer looks like:
+     * ["HTTP/1.1 200 OK\r\n\header0: value0\r\nheader1:"]
+     * then pHeaderCur will point to the colon.
+     *
+     * If our header buffer looks like
+     * ["HTTP/1.1 200 OK\r\n\header0: value0\r\nheader1: value1 "]
+     * then http-parser will consider that space as part of value1.
+     *
+     * If our header buffer looks like
+     * ["HTTP/1.1 200 OK\r\n\header0: value0\r\nheader1: value1\r"]
+     * then pHeaderCur will point to the carriage return.
+     *
+     * If our header buffer looks like
+     * ["HTTP/1.1 200 OK\r\n\header0: value0\r\nheader1: value1\r\n"]
+     * As explained in the example above, pHeaderCur will point to the carriage return.
+     *
+     * If we somehow receive a partial HTTP response message in our zeroed-out header buffer:
+     * case 1: ["HTTP/1.1 200 OK\r\nheader0: value0\r\nheader1: value1\r\0\0\0\0\0\0\0"]
+     * case 2: ["HTTP/1.1 200 OK\r\nheader0: value0\r\nheader1: value1\r\n\0\0\0\0\0\0"]
+     * case 3: ["HTTP/1.1 200 OK\r\nheader0: value0\r\nheader1:\0\0\0\0\0\0\0\0\0\0\0"]
+     * case 4: ["HTTP/1.1 200 OK\r\nheader0: value0\r\nheader1: \0\0\0\0\0\0\0\0\0\0\0"]
+     * then parser may fail or append all of the NULL characters to a header field name or value. */
+    while( *pBufCur < *pBufEnd )
+    {
+        if( **pBufCur == CARRIAGE_RETURN_CHARACTER )
+        {
+            ( *pBufCur )++;
+        }
+        else if( **pBufCur == NEWLINE_CHARACTER )
+        {
+            ( *pBufCur )++;
+            break;
+        }
+        else if( **pBufCur == COLON_CHARACTER )
+        {
+            ( *pBufCur )++;
+        }
+        else if( ( **pBufCur == SPACE_CHARACTER ) && ( *( *pBufCur - 1 ) == COLON_CHARACTER ) )
+        {
+            ( *pBufCur )++;
+            break;
+        }
+        else
+        {
+            break;
+        }
+    }
+}
+
+/*-----------------------------------------------------------*/
+
+static IotHttpsReturnCode_t _receiveHttpsMessage( _httpsConnection_t * pHttpsConnection,
+                                                  _httpParserInfo_t * pHttpParserInfo,
+                                                  IotHttpsResponseParserState_t * pCurrentParserState,
+                                                  IotHttpsResponseParserState_t finalParserState,
+                                                  IotHttpsResponseBufferState_t currentBufferProcessingState,
+                                                  uint8_t ** pBufCur,
+                                                  uint8_t ** pBufEnd )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    size_t numBytesRecv = 0;
+
+    /* The final parser state is either the end of the header lines or the end of the entity body. This state is set in
+     * the http-parser callbacks. */
+    while( ( *pCurrentParserState < finalParserState ) && ( *pBufEnd - *pBufCur > 0 ) )
+    {
+        status = _networkRecv( pHttpsConnection,
+                               *pBufCur,
+                               *pBufEnd - *pBufCur,
+                               &numBytesRecv );
+
+        /* A network error in _networkRecv is returned only when we received zero bytes. In that case, there is
+         * no point in parsing we return immediately with the network error. */
+        if( HTTPS_FAILED( status ) )
+        {
+            IotLogError( "Network error receiving the HTTPS response headers. Error code: %d", status );
+            break;
+        }
+
+        status = _parseHttpsMessage( pHttpParserInfo, ( char * ) ( *pBufCur ), numBytesRecv );
+
+        if( HTTPS_FAILED( status ) )
+        {
+            IotLogError( "Failed to parse the message buffer with error: %d", pHttpParserInfo->responseParser.http_errno );
+            break;
+        }
+
+        /* If the current buffer being filled is the header buffer, then \r\n header line separators should not get
+         * overwritten on the next network read. See _incrementNextLocationToWriteBeyondParsed() for more
+         * information. */
+        if( currentBufferProcessingState == PROCESSING_STATE_FILLING_HEADER_BUFFER )
+        {
+            _incrementNextLocationToWriteBeyondParsed( pBufCur, pBufEnd );
+        }
+
+        /* The _httResponse->pHeadersCur pointer is updated in the http_parser callbacks. */
+        IotLogDebug( "There is %d of space left in the buffer.", *pBufEnd - *pBufCur );
+    }
+
+    /* If we did not reach the end of the headers or body in the parser callbacks, then the buffer configured does not
+     * fit all of that part of the HTTP message. */
+    if( *pCurrentParserState < finalParserState )
+    {
+        IotLogDebug( "There are still more data on the network. It could not fit into the specified length %d.",
+                     *pBufEnd - *pBufCur );
+    }
+
+    HTTPS_GOTO_CLEANUP();
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+static IotHttpsReturnCode_t _receiveHttpsHeaders( _httpsConnection_t * pHttpsConnection,
+                                                  _httpsResponse_t * pHttpsResponse )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    pHttpsResponse->bufferProcessingState = PROCESSING_STATE_FILLING_HEADER_BUFFER;
+
+    IotLogDebug( "Now attempting to receive the HTTP response headers into a buffer with length %d.",
+                 pHttpsResponse->pHeadersEnd - pHttpsResponse->pHeadersCur );
+
+    status = _receiveHttpsMessage( pHttpsConnection,
+                                   &( pHttpsResponse->httpParserInfo ),
+                                   &( pHttpsResponse->parserState ),
+                                   PARSER_STATE_HEADERS_COMPLETE,
+                                   PROCESSING_STATE_FILLING_HEADER_BUFFER,
+                                   &( pHttpsResponse->pHeadersCur ),
+                                   &( pHttpsResponse->pHeadersEnd ) );
+
+    if( HTTPS_FAILED( status ) )
+    {
+        IotLogError( "Error receiving the HTTP headers. Error code %d", status );
+        HTTPS_GOTO_CLEANUP();
+    }
+
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+/* _receiveHttpsHeaders() must be called first before this function is called. */
+static IotHttpsReturnCode_t _receiveHttpsBody( _httpsConnection_t * pHttpsConnection,
+                                               _httpsResponse_t * pHttpsResponse )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    IotLogDebug( "Now attempting to receive the HTTP response body into a buffer with length %d.",
+                 pHttpsResponse->pBodyEnd - pHttpsResponse->pBodyCur );
+
+    pHttpsResponse->bufferProcessingState = PROCESSING_STATE_FILLING_BODY_BUFFER;
+
+    status = _receiveHttpsMessage( pHttpsConnection,
+                                   &( pHttpsResponse->httpParserInfo ),
+                                   &( pHttpsResponse->parserState ),
+                                   PARSER_STATE_BODY_COMPLETE,
+                                   PROCESSING_STATE_FILLING_BODY_BUFFER,
+                                   &( pHttpsResponse->pBodyCur ),
+                                   &( pHttpsResponse->pBodyEnd ) );
+
+    if( HTTPS_FAILED( status ) )
+    {
+        IotLogError( "Error receiving the HTTP body. Error code %d", status );
+        HTTPS_GOTO_CLEANUP();
+    }
+
+    HTTPS_FUNCTION_CLEANUP_BEGIN();
+
+    IotLogDebug( "The remaining content length on the network is %d.",
+                 pHttpsResponse->httpParserInfo.responseParser.content_length );
+
+    HTTPS_FUNCTION_CLEANUP_END();
+}
+
+/*-----------------------------------------------------------*/
+
+static IotHttpsReturnCode_t _flushHttpsNetworkData( _httpsConnection_t * pHttpsConnection,
+                                                    _httpsResponse_t * pHttpsResponse )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    static uint8_t flushBuffer[ IOT_HTTPS_MAX_FLUSH_BUFFER_SIZE ] = { 0 };
+    const char * pHttpParserErrorDescription = NULL;
+    IotHttpsReturnCode_t parserStatus = IOT_HTTPS_OK;
+    IotHttpsReturnCode_t networkStatus = IOT_HTTPS_OK;
+    size_t numBytesRecv = 0;
+
+    /* Even if there is not body, the parser state will become body complete after the headers finish. */
+    while( pHttpsResponse->parserState < PARSER_STATE_BODY_COMPLETE )
+    {
+        IotLogDebug( "Now clearing the rest of the response data on the socket. " );
+        networkStatus = _networkRecv( pHttpsConnection, flushBuffer, IOT_HTTPS_MAX_FLUSH_BUFFER_SIZE, &numBytesRecv );
+
+        /* Run this through the parser so that we can get the end of the HTTP message, instead of simply timing out the socket to stop.
+         * If we relied on the socket timeout to stop reading the network socket, then the server may close the connection. */
+        parserStatus = _parseHttpsMessage( &( pHttpsResponse->httpParserInfo ), ( char * ) flushBuffer, numBytesRecv );
+
+        if( HTTPS_FAILED( parserStatus ) )
+        {
+            pHttpParserErrorDescription = http_errno_description( HTTP_PARSER_ERRNO( &pHttpsResponse->httpParserInfo.responseParser ) );
+            IotLogError( "Network Flush: Failed to parse the response body buffer with error: %d, %s",
+                         pHttpsResponse->httpParserInfo.responseParser.http_errno,
+                         pHttpParserErrorDescription );
+            break;
+        }
+
+        /* If there is a network error then we want to stop clearing out the buffer. */
+        if( HTTPS_FAILED( networkStatus ) )
+        {
+            IotLogWarn( "Network Flush: Error receiving the rest of the HTTP response. Error code: %d",
+                        networkStatus );
+            break;
+        }
+    }
+
+    /* All network errors except timeouts are returned. */
+    if( HTTPS_FAILED( networkStatus ) )
+    {
+        status = networkStatus;
+    }
+    else
+    {
+        status = parserStatus;
+    }
+
+    HTTPS_GOTO_CLEANUP();
+
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+static IotHttpsReturnCode_t _sendHttpsHeadersAndBody( _httpsConnection_t * pHttpsConnection,
+                                                      _httpsRequest_t * pHttpsRequest )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    /* Send the HTTP headers. */
+    status = _sendHttpsHeaders( pHttpsConnection,
+                                pHttpsRequest->pHeaders,
+                                pHttpsRequest->pHeadersCur - pHttpsRequest->pHeaders,
+                                pHttpsRequest->isNonPersistent,
+                                pHttpsRequest->bodyLength );
+
+    if( HTTPS_FAILED( status ) )
+    {
+        IotLogError( "Error sending the HTTPS headers with error code: %d", status );
+        HTTPS_GOTO_CLEANUP();
+    }
+
+    if( ( pHttpsRequest->pBody != NULL ) && ( pHttpsRequest->bodyLength > 0 ) )
+    {
+        status = _sendHttpsBody( pHttpsConnection, pHttpsRequest->pBody, pHttpsRequest->bodyLength );
+
+        if( HTTPS_FAILED( status ) )
+        {
+            IotLogError( "Error sending final HTTPS body. Return code: %d", status );
+            HTTPS_GOTO_CLEANUP();
+        }
+    }
+
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+static void _sendHttpsRequest( IotTaskPool_t pTaskPool,
+                               IotTaskPoolJob_t pJob,
+                               void * pUserContext )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    _httpsRequest_t * pHttpsRequest = ( _httpsRequest_t * ) ( pUserContext );
+    _httpsConnection_t * pHttpsConnection = pHttpsRequest->pHttpsConnection;
+    _httpsResponse_t * pHttpsResponse = pHttpsRequest->pHttpsResponse;
+    IotHttpsReturnCode_t disconnectStatus = IOT_HTTPS_OK;
+    IotHttpsReturnCode_t scheduleStatus = IOT_HTTPS_OK;
+    IotLink_t * pQItem = NULL;
+    _httpsRequest_t * pNextHttpsRequest = NULL;
+
+    ( void ) pTaskPool;
+    ( void ) pJob;
+
+    IotLogDebug( "Task with request ID: %d started.", pHttpsRequest );
+
+    if( pHttpsRequest->cancelled == true )
+    {
+        IotLogDebug( "Request ID: %d was cancelled.", pHttpsRequest );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_SEND_ABORT );
+    }
+
+    /* To protect against out of order network data from a rouge server, signal that the request is
+     * not finished sending. */
+    pHttpsResponse->reqFinishedSending = false;
+
+    /* Queue the response to expect from the network. */
+    IotMutex_Lock( &( pHttpsConnection->connectionMutex ) );
+    IotDeQueue_EnqueueTail( &( pHttpsConnection->respQ ), &( pHttpsResponse->link ) );
+    IotMutex_Unlock( &( pHttpsConnection->connectionMutex ) );
+
+    /* Get the headers from the application. For a synchronous request the application should have appended extra
+     * headers before this point. */
+    if( pHttpsRequest->isAsync && pHttpsRequest->pCallbacks->appendHeaderCallback )
+    {
+        pHttpsRequest->pCallbacks->appendHeaderCallback( pHttpsRequest->pUserPrivData, pHttpsRequest );
+    }
+
+    if( pHttpsRequest->cancelled == true )
+    {
+        IotLogDebug( "Request ID: %d was cancelled.", pHttpsRequest );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_SEND_ABORT );
+    }
+
+    /* Ask the user for data to write body to the network. We only ask the user once. This is so that
+     * we can calculate the Content-Length to send.*/
+    if( pHttpsRequest->isAsync && pHttpsRequest->pCallbacks->writeCallback )
+    {
+        /* If there is data, then a Content-Length header value will be provided and we send the headers
+         * before that user data. */
+        pHttpsRequest->pCallbacks->writeCallback( pHttpsRequest->pUserPrivData, pHttpsRequest );
+    }
+
+    if( HTTPS_FAILED( pHttpsRequest->bodyTxStatus ) )
+    {
+        IotLogError( "Failed to send the headers and body over the network during the writeCallback. Error code: %d.",
+                     status );
+        HTTPS_SET_AND_GOTO_CLEANUP( pHttpsRequest->bodyTxStatus );
+    }
+
+    if( pHttpsRequest->cancelled == true )
+    {
+        IotLogDebug( "Request ID: %d was cancelled.", pHttpsRequest );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_SEND_ABORT );
+    }
+
+    /* If this is a synchronous request then the header and body were configured beforehand. The header and body
+     * are sent now. For an asynchronous request, the header and body are sent in IotHttpsClient_WriteRequestBody()
+     * which is to be invoked in #IotHttpsClientCallbacks_t.writeCallback(). If the application never invokes
+     * IotHttpsClient_WriteRequestBody(), then pHttpsRequest->pBody will be NULL. In this case we still want to
+     * send whatever headers we have.  */
+    if( ( pHttpsRequest->isAsync == false ) ||
+        ( ( pHttpsRequest->isAsync ) && ( pHttpsRequest->pBody == NULL ) ) )
+    {
+        status = _sendHttpsHeadersAndBody( pHttpsConnection, pHttpsRequest );
+
+        if( HTTPS_FAILED( status ) )
+        {
+            IotLogError( "Failed to send the headers and body on the network. Error code: %d", status );
+            HTTPS_GOTO_CLEANUP();
+        }
+    }
+
+    HTTPS_FUNCTION_CLEANUP_BEGIN();
+
+    /* The request has finished sending. This indicates to the network receive callback that the request was
+     * finished, so a response received on the network is valid. This also lets a possible application called
+     * IotHttpsClient_Disconnect() know that the connection is not busy, so the connection can be destroyed. */
+    pHttpsResponse->reqFinishedSending = true;
+
+    if( HTTPS_FAILED( status ) )
+    {
+        /* If the headers or body failed to send, then there should be no response expected from the server. */
+        /* Cancel the response incase there is a response from the server. */
+        _cancelResponse( pHttpsResponse );
+        IotMutex_Lock( &( pHttpsConnection->connectionMutex ) );
+
+        if( IotLink_IsLinked( &( pHttpsResponse->link ) ) )
+        {
+            IotDeQueue_Remove( &( pHttpsResponse->link ) );
+        }
+
+        IotMutex_Unlock( &( pHttpsConnection->connectionMutex ) );
+
+        /* Set the error status in the sync workflow. */
+        pHttpsResponse->syncStatus = status;
+
+        /* Return the error status or cancel status to the application for an asynchronous workflow. */
+        if( pHttpsRequest->isAsync && pHttpsRequest->pCallbacks->errorCallback )
+        {
+            pHttpsRequest->pCallbacks->errorCallback( pHttpsRequest->pUserPrivData, pHttpsRequest, NULL, status );
+        }
+
+        /* We close the connection on all network errors. All network errors in receiving the response, close the
+         * connection. For consistency in behavior, if there is a network error in send, the connection should also be
+         * closed. */
+        if( status == IOT_HTTPS_NETWORK_ERROR )
+        {
+            IotLogDebug( "Disconnecting request %d.", pHttpsRequest );
+            disconnectStatus = IotHttpsClient_Disconnect( pHttpsConnection );
+
+            if( pHttpsRequest->isAsync && pHttpsRequest->pCallbacks->connectionClosedCallback )
+            {
+                pHttpsRequest->pCallbacks->connectionClosedCallback( pHttpsRequest->pUserPrivData,
+                                                                     pHttpsConnection,
+                                                                     disconnectStatus );
+            }
+
+            if( HTTPS_FAILED( disconnectStatus ) )
+            {
+                IotLogWarn( "Failed to disconnect request %d. Error code: %d.", pHttpsRequest, disconnectStatus );
+            }
+        }
+        else
+        {
+            /* Because this request failed, the network receive callback may never be invoked to schedule other possible
+             * requests in the queue. In order to avoid requests never getting scheduled on an connected connection,
+             * the first item in the queue is scheduled if it can be. */
+            IotMutex_Lock( &( pHttpsConnection->connectionMutex ) );
+            /* Get the next item in the queue by removing this current (which is the first) and peeking at the head again. */
+            IotDeQueue_Remove( &( pHttpsRequest->link ) );
+            pQItem = IotDeQueue_PeekHead( &( pHttpsConnection->reqQ ) );
+            /* This current request is put back because it is removed again for all cases at the end of this routine. */
+            IotDeQueue_EnqueueHead( &( pHttpsConnection->reqQ ), &( pHttpsRequest->link ) );
+            IotMutex_Unlock( &( pHttpsConnection->connectionMutex ) );
+
+            if( pQItem != NULL )
+            {
+                /* Set this next request to send. */
+                pNextHttpsRequest = IotLink_Container( _httpsRequest_t, pQItem, link );
+
+                if( pNextHttpsRequest->scheduled == false )
+                {
+                    IotLogDebug( "Request %d is next in the queue. Now scheduling a task to send the request.", pNextHttpsRequest );
+                    scheduleStatus = _scheduleHttpsRequestSend( pNextHttpsRequest );
+
+                    /* If there was an error with scheduling the new task, then report it. */
+                    if( HTTPS_FAILED( scheduleStatus ) )
+                    {
+                        IotLogError( "Error scheduling HTTPS request %d. Error code: %d", pNextHttpsRequest, scheduleStatus );
+
+                        if( pNextHttpsRequest->isAsync && pNextHttpsRequest->pCallbacks->errorCallback )
+                        {
+                            pNextHttpsRequest->pCallbacks->errorCallback( pNextHttpsRequest->pUserPrivData, pNextHttpsRequest, NULL, scheduleStatus );
+                        }
+                        else
+                        {
+                            pNextHttpsRequest->pHttpsResponse->syncStatus = scheduleStatus;
+                        }
+                    }
+                }
+            }
+        }
+
+        /* Post to the response finished semaphore to unlock the application waiting on a synchronous request. */
+        if( pHttpsRequest->isAsync == false )
+        {
+            IotSemaphore_Post( &( pHttpsResponse->respFinishedSem ) );
+        }
+
+        /* Call the response complete callback. We always call this even if we did not receive the response to
+         * let the application know that the request has completed. */
+        if( pHttpsRequest->isAsync && pHttpsRequest->pCallbacks->responseCompleteCallback )
+        {
+            pHttpsRequest->pCallbacks->responseCompleteCallback( pHttpsRequest->pUserPrivData, NULL, status, 0 );
+        }
+    }
+
+    IotMutex_Lock( &( pHttpsConnection->connectionMutex ) );
+    /* Now that the current request is finished, we dequeue the current request from the queue. */
+    IotDeQueue_DequeueHead( &( pHttpsConnection->reqQ ) );
+    IotMutex_Unlock( &( pHttpsConnection->connectionMutex ) );
+
+    /* This routine returns a void so there is no HTTPS_FUNCTION_CLEANUP_END();. */
+}
+
+/*-----------------------------------------------------------*/
+
+IotHttpsReturnCode_t _scheduleHttpsRequestSend( _httpsRequest_t * pHttpsRequest )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    IotTaskPoolError_t taskPoolStatus = IOT_TASKPOOL_SUCCESS;
+    _httpsConnection_t * pHttpsConnection = pHttpsRequest->pHttpsConnection;
+
+    /* Set the request to scheduled even if scheduling fails. */
+    pHttpsRequest->scheduled = true;
+
+    taskPoolStatus = IotTaskPool_CreateJob( _sendHttpsRequest,
+                                            ( void * ) ( pHttpsRequest ),
+                                            &( pHttpsConnection->taskPoolJobStorage ),
+                                            &( pHttpsConnection->taskPoolJob ) );
+
+    /* Creating a task pool job should never fail when parameters are valid. */
+    if( taskPoolStatus != IOT_TASKPOOL_SUCCESS )
+    {
+        IotLogError( "Error creating a taskpool job for request servicing. Error code: %d", taskPoolStatus );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_INTERNAL_ERROR );
+    }
+
+    taskPoolStatus = IotTaskPool_Schedule( IOT_SYSTEM_TASKPOOL, pHttpsConnection->taskPoolJob, 0 );
+
+    if( taskPoolStatus != IOT_TASKPOOL_SUCCESS )
+    {
+        IotLogError( "Failed to schedule taskpool job. Error code: %d", taskPoolStatus );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_ASYNC_SCHEDULING_ERROR );
+    }
+
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+IotHttpsReturnCode_t _addRequestToConnectionReqQ( _httpsRequest_t * pHttpsRequest )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    _httpsConnection_t * pHttpsConnection = pHttpsRequest->pHttpsConnection;
+    bool scheduleRequest = false;
+
+    /* Log information about the request*/
+    IotLogDebug( "Now queueing request %d.", pHttpsRequest );
+
+    if( pHttpsRequest->isNonPersistent )
+    {
+        IotLogDebug( "Request %d is non-persistent.", pHttpsRequest );
+    }
+    else
+    {
+        IotLogDebug( "Request %d is persistent. ", pHttpsRequest );
+    }
+
+    if( pHttpsRequest->isAsync )
+    {
+        IotLogDebug( " Request %d is asynchronous.", pHttpsRequest );
+    }
+    else
+    {
+        IotLogDebug( " Request %d is synchronous.", pHttpsRequest );
+    }
+
+    /* This is a new request and has not been scheduled if this routine is called. */
+    pHttpsRequest->scheduled = false;
+
+    /* Place the request into the queue. */
+    IotMutex_Lock( &( pHttpsConnection->connectionMutex ) );
+
+    /* If there is an active response, scheduling the next request at the same time may corrupt the workflow. Part of
+     * the next response for the next request may be present in the currently receiving response's buffers. To avoid
+     * this, check if there are pending responses to determine if this request should be scheduled right away or not.
+     *
+     * If there are other requests in the queue, and there are responses in the queue, then the network receive callback
+     * will handle scheduling the next requests (or is already scheduled and currently sending). */
+    if( ( IotDeQueue_IsEmpty( &( pHttpsConnection->reqQ ) ) ) &&
+        ( IotDeQueue_IsEmpty( &( pHttpsConnection->respQ ) ) ) )
+    {
+        scheduleRequest = true;
+    }
+
+    /* Place into the connection's request to have a taskpool worker schedule to serve it later. */
+    IotDeQueue_EnqueueTail( &( pHttpsConnection->reqQ ), &( pHttpsRequest->link ) );
+    IotMutex_Unlock( &( pHttpsConnection->connectionMutex ) );
+
+    if( scheduleRequest )
+    {
+        /* This routine schedules a task pool worker to send the request. If a worker is available immediately, then
+         * the request is sent right away. */
+        status = _scheduleHttpsRequestSend( pHttpsRequest );
+
+        if( HTTPS_FAILED( status ) )
+        {
+            IotLogError( "Failed to schedule the request in the queue for request %d. Error code: %d", pHttpsRequest, status );
+
+            /* If we fail to schedule the only request in the queue we should remove it. */
+            IotMutex_Lock( &( pHttpsConnection->connectionMutex ) );
+            IotDeQueue_Remove( &( pHttpsRequest->link ) );
+            IotMutex_Unlock( &( pHttpsConnection->connectionMutex ) );
+
+            HTTPS_GOTO_CLEANUP();
+        }
+    }
+
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+static void _cancelRequest( _httpsRequest_t * pHttpsRequest )
+{
+    pHttpsRequest->cancelled = true;
+}
+
+/*-----------------------------------------------------------*/
+
+static void _cancelResponse( _httpsResponse_t * pHttpsResponse )
+{
+    pHttpsResponse->cancelled = true;
+}
+
+/*-----------------------------------------------------------*/
+
+IotHttpsReturnCode_t IotHttpsClient_Init( void )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    /* This sets all member in the _httpParserSettings to zero. It does not return any errors. */
+    http_parser_settings_init( &_httpParserSettings );
+
+    /* Set the http-parser callbacks. */
+    _httpParserSettings.on_message_begin = _httpParserOnMessageBeginCallback;
+    _httpParserSettings.on_status = _httpParserOnStatusCallback;
+    _httpParserSettings.on_header_field = _httpParserOnHeaderFieldCallback;
+    _httpParserSettings.on_header_value = _httpParserOnHeaderValueCallback;
+    _httpParserSettings.on_headers_complete = _httpParserOnHeadersCompleteCallback;
+    _httpParserSettings.on_body = _httpParserOnBodyCallback;
+    _httpParserSettings.on_message_complete = _httpParserOnMessageCompleteCallback;
+
+/* This code prints debugging information and is, therefore, compiled only when
+ * log level is set to IOT_LOG_DEBUG. */
+    #if ( LIBRARY_LOG_LEVEL == IOT_LOG_DEBUG )
+        _httpParserSettings.on_chunk_header = _httpParserOnChunkHeaderCallback;
+        _httpParserSettings.on_chunk_complete = _httpParserOnChunkCompleteCallback;
+    #endif
+    HTTPS_GOTO_CLEANUP();
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+static IotHttpsReturnCode_t _initializeResponse( IotHttpsResponseHandle_t * pRespHandle,
+                                                 IotHttpsResponseInfo_t * pRespInfo,
+                                                 _httpsRequest_t * pHttpsRequest )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    _httpsResponse_t * pHttpsResponse = NULL;
+
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pRespInfo->userBuffer.pBuffer );
+
+    /* Check of the user buffer is large enough for the response context + default headers. */
+    HTTPS_ON_ARG_ERROR_MSG_GOTO_CLEANUP( pRespInfo->userBuffer.bufferLen >= responseUserBufferMinimumSize,
+                                         IOT_HTTPS_INSUFFICIENT_MEMORY,
+                                         "Buffer size is too small to initialize the response context. User buffer size: %d, required minimum size; %d.",
+                                         pRespInfo->userBuffer.bufferLen,
+                                         responseUserBufferMinimumSize );
+
+    /* Initialize the corresponding response to this request. */
+    pHttpsResponse = ( _httpsResponse_t * ) ( pRespInfo->userBuffer.pBuffer );
+
+    /* Clear out the response user buffer. This is important because we
+     * give the whole buffer to the parser as opposed to the actual content
+     * length and rely on the parser to stop when a complete HTTP response
+     * is found. To make sure that any data in the buffer which is not part
+     * of the received HTTP response, does not get interpreted as part of
+     * the HTTP repose, we zero out the buffer here. */
+    memset( pRespInfo->userBuffer.pBuffer, 0, pRespInfo->userBuffer.bufferLen );
+
+    pHttpsResponse->pHeaders = ( uint8_t * ) ( pHttpsResponse ) + sizeof( _httpsResponse_t );
+    pHttpsResponse->pHeadersEnd = ( uint8_t * ) ( pHttpsResponse ) + pRespInfo->userBuffer.bufferLen;
+    pHttpsResponse->pHeadersCur = pHttpsResponse->pHeaders;
+
+    if( pHttpsRequest->isAsync )
+    {
+        pHttpsResponse->isAsync = true;
+
+        /* For an asynchronous request the response body is provided by the application in the
+         * IotHttpsCallbacks_t.readReadyCallback(). These pointers will be updated when IotHttpsClient_ReadResponseBody()
+         * is invoked. */
+        pHttpsResponse->pBody = NULL;
+        pHttpsResponse->pBodyCur = NULL;
+        pHttpsResponse->pBodyEnd = NULL;
+
+        pHttpsResponse->pCallbacks = pHttpsRequest->pCallbacks;
+        pHttpsResponse->pUserPrivData = pHttpsRequest->pUserPrivData;
+    }
+    else
+    {
+        pHttpsResponse->isAsync = false;
+        /* The request body pointer is allowed to be NULL. u.pSyncInfo was checked for NULL earlier in this function. */
+        pHttpsResponse->pBody = pRespInfo->pSyncInfo->pBody;
+        pHttpsResponse->pBodyCur = pHttpsResponse->pBody;
+        pHttpsResponse->pBodyEnd = pHttpsResponse->pBody + pRespInfo->pSyncInfo->bodyLen;
+
+        /* Clear out the body bufffer. This is important because we give the
+         * whole buffer to the parser as opposed to the actual content length and
+         * rely on the parser to stop when a complete HTTP response is found. To
+         * make sure that any data in the buffer which is not part of the received
+         * HTTP response, does not get interpreted as part of the HTTP repose, we
+         * zero out the buffer here. */
+        memset( pRespInfo->pSyncInfo->pBody, 0, pRespInfo->pSyncInfo->bodyLen );
+    }
+
+    /* Reinitialize the parser and set the fill buffer state to empty. This does not return any errors. */
+    http_parser_init( &( pHttpsResponse->httpParserInfo.responseParser ), HTTP_RESPONSE );
+    http_parser_init( &( pHttpsResponse->httpParserInfo.readHeaderParser ), HTTP_RESPONSE );
+    /* Set the third party http parser function. */
+    pHttpsResponse->httpParserInfo.parseFunc = http_parser_execute;
+    pHttpsResponse->httpParserInfo.readHeaderParser.data = ( void * ) ( pHttpsResponse );
+    pHttpsResponse->httpParserInfo.responseParser.data = ( void * ) ( pHttpsResponse );
+
+    pHttpsResponse->status = 0;
+    pHttpsResponse->method = pHttpsRequest->method;
+    pHttpsResponse->parserState = PARSER_STATE_NONE;
+    pHttpsResponse->bufferProcessingState = PROCESSING_STATE_NONE;
+    pHttpsResponse->pReadHeaderField = NULL;
+    pHttpsResponse->readHeaderFieldLength = 0;
+    pHttpsResponse->pReadHeaderValue = NULL;
+    pHttpsResponse->readHeaderValueLength = 0;
+    pHttpsResponse->foundHeaderField = 0;
+    pHttpsResponse->pHttpsConnection = NULL;
+
+    pHttpsResponse->pBodyInHeaderBuf = NULL;
+    pHttpsResponse->pBodyCurInHeaderBuf = NULL;
+    pHttpsResponse->bodyRxStatus = IOT_HTTPS_OK;
+    pHttpsResponse->cancelled = false;
+    pHttpsResponse->syncStatus = IOT_HTTPS_OK;
+    /* There is no request associated with this response right now, so it is finished sending. */
+    pHttpsResponse->reqFinishedSending = true;
+    pHttpsResponse->isNonPersistent = pHttpsRequest->isNonPersistent;
+
+    /* Set the response handle to return. */
+    *pRespHandle = pHttpsResponse;
+
+    HTTPS_FUNCTION_CLEANUP_BEGIN();
+
+    if( HTTPS_FAILED( status ) )
+    {
+        pRespHandle = NULL;
+    }
+
+    HTTPS_FUNCTION_CLEANUP_END();
+}
+
+/*-----------------------------------------------------------*/
+
+void IotHttpsClient_Deinit( void )
+{
+    /* There is nothing to de-initialize here as of now. */
+}
+
+/* --------------------------------------------------------- */
+
+IotHttpsReturnCode_t IotHttpsClient_Connect( IotHttpsConnectionHandle_t * pConnHandle,
+                                             IotHttpsConnectionInfo_t * pConnInfo )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    /* Check for NULL parameters in a public API. */
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pConnHandle );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pConnInfo );
+
+    /* If a valid connection handle is passed in. */
+    if( *pConnHandle != NULL )
+    {
+        /* If the handle in a connected state, then we want to disconnect before reconnecting. The ONLY way to put the
+         * handle is a disconnect state is to call IotHttpsClient_Disconnect(). */
+        if( ( *pConnHandle )->isConnected )
+        {
+            status = IotHttpsClient_Disconnect( *pConnHandle );
+
+            if( HTTPS_FAILED( status ) )
+            {
+                IotLogError( "Error disconnecting a connected *pConnHandle passed to IotHttpsClient_Connect().Error code %d", status );
+                *pConnHandle = NULL;
+                HTTPS_GOTO_CLEANUP();
+            }
+        }
+    }
+
+    /* Connect to the server now. Initialize all resources needed for the connection context as well here. */
+    status = _createHttpsConnection( pConnHandle, pConnInfo );
+
+    if( HTTPS_FAILED( status ) )
+    {
+        IotLogError( "Error in IotHttpsClient_Connect(). Error code %d.", status );
+    }
+
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+IotHttpsReturnCode_t IotHttpsClient_Disconnect( IotHttpsConnectionHandle_t connHandle )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    _httpsRequest_t * pHttpsRequest = NULL;
+    _httpsResponse_t * pHttpsResponse = NULL;
+    IotLink_t * pRespItem = NULL;
+    IotLink_t * pReqItem = NULL;
+
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( connHandle );
+
+    /* If this routine is currently is progress by another thread, for instance the taskpool worker that received a
+     * network error after sending, then return right away because connection resources are being used. */
+    if( IotMutex_TryLock( &( connHandle->connectionMutex ) ) == false )
+    {
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_BUSY );
+    }
+
+    /* Do not attempt to disconnect an already disconnected connection.
+     * It can happen when a user calls this functions and we return IOT_HTTPS_BUSY. */
+    if( connHandle->isConnected )
+    {
+        /* Mark the network as disconnected whether the disconnect passes or not. */
+        connHandle->isConnected = false;
+        _networkDisconnect( connHandle );
+    }
+
+    /* If there is a response in the connection's response queue and the associated request has not finished sending,
+     * then we cannot destroy the connection until it finishes. */
+    pRespItem = IotDeQueue_DequeueHead( &( connHandle->respQ ) );
+
+    if( pRespItem != NULL )
+    {
+        pHttpsResponse = IotLink_Container( _httpsResponse_t, pRespItem, link );
+
+        if( pHttpsResponse->reqFinishedSending == false )
+        {
+            IotLogError( "Connection is in use. Disconnected, but cannot destroy the connection." );
+            status = IOT_HTTPS_BUSY;
+
+            /* The request is busy, to as quickly as possible allow a successful retry call of this function we must
+             * cancel the busy request which is the first in the queue. */
+            pReqItem = IotDeQueue_PeekHead( &( connHandle->reqQ ) );
+
+            if( pReqItem != NULL )
+            {
+                pHttpsRequest = IotLink_Container( _httpsRequest_t, pReqItem, link );
+                _cancelRequest( pHttpsRequest );
+            }
+
+            /* We set the status as busy, but we do not goto the cleanup right away because we still want to remove
+             * all pending requests. */
+        }
+
+        /* Delete all possible pending responses. (This is defensive.) */
+        IotDeQueue_RemoveAll( &( connHandle->respQ ), NULL, 0 );
+
+        /* Put the response that was dequeued back so that the application can call this function again to check later
+         * that is exited and marked itself as finished sending.
+         * If during the last check and this check reqFinishedSending gets set to true, that is OK because then the next */
+        if( pHttpsResponse->reqFinishedSending == false )
+        {
+            IotDeQueue_EnqueueHead( &( connHandle->respQ ), pRespItem );
+        }
+    }
+
+    /* Remove all pending requests. If this routine is called from the application context and there is a
+     * network receive callback in process, this routine will wait in _networkDestroy until that routine returns.
+     * If this is routine is called from the network receive callback context, then the destroy happens after the
+     * network receive callback context returns. */
+    IotDeQueue_RemoveAll( &( connHandle->reqQ ), NULL, 0 );
+
+    /* Do not attempt to destroy an already destroyed connection. This can happen when the user calls this function and
+     * IOT_HTTPS_BUSY is returned. */
+    if( HTTPS_SUCCEEDED( status ) )
+    {
+        if( connHandle->isDestroyed == false )
+        {
+            connHandle->isDestroyed = true;
+            _networkDestroy( connHandle );
+        }
+    }
+
+    HTTPS_FUNCTION_CLEANUP_BEGIN();
+
+    /* This function is no longer in process, so disconnecting is no longer in process. This signals to the retry
+     * on this function that it can proceed with the disconnecting activities. */
+    if( connHandle != NULL )
+    {
+        IotMutex_Unlock( &( connHandle->connectionMutex ) );
+    }
+
+    HTTPS_FUNCTION_CLEANUP_END();
+}
+
+/*-----------------------------------------------------------*/
+
+IotHttpsReturnCode_t IotHttpsClient_InitializeRequest( IotHttpsRequestHandle_t * pReqHandle,
+                                                       IotHttpsRequestInfo_t * pReqInfo )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    _httpsRequest_t * pHttpsRequest = NULL;
+    size_t additionalLength = 0;
+    size_t spaceLen = 1;
+    char * pSpace = " ";
+    size_t httpsMethodLen = 0;
+    size_t httpsProtocolVersionLen = FAST_MACRO_STRLEN( HTTPS_PROTOCOL_VERSION );
+
+    /* Check for NULL parameters in the public API. */
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pReqHandle );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pReqInfo );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pReqInfo->userBuffer.pBuffer );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pReqInfo->pHost );
+
+    if( pReqInfo->isAsync )
+    {
+        HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pReqInfo->u.pAsyncInfo );
+    }
+    else
+    {
+        HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pReqInfo->u.pSyncInfo );
+    }
+
+    /* Check of the user buffer is large enough for the request context + default headers. */
+    HTTPS_ON_ARG_ERROR_MSG_GOTO_CLEANUP( pReqInfo->userBuffer.bufferLen >= requestUserBufferMinimumSize,
+                                         IOT_HTTPS_INSUFFICIENT_MEMORY,
+                                         "Buffer size is too small to initialize the request context. User buffer size: %d, required minimum size; %d.",
+                                         pReqInfo->userBuffer.bufferLen,
+                                         requestUserBufferMinimumSize );
+
+    /* Set the request contet to the start of the userbuffer. */
+    pHttpsRequest = ( _httpsRequest_t * ) ( pReqInfo->userBuffer.pBuffer );
+    /* Clear out the user buffer. */
+    memset( pReqInfo->userBuffer.pBuffer, 0, pReqInfo->userBuffer.bufferLen );
+
+    /* Set the start of the headers to the end of the request context in the user buffer. */
+    pHttpsRequest->pHeaders = ( uint8_t * ) pHttpsRequest + sizeof( _httpsRequest_t );
+    pHttpsRequest->pHeadersEnd = ( uint8_t * ) pHttpsRequest + pReqInfo->userBuffer.bufferLen;
+    pHttpsRequest->pHeadersCur = pHttpsRequest->pHeaders;
+
+    /* Get the length of the HTTP method. */
+    httpsMethodLen = strlen( _pHttpsMethodStrings[ pReqInfo->method ] );
+
+    /* Add the request line to the header buffer. */
+    additionalLength = httpsMethodLen +          \
+                       spaceLen +                \
+                       pReqInfo->pathLen +       \
+                       spaceLen +                \
+                       httpsProtocolVersionLen + \
+                       HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH;
+
+    if( ( additionalLength + pHttpsRequest->pHeadersCur ) > ( pHttpsRequest->pHeadersEnd ) )
+    {
+        IotLogError( "Request line does not fit into the request user buffer: \"%s %.*s HTTP/1.1\\r\\n\" . ",
+                     _pHttpsMethodStrings[ pReqInfo->method ],
+                     pReqInfo->pathLen,
+                     pReqInfo->pPath );
+        IotLogError( "The length needed is %d and the space available is %d.", additionalLength, pHttpsRequest->pHeadersEnd - pHttpsRequest->pHeadersCur );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_INSUFFICIENT_MEMORY );
+    }
+
+    /* Write "<METHOD> <PATH> HTTP/1.1\r\n" to the start of the header space. */
+    memcpy( pHttpsRequest->pHeadersCur, _pHttpsMethodStrings[ pReqInfo->method ], httpsMethodLen );
+    pHttpsRequest->pHeadersCur += httpsMethodLen;
+    memcpy( pHttpsRequest->pHeadersCur, pSpace, spaceLen );
+    pHttpsRequest->pHeadersCur += spaceLen;
+
+    if( pReqInfo->pPath == NULL )
+    {
+        pReqInfo->pPath = HTTPS_EMPTY_PATH;
+        pReqInfo->pathLen = FAST_MACRO_STRLEN( HTTPS_EMPTY_PATH );
+    }
+
+    memcpy( pHttpsRequest->pHeadersCur, pReqInfo->pPath, pReqInfo->pathLen );
+    pHttpsRequest->pHeadersCur += pReqInfo->pathLen;
+    memcpy( pHttpsRequest->pHeadersCur, pSpace, spaceLen );
+    pHttpsRequest->pHeadersCur += spaceLen;
+    memcpy( pHttpsRequest->pHeadersCur, HTTPS_PROTOCOL_VERSION, httpsProtocolVersionLen );
+    pHttpsRequest->pHeadersCur += httpsProtocolVersionLen;
+    memcpy( pHttpsRequest->pHeadersCur, HTTPS_END_OF_HEADER_LINES_INDICATOR, HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH );
+    pHttpsRequest->pHeadersCur += HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH;
+
+    /* Add the User-Agent header. */
+    status = _addHeader( pHttpsRequest, HTTPS_USER_AGENT_HEADER, FAST_MACRO_STRLEN( HTTPS_USER_AGENT_HEADER ), IOT_HTTPS_USER_AGENT, FAST_MACRO_STRLEN( IOT_HTTPS_USER_AGENT ) );
+
+    if( HTTPS_FAILED( status ) )
+    {
+        IotLogError( "Failed to write header to the request user buffer: \"User-Agent: %s\\r\\n\" . Error code: %d",
+                     IOT_HTTPS_USER_AGENT,
+                     status );
+        HTTPS_GOTO_CLEANUP();
+    }
+
+    status = _addHeader( pHttpsRequest, HTTPS_HOST_HEADER, FAST_MACRO_STRLEN( HTTPS_HOST_HEADER ), pReqInfo->pHost, pReqInfo->hostLen );
+
+    if( HTTPS_FAILED( status ) )
+    {
+        IotLogError( "Failed to write \"Host: %.*s\\r\\n\" to the request user buffer. Error code: %d",
+                     pReqInfo->hostLen,
+                     pReqInfo->pHost,
+                     status );
+        HTTPS_GOTO_CLEANUP();
+    }
+
+    if( pReqInfo->isAsync )
+    {
+        pHttpsRequest->isAsync = true;
+        /* If this is an asynchronous request then save the callbacks to use. */
+        pHttpsRequest->pCallbacks = &( pReqInfo->u.pAsyncInfo->callbacks );
+        pHttpsRequest->pUserPrivData = pReqInfo->u.pAsyncInfo->pPrivData;
+        /* The body pointer and body length will be filled in when the application sends data in the writeCallback. */
+        pHttpsRequest->pBody = NULL;
+        pHttpsRequest->bodyLength = 0;
+    }
+    else
+    {
+        pHttpsRequest->isAsync = false;
+        /* Set the HTTP request entity body. This is allowed to be NULL for no body like for a GET request. */
+        pHttpsRequest->pBody = pReqInfo->u.pSyncInfo->pBody;
+        pHttpsRequest->bodyLength = pReqInfo->u.pSyncInfo->bodyLen;
+    }
+
+    /* Save the method of this request. */
+    pHttpsRequest->method = pReqInfo->method;
+    /* Set the connection persistence flag for keeping the connection open after receiving a response. */
+    pHttpsRequest->isNonPersistent = pReqInfo->isNonPersistent;
+    /* Initialize the request cancellation. */
+    pHttpsRequest->cancelled = false;
+    /* Initialize the status of sending the body over the network in a possible asynchronous request. */
+    pHttpsRequest->bodyTxStatus = IOT_HTTPS_OK;
+    /* This is a new request and therefore not scheduled yet. */
+    pHttpsRequest->scheduled = false;
+
+    /* Set the request handle to return. */
+    *pReqHandle = pHttpsRequest;
+
+    HTTPS_FUNCTION_CLEANUP_BEGIN();
+
+    if( HTTPS_FAILED( status ) && ( pReqHandle != NULL ) )
+    {
+        /* Set the request handle to return to NULL, if we failed anywhere. */
+        *pReqHandle = NULL;
+    }
+
+    HTTPS_FUNCTION_CLEANUP_END();
+}
+
+/*-----------------------------------------------------------*/
+
+IotHttpsReturnCode_t IotHttpsClient_AddHeader( IotHttpsRequestHandle_t reqHandle,
+                                               char * pName,
+                                               uint32_t nameLen,
+                                               char * pValue,
+                                               uint32_t valueLen )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    /* Check for NULL pointer paramters. */
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pName );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pValue );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( reqHandle );
+
+    /* Check for name long enough for header length calculation to overflow */
+    HTTPS_ON_ARG_ERROR_MSG_GOTO_CLEANUP( nameLen <= ( UINT32_MAX >> 2 ),
+                                         IOT_HTTPS_INVALID_PARAMETER,
+                                         "Attempting to generate headers with name length %d > %d. This is not allowed.",
+                                         nameLen, UINT32_MAX >> 2 );
+
+    /* Check for value long enough for header length calculation to overflow */
+    HTTPS_ON_ARG_ERROR_MSG_GOTO_CLEANUP( valueLen <= ( UINT32_MAX >> 2 ),
+                                         IOT_HTTPS_INVALID_PARAMETER,
+                                         "Attempting to generate headers with value length %d > %d. This is not allowed.",
+                                         valueLen, UINT32_MAX >> 2 );
+
+    /* Check for auto-generated header "Content-Length". This header is created and send automatically when right before
+     * request body is sent on the network. */
+    HTTPS_ON_ARG_ERROR_MSG_GOTO_CLEANUP( strncmp( pName, HTTPS_CONTENT_LENGTH_HEADER, FAST_MACRO_STRLEN( HTTPS_CONTENT_LENGTH_HEADER ) ) != 0,
+                                         IOT_HTTPS_INVALID_PARAMETER,
+                                         "Attempting to add auto-generated header %s. This is not allowed.",
+                                         HTTPS_CONTENT_LENGTH_HEADER );
+
+    /* Check for auto-generated header "Connection". This header is created and send automatically when right before
+     * request body is sent on the network. */
+    HTTPS_ON_ARG_ERROR_MSG_GOTO_CLEANUP( strncmp( pName, HTTPS_CONNECTION_HEADER, FAST_MACRO_STRLEN( HTTPS_CONNECTION_HEADER ) ) != 0,
+                                         IOT_HTTPS_INVALID_PARAMETER,
+                                         "Attempting to add auto-generated header %s. This is not allowed.",
+                                         HTTPS_CONNECTION_HEADER );
+
+    /* Check for auto-generated header "Host". This header is created and placed into the header buffer space
+     * in IotHttpClient_InitializeRequest(). */
+    HTTPS_ON_ARG_ERROR_MSG_GOTO_CLEANUP( strncmp( pName, HTTPS_HOST_HEADER, FAST_MACRO_STRLEN( HTTPS_HOST_HEADER ) ) != 0,
+                                         IOT_HTTPS_INVALID_PARAMETER,
+                                         "Attempting to add auto-generated header %s. This is not allowed.",
+                                         HTTPS_HOST_HEADER );
+
+    /* Check for auto-generated header "User-Agent". This header is created and placed into the header buffer space
+     * in IotHttpClient_InitializeRequest(). */
+    HTTPS_ON_ARG_ERROR_MSG_GOTO_CLEANUP( strncmp( pName, HTTPS_USER_AGENT_HEADER, FAST_MACRO_STRLEN( HTTPS_USER_AGENT_HEADER ) ) != 0,
+                                         IOT_HTTPS_INVALID_PARAMETER,
+                                         "Attempting to add auto-generated header %s. This is not allowed.",
+                                         HTTPS_USER_AGENT_HEADER );
+
+
+    status = _addHeader( reqHandle, pName, nameLen, pValue, valueLen );
+
+    if( HTTPS_FAILED( status ) )
+    {
+        IotLogError( "Error in IotHttpsClient_AddHeader(), error code %d.", status );
+        HTTPS_GOTO_CLEANUP();
+    }
+
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+IotHttpsReturnCode_t IotHttpsClient_SendSync( IotHttpsConnectionHandle_t connHandle,
+                                              IotHttpsRequestHandle_t reqHandle,
+                                              IotHttpsResponseHandle_t * pRespHandle,
+                                              IotHttpsResponseInfo_t * pRespInfo,
+                                              uint32_t timeoutMs )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    bool respFinishedSemCreated = false;
+    _httpsResponse_t * pHttpsResponse = NULL;
+
+    /* Parameter checks. */
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( connHandle );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( reqHandle );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pRespHandle );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pRespInfo );
+    /* Stop the application from scheduling requests on a closed connection. */
+    HTTPS_ON_ARG_ERROR_GOTO_CLEANUP( connHandle->isConnected );
+
+    /* If an asynchronous request/response is configured, that is invalid for this API. */
+    if( reqHandle->isAsync )
+    {
+        IotLogError( "Called IotHttpsClient_SendSync on an asynchronous configured request." );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_INVALID_PARAMETER );
+    }
+
+    /* Initialize the response handle to return. */
+    status = _initializeResponse( pRespHandle, pRespInfo, reqHandle );
+
+    if( HTTPS_FAILED( status ) )
+    {
+        IotLogError( "Failed to initialize the response on the synchronous request %d.", reqHandle );
+        HTTPS_GOTO_CLEANUP();
+    }
+
+    /* Set the internal response to use. */
+    pHttpsResponse = *pRespHandle;
+
+    /* The implicit connection passed and we need to the set the connection handle in the request and response. */
+    reqHandle->pHttpsConnection = connHandle;
+    pHttpsResponse->pHttpsConnection = connHandle;
+
+    /* Create the semaphore used to wait on the response to finish being received. */
+    respFinishedSemCreated = IotSemaphore_Create( &( pHttpsResponse->respFinishedSem ), 0 /* initialValue */, 1 /* maxValue */ );
+
+    if( respFinishedSemCreated == false )
+    {
+        IotLogError( "Failed to create an internal semaphore." );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_INTERNAL_ERROR );
+    }
+
+    /* Associate the response to the request so that we can schedule it to be received when the request gets scheduled to send. */
+    reqHandle->pHttpsResponse = pHttpsResponse;
+
+    /* Schedule this request to be sent by adding it to the connection's request queue. */
+    status = _addRequestToConnectionReqQ( reqHandle );
+
+    if( HTTPS_FAILED( status ) )
+    {
+        IotLogError( "Failed to schedule the synchronous request. Error code: %d", status );
+        HTTPS_GOTO_CLEANUP();
+    }
+
+    /* Wait for the request to finish. */
+    if( timeoutMs == 0 )
+    {
+        IotSemaphore_Wait( &( pHttpsResponse->respFinishedSem ) );
+    }
+    else
+    {
+        if( IotSemaphore_TimedWait( &( pHttpsResponse->respFinishedSem ), timeoutMs ) == false )
+        {
+            IotLogError( "Timed out waiting for the synchronous request to finish. Timeout ms: %d", timeoutMs );
+            _cancelRequest( reqHandle );
+            HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_TIMEOUT_ERROR );
+        }
+    }
+
+    HTTPS_FUNCTION_CLEANUP_BEGIN();
+
+    if( respFinishedSemCreated )
+    {
+        IotSemaphore_Destroy( &( pHttpsResponse->respFinishedSem ) );
+    }
+
+    /* If the syncStatus is anything other than IOT_HTTPS_OK, then the request was scheduled. */
+    if( ( pHttpsResponse != NULL ) && HTTPS_FAILED( pHttpsResponse->syncStatus ) )
+    {
+        status = pHttpsResponse->syncStatus;
+    }
+
+    if( HTTPS_FAILED( status ) )
+    {
+        if( pRespHandle != NULL )
+        {
+            *pRespHandle = NULL;
+        }
+
+        IotLogError( "IotHttpsClient_SendSync() failed." );
+    }
+
+    HTTPS_FUNCTION_CLEANUP_END();
+}
+
+/*-----------------------------------------------------------*/
+
+IotHttpsReturnCode_t IotHttpsClient_WriteRequestBody( IotHttpsRequestHandle_t reqHandle,
+                                                      uint8_t * pBuf,
+                                                      uint32_t len,
+                                                      int isComplete )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( reqHandle );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pBuf );
+
+    /* This function is not valid for a synchronous response. Applications need to configure the request body in
+     * IotHttpsRequestInfo_t.pSyncInfo_t.reqData before calling IotHttpsClient_SendSync(). */
+    HTTPS_ON_ARG_ERROR_GOTO_CLEANUP( reqHandle->isAsync );
+    HTTPS_ON_ARG_ERROR_MSG_GOTO_CLEANUP( isComplete == 1,
+                                         IOT_HTTPS_NOT_SUPPORTED,
+                                         "isComplete must be 1 in IotHttpsClient_WriteRequestBody() for the current version of the HTTPS Client library." );
+
+    /* If the bodyLength is greater than 0, then we already called this function and we need to enforce that this
+     * function must only be called once. We only call this function once so that we can calculate the Content-Length. */
+    if( reqHandle->bodyLength > 0 )
+    {
+        IotLogError( "Error this function must be called once with the data needed to send. Variable length HTTP "
+                     "request body is not supported in this library." );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_MESSAGE_FINISHED );
+    }
+
+    /* Set the pointer to the body and the length for the content-length calculation. */
+    reqHandle->pBody = ( uint8_t * ) pBuf;
+    reqHandle->bodyLength = len;
+
+    /* We send the HTTPS headers and body in this function so that the application has the freedom to specify a body
+     * that may be buffer on stack. */
+    status = _sendHttpsHeadersAndBody( reqHandle->pHttpsConnection, reqHandle );
+
+    if( HTTPS_FAILED( status ) )
+    {
+        IotLogError( "Failed to send the headers and body. Error code %d.", status );
+        HTTPS_GOTO_CLEANUP();
+    }
+
+    HTTPS_FUNCTION_CLEANUP_BEGIN();
+
+    if( reqHandle != NULL )
+    {
+        reqHandle->bodyTxStatus = status;
+    }
+
+    HTTPS_FUNCTION_CLEANUP_END();
+}
+
+/*-----------------------------------------------------------*/
+
+IotHttpsReturnCode_t IotHttpsClient_ReadResponseBody( IotHttpsResponseHandle_t respHandle,
+                                                      uint8_t * pBuf,
+                                                      uint32_t * pLen )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    uint32_t bodyLengthInHeaderBuf = 0;
+
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( respHandle );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pBuf );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pLen );
+    HTTPS_ON_ARG_ERROR_GOTO_CLEANUP( respHandle->isAsync );
+
+    /* Set the current body in the respHandle to use in _receiveHttpsBody(). _receiveHttpsBody is generic
+     *  to both async and sync request/response handling. In the sync version the body is configured during
+     *  initializing the request. In the async version the body is given in this function on the fly. */
+    respHandle->pBody = pBuf;
+    respHandle->pBodyCur = respHandle->pBody;
+    respHandle->pBodyEnd = respHandle->pBodyCur + *pLen;
+
+    /* When there is part of the body in the header pBuffer. We need to move that data to this body pBuffer
+     *  provided in this fuction. */
+    bodyLengthInHeaderBuf = respHandle->pBodyCurInHeaderBuf - respHandle->pBodyInHeaderBuf;
+
+    if( bodyLengthInHeaderBuf > 0 )
+    {
+        uint32_t copyLength = bodyLengthInHeaderBuf > *pLen ? *pLen : bodyLengthInHeaderBuf;
+        memcpy( respHandle->pBodyCur, respHandle->pBodyInHeaderBuf, copyLength );
+        respHandle->pBodyCur += copyLength;
+
+        /* This function may be called multiple times until all of the body that may be present in the header buffer is
+         * moved out. */
+        respHandle->pBodyInHeaderBuf += copyLength;
+    }
+
+    /* If there is room in the body buffer just provided by the application and we have not completed the current
+     * HTTP response message, then try to receive more body. */
+    if( ( ( respHandle->pBodyEnd - respHandle->pBodyCur ) > 0 ) && ( respHandle->parserState < PARSER_STATE_BODY_COMPLETE ) )
+    {
+        status = _receiveHttpsBody( respHandle->pHttpsConnection, respHandle );
+
+        if( HTTPS_FAILED( status ) )
+        {
+            IotLogError( "Failed to receive the HTTP response body on the network. Error code: %d.", status );
+            HTTPS_GOTO_CLEANUP();
+        }
+    }
+
+    *pLen = respHandle->pBodyCur - respHandle->pBody;
+
+    HTTPS_FUNCTION_CLEANUP_BEGIN();
+
+    if( respHandle != NULL )
+    {
+        respHandle->bodyRxStatus = status;
+    }
+
+    HTTPS_FUNCTION_CLEANUP_END();
+}
+
+/*-----------------------------------------------------------*/
+
+IotHttpsReturnCode_t IotHttpsClient_CancelRequestAsync( IotHttpsRequestHandle_t reqHandle )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( reqHandle );
+
+    _cancelRequest( reqHandle );
+
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+IotHttpsReturnCode_t IotHttpsClient_CancelResponseAsync( IotHttpsResponseHandle_t respHandle )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( respHandle );
+
+    _cancelResponse( respHandle );
+
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+
+/*-----------------------------------------------------------*/
+
+IotHttpsReturnCode_t IotHttpsClient_SendAsync( IotHttpsConnectionHandle_t connHandle,
+                                               IotHttpsRequestHandle_t reqHandle,
+                                               IotHttpsResponseHandle_t * pRespHandle,
+                                               IotHttpsResponseInfo_t * pRespInfo )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( connHandle );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( reqHandle );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pRespHandle );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pRespInfo );
+    HTTPS_ON_ARG_ERROR_GOTO_CLEANUP( reqHandle->isAsync );
+    /* Stop the application from scheduling requests on a closed connection. */
+    HTTPS_ON_ARG_ERROR_GOTO_CLEANUP( connHandle->isConnected );
+
+    /* Initialize the response handle to return. */
+    status = _initializeResponse( pRespHandle, pRespInfo, reqHandle );
+
+    if( HTTPS_FAILED( status ) )
+    {
+        IotLogError( "Failed to initialize the response on the synchronous request %d.", reqHandle );
+        HTTPS_GOTO_CLEANUP();
+    }
+
+    /* Set the connection handle in the request handle so that we can use it in the _writeRequestBody() callback. */
+    reqHandle->pHttpsConnection = connHandle;
+
+    /* Set the connection handle in the response handle sp that we can use it in the _readReadyCallback() callback. */
+    ( *pRespHandle )->pHttpsConnection = connHandle;
+
+    /* Associate the response to the request so that we can schedule it to be received when the request gets scheduled to send. */
+    reqHandle->pHttpsResponse = *pRespHandle;
+
+    /* Add the request to the connection's request queue. */
+    status = _addRequestToConnectionReqQ( reqHandle );
+
+    if( HTTPS_FAILED( status ) )
+    {
+        IotLogError( "Failed to add request %d to the connection's request queue. Error code: %d.", reqHandle, status );
+        HTTPS_GOTO_CLEANUP();
+    }
+
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+IotHttpsReturnCode_t IotHttpsClient_ReadResponseStatus( IotHttpsResponseHandle_t respHandle,
+                                                        uint16_t * pStatus )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( respHandle );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pStatus );
+
+    HTTPS_ON_ARG_ERROR_MSG_GOTO_CLEANUP( respHandle->status != 0,
+                                         IOT_HTTPS_NOT_FOUND,
+                                         "The HTTP response status was not found in the HTTP response header buffer." );
+
+    *pStatus = respHandle->status;
+
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+IotHttpsReturnCode_t IotHttpsClient_ReadHeader( IotHttpsResponseHandle_t respHandle,
+                                                char * pName,
+                                                uint32_t nameLen,
+                                                char * pValue,
+                                                uint32_t valueLen )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    const char * pHttpParserErrorDescription = NULL;
+    IotHttpsResponseBufferState_t savedBufferState = PROCESSING_STATE_NONE;
+    IotHttpsResponseParserState_t savedParserState = PARSER_STATE_NONE;
+    size_t numParsed = 0;
+
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( respHandle );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pName );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pValue );
+    HTTPS_ON_ARG_ERROR_MSG_GOTO_CLEANUP( valueLen > 0,
+                                         IOT_HTTPS_INVALID_PARAMETER,
+                                         "pValue has insufficient space to store a value string (length is 0)" );
+
+    /* The buffer processing state is changed to searching the header buffer in this function. The parser state is
+    * changed in the response to wherever the parser is currently located in the response. If this function is called
+    * in the middle of processing a response (for example in readReadyCallback() routine of an asynchronous response),
+    * then parsing the response need to be able to start at the same place it was before calling this function. */
+    savedBufferState = respHandle->bufferProcessingState;
+    savedParserState = respHandle->parserState;
+
+    /* The header search parameters in the response handle are used as context in the http-parser callbacks. During
+     * the callback, pReadHeaderField is checked against the currently parsed header name. foundHeaderFiled is set to
+     * true when the pReadHeaderField is found in a header field callback. The bufferProcessingState tells the callback
+     * to skip the logic pertaining to when the response is being parsed for the first time. pReadHeaderValue will store
+     * the header value found. readHeaderValueLength will store the the header value found's length from within the
+     * response headers. */
+    respHandle->pReadHeaderField = pName;
+    respHandle->readHeaderFieldLength = nameLen;
+    respHandle->foundHeaderField = false;
+    respHandle->bufferProcessingState = PROCESSING_STATE_SEARCHING_HEADER_BUFFER;
+    respHandle->pReadHeaderValue = NULL;
+    respHandle->readHeaderValueLength = 0;
+
+    /* Start over the HTTP parser so that it will parser from the beginning of the message. */
+    http_parser_init( &( respHandle->httpParserInfo.readHeaderParser ), HTTP_RESPONSE );
+
+    IotLogDebug( "Now parsing HTTP Message buffer to read a header." );
+    numParsed = respHandle->httpParserInfo.parseFunc( &( respHandle->httpParserInfo.readHeaderParser ), &_httpParserSettings, ( char * ) ( respHandle->pHeaders ), respHandle->pHeadersCur - respHandle->pHeaders );
+    IotLogDebug( "Parsed %d characters in IotHttpsClient_ReadHeader().", numParsed );
+
+    /* There shouldn't be any errors parsing the response body given that the handle is from a validly
+     * received response, so this check is defensive. If there were errors parsing the original response headers, then
+     * the response handle would have been invalidated and the connection closed. */
+    if( ( respHandle->httpParserInfo.readHeaderParser.http_errno != 0 ) &&
+        ( HTTP_PARSER_ERRNO( &( respHandle->httpParserInfo.readHeaderParser ) ) > HPE_CB_chunk_complete ) )
+    {
+        pHttpParserErrorDescription = http_errno_description( HTTP_PARSER_ERRNO( &( respHandle->httpParserInfo.readHeaderParser ) ) );
+        IotLogError( "http_parser failed on the http response with error: %s", pHttpParserErrorDescription );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_PARSING_ERROR );
+    }
+
+    /* Not only do we need an indication that the header field was found, but also that the value was found as well.
+     * The value is found when it is non-NULL. The case where the header field is found, but the value is not found
+     * occurs when there are incomplete headers stored in the header buffer. The header buffer could end with a header
+     * field name. */
+    if( respHandle->foundHeaderField && ( respHandle->pReadHeaderValue != NULL ) )
+    {
+        /* The len of the pValue buffer must account for the NULL terminator. */
+        if( respHandle->readHeaderValueLength > ( valueLen - 1 ) )
+        {
+            IotLogError( "IotHttpsClient_ReadHeader(): The length of the pValue buffer specified is less than the actual length of the pValue. " );
+            HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_INSUFFICIENT_MEMORY );
+        }
+        else
+        {
+            memcpy( pValue, respHandle->pReadHeaderValue, respHandle->readHeaderValueLength );
+            pValue[ respHandle->readHeaderValueLength ] = '\0';
+        }
+    }
+    else
+    {
+        IotLogError( "IotHttpsClient_ReadHeader(): The header field %s was not found.", pName );
+        HTTPS_SET_AND_GOTO_CLEANUP( IOT_HTTPS_NOT_FOUND );
+    }
+
+    HTTPS_FUNCTION_CLEANUP_BEGIN();
+
+    /* Always restore the state back to what it was before entering this function. */
+    if( respHandle != NULL )
+    {
+        respHandle->bufferProcessingState = savedBufferState;
+        respHandle->parserState = savedParserState;
+    }
+
+    HTTPS_FUNCTION_CLEANUP_END();
+}
+
+/*-----------------------------------------------------------*/
+
+IotHttpsReturnCode_t IotHttpsClient_ReadContentLength( IotHttpsResponseHandle_t respHandle,
+                                                       uint32_t * pContentLength )
+{
+    HTTPS_FUNCTION_ENTRY( IOT_HTTPS_OK );
+
+    const int CONTENT_LENGTH_NUMBERIC_BASE = 10;
+    char pContentLengthStr[ HTTPS_MAX_CONTENT_LENGTH_LINE_LENGTH ] = { 0 };
+
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( respHandle );
+    HTTPS_ON_NULL_ARG_GOTO_CLEANUP( pContentLength );
+
+    /* If there is no content-length header or if we were not able to store it in the header buffer this will be
+     * invalid. We do not use the content-length member of the http-parser state structure to get the content
+     * length as this is a PRIVATE member. Because it is a PRIVATE member it can be any value. */
+    status = IotHttpsClient_ReadHeader( respHandle, HTTPS_CONTENT_LENGTH_HEADER, FAST_MACRO_STRLEN( HTTPS_CONTENT_LENGTH_HEADER ), pContentLengthStr, HTTPS_MAX_CONTENT_LENGTH_LINE_LENGTH );
+
+    if( HTTPS_FAILED( status ) )
+    {
+        *pContentLength = 0;
+        IotLogError( "Could not read the Content-Length for the response." );
+        HTTPS_GOTO_CLEANUP();
+    }
+
+    *pContentLength = strtoul( pContentLengthStr, NULL, CONTENT_LENGTH_NUMBERIC_BASE );
+
+    HTTPS_FUNCTION_EXIT_NO_CLEANUP();
+}
+
+/*-----------------------------------------------------------*/
+
+/* Provide access to internal functions and variables if testing. */
+#if IOT_BUILD_TESTS == 1
+    #include "iot_test_access_https_client.c"
+#endif
diff --git a/libraries/c_sdk/standard/https/src/iot_https_utils.c b/libraries/c_sdk/standard/https/src/iot_https_utils.c
new file mode 100644
index 000000000..29413516e
--- /dev/null
+++ b/libraries/c_sdk/standard/https/src/iot_https_utils.c
@@ -0,0 +1,137 @@
+/*
+ * Amazon FreeRTOS HTTPS Client V1.0.0
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+/**
+ * @file iot_https_utils.h
+ * @brief Implements functions for HTTPS Client library utilities.
+ */
+
+/* The config header is always included first. */
+#include "iot_config.h"
+
+/* iot_https_includes */
+#include "iot_https_utils.h"
+#include "http_parser.h"
+#include "private/iot_https_internal.h"
+
+/*-----------------------------------------------------------*/
+
+IotHttpsReturnCode_t IotHttpsClient_GetUrlPath( const char * pUrl,
+                                                size_t urlLen,
+                                                const char ** pPath,
+                                                size_t * pPathLen )
+{
+    /* http-parser status. Initialized to 0 to signify success. */
+    int parserStatus = 0;
+    struct http_parser_url urlParser;
+    IotHttpsReturnCode_t returnStatus = IOT_HTTPS_OK;
+
+    /* Sets all members in urlParser to 0. */
+    http_parser_url_init( &urlParser );
+
+    if( ( pUrl == NULL ) || ( pPath == NULL ) || ( pPathLen == NULL ) )
+    {
+        IotLogError( "NULL parameter passed to IotHttpsClient_GetUrlPath()." );
+        returnStatus = IOT_HTTPS_INVALID_PARAMETER;
+    }
+
+    if( returnStatus == IOT_HTTPS_OK )
+    {
+        parserStatus = http_parser_parse_url( pUrl, urlLen, 0, &urlParser );
+
+        if( parserStatus != 0 )
+        {
+            IotLogError( "Error parsing the input URL %.*s. Error code: %d.", urlLen, pUrl, parserStatus );
+            returnStatus = IOT_HTTPS_PARSING_ERROR;
+        }
+    }
+
+    if( returnStatus == IOT_HTTPS_OK )
+    {
+        *pPathLen = ( size_t ) ( urlParser.field_data[ UF_PATH ].len );
+
+        if( *pPathLen == 0 )
+        {
+            returnStatus = IOT_HTTPS_NOT_FOUND;
+            *pPath = NULL;
+        }
+        else
+        {
+            *pPath = &pUrl[ urlParser.field_data[ UF_PATH ].off ];
+        }
+    }
+
+    return returnStatus;
+}
+
+/*-----------------------------------------------------------*/
+
+IotHttpsReturnCode_t IotHttpsClient_GetUrlAddress( const char * pUrl,
+                                                   size_t urlLen,
+                                                   const char ** pAddress,
+                                                   size_t * pAddressLen )
+{
+    /* http-parser status. Initialized to 0 to signify success. */
+    int parserStatus = 0;
+    struct http_parser_url urlParser;
+    IotHttpsReturnCode_t returnStatus = IOT_HTTPS_OK;
+
+    /* Sets all members in urlParser to 0. */
+    http_parser_url_init( &urlParser );
+
+    if( ( pUrl == NULL ) || ( pAddress == NULL ) || ( pAddressLen == NULL ) )
+    {
+        IotLogError( "NULL parameter passed to IotHttpsClient_GetUrlAddress()." );
+        returnStatus = IOT_HTTPS_INVALID_PARAMETER;
+    }
+
+    if( returnStatus == IOT_HTTPS_OK )
+    {
+        parserStatus = http_parser_parse_url( pUrl, urlLen, 0, &urlParser );
+
+        if( parserStatus != 0 )
+        {
+            IotLogError( "Error parsing the input URL %.*s. Error code: %d.", urlLen, pUrl, parserStatus );
+            returnStatus = IOT_HTTPS_PARSING_ERROR;
+        }
+    }
+
+    if( returnStatus == IOT_HTTPS_OK )
+    {
+        *pAddressLen = ( size_t ) ( urlParser.field_data[ UF_HOST ].len );
+
+        if( *pAddressLen == 0 )
+        {
+            returnStatus = IOT_HTTPS_NOT_FOUND;
+            *pAddress = NULL;
+        }
+        else
+        {
+            *pAddress = &pUrl[ urlParser.field_data[ UF_HOST ].off ];
+        }
+    }
+
+    return returnStatus;
+}
diff --git a/libraries/c_sdk/standard/https/src/private/iot_https_internal.h b/libraries/c_sdk/standard/https/src/private/iot_https_internal.h
new file mode 100644
index 000000000..e0f7b9cc4
--- /dev/null
+++ b/libraries/c_sdk/standard/https/src/private/iot_https_internal.h
@@ -0,0 +1,494 @@
+/*
+ * Amazon FreeRTOS HTTPS Client V1.0.0
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+#ifndef IOT_HTTPS_INTERNAL_H_
+#define IOT_HTTPS_INTERNAL_H_
+
+/* The config header is always included first. */
+#include "iot_config.h"
+
+/* Standard Includes. */
+#include <string.h>
+#include <stdbool.h>
+#include <stdlib.h>
+#include <stdio.h>
+
+/* Third party http-parser include. */
+#include "http_parser.h"
+
+/* HTTPS Client library includes. */
+#include "iot_https_client.h"
+
+/* Task pool include. */
+#include "iot_taskpool.h"
+
+/* Linear containers (lists and queues) include. */
+#include "iot_linear_containers.h"
+
+/* Types include. */
+#include "types/iot_taskpool_types.h"
+
+/* Platform layer includes. */
+#include "platform/iot_threads.h"
+#include "platform/iot_network.h"
+
+/* Error handling include. */
+#include "private/iot_error.h"
+
+/*-----------------------------------------------------------*/
+
+/* Convenience macros for handling errors in a standard way. */
+
+/**
+ * @brief Every public API return an enumeration value with an undelying value of 0 in case of success.
+ */
+#define HTTPS_SUCCEEDED( x )                         ( ( x ) == IOT_HTTPS_OK )
+
+/**
+ * @brief Every public API returns an enumeration value with an undelying value different than 0 in case of success.
+ */
+#define HTTPS_FAILED( x )                            ( ( x ) != IOT_HTTPS_OK )
+
+/**
+ * @brief Declare the storage for the error status variable.
+ */
+#define HTTPS_FUNCTION_ENTRY( result )               IOT_FUNCTION_ENTRY( IotHttpsReturnCode_t, result )
+
+/**
+ * @brief Jump to the cleanup area.
+ */
+#define HTTPS_GOTO_CLEANUP()                         IOT_GOTO_CLEANUP()
+
+/**
+ * @brief Set error and leave.
+ */
+#define HTTPS_SET_AND_GOTO_CLEANUP( statusValue )    IOT_SET_AND_GOTO_CLEANUP( statusValue )
+
+/**
+ * @brief Initialize error and declare start of cleanup area.
+ */
+#define HTTPS_FUNCTION_CLEANUP_BEGIN()               IOT_FUNCTION_CLEANUP_BEGIN()
+
+/**
+ * @brief Initialize error and declare end of cleanup area.
+ */
+#define HTTPS_FUNCTION_CLEANUP_END()                 IOT_FUNCTION_CLEANUP_END()
+
+/**
+ * @brief Create an empty cleanup area.
+ */
+#define HTTPS_FUNCTION_EXIT_NO_CLEANUP()             IOT_FUNCTION_EXIT_NO_CLEANUP()
+
+/**
+ * @brief Exit if an argument is NULL.
+ */
+#define HTTPS_ON_NULL_ARG_GOTO_CLEANUP( ptr )                    \
+    if( ( ptr == NULL ) )                                        \
+    {                                                            \
+        IotLogError( # ptr " was NULL." );                       \
+        IOT_SET_AND_GOTO_CLEANUP( IOT_HTTPS_INVALID_PARAMETER ); \
+    }
+
+/**
+ * @brief Exit if an condition is false.
+ */
+#define HTTPS_ON_ARG_ERROR_GOTO_CLEANUP( expr )                  \
+    if( ( expr ) == false )                                      \
+    {                                                            \
+        IotLogError( # expr " must be true." );                  \
+        IOT_SET_AND_GOTO_CLEANUP( IOT_HTTPS_INVALID_PARAMETER ); \
+    }
+
+/**
+ * @brief Exit if an argument is false with a message.
+ */
+#define HTTPS_ON_ARG_ERROR_MSG_GOTO_CLEANUP( expr, statusValue, ... ) \
+    if( ( expr ) == false )                                           \
+    {                                                                 \
+        IotLogError( __VA_ARGS__ );                                   \
+        IOT_SET_AND_GOTO_CLEANUP( statusValue );                      \
+    }
+
+/* Configure logs for HTTPS Client functions. */
+#ifdef IOT_LOG_LEVEL_HTTPS
+    #define LIBRARY_LOG_LEVEL        IOT_LOG_LEVEL_HTTPS
+#else
+    #ifdef IOT_LOG_LEVEL_GLOBAL
+        #define LIBRARY_LOG_LEVEL    IOT_LOG_LEVEL_GLOBAL
+    #else
+        #define LIBRARY_LOG_LEVEL    IOT_LOG_NONE
+    #endif
+#endif
+
+#define LIBRARY_LOG_NAME    ( "HTTPS Client" )
+#include "iot_logging_setup.h"
+
+/*
+ * Provide default values for undefined memory allocation functions based on
+ * the usage of dynamic memory allocation.
+ */
+#if IOT_STATIC_MEMORY_ONLY == 1
+    #include "private/iot_static_memory.h"
+#endif
+
+/**
+ * @cond DOXYGEN_IGNORE
+ * Doxygen should ignore this section.
+ *
+ * Provide default values for undefined configuration constants.
+ */
+#ifndef AWS_IOT_HTTPS_ENABLE_METRICS
+    #define AWS_IOT_HTTPS_ENABLE_METRICS           ( 1 )
+#endif
+#ifndef IOT_HTTPS_USER_AGENT
+    #define IOT_HTTPS_USER_AGENT                   "amazon-freertos"
+#endif
+#ifndef IOT_HTTPS_MAX_FLUSH_BUFFER_SIZE
+    #define IOT_HTTPS_MAX_FLUSH_BUFFER_SIZE        ( 1024 )
+#endif
+#ifndef IOT_HTTPS_RESPONSE_WAIT_MS
+    #define IOT_HTTPS_RESPONSE_WAIT_MS             ( 1000 )
+#endif
+#ifndef IOT_HTTPS_MAX_HOST_NAME_LENGTH
+    #define IOT_HTTPS_MAX_HOST_NAME_LENGTH         ( 255 ) /* Per FQDN, the maximum host name length is 255 bytes. */
+#endif
+#ifndef IOT_HTTPS_MAX_ALPN_PROTOCOLS_LENGTH
+    #define IOT_HTTPS_MAX_ALPN_PROTOCOLS_LENGTH    ( 255 ) /* The maximum alpn protocols length is chosen arbitrarily. */
+#endif
+
+/** @endcond */
+
+/**
+ * @brief The HTTP protocol version of this library is HTTP/1.1.
+ */
+#define HTTPS_PROTOCOL_VERSION                        "HTTP/1.1"
+
+/**
+ * @brief An empty path for a NULL specified path in the request initialization configuration.
+ */
+#define HTTPS_EMPTY_PATH                              "/"
+
+/**
+ * @brief HTTPS "CONNECT" method, defined as the longest string length method.
+ */
+#define HTTPS_CONNECT_METHOD                          "CONNECT"
+
+/*
+ * Constants for the values of the HTTP "Connection" header field.
+ *
+ * This is used for writing headers automatically during the sending of the HTTP request.
+ * "Connection: keep-alive\r\n" is written automatically for a persistent connection.
+ * "Connection: close\r\n" is written automatically for a non-persistent connection.
+ */
+#define HTTPS_CONNECTION_KEEP_ALIVE_HEADER_VALUE      "keep-alive"
+#define HTTPS_CONNECTION_CLOSE_HEADER_VALUE           "close"
+
+/**
+ * Constants for HTTP header formatting.
+ *
+ * ": " separates and header field from the header value.
+ */
+#define HTTPS_HEADER_FIELD_SEPARATOR                  ": "
+#define HTTPS_HEADER_FIELD_SEPARATOR_LENGTH           ( 2 )
+#define COLON_CHARACTER                               ':'
+#define SPACE_CHARACTER                               ' '
+
+/**
+ * Constants for HTTP header formatting.
+ *
+ * "\r\n" Ends the header line.
+ */
+#define HTTPS_END_OF_HEADER_LINES_INDICATOR           "\r\n"
+#define HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH    ( 2 )
+#define CARRIAGE_RETURN_CHARACTER                     '\r'
+#define NEWLINE_CHARACTER                             '\n'
+
+/*
+ * Constants for header fields added automatically during the request initialization.
+ */
+#define HTTPS_USER_AGENT_HEADER                       "User-Agent"
+#define HTTPS_HOST_HEADER                             "Host"
+
+/*
+ * Constants for the header fields added automatically during the sending of the HTTP request.
+ */
+#define HTTPS_CONTENT_LENGTH_HEADER                   "Content-Length"
+#define HTTPS_CONNECTION_HEADER                       "Connection"
+
+/**
+ * @brief The maximum Content-Length header line size.
+ *
+ * This is the length of header line string: "Content-Length: 4294967296\r\n". 4294967296 is 2^32. This number is chosen
+ * because it is the maximum file size that can be represented in a 32 bit system.
+ *
+ * This is used to initialize a local array for the final headers to send.
+ */
+#define HTTPS_MAX_CONTENT_LENGTH_LINE_LENGTH          ( 26 )
+
+/**
+ * @brief Macro for fast string length calculation of string macros.
+ *
+ * We subtract 1 to subtract the NULL terminating character.
+ * We do not assume that the size of a character is a single byte or 8 bits with this calculation.
+ */
+#define FAST_MACRO_STRLEN( x )    ( ( sizeof( x ) / sizeof( char ) ) - 1 )
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief The state of the HTTP response parsing.
+ *
+ * This state notes what has been parsed in the HTTP response.
+ *
+ * The states move as follows:
+ * PARSER_STATE_NONE --> PARSER_STATE_IN_HEADERS --> PARSER_STATE_HEADERS_COMPLETE --> PARSER_STATE_BODY_COMPLETE
+ *
+ * The parser callbacks are called in the following order:
+ * 1. _httpParserOnMessageBeginCallback()
+ * 2. _httpParserOnStatusCallback()
+ * 3. _httpParserOnHeaderFieldCallback()
+ * 4. _httpParserOnHeaderValueCallback()
+ * 5. _httpParserOnHeadersCompleteCallback()
+ * 6. _httpParserOnChunkHeaderCallback() (optional only if the response is chunked)
+ * 7. _httpParserOnBodyCallback()
+ * 8. _httpParserOnChunkCompleteCallback() (optional only if the response is chunked)
+ * 9. _httpParserOnMessageCompleteCallback()
+ *
+ * Theses states are set in the parser callbacks and used outside the callbacks to determine action.
+ *
+ * PARSER_STATE_NONE is assigned to #_httpsResponse_t.parserState when the _httpsResponse_t.parserState is initialized
+ * in @ref IotHttpsClient_InitializeRequest and before parsing a new respone message from the server.
+ *
+ * PARSER_STATE_IN_HEADERS is assigned at the start of the HTTP Response message. This occurs in the
+ * _httpParserOnMessageBeginCallback(). HTTP headers are always first and there is always the response status line
+ * and some headers in a response message acccording to RFC 2616.
+ *
+ * PARSER_STATE_HEADERS_COMPLETE is assigned when all of the headers are finished being parsed in the HTTP response
+ * message. This occurs in the _httpParserOnHeadersCompleteCallback(). The state can end here if the response has no
+ * body, like for a response to a HEAD request.
+ * If this state is not reached after receiving headers from the network into the user configured header buffer and
+ * running it through the parser, then we know that not all of the headers from the response could fit into the buffer.
+ *
+ * PARSER_STATE_IN_BODY is assigned each time the parser reaches HTTP response body. This occurs in the
+ * _httpParserOnBodyCallback().
+ *
+ * PARSER_STATE_BODY_COMPLETE is assigned when the parser has finished with the whole HTTP response message. This
+ * happens when _httpParserOnMessageCompleteCallback() is invoked.
+ * If this state is not reached after receiving body from the network into the user configured body buffer and
+ * running it through the parser, then we know that not all of the body from the response could fit into the buffer.
+ */
+typedef enum IotHttpsResponseParserState
+{
+    PARSER_STATE_NONE = 0,         /**< @brief The parser has not started so we are neither in the headers or the body. */
+    PARSER_STATE_IN_HEADERS,       /**< @brief The parser is currently parsing the HTTP respone headers. */
+    PARSER_STATE_HEADERS_COMPLETE, /**< @brief The parser has finished parsing the headers. */
+    PARSER_STATE_IN_BODY,          /**< @brief The parser is currently parsing the HTTP response body. */
+    PARSER_STATE_BODY_COMPLETE     /**< @brief The parser has completed parsing the HTTP response body. */
+} IotHttpsResponseParserState_t;
+
+/**
+ * @brief The state denoting which buffer (the header buffer or the body buffer) is currently being processed
+ * and for what.
+ *
+ * This state is set outside of the parser callbacks and used inside the of parser callbacks to determine actions.
+ *
+ * The state moves as follows:
+ * Receiving and parsing a response: PROCESSING_STATE_NONE --> PROCESSING_STATE_FILLING_HEADER_BUFFER --> PROCESSING_STATE_FILLING_BODY_BUFFER --> PROCESSING_STATE_FINISHED
+ * Searching a response for headers: ((enter state)) --> PROCESSING_STATE_SEARCHING_HEADER_BUFFER --> ((enter state))
+ *
+ * PROCESSING_STATE_NONE is assigned when #_httpsResponse_t.bufferProcessingState is initialized in
+ * @ref IotHttpsClient_InitializeRequest.
+ *
+ * PROCESSING_STATE_FILLING_HEADER_BUFFER is assigned at the start of receiving HTTP response headers from the network
+ * into the header buffer, before processing the received headers with the parser.
+ * This state is then used in the parser callbacks _httpParserOnStatusCallback(), _httpParserOnHeaderFieldCallback(),
+ * _httpParserOnHeaderValueCallback(), and _httpParserOnHeadersCompleteCallback() to move the
+ * #_httpsResponse_t.headersCur pointer along in the header buffer.
+ * Since the server sends the HTTP response as a single continuous message, somtimes during receiving of the HTTP
+ * headers we may receive part or all of the HTTP response body:
+ * ((example header buffer))[headers headers headers headers body body body]
+ * When parsing this header buffer the parser will execute _httpParserOnBodyCallback() in the
+ * PROCESSING_STATE_FILLING_HEADER_BUFFER state. The state is used here, for an asynchronous response, to save where
+ * and how much body is inside the of the header buffer. When a body buffer becomes available, the body in the header
+ * buffer will be copied to the body buffer.
+ *
+ * PROCESSING_STATE_FILLING_BODY_BUFFER is assigned at the start of receiving the HTTP response body form the network
+ * into the body buffer, before processing the received body with the parser.
+ *
+ * PROCESSING_STATE_FINISHED is assigned at the end of IotHttpsClient_SendSync() or at the end of
+ * IotHttpsClient_SendAsync() when both the header and body buffer are finished being filled with network data and
+ * parsed.
+ *
+ * PROCESSING_STATE_SEARCHING_HEADER_BUFFER is assigned in IotHttpsClient_ReadHeader() when searching for a header
+ * in the header buffer.
+ * This state is used in the parser callback _httpParserOnHeaderFieldCallback() to check if the current header field
+ * parsed equals the header we are searching for. It is used in parser callback _httpParserOnHeaderValueCallback() to
+ * return the header value if the corresponding field we are searching for was found. It is used in parser callback
+ * _httpParserOnHeadersCompleteCallback() to stop parsing the header buffer if the header we are searching for was not
+ * found.
+ *
+ * The header buffer is separate from the body buffer.
+ * The header buffer is configured in #IotHttpRequestInfo_t.respUserBuff. The body buffer is configured in
+ * #IotHttpRequestInfo_t.syncInfo->respData or as buffer provided asynchronously during the
+ * #IotHttpsClientCallbacks_t.readReadyCallback() to call to @ref IotHttpsClient_ReadResponseBody().
+ */
+typedef enum IotHttpsResponseBufferState
+{
+    PROCESSING_STATE_NONE,                   /**< @brief There is no buffer processing currently. */
+    PROCESSING_STATE_FILLING_HEADER_BUFFER,  /**< @brief The header buffer is being filled and parsed. */
+    PROCESSING_STATE_FILLING_BODY_BUFFER,    /**< @brief The body buffer is being filled and parsed. */
+    PROCESSING_STATE_FINISHED,               /**< @brief Filling and parsing of both buffers is finished. */
+    PROCESSING_STATE_SEARCHING_HEADER_BUFFER /**< @brief The header buffer is being searched. */
+} IotHttpsResponseBufferState_t;
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Represents an HTTP connection.
+ */
+typedef struct _httpsConnection
+{
+    const IotNetworkInterface_t * pNetworkInterface; /**< @brief Network interface with calls for connect, disconnect, send, and receive. */
+    void * pNetworkConnection;                       /**< @brief Pointer to the network connection to use pNetworkInterface calls on. */
+    uint32_t timeout;                                /**< @brief Timeout for a connection and waiting for a response from the network. */
+
+    /**
+     * @brief true if a connection was successful most recently on this context
+     *
+     * We have no way of knowing if the server closed the connection because that error is unique to the underlying TLS
+     * layer. This is set to false initially, then set to true for a successful intentional call to connect.
+     * Post connection, this is set to false only after an implicit disconnect with a non-persistent request, an implicit
+     * disconnect with a network error, or an explicit disconnect with a call to @ref https_client_function_disconnect.
+     */
+    bool isConnected;
+    bool isDestroyed;                           /**< @brief true if the connection is already destroyed and we should call anymore  */
+    IotMutex_t connectionMutex;                 /**< @brief Mutex protecting operations on this entire connection context. */
+    IotDeQueue_t reqQ;                          /**< @brief The queue for the requests that are not finished yet. */
+    IotDeQueue_t respQ;                         /**< @brief The queue for the responses that are waiting to be processed. */
+    IotTaskPoolJobStorage_t taskPoolJobStorage; /**< @brief An asynchronous operation requires storage for the task pool job. */
+    IotTaskPoolJob_t taskPoolJob;               /**< @brief The task pool job identifier for an asynchronous request. */
+} _httpsConnection_t;
+
+/**
+ * @brief Third party library http-parser information.
+ *
+ * There are two separate structures for http_parser state information. This is so that the application can read
+ * a header during it's readReadyCallback. The readReadyCallback could be invoked many times and the parser will
+ * therefore be invoked many times for each response read from the network. In order to ensure that the state of
+ * the parser remains intact whilst headers may be read, two structures holding the state are kept.
+ */
+typedef struct _httpParserInfo
+{
+    http_parser responseParser; /**< @brief http_parser state information for parsing the response. */
+    size_t ( * parseFunc )( http_parser * parser,
+                            const http_parser_settings * settings,
+                            const char * data,
+                            size_t len ); /**< @brief http_parser_execute function is to be plugged in here during initialization of the response. */
+    http_parser readHeaderParser;         /**< @brief http_parser state information for parsing the header buffer for reading a header. */
+} _httpParserInfo_t;
+
+/**
+ * @brief Represents an HTTP response.
+ */
+typedef struct _httpsResponse
+{
+    IotLink_t link;                                      /**< @brief The link to insert the job in the connection's respQ. */
+    uint8_t * pHeaders;                                  /**< @brief Pointer to the start of the headers buffer. */
+    uint8_t * pHeadersEnd;                               /**< @brief Pointer to the end of the headers buffer. */
+    uint8_t * pHeadersCur;                               /**< @brief Pointer to the next location to write in the headers buffer. */
+    uint8_t * pBody;                                     /**< @brief Pointer to the start of the body buffer. */
+    uint8_t * pBodyEnd;                                  /**< @brief Pointer to the end of the body buffer. */
+    uint8_t * pBodyCur;                                  /**< @brief Pointer to the next location to write in the body buffer. */
+    _httpParserInfo_t httpParserInfo;                    /**< @brief Third party http-parser information. */
+    uint16_t status;                                     /**< @brief The HTTP response status code of this response. */
+    IotHttpsMethod_t method;                             /**< @brief The method of the originating request. */
+    IotHttpsResponseParserState_t parserState;           /**< @brief The current state of the parser. See #IotHttpsResponseParserState_t documentation for more details. */
+    IotHttpsResponseBufferState_t bufferProcessingState; /**< @brief Which buffer is currently being processed and for what. See #IotHttpsResponseBufferState_t documentation. */
+    char * pReadHeaderField;                             /**< @brief Header field that we want to read from the headers buffer when IotHttpsClient_ReadHeader() is called. */
+    size_t readHeaderFieldLength;                        /**< @brief Length of pReadHeaderField */
+    char * pReadHeaderValue;                             /**< @brief Header value that we read from the headers buffer when IotHttpsClient_ReadHeader() is called. */
+    size_t readHeaderValueLength;                        /**< @brief Length of pReadHeaderValue. */
+    bool foundHeaderField;                               /**< @brief State to use during parsing to let us know when we found the header field in the https-parser callbacks.
+                                                          *          This is set to true when the header field is found in parser callback _httpParserOnHeaderFieldCallback().
+                                                          *          On the following parser callback _httpParserOnHeaderValueCallback() we will store the value in pReadHeaderValue and then exit the parsing. */
+    struct _httpsConnection * pHttpsConnection;          /**< @brief Connection associated with response. This is set during IotHttpsClient_SendAsync(). This is needed during the asynchronous workflow to receive data given the respHandle only in the callback. */
+    bool isAsync;                                        /**< @brief This is set to true if this response is to be retrieved asynchronously. Set to false otherwise. */
+    uint8_t * pBodyInHeaderBuf;                          /**< @brief Pointer to the start of body inside the header buffer for copying to a body buffer provided later by the asyncrhonous response process. */
+    uint8_t * pBodyCurInHeaderBuf;                       /**< @brief Pointer to the next location to write body data during processing of the header buffer. This is necessary in case there is a chunk encoded HTTP response. */
+    IotHttpsReturnCode_t bodyRxStatus;                   /**< @brief The status of network receiving the HTTPS body to be returned during the #IotHttpsClientCallbacks_t.readReadyCallback. */
+    bool cancelled;                                      /**< @brief This is set to true to stop the request/response processing in the asynchronous request workflow. */
+    IotSemaphore_t respFinishedSem;                      /**< @brief This is for synchronous response to post that is finished being received. It is better to use a task event signal, but that is not implemented yet in the iot_threads.h API. */
+    IotHttpsReturnCode_t syncStatus;                     /**< @brief The status of the synchronous response. */
+
+    /**
+     * @brief This is set to true to when the request is finished being sent on the network
+     *
+     * A request is not shared with multiple tasks, so only one task will update this. This is to let the let the
+     * network receive callback know that the request is fully pushed out to the server. This is also to let the
+     * disconnect know that the request is not using the network interface resources anymore.
+     */
+    bool reqFinishedSending;
+    IotHttpsClientCallbacks_t * pCallbacks; /**< @brief Pointer to the asynchronous request callbacks. */
+    void * pUserPrivData;                   /**< @brief User private data to hand back in the asynchronous callbacks for context. */
+    bool isNonPersistent;                   /**< @brief Non-persistent flag to indicate closing the connection immediately after receiving the response. */
+} _httpsResponse_t;
+
+/**
+ * @brief Represents and HTTP request.
+ */
+typedef struct _httpsRequest
+{
+    IotLink_t link;                             /**< @brief The link to insert the job in the connection's reqQ. */
+    uint8_t * pHeaders;                         /**< @brief Pointer to the start of the headers buffer. */
+    uint8_t * pHeadersEnd;                      /**< @brief Pointer to the end of the headers buffer. */
+    uint8_t * pHeadersCur;                      /**< @brief Pointer to the next location to write in the headers buffer. */
+    uint8_t * pBody;                            /**< @brief Pointer to the start of the body buffer. */
+    uint32_t bodyLength;                        /**< @brief Length of request body buffer. */
+    IotHttpsMethod_t method;                    /**< @brief The method of the originating request. */
+    IotHttpsConnectionInfo_t * pConnInfo;       /**< @brief Connection info associated with this request. For an implicit connection. */
+    struct _httpsResponse * pHttpsResponse;     /**< @brief Response associated with request. This is initialized during IotHttpsClient_InitializeRequest(), then returned to the application in IotHttpsClient_SendAsync() and IotHttpsClient_SendSync(). */
+    struct _httpsConnection * pHttpsConnection; /**< @brief Connection associated with request. This is set during IotHttpsClient_SendAsync(). It is needed for the asynchronous workflow to use to send data given the reqHandle only in the callback. */
+    bool isNonPersistent;                       /**< @brief Non-persistent flag to indicate closing the connection immediately after receiving the response. */
+    bool isAsync;                               /**< @brief This is set to true if this request is to be sent asynchronously. Set to false otherwise. */
+    void * pUserPrivData;                       /**< @brief User private data to hand back in the asynchronous callbacks for context. */
+    IotHttpsClientCallbacks_t * pCallbacks;     /**< @brief Pointer to the asynchronous request callbacks. */
+    bool cancelled;                             /**< @brief Set this to true to stop the response processing in the asynchronous workflow. */
+    IotHttpsReturnCode_t bodyTxStatus;          /**< @brief The status of network sending the HTTPS body to be returned during the #IotHttpsClientCallbacks_t.writeCallback. */
+    bool scheduled;                             /**< @brief Set to true when this request has already been scheduled to the task pool. */
+} _httpsRequest_t;
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief A map of the method enum to strings
+ *
+ * These are in order to the HTTP request method enums defined in IotHttpsMethod_t.
+ */
+static const char * _pHttpsMethodStrings[] = {
+    "GET",
+    "HEAD",
+};
+
+#endif /* IOT_HTTPS_INTERNAL_H_ */
diff --git a/libraries/c_sdk/standard/https/test/access/iot_test_access_https.h b/libraries/c_sdk/standard/https/test/access/iot_test_access_https.h
new file mode 100644
index 000000000..9f0d64db9
--- /dev/null
+++ b/libraries/c_sdk/standard/https/test/access/iot_test_access_https.h
@@ -0,0 +1,55 @@
+/*
+ * Amazon FreeRTOS HTTPS Client V1.0.0
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+/**
+ * @file iot_test_access_https.h
+ * @brief Declares the functions that provide access to the internal functions
+ * and variables of the HTTPS Client library.
+ */
+
+#ifndef IOT_TEST_ACCESS_HTTPS_
+#define IOT_TEST_ACCESS_HTTPS_
+
+/*--------------------------- iot_https_client.c ---------------------------*/
+
+/**
+ * @brief Test access function for #_initializeResponse.
+ *
+ * @see #_initializeResponse.
+ */
+IotHttpsReturnCode_t IotTestHttps_initializeResponse( IotHttpsResponseHandle_t * pRespHandle,
+                                                      IotHttpsResponseInfo_t * pRespInfo,
+                                                      IotHttpsRequestHandle_t reqHandle );
+
+/**
+ * @brief Test access function for #_networkReceiveCallback.
+ *
+ * @see #_networkReceiveCallback.
+ */
+void IotTestHttps_networkReceiveCallback( void * pNetworkConnection,
+                                          void * pReceiveContext );
+
+
+#endif /* ifndef IOT_TEST_ACCESS_HTTPS_ */
diff --git a/libraries/c_sdk/standard/https/test/access/iot_test_access_https_client.c b/libraries/c_sdk/standard/https/test/access/iot_test_access_https_client.c
new file mode 100644
index 000000000..225da265a
--- /dev/null
+++ b/libraries/c_sdk/standard/https/test/access/iot_test_access_https_client.c
@@ -0,0 +1,53 @@
+/*
+ * Amazon FreeRTOS HTTPS Client V1.0.0
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+/**
+ * @file iot_test_access_https_client.c
+ * @brief Provides access to the internal functions and variables of
+ * iot_https_client.c
+ *
+ * This file should only be included at the bottom of iot_https_client.c and never
+ * be compiled by itself.
+ */
+
+
+/*-----------------------------------------------------------*/
+
+IotHttpsReturnCode_t IotTestHttps_initializeResponse( IotHttpsResponseHandle_t * pRespHandle,
+                                                      IotHttpsResponseInfo_t * pRespInfo,
+                                                      IotHttpsRequestHandle_t reqHandle )
+{
+    return _initializeResponse( pRespHandle, pRespInfo, reqHandle );
+}
+
+/*-----------------------------------------------------------*/
+
+void IotTestHttps_networkReceiveCallback( void * pNetworkConnection,
+                                          void * pReceiveContext )
+{
+    _networkReceiveCallback( pNetworkConnection, pReceiveContext );
+}
+
+/*-----------------------------------------------------------*/
diff --git a/libraries/c_sdk/standard/https/test/system/iot_tests_https_system.c b/libraries/c_sdk/standard/https/test/system/iot_tests_https_system.c
new file mode 100644
index 000000000..c68691bf1
--- /dev/null
+++ b/libraries/c_sdk/standard/https/test/system/iot_tests_https_system.c
@@ -0,0 +1,562 @@
+/*
+ * Amazon FreeRTOS HTTPS Client V1.0.0
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+/**
+ * @file iot_tests_https_system.c
+ * @brief Full integration tests for the HTTPS Client library.
+ */
+
+/* The config header is always included first. */
+#include "iot_config.h"
+
+/* SDK initialization include. */
+#include "iot_init.h"
+
+/* HTTPS Client internal include. */
+#include "private/iot_https_internal.h"
+
+/* HTTPS Client Utils include. */
+#include "iot_https_utils.h"
+
+/* Test network header include. */
+#include IOT_TEST_NETWORK_HEADER
+
+/* Test framework includes. */
+#include "unity_fixture.h"
+#include "aws_test_utils.h"
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief The DNS resolvable host name of the server to perform testing.
+ *
+ * This address MUST NOT start with http:// or https://.
+ */
+#ifndef IOT_TEST_HTTPS_SERVER_HOST_NAME
+    #define IOT_TEST_HTTPS_SERVER_HOST_NAME    "httpbin.org"
+#endif
+
+/**
+ * @brief The socket port of the server to connect to.
+ */
+#ifndef IOT_TEST_HTTPS_PORT
+    #if IOT_TEST_SECURED_CONNECTION == 1
+        #define IOT_TEST_HTTPS_PORT    ( ( uint16_t ) 443 )
+    #else
+        #define IOT_TEST_HTTPS_PORT    ( ( uint16_t ) 80 )
+    #endif
+#endif
+
+/**
+ * @brief ALPN protocols string.
+ */
+#ifndef IOT_TEST_HTTPS_ALPN_PROTOCOLS
+    #define IOT_TEST_HTTPS_ALPN_PROTOCOLS    NULL
+#endif
+
+/**
+ * @brief Root certificate authority to verify the server connecting to.
+ */
+#ifndef IOT_TEST_HTTPS_ROOT_CA
+    #define IOT_TEST_HTTPS_ROOT_CA    NULL
+#endif
+
+/**
+ * @brief Client certificate and private key configurations.
+ *
+ * With PKCS #11 provisioning of the keys these parameters are deprecated.
+ */
+#ifndef IOT_TEST_HTTPS_CLIENT_CERTIFICATE
+    #define IOT_TEST_HTTPS_CLIENT_CERTIFICATE    keyCLIENT_CERTIFICATE_PEM
+#endif
+#ifndef IOT_TEST_HTTPS_CLIENT_PRIVATE_KEY
+    #define IOT_TEST_HTTPS_CLIENT_PRIVATE_KEY    keyCLIENT_PRIVATE_KEY_PEM
+#endif
+
+/**
+ * @brief Timeout in milliseconds for tests that synchronously send HTTP requests.
+ *
+ * This timeout encompasses the waiting time for the both sending of the request and receiving the response.
+ */
+#ifndef IOT_TEST_HTTPS_SYNC_TIMEOUT_MS
+    #define IOT_TEST_HTTPS_SYNC_TIMEOUT_MS    ( ( uint32_t ) 60000 )
+#endif
+
+/**
+ * @brief Timeout in milliseconds for tests asynchronously send HTTP requests.
+ *
+ * This timeout is use to wait for the asynchronous test to finish.
+ */
+#ifndef IOT_TEST_HTTPS_ASYNC_TIMEOUT_MS
+    #define IOT_TEST_HTTPS_ASYNC_TIMEOUT_MS    ( ( uint32_t ) 60000 )
+#endif
+
+/**
+ * @brief The initial delay in milliseconds that is doubled each retry of server connection.
+ */
+#ifndef IOT_TEST_HTTPS_INITIAL_CONNECTION_RETRY_DELAY
+    #define IOT_TEST_HTTPS_INITIAL_CONNECTION_RETRY_DELAY    ( ( uint32_t ) 300 )
+#endif
+
+/**
+ * @brief The amount of times to retry the server connection if it fails.
+ */
+#ifndef IOT_TEST_HTTPS_CONNECTION_NUM_RETRIES
+    #define IOT_TEST_HTTPS_CONNECTION_NUM_RETRIES    ( ( int32_t ) 3 )
+#endif
+
+/**
+ * @brief The size of the connection user buffer to use among the tests.
+ */
+#define HTTPS_TEST_CONN_USER_BUFFER_SIZE    ( 512 )
+
+/**
+ * @brief The size of the request user buffer to use among the tests.
+ */
+#define HTTPS_TEST_REQ_USER_BUFFER_SIZE     ( 512 )
+
+/**
+ * @brief The size of the respons user buffer to use among the tests.
+ */
+#define HTTPS_TEST_RESP_USER_BUFFER_SIZE    ( 512 )
+
+/**
+ * @brief The size of the response body buffer to use among the tests.
+ */
+#define HTTPS_TEST_RESP_BODY_BUFFER_SIZE    ( 512 )
+
+/**
+ * @brief The HTTP path for the get request.
+ */
+#define HTTPS_TEST_GET_REQUEST_PATH         "/get"
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief These parameters get set during the asynchronous test to verify.
+ */
+typedef struct _asyncVerificationParams
+{
+    IotSemaphore_t finishedSem;
+    uint16_t responseStatus;
+    uint32_t contentLength;
+    IotHttpsReturnCode_t contentLengthReturnCode;
+    uint32_t bodyReceivedLength;
+    IotHttpsReturnCode_t readResponseBodyReturnCode;
+} _asyncVerificationParams_t;
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief HTTPS Client connection user buffer to share among the tests.
+ */
+static uint8_t _pConnUserBuffer[ HTTPS_TEST_CONN_USER_BUFFER_SIZE ] = { 0 };
+
+/**
+ * @brief HTTPS Request user buffer to share among the tests.
+ */
+static uint8_t _pReqUserBuffer[ HTTPS_TEST_REQ_USER_BUFFER_SIZE ] = { 0 };
+
+/**
+ * @brief HTTPS Response user buffer to share among the tests.
+ */
+static uint8_t _pRespUserBuffer[ HTTPS_TEST_RESP_USER_BUFFER_SIZE ] = { 0 };
+
+/**
+ * @brief HTTPS Response body buffer to share among the tests.
+ */
+static uint8_t _pRespBodyBuffer[ HTTPS_TEST_RESP_BODY_BUFFER_SIZE ] = { 0 };
+
+/**
+ * @brief A IotHttpsConnectionInfo_t to share among the tests.
+ */
+static IotHttpsConnectionInfo_t _connInfo =
+{
+    .pAddress             = IOT_TEST_HTTPS_SERVER_HOST_NAME,
+    .addressLen           = sizeof( IOT_TEST_HTTPS_SERVER_HOST_NAME ) - 1,
+    .port                 = IOT_TEST_HTTPS_PORT,
+    .flags                = 0,
+    .userBuffer.pBuffer   = _pConnUserBuffer,
+    .userBuffer.bufferLen = sizeof( _pConnUserBuffer ),
+    #if IOT_TEST_SECURED_CONNECTION == 1
+        .pCaCert          = IOT_TEST_HTTPS_ROOT_CA,
+        .caCertLen        = sizeof( IOT_TEST_HTTPS_ROOT_CA ),
+        .pClientCert      = IOT_TEST_HTTPS_CLIENT_CERTIFICATE,
+        .clientCertLen    = sizeof( IOT_TEST_HTTPS_CLIENT_CERTIFICATE ),
+        .pPrivateKey      = IOT_TEST_HTTPS_CLIENT_PRIVATE_KEY,
+        .privateKeyLen    = sizeof( IOT_TEST_HTTPS_CLIENT_PRIVATE_KEY ),
+        .pAlpnProtocols   = IOT_TEST_HTTPS_ALPN_PROTOCOLS,
+        .alpnProtocolsLen = sizeof( IOT_TEST_HTTPS_ALPN_PROTOCOLS ),
+    #endif
+    .pNetworkInterface    = NULL /* This will be set during TEST_SETUP(). */
+};
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Asynchronous #IotHttpsClientCallbacks_t.readReadyCallback implementation to share among the tests.
+ */
+static void _readReadyCallback( void * pPrivData,
+                                IotHttpsResponseHandle_t respHandle,
+                                IotHttpsReturnCode_t rc,
+                                uint16_t status )
+{
+    IotHttpsReturnCode_t returnCode;
+    uint32_t bodyLen = HTTPS_TEST_RESP_BODY_BUFFER_SIZE;
+    _asyncVerificationParams_t * verifParams = ( _asyncVerificationParams_t * ) pPrivData;
+
+    /* Reset the buffer we receive HTTP body into. */
+    ( void ) memset( _pRespBodyBuffer, 0x00, sizeof( _pRespBodyBuffer ) );
+
+    verifParams->responseStatus = status;
+    returnCode = IotHttpsClient_ReadResponseBody( respHandle, _pRespBodyBuffer, &bodyLen );
+    verifParams->readResponseBodyReturnCode = returnCode;
+    verifParams->bodyReceivedLength = bodyLen;
+    returnCode = IotHttpsClient_ReadContentLength( respHandle, &( verifParams->contentLength ) );
+    verifParams->contentLengthReturnCode = returnCode;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Asynchronous #IotHttpsClientCallbacks_t.responseCompleteCallback implementation to share among the tests.
+ */
+static void _responseCompleteCallback( void * pPrivData,
+                                       IotHttpsResponseHandle_t respHandle,
+                                       IotHttpsReturnCode_t rc,
+                                       uint16_t status )
+{
+    _asyncVerificationParams_t * verifParams = ( _asyncVerificationParams_t * ) pPrivData;
+
+    IotSemaphore_Post( &( verifParams->finishedSem ) );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Send a GET request synchronously and verify the results.
+ */
+static void _testRequestSynchronous( bool isNonPersistent,
+                                     IotHttpsMethod_t method )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    IotHttpsRequestInfo_t reqInfo = IOT_HTTPS_REQUEST_INFO_INITIALIZER;
+    IotHttpsResponseInfo_t respInfo = IOT_HTTPS_RESPONSE_INFO_INITIALIZER;
+    IotHttpsSyncInfo_t syncRespInfo = IOT_HTTPS_SYNC_INFO_INITIALIZER;
+    IotHttpsSyncInfo_t syncReqInfo = IOT_HTTPS_SYNC_INFO_INITIALIZER;
+    uint32_t contentLength = 0;
+    uint16_t responseStatus = 0;
+
+    syncReqInfo.pBody = NULL;
+    syncReqInfo.bodyLen = 0;
+
+    if( method != IOT_HTTPS_METHOD_HEAD )
+    {
+        memset( _pRespBodyBuffer, 0, sizeof( _pRespBodyBuffer ) );
+        syncRespInfo.pBody = _pRespBodyBuffer;
+        syncRespInfo.bodyLen = sizeof( _pRespBodyBuffer );
+    }
+
+    reqInfo.pPath = HTTPS_TEST_GET_REQUEST_PATH;
+    reqInfo.pathLen = sizeof( HTTPS_TEST_GET_REQUEST_PATH ) - 1;
+    reqInfo.pHost = IOT_TEST_HTTPS_SERVER_HOST_NAME;
+    reqInfo.hostLen = sizeof( IOT_TEST_HTTPS_SERVER_HOST_NAME ) - 1;
+    reqInfo.method = method;
+    reqInfo.isNonPersistent = isNonPersistent;
+    reqInfo.userBuffer.pBuffer = _pReqUserBuffer;
+    reqInfo.userBuffer.bufferLen = sizeof( _pReqUserBuffer );
+    reqInfo.isAsync = false;
+    reqInfo.u.pSyncInfo = &syncReqInfo;
+
+    respInfo.userBuffer.pBuffer = _pRespUserBuffer;
+    respInfo.userBuffer.bufferLen = sizeof( _pRespUserBuffer );
+    respInfo.pSyncInfo = &syncRespInfo;
+
+    /* Initialize the request. */
+    returnCode = IotHttpsClient_InitializeRequest( &reqHandle, &reqInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Create the HTTPS connection. */
+    RETRY_EXPONENTIAL( returnCode = IotHttpsClient_Connect( &connHandle, &_connInfo ),
+                       IOT_HTTPS_OK,
+                       IOT_TEST_HTTPS_INITIAL_CONNECTION_RETRY_DELAY,
+                       IOT_TEST_HTTPS_CONNECTION_NUM_RETRIES );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Send the HTTPS request. */
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &respInfo, IOT_TEST_HTTPS_SYNC_TIMEOUT_MS );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Verify the returned status code. */
+    returnCode = IotHttpsClient_ReadResponseStatus( respHandle, &responseStatus );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_STATUS_OK, responseStatus );
+
+    /* Verify the content length is greater than zero for a GET request. */
+    returnCode = IotHttpsClient_ReadContentLength( respHandle, &contentLength );
+
+    /* This is only verified if the read was successful. If the Content-Length header is far down in the list of
+     * response headers, it may not fit into the configured header buffer space. */
+    if( returnCode == IOT_HTTPS_OK )
+    {
+        TEST_ASSERT_GREATER_THAN( 0, contentLength );
+    }
+
+    if( method == IOT_HTTPS_METHOD_GET )
+    {
+        /* Verify the response body has some stuff in it. */
+        TEST_ASSERT_GREATER_THAN( 0, strlen( ( char * ) ( respInfo.pSyncInfo->pBody ) ) );
+    }
+
+    /* Some servers do not allow requests to be persistent. Even if the server closed the connection, the connection context
+     * state is controlled by the application. */
+    if( isNonPersistent )
+    {
+        TEST_ASSERT_FALSE( connHandle->isConnected );
+    }
+    else
+    {
+        TEST_ASSERT_TRUE( connHandle->isConnected );
+        IotHttpsClient_Disconnect( connHandle );
+    }
+}
+
+/**
+ * @brief Send a GET request asynchronously and verify the results.
+ */
+static void _testRequestAsynchronous( bool isNonPersistent,
+                                      IotHttpsMethod_t method )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    IotHttpsRequestInfo_t reqInfo = IOT_HTTPS_REQUEST_INFO_INITIALIZER;
+    IotHttpsResponseInfo_t respInfo = IOT_HTTPS_RESPONSE_INFO_INITIALIZER;
+    IotHttpsAsyncInfo_t asyncRespInfo = IOT_HTTPS_ASYNC_INFO_INITIALIZER;
+    _asyncVerificationParams_t verifParams = { 0 };
+
+    asyncRespInfo.callbacks.appendHeaderCallback = NULL;
+    asyncRespInfo.callbacks.writeCallback = NULL;
+    asyncRespInfo.callbacks.readReadyCallback = _readReadyCallback;
+    asyncRespInfo.callbacks.responseCompleteCallback = _responseCompleteCallback;
+    asyncRespInfo.callbacks.connectionClosedCallback = NULL;
+    asyncRespInfo.callbacks.errorCallback = NULL;
+    asyncRespInfo.pPrivData = &verifParams;
+
+    reqInfo.pPath = HTTPS_TEST_GET_REQUEST_PATH;
+    reqInfo.pathLen = sizeof( HTTPS_TEST_GET_REQUEST_PATH ) - 1;
+    reqInfo.pHost = IOT_TEST_HTTPS_SERVER_HOST_NAME;
+    reqInfo.hostLen = sizeof( IOT_TEST_HTTPS_SERVER_HOST_NAME ) - 1;
+    reqInfo.method = method;
+    reqInfo.isNonPersistent = isNonPersistent;
+    reqInfo.userBuffer.pBuffer = _pReqUserBuffer;
+    reqInfo.userBuffer.bufferLen = sizeof( _pReqUserBuffer );
+    reqInfo.isAsync = true;
+    reqInfo.u.pAsyncInfo = &asyncRespInfo;
+
+    respInfo.userBuffer.pBuffer = _pRespUserBuffer;
+    respInfo.userBuffer.bufferLen = sizeof( _pRespUserBuffer );
+    respInfo.pSyncInfo = NULL;
+
+    /* Initialize the request. */
+    returnCode = IotHttpsClient_InitializeRequest( &reqHandle, &reqInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Create the HTTPS connection.  */
+    RETRY_EXPONENTIAL( returnCode = IotHttpsClient_Connect( &connHandle, &_connInfo ),
+                       IOT_HTTPS_OK,
+                       IOT_TEST_HTTPS_INITIAL_CONNECTION_RETRY_DELAY,
+                       IOT_TEST_HTTPS_CONNECTION_NUM_RETRIES );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    TEST_ASSERT_TRUE( IotSemaphore_Create( &( verifParams.finishedSem ), 0, 1 ) );
+
+    if( TEST_PROTECT() )
+    {
+        /* Send the HTTPS request. */
+        returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &respInfo );
+        TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+        TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( verifParams.finishedSem ), IOT_TEST_HTTPS_ASYNC_TIMEOUT_MS ) );
+
+        /* Verify all of the parameters set durign the callbacks. */
+        TEST_ASSERT_EQUAL( IOT_HTTPS_STATUS_OK, verifParams.responseStatus );
+
+        if( verifParams.contentLengthReturnCode == IOT_HTTPS_OK )
+        {
+            TEST_ASSERT_GREATER_THAN( 0, verifParams.contentLength );
+        }
+
+        if( method == IOT_HTTPS_METHOD_GET )
+        {
+            TEST_ASSERT_GREATER_THAN( 0, verifParams.bodyReceivedLength );
+            TEST_ASSERT_EQUAL( IOT_HTTPS_OK, verifParams.readResponseBodyReturnCode );
+        }
+
+        /* Some servers do not allow requests to be persistent. Even if the server closed the connection, the connection context
+         * state is controlled by the application. */
+        if( isNonPersistent )
+        {
+            TEST_ASSERT_FALSE( connHandle->isConnected );
+        }
+        else
+        {
+            TEST_ASSERT_TRUE( connHandle->isConnected );
+            IotHttpsClient_Disconnect( connHandle );
+        }
+    }
+
+    IotSemaphore_Destroy( &( verifParams.finishedSem ) );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test group for HTTPS Client system tests.
+ */
+TEST_GROUP( HTTPS_Client_System );
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test setup for the HTTP Client system tests.
+ */
+TEST_SETUP( HTTPS_Client_System )
+{
+    /* This will initialize the library before every test case, which is OK. */
+    TEST_ASSERT_EQUAL_INT( true, IotSdk_Init() );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, IotHttpsClient_Init() );
+
+    _connInfo.pNetworkInterface = IOT_TEST_NETWORK_INTERFACE;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test teardown for the HTTP Client system tests.
+ */
+TEST_TEAR_DOWN( HTTPS_Client_System )
+{
+    IotHttpsClient_Deinit();
+    IotSdk_Cleanup();
+}
+
+/*-----------------------------------------------------------*/
+
+TEST_GROUP_RUNNER( HTTPS_Client_System )
+{
+    RUN_TEST_CASE( HTTPS_Client_System, GetRequestSynchronousPersistent );
+    RUN_TEST_CASE( HTTPS_Client_System, GetRequestSynchronousNonPersistent );
+    RUN_TEST_CASE( HTTPS_Client_System, GetRequestAsynchronousPersistent );
+    RUN_TEST_CASE( HTTPS_Client_System, GetRequestAsynchronousNonPersistent );
+    RUN_TEST_CASE( HTTPS_Client_System, HeadRequestSynchronousPersistent );
+    RUN_TEST_CASE( HTTPS_Client_System, HeadRequestSynchronousNonPersistent );
+    RUN_TEST_CASE( HTTPS_Client_System, HeadRequestAsynchronousPersistent );
+    RUN_TEST_CASE( HTTPS_Client_System, HeadRequestAsynchronousNonPersistent );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify a persistent GET request to the test server sent synchronously.
+ */
+TEST( HTTPS_Client_System, GetRequestSynchronousPersistent )
+{
+    _testRequestSynchronous( false, IOT_HTTPS_METHOD_GET );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify a non-persistent GET request to the test server sent synchronously.
+ */
+TEST( HTTPS_Client_System, GetRequestSynchronousNonPersistent )
+{
+    _testRequestSynchronous( true, IOT_HTTPS_METHOD_GET );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify a GET request to the test server sent asynchronously.
+ */
+TEST( HTTPS_Client_System, GetRequestAsynchronousPersistent )
+{
+    _testRequestAsynchronous( false, IOT_HTTPS_METHOD_GET );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify a GET request to the test server sent asynchronously.
+ */
+TEST( HTTPS_Client_System, GetRequestAsynchronousNonPersistent )
+{
+    _testRequestAsynchronous( true, IOT_HTTPS_METHOD_GET );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify a persistent GET request to the test server sent synchronously.
+ */
+TEST( HTTPS_Client_System, HeadRequestSynchronousPersistent )
+{
+    _testRequestSynchronous( false, IOT_HTTPS_METHOD_HEAD );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify a non-persistent GET request to the test server sent synchronously.
+ */
+TEST( HTTPS_Client_System, HeadRequestSynchronousNonPersistent )
+{
+    _testRequestSynchronous( true, IOT_HTTPS_METHOD_HEAD );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify a GET request to the test server sent asynchronously.
+ */
+TEST( HTTPS_Client_System, HeadRequestAsynchronousPersistent )
+{
+    _testRequestAsynchronous( false, IOT_HTTPS_METHOD_HEAD );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify a GET request to the test server sent asynchronously.
+ */
+TEST( HTTPS_Client_System, HeadRequestAsynchronousNonPersistent )
+{
+    _testRequestAsynchronous( true, IOT_HTTPS_METHOD_HEAD );
+}
diff --git a/libraries/c_sdk/standard/https/test/unit/iot_tests_https_async.c b/libraries/c_sdk/standard/https/test/unit/iot_tests_https_async.c
new file mode 100644
index 000000000..db05fef7e
--- /dev/null
+++ b/libraries/c_sdk/standard/https/test/unit/iot_tests_https_async.c
@@ -0,0 +1,2070 @@
+/*
+ * Amazon FreeRTOS HTTPS Client V1.0.0
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+/**
+ * @file iot_tests_https_async.c
+ * @brief Tests for IotHttpsClient_SendAsync().
+ * in iot_https_client.h.
+ */
+
+#include "iot_tests_https_common.h"
+#include "platform/iot_clock.h"
+
+/**
+ * @brief Timeout for all requests to finish on a single connection.
+ */
+#define HTTPS_TEST_ASYNC_TIMEOUT_MS                    ( ( uint32_t ) 30000 )
+
+/**
+ * @brief The maximum number of asynchronous requests on the same connection.
+ *
+ * This is used to separate the user buffers needed for each request.
+ */
+#define HTTPS_TEST_MAX_ASYNC_REQUESTS                  ( 3 )
+
+/**
+ * @brief Wait time before the network receive callback is invoked.
+ *
+ * This wait time is to mimic not only response being received on the network, but also needs to incorporate the time
+ * it takes to complete sending the request.
+ */
+#define HTTPS_TEST_NETWORK_RECEIVE_CALLBACK_WAIT_MS    ( ( uint32_t ) 300 )
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Context to the HTTP asynchronous workflow callbacks to verify operation.
+ */
+typedef struct _asyncVerificationParams
+{
+    IotSemaphore_t completeSem;                                       /**< @brief Semaphore to signal to the test that the asynchronous requests have all finished. */
+    uint8_t numRequestsTotal;                                         /**< @brief The starting total of scheduled request. */
+    int8_t numRequestsLeft;                                           /**< @brief The number of scheduled requests left that have not finished. */
+    uint8_t appendHeaderCallbackCount;                                /**< @brief A count of the times #IotHttpsClientCallbacks_t.appendHeaderCallback has been called. */
+    uint8_t writeCallbackCount;                                       /**< @brief A count of the times #IotHttpsClientCallbacks_t.writeCallbackCount has been called. */
+    uint8_t readReadyCallbackCount;                                   /**< @brief A count of the times #IotHttpsClientCallbacks_t.readReadyCallbackCount has been called. */
+    uint8_t responseCompleteCallbackCount;                            /**< @brief A count of the times #IotHttpsClientCallbacks_t.responseCompleteCallbackCount has been called. */
+    uint8_t connectionClosedCallbackCount;                            /**< @brief A count of the times #IotHttpsClientCallbacks_t.connectionClosedCallbackCount has been called. */
+    uint8_t errorCallbackCount;                                       /**< @brief A count of the times #IotHttpsClientCallbacks_t.errorCallback has been called. */
+    IotHttpsReturnCode_t returnCode[ HTTPS_TEST_MAX_ASYNC_REQUESTS ]; /**< @brief The final return status of the async request. This is set during each decrement of numRequestsLeft. */
+
+    /**
+     * @brief readReadyCallback invocation count per response.
+     *
+     * This is needed for verification of the body. The readReadyCallback is invoked a second time for the same
+     * response because there is more data in the body that could fit in the provided buffer. In this case we want to
+     * verify the correct body of 'a'-'z' repeating starting from where verification left off last. When it is a new
+     * request verification starts at 0 or 'a'.
+     */
+    bool readReadyCallbackCountPerResponse[ HTTPS_TEST_MAX_ASYNC_REQUESTS ];
+} _asyncVerificationParams_t;
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Asynchronous workflow callback context to share among the tests.
+ *
+ * This is reset during TEST_SETUP.
+ */
+static _asyncVerificationParams_t _verifParams = { 0 };
+
+/**
+ * @brief HTTPS response and request user buffers for scheduling multiple requests.
+ */
+static uint8_t _pAsyncRespUserBuffers[ HTTPS_TEST_MAX_ASYNC_REQUESTS ][ HTTPS_TEST_RESP_USER_BUFFER_SIZE ] = { 0 };
+static uint8_t _pAsyncReqUserBuffers[ HTTPS_TEST_MAX_ASYNC_REQUESTS ][ HTTPS_TEST_REQ_USER_BUFFER_SIZE ] = { 0 };
+
+/**
+ * @brief HTTPS request and response information configrations for scheduling multiple requests.
+ */
+static IotHttpsRequestInfo_t _pAsyncReqInfos[ HTTPS_TEST_MAX_ASYNC_REQUESTS ] = { 0 };
+static IotHttpsResponseInfo_t _pAsyncRespInfos[ HTTPS_TEST_MAX_ASYNC_REQUESTS ] = { 0 };
+
+/**
+ * @brief HTTPS request and response handles for scheduling multiple requests.
+ *
+ * Each of these handles corresponse to each of the user buffers _pAsyncRespUserBuffers and _pAsyncReqUserBuffers.
+ */
+static IotHttpsRequestHandle_t _pAsyncRequestHandles[ HTTPS_TEST_MAX_ASYNC_REQUESTS ];
+static IotHttpsResponseHandle_t _pAsyncResponseHandles[ HTTPS_TEST_MAX_ASYNC_REQUESTS ];
+
+/**
+ * @brief A base IotHttpsAsyncInfo_t to copy to each of the request information configurations for each request.
+ *
+ * The tests will replace callbacks in .callbacks as needed and add pPrivData as need for the test.
+ */
+static IotHttpsAsyncInfo_t _asyncInfoBase =
+{
+    .callbacks = { 0 }, /* To be updated as needed during testing. */
+    .pPrivData = NULL   /* To be updated as needed during testing. */
+};
+
+/**
+ * @brief A base IotHttpsRequestInfo_t to copy to each of the request information configurations for each request.
+ */
+static IotHttpsRequestInfo_t _reqInfoBase =
+{
+    .pPath                = HTTPS_TEST_PATH,
+    .pathLen              = sizeof( HTTPS_TEST_PATH ) - 1,
+    .method               = IOT_HTTPS_METHOD_GET,
+    .pHost                = HTTPS_TEST_ADDRESS,
+    .hostLen              = sizeof( HTTPS_TEST_ADDRESS ) - 1,
+    .isNonPersistent      = false,
+    .userBuffer.pBuffer   = NULL, /* To be updated during TEST_SETUP. */
+    .userBuffer.bufferLen = 0,    /* To be updated during TEST_SETUP. */
+    .isAsync              = true,
+    .u.pAsyncInfo         = &_asyncInfoBase
+};
+
+/**
+ * @brief A IotHttpsResponseInfo_t for an asynchronous response.
+ */
+static IotHttpsResponseInfo_t _respInfoBase =
+{
+    .userBuffer.pBuffer   = NULL, /* To be updated during TEST_SETUP */
+    .userBuffer.bufferLen = 0,    /* To be updated during TEST_SETUP */
+    .pSyncInfo            = NULL
+};
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief thread that invokes the _networkReceiveCallback internal to the library.
+ */
+static void _invokeNetworkReceiveCallback( void * pArgument )
+{
+    void * pNetworkConnection = pArgument;
+    _httpsRequest_t * pHttpsRequest = ( _httpsRequest_t * ) pNetworkConnection;
+    size_t responseMessageLengthLeft = 0;
+
+    /* The response associated with the request is set in the network interface context now. This is so that we
+     * can simulate a failure on receiving depending on the buffer received to in the response. */
+    pHttpsRequest->pHttpsConnection->pNetworkConnection = ( void * ) ( pHttpsRequest->pHttpsResponse );
+
+    /* Start over next bytes to receive in the _respMessageBuffer. It is an error in the libray if the full response
+     * was not read from the network before the next response processing is to read from the network. When the
+     * connection closes there should be no data on the socket. */
+    responseMessageLengthLeft = strlen( ( char * ) _pRespMessageBuffer ) - _nextRespMessageBufferByteToReceive;
+
+    /* If the next byte to receive is not zero, it must be the end of the buffer to ensure the full response was read
+     * from the network in the last response processing. */
+    if( ( _nextRespMessageBufferByteToReceive > 0 ) && ( responseMessageLengthLeft > 0 ) )
+    {
+        TEST_FAIL_MESSAGE( "The full response message was not read/flushed in the last request." );
+    }
+
+    _nextRespMessageBufferByteToReceive = 0;
+
+    /* Sleep for a bit to wait for the rest of test request to finished sending and simulate a network response. */
+    IotClock_SleepMs( HTTPS_TEST_NETWORK_RECEIVE_CALLBACK_WAIT_MS );
+
+    /* Envoke the network receive callback. */
+    IotTestHttps_networkReceiveCallback( pNetworkConnection, pHttpsRequest->pHttpsConnection );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network abstraction send function that succeeds.
+ *
+ * Because the network send succeeded we mimic the network by starting a thread to envoke the network receive callback.
+ */
+static size_t _networkSendSuccess( void * pConnection,
+                                   const uint8_t * pMessage,
+                                   size_t messageLength )
+{
+    _httpsRequest_t * pHttpsRequest = ( _httpsRequest_t * ) pConnection;
+
+    /* A closed connection will return an error when trying to send. */
+    if( pHttpsRequest->pHttpsConnection->isConnected == false )
+    {
+        return 0;
+    }
+
+    /* This thread must be created only once per request to mimic the behavior of the network abstraction. In the
+     * HTTPS Client library network sending is called multiple times, but it is called a final time when sending the
+     * body. In this test group all implementation of _writeCallback must send some dummy body. */
+    if( pHttpsRequest->pBody == pMessage )
+    {
+        Iot_CreateDetachedThread( _invokeNetworkReceiveCallback,
+                                  pConnection,
+                                  IOT_THREAD_DEFAULT_PRIORITY,
+                                  IOT_THREAD_DEFAULT_STACK_SIZE );
+    }
+
+    return messageLength;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network abstraction send function that fails sending the HTTP headers.
+ */
+static size_t _networkSendFailHeaders( void * pConnection,
+                                       const uint8_t * pMessage,
+                                       size_t messageLength )
+{
+    size_t retValue = 0;
+
+    /* The currently sending request is to be set during the test implemented
+     #IotHttpsClientCallbacks_t.appendHeaderCallback(). */
+    _httpsRequest_t * pHttpsRequest = ( _httpsRequest_t * ) pConnection;
+
+    /* Check if we are sending the headers to return failure. */
+    if( pHttpsRequest->pHeaders == pMessage )
+    {
+        retValue = 0;
+    }
+    else
+    {
+        retValue = messageLength;
+    }
+
+    return retValue;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network abstraction send function that fails sending the HTTP body.
+ */
+static size_t _networkSendFailBody( void * pConnection,
+                                    const uint8_t * pMessage,
+                                    size_t messageLength )
+{
+    size_t retValue = 0;
+
+    /* The currently sending request is to be set during the test implemented
+     #IotHttpsClientCallbacks_t.appendHeaderCallback(). */
+    _httpsRequest_t * pHttpsRequest = ( _httpsRequest_t * ) pConnection;
+
+    /* Check if we are sending the headers to return failure. */
+    if( pHttpsRequest->pBody == pMessage )
+    {
+        retValue = 0;
+    }
+    else
+    {
+        retValue = messageLength;
+    }
+
+    return retValue;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network abstraction receive function that fails when sending the HTTP headers.
+ */
+static size_t _networkReceiveFailHeaders( void * pConnection,
+                                          uint8_t * pBuffer,
+                                          size_t bytesRequested )
+{
+    size_t retValue = 0;
+
+    /* The currently receiving response is to be set during the mocked network receive callback
+     * _invokeNetworkReceiveCallback(). */
+    _httpsResponse_t * pHttpsResponse = ( _httpsResponse_t * ) pConnection;
+
+    if( pBuffer == pHttpsResponse->pHeadersCur )
+    {
+        retValue = 0;
+    }
+    else
+    {
+        retValue = bytesRequested;
+    }
+
+    return retValue;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network abstraction receive function that fails when sending the HTTP body.
+ */
+static size_t _networkReceiveFailBody( void * pConnection,
+                                       uint8_t * pBuffer,
+                                       size_t bytesRequested )
+{
+    size_t retValue = 0;
+
+    /* The currently sending response is to be set during the mocked network receive callback
+     * _invokeNetworkReceiveCallback(). */
+    _httpsResponse_t * pHttpsResponse = ( _httpsResponse_t * ) pConnection;
+
+    /* We may have received some body in the headers, so pBodyCur will be incremented during the parsing of
+     * data received when receiving into the header buffer. Given this case, when receiving from the network
+     * into the body buffer, start of the pBuffer should always be pBodyCur. */
+    if( pBuffer == pHttpsResponse->pBodyCur )
+    {
+        retValue = 0;
+    }
+    else
+    {
+        retValue = _networkReceiveSuccess( pConnection, pBuffer, bytesRequested );
+    }
+
+    return retValue;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Mock the http parser execution failing when parsing the HTTP headers buffer.
+ */
+static size_t _httpParserExecuteFailHeaders( http_parser * parser,
+                                             const http_parser_settings * settings,
+                                             const char * data,
+                                             size_t len )
+{
+    _httpsResponse_t * pHttpsResponse = ( _httpsResponse_t * ) ( parser->data );
+
+    ( void ) settings;
+    ( void ) len;
+
+    if( data == ( char * ) ( pHttpsResponse->pHeadersCur ) )
+    {
+        parser->http_errno = HPE_UNKNOWN;
+    }
+    else
+    {
+        http_parser_execute( parser, settings, data, len );
+    }
+
+    return 0;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Mock the http parser execution failing when parsing the HTTP body buffer.
+ */
+static size_t _httpParserExecuteFailBody( http_parser * parser,
+                                          const http_parser_settings * settings,
+                                          const char * data,
+                                          size_t len )
+{
+    _httpsResponse_t * pHttpsResponse = ( _httpsResponse_t * ) ( parser->data );
+
+    ( void ) settings;
+    ( void ) len;
+
+    if( data == ( char * ) ( pHttpsResponse->pBodyCur ) )
+    {
+        parser->http_errno = HPE_UNKNOWN;
+    }
+    else
+    {
+        http_parser_execute( parser, settings, data, len );
+    }
+
+    return 0;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief A network send function that fails on the second call to receive the headers.
+ */
+size_t _networkSendFailsOnSecondHeaderSend( void * pConnection,
+                                            const uint8_t * pMessage,
+                                            size_t messageLength )
+{
+    _httpsRequest_t * pHttpsRequest = ( _httpsRequest_t * ) pConnection;
+    static int headerSendCount = 0;
+    size_t returnValue = messageLength;
+
+    if( pHttpsRequest->pHeaders == pMessage )
+    {
+        headerSendCount++;
+    }
+
+    if( headerSendCount == 2 )
+    {
+        returnValue = 0;
+    }
+    else
+    {
+        /* This thread must be created only once per request to mimic the behavior of the network abstraction. In the
+         * HTTPS Client library network sending is called multiple times, but it is called a final time when sending the
+         * body. In this test group all implementation of _writeCallback must send some dummy body. */
+        if( pHttpsRequest->pBody == pMessage )
+        {
+            Iot_CreateDetachedThread( _invokeNetworkReceiveCallback,
+                                      pConnection,
+                                      IOT_THREAD_DEFAULT_PRIORITY,
+                                      IOT_THREAD_DEFAULT_STACK_SIZE );
+        }
+    }
+
+    return returnValue;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network send success that replaces the _httpsResponse_t.httpParserInfo.parseFunc with one for the current test.
+ *
+ * This function relies on _httpsResponse_t.pHttpsResponse getting set, in the currently processing _httpsResponse_t,
+ * before the network send function is called.
+ */
+static size_t _networkSendSuccessWithSettingParseFailForHeaders( void * pConnection,
+                                                                 const uint8_t * pMessage,
+                                                                 size_t messageLength )
+{
+    _httpsRequest_t * pHttpsRequest = ( _httpsRequest_t * ) pConnection;
+
+    /* Set the response parser function to mock a failure. */
+    pHttpsRequest->pHttpsResponse->httpParserInfo.parseFunc = _httpParserExecuteFailHeaders;
+
+    return _networkSendSuccess( pConnection, pMessage, messageLength );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network send success that replaces the _httpsResponse_t.httpParserInfo.parseFunc with one for the current test.
+ *
+ * This function relies on _httpsResponse_t.pHttpsResponse getting set, in the currently processing _httpsResponse_t,
+ * before the network send function is called.
+ */
+static size_t _networkSendSuccessWithSettingParseFailForBody( void * pConnection,
+                                                              const uint8_t * pMessage,
+                                                              size_t messageLength )
+{
+    _httpsRequest_t * pHttpsRequest = ( _httpsRequest_t * ) pConnection;
+
+    /* Set the response parser function to mock a failure. */
+    pHttpsRequest->pHttpsResponse->httpParserInfo.parseFunc = _httpParserExecuteFailBody;
+
+    return _networkSendSuccess( pConnection, pMessage, messageLength );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Asynchronous #IotHttpsClientCallbacks_t.appendHeaderCallback implementation to share among the tests.
+ */
+static void _appendHeaderCallback( void * pPrivData,
+                                   IotHttpsRequestHandle_t reqHandle )
+{
+    _asyncVerificationParams_t * verifParams = ( _asyncVerificationParams_t * ) pPrivData;
+
+    /* Set the currently sending request as the pConnection to use in the mocked networkSend functions.
+     * This is needed to check which buffer to being filled, so that we can mock a network failure on the buffer
+     * of interest (either the header buffer or the body buffer). */
+    reqHandle->pHttpsConnection->pNetworkConnection = ( void * ) reqHandle;
+
+    verifParams->appendHeaderCallbackCount++;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Asynchronous #IotHttpsClientCallbacks_t.writeCallback implementation to share among the tests.
+ */
+static void _writeCallback( void * pPrivData,
+                            IotHttpsRequestHandle_t reqHandle )
+{
+    _asyncVerificationParams_t * verifParams = ( _asyncVerificationParams_t * ) pPrivData;
+
+    /* Write a dummy body in reqHandle, so that the _networkSendSuccess mock function knows to create a single
+     * network receive callback mocking thread for the current request. */
+    IotHttpsClient_WriteRequestBody( reqHandle, ( uint8_t * ) ( HTTPS_TEST_REQUEST_BODY ), HTTPS_TEST_REQUEST_BODY_LENGTH, 1 );
+
+    verifParams->writeCallbackCount++;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Asynchronous #IotHttpsClientCallbacks_t.readReadyCallback implementation to share among the tests.
+ */
+static void _readReadyCallback( void * pPrivData,
+                                IotHttpsResponseHandle_t respHandle,
+                                IotHttpsReturnCode_t rc,
+                                uint16_t status )
+{
+    IotHttpsReturnCode_t returnCode;
+    uint32_t bodyLen = HTTPS_TEST_RESP_BODY_BUFFER_SIZE;
+    _asyncVerificationParams_t * verifParams = ( _asyncVerificationParams_t * ) pPrivData;
+    int currentRequestIndex = verifParams->numRequestsTotal - verifParams->numRequestsLeft;
+
+    /* Reset the buffer we receive HTTP body into. */
+    ( void ) memset( _pRespBodyBuffer, 0x00, sizeof( _pRespBodyBuffer ) );
+
+    /* Read from the network the data in the body buffer. */
+    returnCode = IotHttpsClient_ReadResponseBody( respHandle, _pRespBodyBuffer, &bodyLen );
+
+    /* Verify the body for the current test. */
+    if( returnCode == IOT_HTTPS_OK )
+    {
+        _verifyHttpResponseBody( bodyLen,
+                                 _pRespBodyBuffer,
+                                 ( verifParams->readReadyCallbackCountPerResponse[ currentRequestIndex ] * HTTPS_TEST_RESP_BODY_BUFFER_SIZE ) );
+    }
+
+    verifParams->readReadyCallbackCountPerResponse[ currentRequestIndex ]++;
+    verifParams->readReadyCallbackCount++;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Asynchronous #IotHttpsClientCallbacks_t.responseCompleteCallback implementation to share among the tests.
+ */
+static void _responseCompleteCallback( void * pPrivData,
+                                       IotHttpsResponseHandle_t respHandle,
+                                       IotHttpsReturnCode_t rc,
+                                       uint16_t status )
+{
+    _asyncVerificationParams_t * verifParams = ( _asyncVerificationParams_t * ) pPrivData;
+
+    verifParams->responseCompleteCallbackCount++;
+    verifParams->returnCode[ verifParams->numRequestsTotal - verifParams->numRequestsLeft ] = rc;
+    verifParams->numRequestsLeft--;
+
+    /* If this asserts while another test is going on in the main thread, then that is an indicator that not all of the
+     * requests exited properly. */
+    if( TEST_PROTECT() )
+    {
+        TEST_ASSERT_TRUE_MESSAGE( verifParams->numRequestsLeft >= 0, "verifParams->numRequestsLeft < 0, something went wrong. _responseCompleteCallback should only be called once per request." )
+    }
+
+    /* If this is the last request to complete, then post to the semaphore to let the test know everything is done. */
+    if( ( verifParams->numRequestsLeft == 0 ) ||
+        ( rc == IOT_HTTPS_NETWORK_ERROR ) ||
+        ( rc == IOT_HTTPS_PARSING_ERROR ) ||
+        ( ( respHandle != NULL ) && ( respHandle->isNonPersistent ) ) )
+    {
+        IotSemaphore_Post( &( verifParams->completeSem ) );
+    }
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Asynchronous #IotHttpsClientCallbacks_t.connectionClosedCallback implementation to share among the tests.
+ */
+static void _connectionClosedCallback( void * pPrivData,
+                                       IotHttpsConnectionHandle_t connHandle,
+                                       IotHttpsReturnCode_t rc )
+{
+    _asyncVerificationParams_t * verifParams = ( _asyncVerificationParams_t * ) pPrivData;
+
+    verifParams->connectionClosedCallbackCount++;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Asynchronous #IotHttpsClientCallbacks_t.errorCallback implementation to share among the tests.
+ */
+static void _errorCallback( void * pPrivData,
+                            IotHttpsRequestHandle_t reqHandle,
+                            IotHttpsResponseHandle_t respHandle,
+                            IotHttpsReturnCode_t rc )
+{
+    _asyncVerificationParams_t * verifParams = ( _asyncVerificationParams_t * ) pPrivData;
+
+    verifParams->errorCallbackCount++;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Asynchronous #IotHttpsClientCallbacks_t.appendHeaderCallback implementation that cancels the request.
+ */
+static void _appendHeaderCallbackThatCancels( void * pPrivData,
+                                              IotHttpsRequestHandle_t reqHandle )
+{
+    IotHttpsClient_CancelRequestAsync( reqHandle );
+    _appendHeaderCallback( pPrivData, reqHandle );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Asynchronous #IotHttpsClientCallbacks_t.writeCallback implementation that cancels the request.
+ */
+static void _writeCallbackThatCancels( void * pPrivData,
+                                       IotHttpsRequestHandle_t reqHandle )
+{
+    _asyncVerificationParams_t * verifParams = ( _asyncVerificationParams_t * ) pPrivData;
+
+    IotHttpsClient_CancelRequestAsync( reqHandle );
+    verifParams->writeCallbackCount++;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Asynchronous #IotHttpsClientCallbacks_t.readReadyCallback implementation that cancels the request.
+ */
+static void _readReadyCallbackThatCancels( void * pPrivData,
+                                           IotHttpsResponseHandle_t respHandle,
+                                           IotHttpsReturnCode_t rc,
+                                           uint16_t status )
+{
+    _asyncVerificationParams_t * verifParams = ( _asyncVerificationParams_t * ) pPrivData;
+
+    IotHttpsClient_CancelResponseAsync( respHandle );
+    verifParams->readReadyCallbackCount++;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test group for HTTPS Client Async Unit tests.
+ */
+TEST_GROUP( HTTPS_Client_Unit_Async );
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test setup for the HTTP Client Async unit tests.
+ */
+TEST_SETUP( HTTPS_Client_Unit_Async )
+{
+    /* This will initialize the library before every test case, which is OK. */
+    TEST_ASSERT_EQUAL_INT( true, IotSdk_Init() );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, IotHttpsClient_Init() );
+
+    memset( &_verifParams, 0, sizeof( _asyncVerificationParams_t ) );
+
+    int reqIndex = 0;
+
+    for( reqIndex = 0; reqIndex < HTTPS_TEST_MAX_ASYNC_REQUESTS; reqIndex++ )
+    {
+        memcpy( &_pAsyncReqInfos[ reqIndex ], &_reqInfoBase, sizeof( IotHttpsRequestInfo_t ) );
+        _pAsyncReqInfos[ reqIndex ].userBuffer.pBuffer = _pAsyncReqUserBuffers[ reqIndex ];
+        _pAsyncReqInfos[ reqIndex ].userBuffer.bufferLen = HTTPS_TEST_REQ_USER_BUFFER_SIZE;
+        memcpy( &_pAsyncRespInfos[ reqIndex ], &_respInfoBase, sizeof( IotHttpsResponseInfo_t ) );
+        _pAsyncRespInfos[ reqIndex ].userBuffer.pBuffer = _pAsyncRespUserBuffers[ reqIndex ];
+        _pAsyncRespInfos[ reqIndex ].userBuffer.bufferLen = HTTPS_TEST_RESP_USER_BUFFER_SIZE;
+        _verifParams.returnCode[ reqIndex ] = IOT_HTTPS_OK;
+    }
+
+    TEST_ASSERT_TRUE( IotSemaphore_Create( &( _verifParams.completeSem ), 0, 1 ) );
+
+    /* All of the tests use the same IotHttpsClientCallbacks_t instantiation. */
+    _asyncInfoBase.callbacks.appendHeaderCallback = _appendHeaderCallback;
+    _asyncInfoBase.callbacks.connectionClosedCallback = _connectionClosedCallback;
+    _asyncInfoBase.callbacks.errorCallback = _errorCallback;
+    _asyncInfoBase.callbacks.readReadyCallback = _readReadyCallback;
+    _asyncInfoBase.callbacks.responseCompleteCallback = _responseCompleteCallback;
+    _asyncInfoBase.callbacks.writeCallback = _writeCallback;
+    _asyncInfoBase.pPrivData = &_verifParams;
+
+    /* Reset the variables that mimic the network. */
+    ( void ) memset( &_networkInterface, 0x00, sizeof( IotNetworkInterface_t ) );
+    ( void ) memset( _pRespMessageBuffer, 0x00, sizeof( _pRespMessageBuffer ) );
+    _nextRespMessageBufferByteToReceive = 0;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test teardown for the HTTP Client Async unit tests.
+ */
+TEST_TEAR_DOWN( HTTPS_Client_Unit_Async )
+{
+    IotSemaphore_Destroy( &( _verifParams.completeSem ) );
+    IotHttpsClient_Deinit();
+    IotSdk_Cleanup();
+}
+
+/*-----------------------------------------------------------*/
+
+TEST_GROUP_RUNNER( HTTPS_Client_Unit_Async )
+{
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncInvalidParameters );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncFailureSendingHeaders );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncFailureSendingBody );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncFailureReceivingHeaders );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncFailureReceivingBody );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncFailureParsingHeaders );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncFailureParsingBody );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncSomeBodyInHeaderBuffer );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncSomeHeaderInBodyBuffer );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncEntireResponseInHeaderBuffer );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncBodyTooLarge );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncIgnoreResponseBody );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncCancelBeforeScheduled );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncCancelDuringAppendHeaderCallback );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncCancelDuringWriteCallback );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncCancelDuringReadReadyCallback );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncMultipleRequestsSuccess );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncMultipleRequestsSecondHasNetworkSendFailure );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncMultipleRequestsFirstHasNetworkReceiveFailure );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncMultipleRequestsFirstHasParsingFailure );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncMultipleRequestsFirstIsNonPersistent );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncMultipleRequestsFirstIgnoresPresentResponseBody );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncMultipleRequestsOneGetsCancelled );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Async, SendAsyncChunkedResponse );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * Tests IotHttpsClient_SendAsync() with various invalid parameters.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncInvalidParameters )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    IotHttpsResponseInfo_t testRespInfo = IOT_HTTPS_RESPONSE_INFO_INITIALIZER;
+
+    /* Get valid connection and request handles for testing one input NULL at a time. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &_pAsyncReqInfos[ 0 ] );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    memcpy( &testRespInfo, &_pAsyncRespInfos[ 0 ], sizeof( IotHttpsResponseInfo_t ) );
+
+    /* Test a NULL connHandle parameter. */
+    returnCode = IotHttpsClient_SendAsync( NULL, reqHandle, &respHandle, &testRespInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( respHandle );
+
+    /* Test a NULL reqHandle parameters. */
+    returnCode = IotHttpsClient_SendAsync( connHandle, NULL, &respHandle, &testRespInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( respHandle );
+
+    /* Test a NULL respHandle parameter. */
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, NULL, &testRespInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( respHandle );
+
+    /* Test a aNULL pRespInfo parameter. */
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, NULL );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( respHandle );
+
+    /* Test a sync request handle. */
+    reqHandle->isAsync = false;
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &testRespInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( respHandle );
+    /* Restore the request handle for other tests. */
+    reqHandle->isAsync = true;
+
+    /* Test a NULL response user buffer. */
+    memcpy( &testRespInfo, &_pAsyncRespInfos[ 0 ], sizeof( IotHttpsResponseInfo_t ) );
+    testRespInfo.userBuffer.pBuffer = NULL;
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &testRespInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( respHandle );
+
+    /* Test a response user buffer that is too small. */
+    memcpy( &testRespInfo, &_pAsyncRespInfos[ 0 ], sizeof( IotHttpsResponseInfo_t ) );
+    testRespInfo.userBuffer.bufferLen = responseUserBufferMinimumSize - 1;
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &testRespInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INSUFFICIENT_MEMORY, returnCode );
+    TEST_ASSERT_NULL( respHandle );
+
+    /* Test sending a request on a close connection. */
+    memcpy( &testRespInfo, &_pAsyncRespInfos[ 0 ], sizeof( IotHttpsResponseInfo_t ) );
+    connHandle->isConnected = false;
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &testRespInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( respHandle );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify the correct asynchronous workflow when the headers fails to send on the network.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncFailureSendingHeaders )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+
+    /* Test a failure to send the headers. */
+    _networkInterface.send = _networkSendFailHeaders;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &( _pAsyncReqInfos[ 0 ] ) );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    _verifParams.numRequestsTotal = 1;
+    _verifParams.numRequestsLeft = 1;
+
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &( _pAsyncRespInfos[ 0 ] ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NETWORK_ERROR, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.errorCallbackCount );
+
+    /* Verify that the network is disconnected. */
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify the correct asynchronous workflow when the body fails to send on the network.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncFailureSendingBody )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+
+    /* Test a failure to send the body. */
+    _networkInterface.send = _networkSendFailBody;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &( _pAsyncReqInfos[ 0 ] ) );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    _verifParams.numRequestsTotal = 1;
+    _verifParams.numRequestsLeft = 1;
+
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &( _pAsyncRespInfos[ 0 ] ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NETWORK_ERROR, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.errorCallbackCount );
+
+    /* Verify that the network is disconnected. */
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify the correct asynchronous workflow when the headers fail to be received on the network.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncFailureReceivingHeaders )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+
+    /* Test a failure to receive the headers. */
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveFailHeaders;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &( _pAsyncReqInfos[ 0 ] ) );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    _verifParams.numRequestsTotal = 1;
+    _verifParams.numRequestsLeft = 1;
+
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &( _pAsyncRespInfos[ 0 ] ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NETWORK_ERROR, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.errorCallbackCount );
+
+    /* Verify that the network is disconnected. */
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+}
+
+/**
+ * @brief Verify the correct asynchronous workflow when the body fails to be received on the network.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncFailureReceivingBody )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+
+    /* Test a failure to receive the headers. */
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveFailBody;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &( _pAsyncReqInfos[ 0 ] ) );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    _verifParams.numRequestsTotal = 1;
+    _verifParams.numRequestsLeft = 1;
+
+    /* Generate an ideal case header and body message size just for testing a failure to receive. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &( _pAsyncRespInfos[ 0 ] ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NETWORK_ERROR, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.errorCallbackCount );
+
+    /* Verify that the network is disconnected. */
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify the correct asynchronous workflow when the response headers received fail parsing.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncFailureParsingHeaders )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+
+    /* Test a failure to parse the received headers. */
+    _networkInterface.send = _networkSendSuccessWithSettingParseFailForHeaders;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &( _pAsyncReqInfos[ 0 ] ) );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    _verifParams.numRequestsTotal = 1;
+    _verifParams.numRequestsLeft = 1;
+
+    /* Generate an ideal case header and body message size just for testing a failure to parse. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &( _pAsyncRespInfos[ 0 ] ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_PARSING_ERROR, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.errorCallbackCount );
+
+    /* Verify that the network is disconnected. */
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify the correct asynchronous workflow when the response body received fails parsing.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncFailureParsingBody )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+
+    /* Test a failure to parse the received body. */
+    _networkInterface.send = _networkSendSuccessWithSettingParseFailForBody;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &( _pAsyncReqInfos[ 0 ] ) );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    _verifParams.numRequestsTotal = 1;
+    _verifParams.numRequestsLeft = 1;
+
+    /* Generate an ideal case header and body message size just for testing a failure to parse. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &( _pAsyncRespInfos[ 0 ] ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_PARSING_ERROR, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.errorCallbackCount );
+
+    /* Verify that the network is disconnected. */
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify that the response body is received correctly when part of it received into the header buffer.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncSomeBodyInHeaderBuffer )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    int headerLength = 0;
+    int bodyLength = 0;
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &( _pAsyncReqInfos[ 0 ] ) );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    _verifParams.numRequestsTotal = 1;
+    _verifParams.numRequestsLeft = 1;
+
+    /* Generate a response message where part of the body is received into the header buffer while the rest is received
+     * into the body buffer. This test relies on the HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH to be less than double the
+     * HTTPS_TEST_RESP_BODY_BUFFER_SIZE. */
+    TEST_ASSERT_LESS_THAN_MESSAGE( HTTPS_TEST_RESP_BODY_BUFFER_SIZE * 2,
+                                   HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH,
+                                   "The header buffer size must be less than double of HTTPS_TEST_RESP_BODY_BUFFER_SIZE in order for this test to "
+                                   "be valid. Please resize HTTPS_TEST_RESP_USER_BUFFER_SIZE or HTTPS_TEST_RESP_BODY_BUFFER_SIZE." );
+    headerLength = HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH / 2;
+    bodyLength = HTTPS_TEST_RESP_BODY_BUFFER_SIZE;
+    _generateHttpResponseMessage( headerLength, bodyLength );
+
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &( _pAsyncRespInfos[ 0 ] ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.errorCallbackCount );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify that the response body is received correctly when there are some headers received into the body buffer.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncSomeHeaderInBodyBuffer )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    int headerLength = 0;
+    int bodyLength = 0;
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &( _pAsyncReqInfos[ 0 ] ) );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    _verifParams.numRequestsTotal = 1;
+    _verifParams.numRequestsLeft = 1;
+
+    /* Generate a response message where part of the headers is received into the body buffer. */
+    headerLength = HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH * 2;
+    bodyLength = HTTPS_TEST_RESP_BODY_BUFFER_SIZE;
+    _generateHttpResponseMessage( headerLength, bodyLength );
+
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &( _pAsyncRespInfos[ 0 ] ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.errorCallbackCount );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify that the response body is received correctly when the whole response is received into the header
+ * buffer.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncEntireResponseInHeaderBuffer )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    int headerLength = 0;
+    int bodyLength = 0;
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &( _pAsyncReqInfos[ 0 ] ) );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    _verifParams.numRequestsTotal = 1;
+    _verifParams.numRequestsLeft = 1;
+
+    /* Generate a response message where all of the body is in the header buffer. */
+    headerLength = HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH / 2;
+    bodyLength = HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH / 4;
+    _generateHttpResponseMessage( headerLength, bodyLength );
+
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &( _pAsyncRespInfos[ 0 ] ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.errorCallbackCount );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify that the #IotHttpsClientCallbacks_t.readReadyCallback is invoked multiple times when the body is
+ * too large to fit into the buffer supplied to read.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncBodyTooLarge )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    int headerLength = 0;
+    int bodyLength = 0;
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &( _pAsyncReqInfos[ 0 ] ) );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    _verifParams.numRequestsTotal = 1;
+    _verifParams.numRequestsLeft = 1;
+
+    /* Generate a response message where all of the body is in the header buffer. */
+    headerLength = HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH;
+    bodyLength = HTTPS_TEST_RESP_BODY_BUFFER_SIZE + 1;
+    _generateHttpResponseMessage( headerLength, bodyLength );
+
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &( _pAsyncRespInfos[ 0 ] ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( 2, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.errorCallbackCount );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify a successful asynchronous workflow when the #IotHttpsClientCallbacks_t.readReadyCallback is set to
+ * NULL.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncIgnoreResponseBody )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    /* Test ignoring the response body. */
+    _asyncInfoBase.callbacks.readReadyCallback = NULL;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &( _pAsyncReqInfos[ 0 ] ) );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    _verifParams.numRequestsTotal = 1;
+    _verifParams.numRequestsLeft = 1;
+
+    /* Generate an ideal case response, just to test the body being ignored. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &( _pAsyncRespInfos[ 0 ] ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.errorCallbackCount );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify the asynchronous workflow when the request is cancelled before it is scheduled.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncCancelBeforeScheduled )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+
+    /* This test is only valid if there are 2 or more async requests available to schedule. */
+    TEST_ASSERT_GREATER_THAN( 1, HTTPS_TEST_MAX_ASYNC_REQUESTS );
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    _pAsyncRequestHandles[ 0 ] = _getReqHandle( &( _pAsyncReqInfos[ 0 ] ) );
+    TEST_ASSERT_NOT_NULL( _pAsyncRequestHandles[ 0 ] );
+    _pAsyncRequestHandles[ 1 ] = _getReqHandle( &( _pAsyncReqInfos[ 1 ] ) );
+    TEST_ASSERT_NOT_NULL( _pAsyncRequestHandles[ 1 ] );
+
+    _verifParams.numRequestsTotal = 2;
+    _verifParams.numRequestsLeft = 2;
+
+    /* Generate an ideal case response. Only the first request scheduled should invoke any of the callbacks. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+
+    /* Schedule two requests here, then immediately cancel the second one. It takes greater than 300 ms
+     * for the network receive callback to be invoked for the first request.  This is configured in
+     * HTTPS_TEST_NETWORK_RECEIVE_CALLBACK_WAIT_MS. If HTTPS_TEST_NETWORK_RECEIVE_CALLBACK_WAIT_MS is too small
+     * and the second request is scheduled, this failure will be reflected in the async callback counts verification. */
+    returnCode = IotHttpsClient_SendAsync( connHandle,
+                                           _pAsyncRequestHandles[ 0 ],
+                                           &( _pAsyncResponseHandles[ 0 ] ),
+                                           &( _pAsyncRespInfos[ 0 ] ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    returnCode = IotHttpsClient_SendAsync( connHandle,
+                                           _pAsyncRequestHandles[ 1 ],
+                                           &( _pAsyncResponseHandles[ 1 ] ),
+                                           &( _pAsyncRespInfos[ 1 ] ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    IotHttpsClient_CancelRequestAsync( _pAsyncRequestHandles[ 1 ] );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_SEND_ABORT, _verifParams.returnCode[ 1 ] );
+    TEST_ASSERT_EQUAL( 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.readReadyCallbackCount );
+    /* The response complete callback will be called for a cancelled request. */
+    TEST_ASSERT_EQUAL( 2, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.errorCallbackCount );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify the asynchronous workflow when the request is cancelled during the
+ * #IotHttpsClientCallbacks_t.appendHeaderCallback.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncCancelDuringAppendHeaderCallback )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+
+    /* Assign a test custom appendHeaderCallback that cancels the request. */
+    _asyncInfoBase.callbacks.appendHeaderCallback = _appendHeaderCallbackThatCancels;
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &( _pAsyncReqInfos[ 0 ] ) );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* When this numRequestsLeft becomes zero, then _verifParams.completeSem is posted to in _responseCompleteCallbackCount. */
+    _verifParams.numRequestsTotal = 1;
+    _verifParams.numRequestsLeft = 1;
+
+    /* Generate an ideal case response. Only the first request scheduled should invoke any of the callbacks. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &( _pAsyncRespInfos[ 0 ] ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_SEND_ABORT, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.errorCallbackCount );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify the asynchronous workflow when the request is cancelled during the
+ * #IotHttpsClientCallbacks_t.writeCallback.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncCancelDuringWriteCallback )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+
+    /* Assign a test custom writeCallback that cancels the request. */
+    _asyncInfoBase.callbacks.writeCallback = _writeCallbackThatCancels;
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &( _pAsyncReqInfos[ 0 ] ) );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* When this numRequestsLeft becomes zero, then _verifParams.completeSem is posted to in _responseCompleteCallbackCount. */
+    _verifParams.numRequestsTotal = 1;
+    _verifParams.numRequestsLeft = 1;
+
+    /* Generate an ideal case response. Only the first request scheduled should invoke any of the callbacks. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &( _pAsyncRespInfos[ 0 ] ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_SEND_ABORT, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.errorCallbackCount );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify the asynchronous workflow when the request is cancelled during the
+ * #IotHttpsClientCallbacks_t.readReadyCallback.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncCancelDuringReadReadyCallback )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+
+    /* Assign a test custom writeCallback that cancels the request. */
+    _asyncInfoBase.callbacks.readReadyCallback = _readReadyCallbackThatCancels;
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &( _pAsyncReqInfos[ 0 ] ) );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* When this parameter becomes zero, then _verifParams.completeSem is posted to in _responseCompleteCallbackCount. */
+    _verifParams.numRequestsTotal = 1;
+    _verifParams.numRequestsLeft = 1;
+
+    /* Generate an ideal case response. Only the first request scheduled should invoke any of the callbacks. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &( _pAsyncRespInfos[ 0 ] ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_RECEIVE_ABORT, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.errorCallbackCount );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify the data received when scheduling multiple asynchronous requests in the happy path case.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncMultipleRequestsSuccess )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    int reqIndex = 0;
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+
+    for( reqIndex = 0; reqIndex < HTTPS_TEST_MAX_ASYNC_REQUESTS; reqIndex++ )
+    {
+        _pAsyncRequestHandles[ reqIndex ] = _getReqHandle( &( _pAsyncReqInfos[ reqIndex ] ) );
+        TEST_ASSERT_NOT_NULL( _pAsyncRequestHandles[ reqIndex ] );
+    }
+
+    /* All the requests except the one that was cancelled before it was scheduled will decrement this parameters. */
+    _verifParams.numRequestsTotal = HTTPS_TEST_MAX_ASYNC_REQUESTS;
+    _verifParams.numRequestsLeft = HTTPS_TEST_MAX_ASYNC_REQUESTS;
+
+    /* Generate an ideal case response. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+
+    /* Schedule all of the requests. */
+    for( reqIndex = 0; reqIndex < HTTPS_TEST_MAX_ASYNC_REQUESTS; reqIndex++ )
+    {
+        returnCode = IotHttpsClient_SendAsync( connHandle,
+                                               _pAsyncRequestHandles[ reqIndex ],
+                                               &( _pAsyncResponseHandles[ reqIndex ] ),
+                                               &( _pAsyncRespInfos[ reqIndex ] ) );
+        TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    }
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    for( reqIndex = 0; reqIndex < HTTPS_TEST_MAX_ASYNC_REQUESTS; reqIndex++ )
+    {
+        TEST_ASSERT_EQUAL( IOT_HTTPS_OK, _verifParams.returnCode[ reqIndex ] );
+    }
+
+    TEST_ASSERT_EQUAL( HTTPS_TEST_MAX_ASYNC_REQUESTS, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( HTTPS_TEST_MAX_ASYNC_REQUESTS, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( HTTPS_TEST_MAX_ASYNC_REQUESTS, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( HTTPS_TEST_MAX_ASYNC_REQUESTS, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.errorCallbackCount );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify that all pending requests after are not sent when the first request on the connection has a network
+ * send failure.
+ *
+ * This test relies on there being some request after the one with a network failure to send. Since the send happens
+ * soon after the first request is schedule, this test does the send failure on the second request. With the 300 ms
+ * (HTTPS_TEST_NETWORK_RECEIVE_CALLBACK_WAIT_MS) this is enough time to schedule another one or more requests after
+ * to verify that requests following do get dropped.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncMultipleRequestsSecondHasNetworkSendFailure )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    int reqIndex = 0;
+
+    /* This test is only valid if there are 3 or more async requests available to schedule. */
+    TEST_ASSERT_GREATER_THAN( 2, HTTPS_TEST_MAX_ASYNC_REQUESTS );
+
+    _networkInterface.send = _networkSendFailsOnSecondHeaderSend;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+
+    for( reqIndex = 0; reqIndex < HTTPS_TEST_MAX_ASYNC_REQUESTS; reqIndex++ )
+    {
+        _pAsyncRequestHandles[ reqIndex ] = _getReqHandle( &( _pAsyncReqInfos[ reqIndex ] ) );
+        TEST_ASSERT_NOT_NULL( _pAsyncRequestHandles[ reqIndex ] );
+    }
+
+    _verifParams.numRequestsTotal = HTTPS_TEST_MAX_ASYNC_REQUESTS;
+    _verifParams.numRequestsLeft = HTTPS_TEST_MAX_ASYNC_REQUESTS;
+
+    /* Generate an ideal case response. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+
+    /* Schedule all of the requests. */
+    for( reqIndex = 0; reqIndex < HTTPS_TEST_MAX_ASYNC_REQUESTS; reqIndex++ )
+    {
+        returnCode = IotHttpsClient_SendAsync( connHandle,
+                                               _pAsyncRequestHandles[ reqIndex ],
+                                               &( _pAsyncResponseHandles[ reqIndex ] ),
+                                               &( _pAsyncRespInfos[ reqIndex ] ) );
+        TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    }
+
+    /* Make sure that the test is valid by asserting that the request after the one that fails exists in the queue. */
+    TEST_ASSERT_EQUAL_PTR( &( _pAsyncRequestHandles[ 2 ]->link ), IotListDouble_FindFirstMatch( ( IotListDouble_t * ) ( &( connHandle->reqQ ) ),
+                                                                                                NULL,
+                                                                                                NULL,
+                                                                                                &( _pAsyncRequestHandles[ 2 ]->link ) ) );
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* Wait for any errors that may arise from straggling requests that should not exist. */
+    IotClock_SleepMs( HTTPS_TEST_NETWORK_RECEIVE_CALLBACK_WAIT_MS * 2 );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NETWORK_ERROR, _verifParams.returnCode[ 1 ] );
+    TEST_ASSERT_EQUAL( 2, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 2, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( 2, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.errorCallbackCount );
+    /* Verify that the connection is closed. */
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+    /* Verify that there are no pending requests or responses. */
+    TEST_ASSERT_EQUAL( true, IotDeQueue_IsEmpty( &( connHandle->reqQ ) ) );
+    TEST_ASSERT_EQUAL( true, IotDeQueue_IsEmpty( &( connHandle->respQ ) ) );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify that all pending requests after are not sent when the first request on the connection has a network
+ * receive failure.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncMultipleRequestsFirstHasNetworkReceiveFailure )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    int reqIndex = 0;
+
+    /* This test is only valid if there are 2 or more async requests available to schedule. */
+    TEST_ASSERT_GREATER_THAN( 1, HTTPS_TEST_MAX_ASYNC_REQUESTS );
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveFailHeaders;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+
+    for( reqIndex = 0; reqIndex < HTTPS_TEST_MAX_ASYNC_REQUESTS; reqIndex++ )
+    {
+        _pAsyncRequestHandles[ reqIndex ] = _getReqHandle( &( _pAsyncReqInfos[ reqIndex ] ) );
+        TEST_ASSERT_NOT_NULL( _pAsyncRequestHandles[ reqIndex ] );
+    }
+
+    _verifParams.numRequestsTotal = HTTPS_TEST_MAX_ASYNC_REQUESTS;
+    _verifParams.numRequestsLeft = HTTPS_TEST_MAX_ASYNC_REQUESTS;
+
+    /* Generate an ideal case response. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+
+    /* Schedule all of the requests. There is a 300 ms delay after the first request sends until the network receive
+     * callback is invoked. This should be enough time to place all other requests into the queue pending scheduling. */
+    for( reqIndex = 0; reqIndex < HTTPS_TEST_MAX_ASYNC_REQUESTS; reqIndex++ )
+    {
+        returnCode = IotHttpsClient_SendAsync( connHandle,
+                                               _pAsyncRequestHandles[ reqIndex ],
+                                               &( _pAsyncResponseHandles[ reqIndex ] ),
+                                               &( _pAsyncRespInfos[ reqIndex ] ) );
+        TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    }
+
+    /* Make sure the test is valid that there are 2 or more items in the request queue. */
+    TEST_ASSERT_GREATER_THAN( 1, IotDeQueue_Count( &( connHandle->reqQ ) ) );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* Wait for any errors that may arise from straggling requests that should not exist. */
+    IotClock_SleepMs( HTTPS_TEST_NETWORK_RECEIVE_CALLBACK_WAIT_MS * 2 );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NETWORK_ERROR, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.writeCallbackCount );
+    /* If reading the headers of the first request fails, then no reading of the body callback is invoked. */
+    TEST_ASSERT_EQUAL( 0, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.errorCallbackCount );
+    /* Verify that the connection is closed. */
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+    /* Verify that there are no pending requests or responses. */
+    TEST_ASSERT_EQUAL( true, IotDeQueue_IsEmpty( &( connHandle->reqQ ) ) );
+    TEST_ASSERT_EQUAL( true, IotDeQueue_IsEmpty( &( connHandle->respQ ) ) );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify that all pending requests after are not sent when the first request on the connection has a failure
+ * to parse the response.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncMultipleRequestsFirstHasParsingFailure )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    int reqIndex = 0;
+
+    /* This test is only valid if there are 2 or more async requests available to schedule. */
+    TEST_ASSERT_GREATER_THAN( 1, HTTPS_TEST_MAX_ASYNC_REQUESTS );
+
+    _networkInterface.send = _networkSendSuccessWithSettingParseFailForHeaders;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+
+    for( reqIndex = 0; reqIndex < HTTPS_TEST_MAX_ASYNC_REQUESTS; reqIndex++ )
+    {
+        _pAsyncRequestHandles[ reqIndex ] = _getReqHandle( &( _pAsyncReqInfos[ reqIndex ] ) );
+        TEST_ASSERT_NOT_NULL( _pAsyncRequestHandles[ reqIndex ] );
+    }
+
+    _verifParams.numRequestsTotal = HTTPS_TEST_MAX_ASYNC_REQUESTS;
+    _verifParams.numRequestsLeft = HTTPS_TEST_MAX_ASYNC_REQUESTS;
+
+    /* Generate an ideal case response. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+
+    /* Schedule all of the requests. There is a 300 ms delay after the first request sends until the network receive
+     * callback is invoked. This should be enough time to place all other requests into the queue pending scheduling. */
+    for( reqIndex = 0; reqIndex < HTTPS_TEST_MAX_ASYNC_REQUESTS; reqIndex++ )
+    {
+        returnCode = IotHttpsClient_SendAsync( connHandle,
+                                               _pAsyncRequestHandles[ reqIndex ],
+                                               &( _pAsyncResponseHandles[ reqIndex ] ),
+                                               &( _pAsyncRespInfos[ reqIndex ] ) );
+        TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    }
+
+    /* Make sure the test is valid that there are 2 or more items in the request queue. */
+    TEST_ASSERT_GREATER_THAN( 1, IotDeQueue_Count( &( connHandle->reqQ ) ) );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* Wait for any errors that may arise from straggling requests that should not exist. */
+    IotClock_SleepMs( HTTPS_TEST_NETWORK_RECEIVE_CALLBACK_WAIT_MS * 2 );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_PARSING_ERROR, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.writeCallbackCount );
+    /* Parsing of the headers occurs after reading the headers, so no reading of the body is invoked. */
+    TEST_ASSERT_EQUAL( 0, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.errorCallbackCount );
+    /* Verify that the connection is closed. */
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+    /* Verify that there are no pending requests or responses. */
+    TEST_ASSERT_EQUAL( true, IotDeQueue_IsEmpty( &( connHandle->reqQ ) ) );
+    TEST_ASSERT_EQUAL( true, IotDeQueue_IsEmpty( &( connHandle->respQ ) ) );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify that all pending requests after are not sent when the first request on the connection is
+ * non-persistent.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncMultipleRequestsFirstIsNonPersistent )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    int reqIndex = 0;
+
+    /* This test is only valid if there are 2 or more async requests available to schedule. */
+    TEST_ASSERT_GREATER_THAN( 1, HTTPS_TEST_MAX_ASYNC_REQUESTS );
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+
+    /* Set the first request as non-persistent to test that all other requests after are not sent because the
+     * connection closed. */
+    _pAsyncReqInfos[ 0 ].isNonPersistent = true;
+
+    for( reqIndex = 0; reqIndex < HTTPS_TEST_MAX_ASYNC_REQUESTS; reqIndex++ )
+    {
+        _pAsyncRequestHandles[ reqIndex ] = _getReqHandle( &( _pAsyncReqInfos[ reqIndex ] ) );
+        TEST_ASSERT_NOT_NULL( _pAsyncRequestHandles[ reqIndex ] );
+    }
+
+    _verifParams.numRequestsTotal = HTTPS_TEST_MAX_ASYNC_REQUESTS;
+    _verifParams.numRequestsLeft = HTTPS_TEST_MAX_ASYNC_REQUESTS;
+
+    /* Generate an ideal case response. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+
+    /* Schedule all of the requests. There is a 300 ms delay after the first request sends until the network receive
+     * callback is invoked. This should be enough time to place all other requests into the queue pending scheduling. */
+    for( reqIndex = 0; reqIndex < HTTPS_TEST_MAX_ASYNC_REQUESTS; reqIndex++ )
+    {
+        returnCode = IotHttpsClient_SendAsync( connHandle,
+                                               _pAsyncRequestHandles[ reqIndex ],
+                                               &( _pAsyncResponseHandles[ reqIndex ] ),
+                                               &( _pAsyncRespInfos[ reqIndex ] ) );
+        TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    }
+
+    /* Make sure the test is valid that there are 2 or more items in the request queue. */
+    TEST_ASSERT_GREATER_THAN( 1, IotDeQueue_Count( &( connHandle->reqQ ) ) );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* Wait for any errors that may arise from straggling requests that should not exist. */
+    IotClock_SleepMs( HTTPS_TEST_NETWORK_RECEIVE_CALLBACK_WAIT_MS * 2 );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.errorCallbackCount );
+    /* Verify that the connection is closed. */
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+    /* Verify that there are no pending requests or responses. */
+    TEST_ASSERT_EQUAL( true, IotDeQueue_IsEmpty( &( connHandle->reqQ ) ) );
+    TEST_ASSERT_EQUAL( true, IotDeQueue_IsEmpty( &( connHandle->respQ ) ) );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify that all pending requests after read the response body correct when the first response ignores it.
+ *
+ * This test makes sure the response flushing is working so that the workflow is not corrupted.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncMultipleRequestsFirstIgnoresPresentResponseBody )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    int reqIndex = 0;
+    IotHttpsAsyncInfo_t testAsyncInfo;
+
+    /* Set the read ready callback as NULL in a test async info to replace the reference in the first request. */
+    memcpy( &testAsyncInfo, &_asyncInfoBase, sizeof( IotHttpsAsyncInfo_t ) );
+    testAsyncInfo.callbacks.readReadyCallback = NULL;
+    _pAsyncReqInfos[ 0 ].u.pAsyncInfo = &testAsyncInfo;
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+
+    for( reqIndex = 0; reqIndex < HTTPS_TEST_MAX_ASYNC_REQUESTS; reqIndex++ )
+    {
+        _pAsyncRequestHandles[ reqIndex ] = _getReqHandle( &( _pAsyncReqInfos[ reqIndex ] ) );
+        TEST_ASSERT_NOT_NULL( _pAsyncRequestHandles[ reqIndex ] );
+    }
+
+    /* All the requests except the one that was cancelled before it was scheduled will decrement this parameters. */
+    _verifParams.numRequestsTotal = HTTPS_TEST_MAX_ASYNC_REQUESTS;
+    _verifParams.numRequestsLeft = HTTPS_TEST_MAX_ASYNC_REQUESTS;
+
+    /* Generate an ideal case response. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+
+    /* Schedule all of the requests. */
+    for( reqIndex = 0; reqIndex < HTTPS_TEST_MAX_ASYNC_REQUESTS; reqIndex++ )
+    {
+        returnCode = IotHttpsClient_SendAsync( connHandle,
+                                               _pAsyncRequestHandles[ reqIndex ],
+                                               &( _pAsyncResponseHandles[ reqIndex ] ),
+                                               &( _pAsyncRespInfos[ reqIndex ] ) );
+        TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    }
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    for( reqIndex = 0; reqIndex < HTTPS_TEST_MAX_ASYNC_REQUESTS; reqIndex++ )
+    {
+        TEST_ASSERT_EQUAL( IOT_HTTPS_OK, _verifParams.returnCode[ reqIndex ] );
+    }
+
+    TEST_ASSERT_EQUAL( HTTPS_TEST_MAX_ASYNC_REQUESTS, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( HTTPS_TEST_MAX_ASYNC_REQUESTS, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( HTTPS_TEST_MAX_ASYNC_REQUESTS - 1, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( HTTPS_TEST_MAX_ASYNC_REQUESTS, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.errorCallbackCount );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify that when an earlier request gets cancelled the requests after still get schedule to run.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncMultipleRequestsOneGetsCancelled )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    int reqIndex = 0;
+    /* Cancelling request 1, which is after request 0. */
+    int reqToCancel = 1;
+
+    /* This test is only valid if there are 3 or more async requests available to schedule. */
+    TEST_ASSERT_GREATER_THAN( 2, HTTPS_TEST_MAX_ASYNC_REQUESTS );
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+
+    for( reqIndex = 0; reqIndex < HTTPS_TEST_MAX_ASYNC_REQUESTS; reqIndex++ )
+    {
+        _pAsyncRequestHandles[ reqIndex ] = _getReqHandle( &( _pAsyncReqInfos[ reqIndex ] ) );
+        TEST_ASSERT_NOT_NULL( _pAsyncRequestHandles[ reqIndex ] );
+    }
+
+    /* All the requests except the one that was cancelled before it was scheduled will decrement this parameters. */
+    _verifParams.numRequestsTotal = HTTPS_TEST_MAX_ASYNC_REQUESTS;
+    _verifParams.numRequestsLeft = HTTPS_TEST_MAX_ASYNC_REQUESTS;
+
+    /* Generate an ideal case response. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+
+    /* Schedule all of the requests. */
+    for( reqIndex = 0; reqIndex < HTTPS_TEST_MAX_ASYNC_REQUESTS; reqIndex++ )
+    {
+        returnCode = IotHttpsClient_SendAsync( connHandle,
+                                               _pAsyncRequestHandles[ reqIndex ],
+                                               &( _pAsyncResponseHandles[ reqIndex ] ),
+                                               &( _pAsyncRespInfos[ reqIndex ] ) );
+        TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    }
+
+    IotHttpsClient_CancelRequestAsync( _pAsyncRequestHandles[ reqToCancel ] );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    for( reqIndex = 0; reqIndex < HTTPS_TEST_MAX_ASYNC_REQUESTS; reqIndex++ )
+    {
+        if( reqIndex == reqToCancel )
+        {
+            TEST_ASSERT_EQUAL( IOT_HTTPS_SEND_ABORT, _verifParams.returnCode[ reqIndex ] );
+        }
+        else
+        {
+            TEST_ASSERT_EQUAL( IOT_HTTPS_OK, _verifParams.returnCode[ reqIndex ] );
+        }
+    }
+
+    TEST_ASSERT_EQUAL( HTTPS_TEST_MAX_ASYNC_REQUESTS - 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( HTTPS_TEST_MAX_ASYNC_REQUESTS - 1, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( HTTPS_TEST_MAX_ASYNC_REQUESTS - 1, _verifParams.readReadyCallbackCount );
+    /* The response complete callback will be called for a cancelled request. */
+    TEST_ASSERT_EQUAL( HTTPS_TEST_MAX_ASYNC_REQUESTS, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.errorCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.readReadyCallbackCountPerResponse[ reqToCancel ] );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test receiving a chunked HTTP response message in the asynchronous workflow.
+ */
+TEST( HTTPS_Client_Unit_Async, SendAsyncChunkedResponse )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &( _pAsyncReqInfos[ 0 ] ) );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    _verifParams.numRequestsTotal = 1;
+    _verifParams.numRequestsLeft = 1;
+
+    /* Setup the test response message to receive the HTTP rest chinked response. */
+    memcpy( _pRespMessageBuffer, HTTPS_TEST_CHUNKED_RESPONSE, sizeof( HTTPS_TEST_CHUNKED_RESPONSE ) - 1 );
+
+    returnCode = IotHttpsClient_SendAsync( connHandle, reqHandle, &respHandle, &( _pAsyncRespInfos[ 0 ] ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Wait on the async request to finish. */
+    TEST_ASSERT_TRUE( IotSemaphore_TimedWait( &( _verifParams.completeSem ), HTTPS_TEST_ASYNC_TIMEOUT_MS ) );
+
+    /* If we made it here, then we indeed finished. Verify all of the parameters. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, _verifParams.returnCode[ 0 ] );
+    TEST_ASSERT_EQUAL( 1, _verifParams.appendHeaderCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.writeCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.readReadyCallbackCount );
+    TEST_ASSERT_EQUAL( 1, _verifParams.responseCompleteCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.connectionClosedCallbackCount );
+    TEST_ASSERT_EQUAL( 0, _verifParams.errorCallbackCount );
+}
diff --git a/libraries/c_sdk/standard/https/test/unit/iot_tests_https_client.c b/libraries/c_sdk/standard/https/test/unit/iot_tests_https_client.c
new file mode 100644
index 000000000..366e1a229
--- /dev/null
+++ b/libraries/c_sdk/standard/https/test/unit/iot_tests_https_client.c
@@ -0,0 +1,1406 @@
+/*
+ * Amazon FreeRTOS HTTPS Client V1.0.0
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+/**
+ * @file iot_tests_https_client.c
+ * @brief Tests for the user-facing API functions declared in iot_https_client.h.
+ */
+
+#include "iot_tests_https_common.h"
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Expected HTTP request line without the method.
+ */
+#define HTTPS_TEST_REQUEST_LINE_WITHOUT_METHOD                 HTTPS_TEST_PATH " " HTTPS_PROTOCOL_VERSION HTTPS_END_OF_HEADER_LINES_INDICATOR
+
+/**
+ * @brief Expected HTTP request line without the path and without the method.
+ */
+#define HTTPS_TEST_REQUEST_LINE_WITHOUT_PATH_WITHOUT_METHOD    HTTPS_EMPTY_PATH " " HTTPS_PROTOCOL_VERSION HTTPS_END_OF_HEADER_LINES_INDICATOR
+
+/**
+ * @brief Expected HTTP User-Agent header line.
+ */
+#define HTTPS_TEST_USER_AGENT_HEADER_LINE                      HTTPS_USER_AGENT_HEADER HTTPS_HEADER_FIELD_SEPARATOR IOT_HTTPS_USER_AGENT HTTPS_END_OF_HEADER_LINES_INDICATOR
+
+/**
+ * @brief Expected HTTP Host header line.
+ */
+#define HTTPS_TEST_HOST_HEADER_LINE                            HTTPS_HOST_HEADER HTTPS_HEADER_FIELD_SEPARATOR HTTPS_TEST_ADDRESS HTTPS_END_OF_HEADER_LINES_INDICATOR
+
+/**
+ * @brief HTTP response header lines to share among the tests.
+ */
+#define HTTPS_TEST_RESPONSE_HEADER_LINES       \
+    "HTTP/1.1 200 OK\r\n"                      \
+    "Content-Length: 43\r\n"                   \
+    "Date: Sun, 14 Jul 2019 06:07:52 GMT\r\n"  \
+    "ETag: \"3356-5233\"\r\n"                  \
+    "Vary: *\r\n"                              \
+    "P3P: CP=\"This is not a P3P policy\"\r\n" \
+    "xserver: www1021\r\n"
+#define HTTPS_TEST_RESPONSE_HEADER_LINES_LENGTH    sizeof( HTTPS_TEST_RESPONSE_HEADER_LINES ) - 1
+
+/**
+ * @brief Header lines with no content-length for testing.
+ */
+#define HTTPS_TEST_RESPONSE_HEADER_LINES_NO_CONTENT_LENGTH \
+    "HTTP/1.1 200 OK\r\n"                                  \
+    "Date: Sun, 14 Jul 2019 06:07:52 GMT\r\n"              \
+    "ETag: \"3356-5233\"\r\n"                              \
+    "Vary: *\r\n"                                          \
+    "P3P: CP=\"This is not a P3P policy\"\r\n"             \
+    "xserver: www1021\r\n\r\n"
+#define HTTPS_TEST_RESPONSE_HEADER_LINES_NO_CONTENT_LENGTH_LENGTH    sizeof( HTTPS_TEST_RESPONSE_HEADER_LINES_NO_CONTENT_LENGTH ) - 1
+
+/**
+ * @brief Header name and values to verify reading the header.
+ */
+#define HTTPS_DATE_HEADER                                            "Date"
+#define HTTPS_ETAG_HEADER                                            "ETag"
+#define HTTPS_NONEXISTENT_HEADER                                     "Non-Existent-Header"
+#define HTTPS_DATE_HEADER_VALUE                                      "Sun, 14 Jul 2019 06:07:52 GMT"
+#define HTTPS_ETAG_HEADER_VALUE                                      "\"3356-5233\""
+#define HTTPS_CONTENT_LENGTH_VALUE                                   ( 43 )
+
+/**
+ * @brief The array lengths of to store the header values.
+ */
+#define HTTPS_TEST_VALUE_BUFFER_LENGTH_LARGE_ENOUGH                  ( 64 )
+#define HTTPS_TEST_VALUE_BUFFER_LENGTH_TOO_SMALL                     ( 8 )
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief A IotHttpsAsyncInfo_t to share among the tests.
+ *
+ * The tests will replace callbacks in .callbacks as needed and add pPrivData as need for the test.
+ */
+static IotHttpsAsyncInfo_t _asyncInfo =
+{
+    .callbacks = { 0 },
+    .pPrivData = NULL
+};
+
+/**
+ * @brief A IotHttpsRequestInfo_t to share among the tests.
+ */
+static IotHttpsRequestInfo_t _reqInfo =
+{
+    .pPath                = HTTPS_TEST_PATH,
+    .pathLen              = sizeof( HTTPS_TEST_PATH ) - 1,
+    .method               = IOT_HTTPS_METHOD_GET,
+    .pHost                = HTTPS_TEST_ADDRESS,
+    .hostLen              = sizeof( HTTPS_TEST_ADDRESS ) - 1,
+    .isNonPersistent      = false,
+    .userBuffer.pBuffer   = _pReqUserBuffer,
+    .userBuffer.bufferLen = sizeof( _pReqUserBuffer ),
+    .isAsync              = true,
+    .u.pAsyncInfo         = &_asyncInfo
+};
+
+/**
+ * @brief A IotHttpsResponseInfo_t for a GET method to share among the tests.
+ */
+static IotHttpsResponseInfo_t _respInfo =
+{
+    .userBuffer.pBuffer   = _pRespUserBuffer,
+    .userBuffer.bufferLen = sizeof( _pRespUserBuffer ),
+    .pSyncInfo            = NULL
+};
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief A network receive callback that fails.
+ */
+static size_t _networkReceiveFail( void * pConnection,
+                                   uint8_t * pBuffer,
+                                   size_t bytesRequested )
+{
+    ( void ) pConnection;
+    ( void ) pBuffer;
+    ( void ) bytesRequested;
+
+    return 0;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief A network receive callback that succeeds.
+ */
+#if 0
+    static size_t _networkReceiveSuccess( void * pConnection,
+                                          uint8_t * pBuffer,
+                                          size_t bytesRequested )
+    {
+        size_t copyLen = 0;
+
+        ( void ) pConnection;
+
+        if( bytesRequested < HTTPS_TEST_SMALL_RESPONSE_LENGTH )
+        {
+            copyLen = bytesRequested;
+        }
+        else
+        {
+            copyLen = HTTPS_TEST_SMALL_RESPONSE_LENGTH;
+        }
+
+        /* Fill the pBuffer with a small message bytesRequested. */
+        memcpy( pBuffer, HTTPS_TEST_SMALL_RESPONSE, copyLen );
+
+        return copyLen;
+    }
+#endif /* if 0 */
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network abstraction send function that succeeds.
+ */
+static size_t _networkSendSuccess( void * pConnection,
+                                   const uint8_t * pMessage,
+                                   size_t messageLength )
+{
+    ( void ) pConnection;
+    ( void ) pMessage;
+
+    return messageLength;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network abstraction send function that fails.
+ */
+static size_t _networkSendFail( void * pConnection,
+                                const uint8_t * pMessage,
+                                size_t messageLength )
+{
+    ( void ) pConnection;
+    ( void ) pMessage;
+    ( void ) messageLength;
+
+    return 0;
+}
+
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network Abstraction close function that fails.
+ */
+static IotNetworkError_t _networkCloseFail( void * pConnection )
+{
+    ( void ) pConnection;
+    return IOT_NETWORK_FAILURE;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network Abstraction close function that fails.
+ */
+static IotNetworkError_t _networkDestroyFail( void * pConnection )
+{
+    ( void ) pConnection;
+    return IOT_NETWORK_FAILURE;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network Abstraction create function that fails.
+ */
+static IotNetworkError_t _networkCreateFail( void * pConnectionInfo,
+                                             void * pCredentialInfo,
+                                             void ** pConnection )
+{
+    ( void ) pConnectionInfo;
+    ( void ) pCredentialInfo;
+    ( void ) pConnection;
+    return IOT_NETWORK_FAILURE;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network Abstraction setReceiveCallback that fails.
+ */
+static IotNetworkError_t _setReceiveCallbackFail( void * pConnection,
+                                                  IotNetworkReceiveCallback_t receiveCallback,
+                                                  void * pContext )
+{
+    ( void ) pConnection;
+    ( void ) receiveCallback;
+    ( void ) pContext;
+    return IOT_NETWORK_FAILURE;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Mock the http parser execution failing.
+ */
+static size_t _httpParserExecuteFail( http_parser * parser,
+                                      const http_parser_settings * settings,
+                                      const char * data,
+                                      size_t len )
+{
+    ( void ) settings;
+    ( void ) data;
+    ( void ) len;
+    parser->http_errno = HPE_UNKNOWN;
+    return 0;
+}
+
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test group for HTTPS Client API tests.
+ */
+TEST_GROUP( HTTPS_Client_Unit_API );
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test setup for HTTPS Client API tests.
+ */
+TEST_SETUP( HTTPS_Client_Unit_API )
+{
+    /* Initialize the library. */
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, IotHttpsClient_Init() );
+
+    /* Reset the buffer we receive HTTP body into. */
+    ( void ) memset( _pRespBodyBuffer, 0x00, sizeof( _pRespBodyBuffer ) );
+
+    /* Reset the shared response message buffer. */
+    ( void ) memset( _pRespMessageBuffer, 0x00, sizeof( _pRespMessageBuffer ) );
+    _nextRespMessageBufferByteToReceive = 0;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test tear down for HTTPS Client API tests.
+ */
+TEST_TEAR_DOWN( HTTPS_Client_Unit_API )
+{
+    /* Deinitialize the library after the tests. */
+    IotHttpsClient_Deinit();
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test group runner for HTTPS Client API tests.
+ */
+TEST_GROUP_RUNNER( HTTPS_Client_Unit_API )
+{
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, ConnectInvalidParameters );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, ConnectFailure );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, ConnectSuccess );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, DisconnectInvalidParameters );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, DisconnectFailure );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, DisconnectSuccess );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, InitializeRequestInvalidParameters );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, InitializeRequestFormatCheck );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, AddHeaderInvalidParameters );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, AddHeaderFormatCheck );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, AddHeaderMultipleHeaders );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, ReadHeaderInvalidParameters );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, ReadHeaderVaryingValues );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, ReadContentLengthInvalidParameters );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, ReadContentLengthSuccess );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, ReadContentLengthNotFound );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, ReadResponseStatusInvalidParameters );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, ReadResponseStatusSuccess );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, WriteRequestBodyInvalidParameters );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, WriteRequestBodySuccess );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, WriteRequestBodyNetworkSendFailure );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, ReadResponseBodyInvalidParameters );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, ReadResponseBodyNetworkReceiveFailure );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, ReadResponseBodyParsingFailure );
+    RUN_TEST_CASE( HTTPS_Client_Unit_API, ReadResponseBodySuccess );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test various invalid parameters in the @ref https_client_function_connect API.
+ */
+TEST( HTTPS_Client_Unit_API, ConnectInvalidParameters )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionInfo_t testConnInfo = IOT_HTTPS_CONNECTION_INFO_INITIALIZER;
+    IotHttpsConnectionInfo_t * pOriginalConnInfo = &_connInfo;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+
+    /* NULL pConnHandle  */
+    returnCode = IotHttpsClient_Connect( NULL, pOriginalConnInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( connHandle );
+
+    /* NULL pConnConfig */
+    returnCode = IotHttpsClient_Connect( &connHandle, NULL );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( connHandle );
+
+    /* Both pConnHandle and pConnConfig are NULL. */
+    returnCode = IotHttpsClient_Connect( NULL, NULL );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( connHandle );
+
+    /* IoHttpsConnectInfo_t.userBuffer.pBuffer is NULL. */
+    memcpy( &testConnInfo, pOriginalConnInfo, sizeof( IotHttpsConnectionInfo_t ) );
+    testConnInfo.userBuffer.pBuffer = NULL;
+    returnCode = IotHttpsClient_Connect( &connHandle, &testConnInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( connHandle );
+    /* Restore the testConnInfo for the next test. */
+    testConnInfo.userBuffer.pBuffer = pOriginalConnInfo->userBuffer.pBuffer;
+
+    /* IotHttpsConnectionInfo_t.userBuffer.bufferLen < connectionUserBufferMinimumSize */
+    testConnInfo.userBuffer.bufferLen = connectionUserBufferMinimumSize - 1;
+    returnCode = IotHttpsClient_Connect( &connHandle, &testConnInfo );
+    TEST_ASSERT_NULL( connHandle );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INSUFFICIENT_MEMORY, returnCode );
+    /* Restore the testConnInfo for the next test. */
+    testConnInfo.userBuffer.bufferLen = pOriginalConnInfo->userBuffer.bufferLen;
+
+    /* NULL IotHttpsConnectionInfo_t.pAddress in pConnConfig.  */
+    testConnInfo.pAddress = NULL;
+    returnCode = IotHttpsClient_Connect( &connHandle, &testConnInfo );
+    TEST_ASSERT_NULL( connHandle );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    /* Restore the testConnInfo for the next test. */
+    testConnInfo.pAddress = pOriginalConnInfo->pAddress;
+
+    /* IotHttpsConnectionInfo_t.addressLen is zero. */
+    testConnInfo.addressLen = 0;
+    returnCode = IotHttpsClient_Connect( &connHandle, &testConnInfo );
+    TEST_ASSERT_NULL( connHandle );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* IotHttpsConnectionInfo_t.addressLen is greater than IOT_HTTPS_MAX_HOST_NAME_LENGTH */
+    testConnInfo.addressLen = IOT_HTTPS_MAX_HOST_NAME_LENGTH + 1;
+    returnCode = IotHttpsClient_Connect( &connHandle, &testConnInfo );
+    TEST_ASSERT_NULL( connHandle );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Both IotHttpsConnectionInfo_t.addressLen and IotHttpsConnectionInfo_t.pAddress are NULL. */
+    testConnInfo.pAddress = NULL;
+    returnCode = IotHttpsClient_Connect( &connHandle, &testConnInfo );
+    TEST_ASSERT_NULL( connHandle );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    /* Restore the testConnInfo for the next test. */
+    testConnInfo.pAddress = pOriginalConnInfo->pAddress;
+    testConnInfo.addressLen = pOriginalConnInfo->addressLen;
+
+    /* IotHttpsConnectionInfo_t.alpnProtocolsLen is greater than IOT_HTTPS_MAX_ALPN_PROTOCOLS_LENGTH. */
+    testConnInfo.alpnProtocolsLen = IOT_HTTPS_MAX_ALPN_PROTOCOLS_LENGTH + 1;
+    returnCode = IotHttpsClient_Connect( &connHandle, &testConnInfo );
+    TEST_ASSERT_NULL( connHandle );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    testConnInfo.alpnProtocolsLen = pOriginalConnInfo->alpnProtocolsLen;
+
+    /* Unknown IotHttpsConnectionInfo_t.pFlags are ignored, so that is not tested. */
+
+    /* NULL certificates will result in a network error in the underlying network stack, but is allowed in the API so '
+     * that is not tested here. */
+
+    /* IotHttpsConnectionInfo_t.pNetworkInterface is NULL. */
+    testConnInfo.pNetworkInterface = NULL;
+    returnCode = IotHttpsClient_Connect( &connHandle, &testConnInfo );
+    TEST_ASSERT_NULL( connHandle );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+}
+
+/* --------------------------------------------------------- */
+
+/**
+ * @brief Test a connection failing in few network abstraction upset scenarios.
+ */
+TEST( HTTPS_Client_Unit_API, ConnectFailure )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+
+    /* Test that we receive an internal error when setReceiveCallback() returns failure. */
+    _networkInterface.create = _networkCreateSuccess;
+    _networkInterface.setReceiveCallback = _setReceiveCallbackFail;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+    returnCode = IotHttpsClient_Connect( &connHandle, &_connInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INTERNAL_ERROR, returnCode );
+    TEST_ASSERT_NULL( connHandle );
+
+    /* Test that we receive a connection error when create() returns failure. */
+    _networkInterface.create = _networkCreateFail;
+    _networkInterface.setReceiveCallback = _setReceiveCallbackSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+    returnCode = IotHttpsClient_Connect( &connHandle, &_connInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_CONNECTION_ERROR, returnCode );
+    TEST_ASSERT_NULL( connHandle );
+
+    /* Test we receive an error if the connection handle is valid and connected but disconnect fails. */
+
+    /* Get a valid connection handle and put a failure condition (a request in the process of sending). */
+    _networkInterface.create = _networkCreateSuccess;
+    _networkInterface.setReceiveCallback = _setReceiveCallbackSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+    respHandle = _getRespHandle( &_respInfo, reqHandle );
+    TEST_ASSERT_NOT_NULL( respHandle );
+    respHandle->reqFinishedSending = false;
+    IotDeQueue_EnqueueTail( &( connHandle->respQ ), &( respHandle->link ) );
+    returnCode = IotHttpsClient_Connect( &connHandle, &_connInfo );
+    TEST_ASSERT_NOT_EQUAL( IOT_HTTPS_OK, returnCode );
+    TEST_ASSERT_NULL( connHandle );
+}
+
+/* --------------------------------------------------------- */
+
+/**
+ * @brief Test a connection succeeding.
+ */
+TEST( HTTPS_Client_Unit_API, ConnectSuccess )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+
+    /* Test that we connection successfully, when the connection handle is new. */
+    _networkInterface.create = _networkCreateSuccess;
+    _networkInterface.setReceiveCallback = _setReceiveCallbackSuccess;
+    returnCode = IotHttpsClient_Connect( &connHandle, &_connInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    TEST_ASSERT_NOT_NULL( connHandle );
+
+    /* Test that we connect successfully, when the connection handle is is valid and already connected. */
+    _networkInterface.create = _networkCreateSuccess;
+    _networkInterface.setReceiveCallback = _setReceiveCallbackSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    returnCode = IotHttpsClient_Connect( &connHandle, &_connInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    TEST_ASSERT_NOT_NULL( connHandle );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test various invalid parameters in the @ref https_client_function_disconnect API.
+ */
+TEST( HTTPS_Client_Unit_API, DisconnectInvalidParameters )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+
+    /* NULL connHandle. */
+    returnCode = IotHttpsClient_Disconnect( NULL );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test that we set the connection in the correct state when a disconnect fails.
+ */
+TEST( HTTPS_Client_Unit_API, DisconnectFailure )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+
+    /* Test a network close failure. */
+    _networkInterface.close = _networkCloseFail;
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+
+    returnCode = IotHttpsClient_Disconnect( connHandle );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    /* The state is disconnected even if the network failed. */
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+
+    /* Test a network destroy failure. */
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroyFail;
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    returnCode = IotHttpsClient_Disconnect( connHandle );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+
+    /* Test that IOT_HTTPS_BUSY is returned when a request is in the process of sending. */
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+    respHandle = _getRespHandle( &_respInfo, reqHandle );
+    TEST_ASSERT_NOT_NULL( respHandle );
+    respHandle->reqFinishedSending = false;
+    IotDeQueue_EnqueueTail( &( connHandle->respQ ), &( respHandle->link ) );
+    returnCode = IotHttpsClient_Disconnect( connHandle );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_BUSY, returnCode );
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test that we set the connection in the correct state when a disconnect succeeds.
+ */
+TEST( HTTPS_Client_Unit_API, DisconnectSuccess )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+
+    /* Test a successful disconnect when there are no items in the request queue. */
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.close = _networkDestroySuccess;
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+
+    returnCode = IotHttpsClient_Disconnect( connHandle );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+
+    /* Test a successful disconnect when there is a request in the queue that just finished sending.
+     * This case happens if the disconnect called when the network receive callback task is in progress. */
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.close = _networkDestroySuccess;
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+    respHandle = _getRespHandle( &_respInfo, reqHandle );
+    TEST_ASSERT_NOT_NULL( respHandle );
+    respHandle->reqFinishedSending = true;
+    IotDeQueue_EnqueueTail( &( connHandle->respQ ), &( respHandle->link ) );
+
+    returnCode = IotHttpsClient_Disconnect( connHandle );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test intitializing an HTTP request with various invalid parameters.
+ */
+TEST( HTTPS_Client_Unit_API, InitializeRequestInvalidParameters )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsRequestInfo_t testReqInfo = IOT_HTTPS_REQUEST_INFO_INITIALIZER;
+
+    /* Test NULL pReqHandle. */
+    returnCode = IotHttpsClient_InitializeRequest( NULL, &_reqInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( reqHandle );
+
+    /* Test NULL reqInfo. */
+    returnCode = IotHttpsClient_InitializeRequest( &reqHandle, NULL );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( reqHandle );
+
+    /* Test NULL pReqHandle and NULL reqInfo. */
+    returnCode = IotHttpsClient_InitializeRequest( NULL, NULL );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( reqHandle );
+
+    /* Test the request context does not fit into the user buffer. */
+    memcpy( &testReqInfo, &_reqInfo, sizeof( IotHttpsRequestInfo_t ) );
+    testReqInfo.userBuffer.bufferLen = requestUserBufferMinimumSize - 1;
+    returnCode = IotHttpsClient_InitializeRequest( &reqHandle, &testReqInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INSUFFICIENT_MEMORY, returnCode );
+    TEST_ASSERT_NULL( reqHandle );
+    /* Restore the local IotHttpsRequestInfo_t to use in the next tests. */
+    testReqInfo.userBuffer.bufferLen = _reqInfo.userBuffer.bufferLen;
+
+    /* Test that the first line in the HTTP request message does not fit into the header space of the user buffer. */
+    testReqInfo.pathLen = sizeof( _pReqUserBuffer );
+    returnCode = IotHttpsClient_InitializeRequest( &reqHandle, &testReqInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INSUFFICIENT_MEMORY, returnCode );
+    TEST_ASSERT_NULL( reqHandle );
+    /* Restore the local IotHttpsRequestInfo_t to use in the next tests. */
+    testReqInfo.pathLen = _reqInfo.pathLen;
+
+    /* Test a NULL IotHttpsRequestInfo_t.pHost. */
+    testReqInfo.pHost = NULL;
+    returnCode = IotHttpsClient_InitializeRequest( &reqHandle, &testReqInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( reqHandle );
+    /* Restore the local IotHttpsRequestInfo_t to use in the next tests. */
+    testReqInfo.pHost = _reqInfo.pHost;
+
+    /* Test that the HTTP Host header does not fit into the request. */
+    testReqInfo.hostLen = sizeof( _pReqUserBuffer );
+    returnCode = IotHttpsClient_InitializeRequest( &reqHandle, &testReqInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INSUFFICIENT_MEMORY, returnCode );
+    TEST_ASSERT_NULL( reqHandle );
+    /* Restore the local IotHttpsRequestInfo_t to use in the next tests. */
+    testReqInfo.hostLen = _reqInfo.hostLen;
+
+    /* Test a NULL request user buffer. */
+    testReqInfo.userBuffer.pBuffer = NULL;
+    returnCode = IotHttpsClient_InitializeRequest( &reqHandle, &testReqInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( reqHandle );
+    /* Restore the local IotHttpsRequestInfo_t to use in the next tests. */
+    testReqInfo.userBuffer.pBuffer = _reqInfo.userBuffer.pBuffer;
+
+    /* If IotHttpsRequestInfo_t.isAsync is false, then pSyncInfo must not be NULL. */
+    testReqInfo.isAsync = false;
+    testReqInfo.u.pSyncInfo = NULL;
+    returnCode = IotHttpsClient_InitializeRequest( &reqHandle, &testReqInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( reqHandle );
+    /* Restore the local IotHttpsRequestInfo_t to use in the next tests. */
+    testReqInfo.isAsync = _reqInfo.isAsync;
+    testReqInfo.u.pSyncInfo = _reqInfo.u.pSyncInfo;
+
+    /* If IotHttpsRequestInfo_t.isAsync is true, then u.pAsyncInfo must not be NULL. */
+    testReqInfo.isAsync = true;
+    testReqInfo.u.pAsyncInfo = NULL;
+    returnCode = IotHttpsClient_InitializeRequest( &reqHandle, &testReqInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( reqHandle );
+    /* Restore the local IotHttpsRequestInfo_t to use in the next tests. */
+    testReqInfo.isAsync = _reqInfo.isAsync;
+    testReqInfo.u.pSyncInfo = _reqInfo.u.pSyncInfo;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Verify that the intialized request is in the standard HTTP format expected in the user buffer header space.
+ */
+TEST( HTTPS_Client_Unit_API, InitializeRequestFormatCheck )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    char * pLocation = NULL;
+    int strncmpResult = -1;
+    char * pSavedPath = NULL;
+
+    /* Initialize the request using the statically defined configurations. */
+    returnCode = IotHttpsClient_InitializeRequest( &reqHandle, &_reqInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Check that the HTTP method is correct at the start of the header buffer space. */
+    strncmpResult = strncmp( ( char * ) ( reqHandle->pHeaders ), ( char * ) ( _pHttpsMethodStrings[ _reqInfo.method ] ), strlen( _pHttpsMethodStrings[ _reqInfo.method ] ) );
+    TEST_ASSERT_EQUAL( 0, strncmpResult );
+
+    /* Check the request first line in the header buffer space. */
+    pLocation = strstr( ( char * ) ( reqHandle->pHeaders ), HTTPS_TEST_REQUEST_LINE_WITHOUT_METHOD );
+    TEST_ASSERT_NOT_NULL( pLocation );
+
+    /* Check the User-Agent header line. */
+    pLocation = strstr( ( char * ) ( reqHandle->pHeaders ), HTTPS_TEST_USER_AGENT_HEADER_LINE );
+    TEST_ASSERT_NOT_NULL( pLocation );
+
+    /* Check the Host header line. */
+    pLocation = strstr( ( char * ) ( reqHandle->pHeaders ), HTTPS_TEST_HOST_HEADER_LINE );
+    TEST_ASSERT_NOT_NULL( pLocation );
+
+    /* Check that for a NULL IotHttpsRequestInfo_t.pPath, we insert a "/" automatically. */
+    pSavedPath = ( char * ) ( _reqInfo.pPath );
+    _reqInfo.pPath = NULL;
+    returnCode = IotHttpsClient_InitializeRequest( &reqHandle, &_reqInfo );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+    pLocation = strstr( ( char * ) ( reqHandle->pHeaders ), HTTPS_TEST_REQUEST_LINE_WITHOUT_PATH_WITHOUT_METHOD );
+    TEST_ASSERT_NOT_NULL( pLocation );
+    /* Restore the IotHttpsRequestInfo_t.pPath for other tests. */
+    _reqInfo.pPath = pSavedPath;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test IotHttpsClient_AddHeader() with various invalid parameters.
+ */
+TEST( HTTPS_Client_Unit_API, AddHeaderInvalidParameters )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    char * pTestName = "Accept";
+    char * pTestValue = "text";
+    char * pTestContentLengthValueStr = "0";
+    uint32_t testValueLen = strlen( pTestValue );
+    uint32_t testNameLen = strlen( pTestName );
+
+    /* Get a valid request handle with some header buffer space. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Test parameter reqHandle is NULL. */
+    returnCode = IotHttpsClient_AddHeader( NULL, pTestName, testNameLen, pTestValue, testValueLen );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test parameter pTestName is NULL. */
+    returnCode = IotHttpsClient_AddHeader( reqHandle, NULL, testNameLen, pTestValue, testValueLen );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test parameter pTestValue is NULL. */
+    returnCode = IotHttpsClient_AddHeader( reqHandle, pTestName, testNameLen, NULL, testValueLen );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test all pointer parameters are NULL. */
+    returnCode = IotHttpsClient_AddHeader( NULL, NULL, testNameLen, NULL, testValueLen );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test adding auto-generated headers. */
+    returnCode = IotHttpsClient_AddHeader( reqHandle, HTTPS_USER_AGENT_HEADER, FAST_MACRO_STRLEN( HTTPS_USER_AGENT_HEADER ), IOT_HTTPS_USER_AGENT, FAST_MACRO_STRLEN( IOT_HTTPS_USER_AGENT ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    returnCode = IotHttpsClient_AddHeader( reqHandle, HTTPS_HOST_HEADER, FAST_MACRO_STRLEN( HTTPS_HOST_HEADER ), HTTPS_TEST_ADDRESS, FAST_MACRO_STRLEN( HTTPS_TEST_ADDRESS ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    returnCode = IotHttpsClient_AddHeader( reqHandle, HTTPS_CONTENT_LENGTH_HEADER, FAST_MACRO_STRLEN( HTTPS_CONTENT_LENGTH_HEADER ), pTestContentLengthValueStr, FAST_MACRO_STRLEN( pTestContentLengthValueStr ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    returnCode = IotHttpsClient_AddHeader( reqHandle, HTTPS_CONNECTION_HEADER, FAST_MACRO_STRLEN( HTTPS_CONNECTION_HEADER ), HTTPS_CONNECTION_KEEP_ALIVE_HEADER_VALUE, FAST_MACRO_STRLEN( HTTPS_CONNECTION_KEEP_ALIVE_HEADER_VALUE ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test The length of the resulting header line exceeding the header buffer space. */
+    returnCode = IotHttpsClient_AddHeader( reqHandle, pTestName, testNameLen, pTestValue, sizeof( _pReqUserBuffer ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INSUFFICIENT_MEMORY, returnCode );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Add a header to the HTTP request and verify the format is correct.
+ */
+TEST( HTTPS_Client_Unit_API, AddHeaderFormatCheck )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    char * pTestName = "Accept";
+    char * pTestValue = "text";
+    char * pTestHeaderLine = "Accept: text\r\n";
+    uint32_t testNameLen = strlen( pTestName );
+    uint32_t testValueLen = strlen( pTestValue );
+    char * pLocation = NULL;
+    uint8_t * headersCurBefore = NULL;
+
+    /* Get a valid request handle with some header buffer space. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+    headersCurBefore = reqHandle->pHeadersCur;
+
+    /* Write the test name and value and verify it was written correctly. */
+    returnCode = IotHttpsClient_AddHeader( reqHandle, pTestName, testNameLen, pTestValue, testValueLen );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    pLocation = strstr( ( char * ) ( reqHandle->pHeaders ), pTestHeaderLine );
+    TEST_ASSERT_NOT_NULL( pLocation );
+    /* Check that the internal headersCur got incremented. */
+    TEST_ASSERT_GREATER_THAN( headersCurBefore, reqHandle->pHeadersCur );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Add multiple headers to the header buffer space in the request.
+ */
+TEST( HTTPS_Client_Unit_API, AddHeaderMultipleHeaders )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+
+    /* Intead of iterating in a loop, all the dummy headers are declared immediately because in the unit testing
+     * infrastructure and workflow the number of repetitions is typically not changed from the original.  */
+    char * pHeader0 = "header0";
+    char * pHeader1 = "header1";
+    char * pHeader2 = "header2";
+    char * pValue0 = "value0";
+    char * pValue1 = "value1";
+    char * pValue2 = "value2";
+    char * pExpectedHeaderLines =
+        "header0: value0\r\n"
+        "header1: value1\r\n"
+        "header2: value2\r\n";
+    char * pLocation = NULL;
+
+    /* Get a valid request handle with some header buffer space. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    returnCode = IotHttpsClient_AddHeader( reqHandle, pHeader0, strlen( pHeader0 ), pValue0, strlen( pValue0 ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    returnCode = IotHttpsClient_AddHeader( reqHandle, pHeader1, strlen( pHeader1 ), pValue1, strlen( pValue1 ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    returnCode = IotHttpsClient_AddHeader( reqHandle, pHeader2, strlen( pHeader2 ), pValue2, strlen( pValue2 ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    pLocation = strstr( ( char * ) ( reqHandle->pHeaders ), pExpectedHeaderLines );
+    TEST_ASSERT_NOT_NULL( pLocation );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test IotHttpsClient_ReadHeader() with various invalid parameters.
+ */
+TEST( HTTPS_Client_Unit_API, ReadHeaderInvalidParameters )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    char valueBuffer[ HTTPS_TEST_VALUE_BUFFER_LENGTH_LARGE_ENOUGH ] = { 0 };
+
+    /* Get valid respHandle to correctly test other parameters as NULL. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+    respHandle = _getRespHandle( &_respInfo, reqHandle );
+    TEST_ASSERT_NOT_NULL( respHandle );
+
+    /* Test a NULL response handle. */
+    returnCode = IotHttpsClient_ReadHeader( NULL, HTTPS_DATE_HEADER, FAST_MACRO_STRLEN( HTTPS_DATE_HEADER ), valueBuffer, sizeof( valueBuffer ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test a NULL header name parameter. */
+    returnCode = IotHttpsClient_ReadHeader( respHandle, NULL, FAST_MACRO_STRLEN( HTTPS_DATE_HEADER ), valueBuffer, sizeof( valueBuffer ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test a NULL header value buffer. */
+    returnCode = IotHttpsClient_ReadHeader( respHandle, HTTPS_DATE_HEADER, FAST_MACRO_STRLEN( HTTPS_DATE_HEADER ), NULL, sizeof( valueBuffer ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test all parameters are NULL. */
+    returnCode = IotHttpsClient_ReadHeader( NULL, NULL, FAST_MACRO_STRLEN( HTTPS_DATE_HEADER ), NULL, sizeof( valueBuffer ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test IotHttpsClient_ReadHeader() with various header search parameters.
+ */
+TEST( HTTPS_Client_Unit_API, ReadHeaderVaryingValues )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    size_t testHeadersLen = HTTPS_TEST_RESPONSE_HEADER_LINES_LENGTH;
+    size_t headersBufferLen = 0;
+    size_t copyLen = 0;
+    char valueBufferLargeEnough[ HTTPS_TEST_VALUE_BUFFER_LENGTH_LARGE_ENOUGH ] = { 0 };
+    char valueBufferTooSmall[ HTTPS_TEST_VALUE_BUFFER_LENGTH_TOO_SMALL ] = { 0 };
+    char * pTestPartialHeadersStart = HTTPS_TEST_RESPONSE_HEADER_LINES;
+    char * pTestPartialHeadersEnd = strstr( pTestPartialHeadersStart, HTTPS_DATE_HEADER ) + strlen( HTTPS_DATE_HEADER );
+    size_t pTestPartialHeadersLen = ( size_t ) ( pTestPartialHeadersEnd - pTestPartialHeadersStart );
+
+    /* Create a response handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+    respHandle = _getRespHandle( &_respInfo, reqHandle );
+    TEST_ASSERT_NOT_NULL( respHandle );
+    headersBufferLen = respHandle->pHeadersEnd - respHandle->pHeadersCur;
+
+    /* Fill in with some header data. */
+    if( testHeadersLen < headersBufferLen )
+    {
+        copyLen = testHeadersLen;
+    }
+    else
+    {
+        copyLen = headersBufferLen;
+    }
+
+    memcpy( respHandle->pHeadersCur, HTTPS_TEST_RESPONSE_HEADER_LINES, copyLen );
+    respHandle->pHeadersCur += copyLen;
+
+    /* Test reading some header values successfully. */
+    returnCode = IotHttpsClient_ReadHeader( respHandle, HTTPS_DATE_HEADER, FAST_MACRO_STRLEN( HTTPS_DATE_HEADER ), valueBufferLargeEnough, sizeof( valueBufferLargeEnough ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    TEST_ASSERT_EQUAL( 0, strncmp( valueBufferLargeEnough, HTTPS_DATE_HEADER_VALUE, FAST_MACRO_STRLEN( HTTPS_DATE_HEADER ) ) );
+    returnCode = IotHttpsClient_ReadHeader( respHandle, HTTPS_ETAG_HEADER, FAST_MACRO_STRLEN( HTTPS_ETAG_HEADER ), valueBufferLargeEnough, sizeof( valueBufferLargeEnough ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    TEST_ASSERT_EQUAL( 0, strncmp( valueBufferLargeEnough, HTTPS_ETAG_HEADER_VALUE, FAST_MACRO_STRLEN( HTTPS_ETAG_HEADER_VALUE ) ) );
+
+    /* Test reading the header, but the length of the name does not match. */
+    returnCode = IotHttpsClient_ReadHeader( respHandle, HTTPS_DATE_HEADER, FAST_MACRO_STRLEN( HTTPS_DATE_HEADER ) + 1, valueBufferLargeEnough, sizeof( valueBufferLargeEnough ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NOT_FOUND, returnCode );
+
+    /* Test reading the header but the value buffer is not large enough. */
+    returnCode = IotHttpsClient_ReadHeader( respHandle, HTTPS_DATE_HEADER, FAST_MACRO_STRLEN( HTTPS_DATE_HEADER ), valueBufferTooSmall, sizeof( valueBufferTooSmall ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INSUFFICIENT_MEMORY, returnCode );
+    returnCode = IotHttpsClient_ReadHeader( respHandle, HTTPS_ETAG_HEADER, FAST_MACRO_STRLEN( HTTPS_ETAG_HEADER ), valueBufferTooSmall, sizeof( valueBufferTooSmall ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INSUFFICIENT_MEMORY, returnCode );
+
+    /* Test reading a header value that does not exist in the header buffer. */
+    returnCode = IotHttpsClient_ReadHeader( respHandle, HTTPS_NONEXISTENT_HEADER, FAST_MACRO_STRLEN( HTTPS_NONEXISTENT_HEADER ), valueBufferLargeEnough, sizeof( valueBufferLargeEnough ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NOT_FOUND, returnCode );
+
+    /* Test reading a header value with a failing parseFunc. */
+    respHandle->httpParserInfo.parseFunc = _httpParserExecuteFail;
+    returnCode = IotHttpsClient_ReadHeader( respHandle, HTTPS_DATE_HEADER, FAST_MACRO_STRLEN( HTTPS_DATE_HEADER ), valueBufferLargeEnough, sizeof( valueBufferLargeEnough ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_PARSING_ERROR, returnCode );
+
+    /* Test looking for a header value when there are no headers available. */
+    /* Get a fresh response handle. */
+    respHandle = _getRespHandle( &_respInfo, reqHandle );
+    TEST_ASSERT_NOT_NULL( respHandle );
+    returnCode = IotHttpsClient_ReadHeader( respHandle, HTTPS_DATE_HEADER, FAST_MACRO_STRLEN( HTTPS_DATE_HEADER ), valueBufferLargeEnough, sizeof( valueBufferLargeEnough ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NOT_FOUND, returnCode );
+
+    /* Test reading a header when the value is not available. In this test we have a Date header field, but it ends
+     * at that header field. */
+    respHandle = _getRespHandle( &_respInfo, reqHandle );
+    TEST_ASSERT_NOT_NULL( respHandle );
+    memcpy( respHandle->pHeadersCur, pTestPartialHeadersStart, pTestPartialHeadersLen );
+    respHandle->pHeadersCur += pTestPartialHeadersLen;
+    returnCode = IotHttpsClient_ReadHeader( respHandle, HTTPS_DATE_HEADER, FAST_MACRO_STRLEN( HTTPS_DATE_HEADER ), valueBufferLargeEnough, sizeof( valueBufferLargeEnough ) );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NOT_FOUND, returnCode );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test IotHttpsClient_ReadContentLength() with invalid parameters.
+ */
+TEST( HTTPS_Client_Unit_API, ReadContentLengthInvalidParameters )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    uint32_t contentLength = 0;
+
+    /* Get valid respHandle to correctly test other parameters as NULL. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+    respHandle = _getRespHandle( &_respInfo, reqHandle );
+    TEST_ASSERT_NOT_NULL( respHandle );
+
+    /* Test a NULL response handle. */
+    returnCode = IotHttpsClient_ReadContentLength( NULL, &contentLength );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test a NULL contentLength return storage parameter. */
+    returnCode = IotHttpsClient_ReadContentLength( respHandle, NULL );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test that the contentLength is not found on respond handle with an empty header. */
+    respHandle = _getRespHandle( &_respInfo, reqHandle );
+    TEST_ASSERT_NOT_NULL( respHandle );
+    returnCode = IotHttpsClient_ReadContentLength( respHandle, &contentLength );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NOT_FOUND, returnCode );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test a successful read of the Content-Length from the HTTP response.
+ */
+TEST( HTTPS_Client_Unit_API, ReadContentLengthSuccess )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    uint32_t contentLength = 0;
+    size_t headersBufferLen = 0;
+    size_t copyLen = 0;
+
+    /* Create a response handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+    respHandle = _getRespHandle( &_respInfo, reqHandle );
+    TEST_ASSERT_NOT_NULL( respHandle );
+    headersBufferLen = respHandle->pHeadersEnd - respHandle->pHeadersCur;
+
+    /* Fill in with some header data. */
+    if( HTTPS_TEST_RESPONSE_HEADER_LINES_LENGTH < headersBufferLen )
+    {
+        copyLen = HTTPS_TEST_RESPONSE_HEADER_LINES_LENGTH;
+    }
+    else
+    {
+        copyLen = headersBufferLen;
+    }
+
+    memcpy( respHandle->pHeadersCur, HTTPS_TEST_RESPONSE_HEADER_LINES, copyLen );
+    respHandle->pHeadersCur += copyLen;
+
+    returnCode = IotHttpsClient_ReadContentLength( respHandle, &contentLength );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    TEST_ASSERT_EQUAL( HTTPS_CONTENT_LENGTH_VALUE, contentLength );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test a reading the content length when the header does not exist.
+ */
+TEST( HTTPS_Client_Unit_API, ReadContentLengthNotFound )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    uint32_t contentLength = 0;
+    size_t headersBufferLen = 0;
+    size_t copyLen = 0;
+
+    /* Create a response handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+    respHandle = _getRespHandle( &_respInfo, reqHandle );
+    TEST_ASSERT_NOT_NULL( respHandle );
+    headersBufferLen = respHandle->pHeadersEnd - respHandle->pHeadersCur;
+
+    /* Fill in with some header data. */
+    if( HTTPS_TEST_RESPONSE_HEADER_LINES_NO_CONTENT_LENGTH_LENGTH < headersBufferLen )
+    {
+        copyLen = HTTPS_TEST_RESPONSE_HEADER_LINES_NO_CONTENT_LENGTH_LENGTH;
+    }
+    else
+    {
+        copyLen = headersBufferLen;
+    }
+
+    memcpy( respHandle->pHeadersCur, HTTPS_TEST_RESPONSE_HEADER_LINES_NO_CONTENT_LENGTH, copyLen );
+    respHandle->pHeadersCur += copyLen;
+
+    returnCode = IotHttpsClient_ReadContentLength( respHandle, &contentLength );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NOT_FOUND, returnCode );
+    TEST_ASSERT_EQUAL( 0, contentLength );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test IotHttpsClient_ReadResponseStatus() with various invalid parameters.
+ */
+TEST( HTTPS_Client_Unit_API, ReadResponseStatusInvalidParameters )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    uint16_t responseStatus = 0;
+
+    /* Get valid respHandle to correctly test other parameters as NULL. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+    respHandle = _getRespHandle( &_respInfo, reqHandle );
+    TEST_ASSERT_NOT_NULL( respHandle );
+
+    /* Test a NULL response handle. */
+    returnCode = IotHttpsClient_ReadResponseStatus( NULL, &responseStatus );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test a NULL responseStatus return storage parameter. */
+    returnCode = IotHttpsClient_ReadResponseStatus( respHandle, NULL );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test that the contentLength is not found, when it is equal to zero. */
+    respHandle = _getRespHandle( &_respInfo, reqHandle );
+    TEST_ASSERT_NOT_NULL( respHandle );
+    respHandle->status = 0;
+    returnCode = IotHttpsClient_ReadResponseStatus( respHandle, &responseStatus );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NOT_FOUND, returnCode );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test a successful read of the HTTP response status code from an HTTP response message.
+ */
+TEST( HTTPS_Client_Unit_API, ReadResponseStatusSuccess )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    uint16_t responseStatus = 0;
+    uint16_t testValidResponseStatus = ( uint16_t ) IOT_HTTPS_STATUS_OK;
+
+    /* Test that if the content-length of greater than zero is inside of the structure then it is returned
+     * with the API. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+    respHandle = _getRespHandle( &_respInfo, reqHandle );
+    TEST_ASSERT_NOT_NULL( respHandle );
+    respHandle->status = testValidResponseStatus;
+    returnCode = IotHttpsClient_ReadResponseStatus( respHandle, &responseStatus );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    TEST_ASSERT_EQUAL( testValidResponseStatus, responseStatus );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test IotHttpsClient_WriteRequestBody() with various invalid parameters.
+ */
+TEST( HTTPS_Client_Unit_API, WriteRequestBodyInvalidParameters )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    int isCompleteSuccess = 1;
+    int isCompleteUnsupported = 0;
+
+    /* Get a valid request handle to test other items being with proper coverage. */
+    reqHandle = _getReqHandle( &_reqInfo );
+
+    /* Test a NULL request handle parameter. */
+    returnCode = IotHttpsClient_WriteRequestBody( NULL, ( uint8_t * ) HTTPS_TEST_REQUEST_BODY, HTTPS_TEST_REQUEST_BODY_LENGTH, isCompleteSuccess );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test a NULL buf parameter. */
+    returnCode = IotHttpsClient_WriteRequestBody( reqHandle, NULL, HTTPS_TEST_REQUEST_BODY_LENGTH, isCompleteSuccess );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test an unsupported isComplete parameter. */
+    returnCode = IotHttpsClient_WriteRequestBody( reqHandle, ( uint8_t * ) HTTPS_TEST_REQUEST_BODY, HTTPS_TEST_REQUEST_BODY_LENGTH, isCompleteUnsupported );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NOT_SUPPORTED, returnCode );
+
+    /* Test that for a synchronous request the function fails. */
+    _reqInfo.isAsync = false;
+    reqHandle = _getReqHandle( &_reqInfo );
+    returnCode = IotHttpsClient_WriteRequestBody( reqHandle, ( uint8_t * ) HTTPS_TEST_REQUEST_BODY, HTTPS_TEST_REQUEST_BODY_LENGTH, isCompleteSuccess );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    /* Restore the global _reqInfo so other tests can use it. */
+    _reqInfo.isAsync = true;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test a successful call to IotHttpsClient_WriteRequestBody().
+ */
+TEST( HTTPS_Client_Unit_API, WriteRequestBodySuccess )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    int isCompleteSuccess = 1;
+
+    /* Simulate a successful write. */
+    _networkInterface.send = _networkSendSuccess;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* During the asynchronous workflow the connHandle is associated with the request handle
+     * when IotHttpsClient_SendAsync is called. */
+    reqHandle->pHttpsConnection = connHandle;
+
+    /* Test a successful call. */
+    returnCode = IotHttpsClient_WriteRequestBody( reqHandle, ( uint8_t * ) HTTPS_TEST_REQUEST_BODY, HTTPS_TEST_REQUEST_BODY_LENGTH, isCompleteSuccess );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+
+    /* Test that we cannot write twice on the same request handle. */
+    returnCode = IotHttpsClient_WriteRequestBody( reqHandle, ( uint8_t * ) HTTPS_TEST_REQUEST_BODY, HTTPS_TEST_REQUEST_BODY_LENGTH, isCompleteSuccess );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_MESSAGE_FINISHED, returnCode );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test a network send failure in a call to IotHttpsClient_WriteRequestBody().
+ */
+TEST( HTTPS_Client_Unit_API, WriteRequestBodyNetworkSendFailure )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    int isCompleteSuccess = 1;
+
+    /* Simulate a successful write. */
+    _networkInterface.send = _networkSendFail;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* During the asynchronous workflow the connHandle is associated with the request handle
+     * when IotHttpsClient_SendAsync is called. */
+    reqHandle->pHttpsConnection = connHandle;
+
+    /* Test a network send failure on the headers and body. */
+    returnCode = IotHttpsClient_WriteRequestBody( reqHandle, ( uint8_t * ) HTTPS_TEST_REQUEST_BODY, HTTPS_TEST_REQUEST_BODY_LENGTH, isCompleteSuccess );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NETWORK_ERROR, returnCode );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test IotHttpsClient_ReadResponseBody() with NULL parameters.
+ */
+TEST( HTTPS_Client_Unit_API, ReadResponseBodyInvalidParameters )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    uint32_t bodyLength = sizeof( _pRespBodyBuffer );
+
+    /* Get valid response handle to use for subsequent testing. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+    respHandle = _getRespHandle( &_respInfo, reqHandle );
+    TEST_ASSERT_NOT_NULL( respHandle );
+
+    /* Test a NULL response handle. */
+    returnCode = IotHttpsClient_ReadResponseBody( NULL, _pRespBodyBuffer, &bodyLength );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test a NULL body buffer. */
+    returnCode = IotHttpsClient_ReadResponseBody( respHandle, NULL, &bodyLength );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test a NULL length of the body buffer. */
+    returnCode = IotHttpsClient_ReadResponseBody( respHandle, _pRespBodyBuffer, NULL );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test that for a synchronous request the function fails. */
+    respHandle->isAsync = false;
+    returnCode = IotHttpsClient_ReadResponseBody( respHandle, _pRespBodyBuffer, &bodyLength );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test a network error is returned when there is failure to receive on the network.
+ */
+TEST( HTTPS_Client_Unit_API, ReadResponseBodyNetworkReceiveFailure )
+{
+    IotHttpsReturnCode_t returnCode;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    uint32_t bodyLength = sizeof( _pRespBodyBuffer );
+
+    /* Set the network receive function to return a failure. */
+    _networkInterface.receiveUpto = _networkReceiveFail;
+
+    /* Get valid response an connection handles to perform this single operation. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+    respHandle = _getRespHandle( &_respInfo, reqHandle );
+    TEST_ASSERT_NOT_NULL( respHandle );
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+
+    /* The network interface is global and attached to the connHandle. The connHandle
+     * is not referenced in the respHandle until IotHttpsClient_SendAsync(). */
+    respHandle->pHttpsConnection = connHandle;
+
+    returnCode = IotHttpsClient_ReadResponseBody( respHandle, _pRespBodyBuffer, &bodyLength );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NETWORK_ERROR, returnCode );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test that there is a parsing error when there is a failure to parse the data received from the
+ * network.
+ */
+TEST( HTTPS_Client_Unit_API, ReadResponseBodyParsingFailure )
+{
+    IotHttpsReturnCode_t returnCode;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    uint32_t bodyLength = sizeof( _pRespBodyBuffer );
+
+    /* Set the network receive function to return a succeed. */
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+
+    /* Get valid response and connection handles to perform this single operation. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+    respHandle = _getRespHandle( &_respInfo, reqHandle );
+    TEST_ASSERT_NOT_NULL( respHandle );
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+
+    /* The network interface is global and attached to the connHandle. The connHandle
+     * is not referenced in the respHandle until IotHttpsClient_SendAsync(). */
+    respHandle->pHttpsConnection = connHandle;
+
+    /* Replace the parseFunc with one that fails. */
+    respHandle->httpParserInfo.parseFunc = _httpParserExecuteFail;
+
+    /* Generate an ideal case header and body message size just for testing a failure to parse. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+
+    returnCode = IotHttpsClient_ReadResponseBody( respHandle, _pRespBodyBuffer, &bodyLength );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_PARSING_ERROR, returnCode );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test a successful call to IotHttpsClient_ReadResponseBody().
+ */
+TEST( HTTPS_Client_Unit_API, ReadResponseBodySuccess )
+{
+    IotHttpsReturnCode_t returnCode;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    uint32_t bodyLength = sizeof( _pRespBodyBuffer );
+
+    /* Set the network receive function to return a succeed. */
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+
+    /* Get valid response and connection handles to perform this single operation. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+    respHandle = _getRespHandle( &_respInfo, reqHandle );
+    TEST_ASSERT_NOT_NULL( respHandle );
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+
+    /* The network interface is global and attached to the connHandle. The connHandle
+     * is not referenced in the respHandle until IotHttpsClient_SendAsync(). */
+    respHandle->pHttpsConnection = connHandle;
+
+    /* Generate an ideal case header and body message size just for testing a failure to parse. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+
+    returnCode = IotHttpsClient_ReadResponseBody( respHandle, _pRespBodyBuffer, &bodyLength );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+}
diff --git a/libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.c b/libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.c
new file mode 100644
index 000000000..73b96f4d8
--- /dev/null
+++ b/libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.c
@@ -0,0 +1,246 @@
+/*
+ * Amazon FreeRTOS HTTPS Client V1.0.0
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+/**
+ * @file iot_tests_https_common.c
+ * @brief Common definitions for the HTTPS Client unit tests.
+ */
+#include "iot_tests_https_common.h"
+
+/**
+ * @brief The generic response status line and header line information for generating a test HTTP response message header.
+ */
+#define HTTPS_TEST_GENERIC_RESPONSE_STATUS_LINE           "HTTP/1.1 200 OK\r\n"
+#define HTTPS_TEST_GENERIC_RESPONSE_STATUS_LINE_LENGTH    ( sizeof( HTTPS_TEST_GENERIC_RESPONSE_STATUS_LINE ) - 1 )
+#define HTTPS_TEST_GENERIC_HEADER                         "header"
+#define HTTPS_TEST_GENERIC_VALUE                          "value"
+
+/**
+ * @brief The maximum and minimum digits in a uint32_t.
+ *
+ * This is used to size an array holding some generic headers when generating a test HTTP response message.
+ */
+#define MAX_UINT32_DIGITS                                 ( 10 ) /* 2^32 = 4294967296 which is 10 digits. */
+#define MIN_UINT32_DIGITS                                 ( 1 )
+
+/**
+ * @brief the maximum and minimum line lengths of a generic HTTP response header of the form "headerN: valueN\r\n".
+ *
+ * These are needed for sizing arrays holding some intermediate string processing information when generating a test \
+ * HTTP response message.
+ */
+#define MAX_GENERIC_HEADER_LINE_LENGTH       \
+    sizeof( HTTPS_TEST_GENERIC_HEADER ) - 1  \
+    + HTTPS_HEADER_FIELD_SEPARATOR_LENGTH    \
+    + MAX_UINT32_DIGITS                      \
+    + sizeof( HTTPS_TEST_GENERIC_VALUE ) - 1 \
+    + MAX_UINT32_DIGITS                      \
+    + HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH
+#define MIN_GENERIC_HEADER_LINE_LENGTH       \
+    sizeof( HTTPS_TEST_GENERIC_HEADER ) - 1  \
+    + HTTPS_HEADER_FIELD_SEPARATOR_LENGTH    \
+    + MIN_UINT32_DIGITS                      \
+    + sizeof( HTTPS_TEST_GENERIC_VALUE ) - 1 \
+    + MIN_UINT32_DIGITS                      \
+    + HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH
+
+/**
+ * @brief Starting character and maximum letters to increment to generate a test HTTP response message body.
+ */
+#define HTTPS_TEST_GENERIC_BODY_STARTING_CHAR    'a'
+#define NUM_LETTERS_IN_ALPHABET                  ( ( int ) 26 )
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief HTTPS Client connection user buffer to share among the tests.
+ *
+ * This variable is extern to save memory. This is acceptable as the HTTPS Client unit tests run sequentially.
+ * The user buffers are always overwritten each utilizing test, so data left over affecting other tests is not a
+ * concern.
+ */
+uint8_t _pConnUserBuffer[ HTTPS_TEST_CONN_USER_BUFFER_SIZE ] = { 0 };
+
+/**
+ * @brief HTTPS Request user buffer to share among the tests.
+ *
+ * This variable is extern to save memory. This is acceptable as the HTTPS Client unit tests run sequentially.
+ * The user buffers are always overwritten each utilizing test, so data left over affecting other tests is not a
+ * concern.
+ */
+uint8_t _pReqUserBuffer[ HTTPS_TEST_REQ_USER_BUFFER_SIZE ] = { 0 };
+
+/**
+ * @brief HTTPS Response user buffer to share among the tests.
+ *
+ * This variable is extern to save memory. This is acceptable as the HTTPS Client unit tests run sequentially.
+ * The user buffers are always overwritten each utilizing test, so data left over affecting other tests is not a
+ * concern.
+ */
+uint8_t _pRespUserBuffer[ HTTPS_TEST_RESP_USER_BUFFER_SIZE ] = { 0 };
+
+/**
+ * @brief HTTPS Response body buffer to share among the tests.
+ *
+ * This variable is extern to save memory. This is acceptable as the HTTPS Client unit tests run sequentially.
+ * The user buffers are always overwritten each utilizing test, so data left over affecting other tests is not a
+ * concern.
+ */
+uint8_t _pRespBodyBuffer[ HTTPS_TEST_RESP_BODY_BUFFER_SIZE ] = { 0 };
+
+/**
+ * @brief An HTTP response message to share among the tests.
+ *
+ * This variable is extern to save memory. This is acceptable as the HTTPS Client unit tests run sequentially.
+ * The user buffers are always overwritten each utilizing test, so data left over affecting other tests is not a
+ * concern.
+ */
+uint8_t _pRespMessageBuffer[ HTTPS_TEST_RESPONSE_MESSAGE_LENGTH ] = { 0 };
+
+/*-----------------------------------------------------------*/
+
+/* See iot_tests_https_common.c for a description of this function. */
+void _generateHttpResponseMessage( int headerLength,
+                                   int bodyLength )
+{
+    /* The content length header is needed so that http-parser will give the body length back to the application
+     * correctly during it's callback. +1 for the NULL terminator generated in snprintf. the NULL terminator is not
+     * included in the HTTP response message. */
+    char contentLengthHeaderLine[ HTTPS_MAX_CONTENT_LENGTH_LINE_LENGTH + 1 ] = { 0 };
+    int index = 0;
+    int nextCopyIndex = 0;
+    int currentHeaderLineLength = 0;
+    int headerSpaceLeft = headerLength - HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH - HTTPS_TEST_GENERIC_RESPONSE_STATUS_LINE_LENGTH;
+    /* +1 for the NULL terminator for snprintf. This is not included in the final set of headers. */
+    char currentHeaderLine[ MAX_GENERIC_HEADER_LINE_LENGTH + 1 ] = { 0 };
+
+    TEST_ASSERT_LESS_THAN_MESSAGE( HTTPS_TEST_RESPONSE_MESSAGE_LENGTH,
+                                   headerLength + bodyLength,
+                                   "Tried to generate a test HTTP response message into a buffer too small." );
+
+    /* We want the headerLength desired to be at least the size of:
+     * "HTTP/1.1 200 OK\r\nContent-Length: <bodyLengthStr>\r\nheader0: value0\r\n\r\n".
+     * This is in order to generate meaningful test data. */
+    TEST_ASSERT_GREATER_THAN_MESSAGE( HTTPS_TEST_GENERIC_RESPONSE_STATUS_LINE_LENGTH + \
+                                      HTTPS_MAX_CONTENT_LENGTH_LINE_LENGTH +           \
+                                      MIN_GENERIC_HEADER_LINE_LENGTH +                 \
+                                      HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH,
+                                      headerLength,
+                                      "Tried to generate a test HTTP response message with specifying too small a desired headerLength." );
+
+    /* Generate the HTTP response status line. This is a required HTTP response message line. */
+    memcpy( &( _pRespMessageBuffer[ nextCopyIndex ] ), HTTPS_TEST_GENERIC_RESPONSE_STATUS_LINE, HTTPS_TEST_GENERIC_RESPONSE_STATUS_LINE_LENGTH );
+    nextCopyIndex += HTTPS_TEST_GENERIC_RESPONSE_STATUS_LINE_LENGTH;
+
+    /* Generate the Content-Length header line. This is needed so that during testing we reach the
+     * onMessageCompleteCallback() during parsing. */
+    currentHeaderLineLength = snprintf( contentLengthHeaderLine,
+                                        sizeof( contentLengthHeaderLine ),
+                                        "%s%s%d%s",
+                                        HTTPS_CONTENT_LENGTH_HEADER,
+                                        HTTPS_HEADER_FIELD_SEPARATOR,
+                                        bodyLength,
+                                        HTTPS_END_OF_HEADER_LINES_INDICATOR );
+    memcpy( &( _pRespMessageBuffer[ nextCopyIndex ] ), contentLengthHeaderLine, currentHeaderLineLength );
+    nextCopyIndex += currentHeaderLineLength;
+    headerSpaceLeft -= currentHeaderLineLength;
+
+    /* Generate the header lines */
+    while( headerSpaceLeft > 0 )
+    {
+        /* currentHeaderLineLength will equal the amount of characters written without the NULL terminator. */
+        currentHeaderLineLength = snprintf( currentHeaderLine,
+                                            sizeof( currentHeaderLine ),
+                                            "%s%d%s%s%d%s",
+                                            HTTPS_TEST_GENERIC_HEADER,
+                                            index,
+                                            HTTPS_HEADER_FIELD_SEPARATOR,
+                                            HTTPS_TEST_GENERIC_VALUE,
+                                            index,
+                                            HTTPS_END_OF_HEADER_LINES_INDICATOR );
+
+        /* We need to check if the current header line will fit into the header space left.
+         * Given that the input headerLength desired MUST be less than the length of
+         * "HTTP/1.1 200 OK\r\nContent-Length: <bodyLengthStr>\r\nheader0: value0\r\n\r\n", we
+         * are guaranteed to have written "HTTP/1.1 200 OK\r\nheader0: value0\r\n" before we reach this if case. */
+        if( headerSpaceLeft < currentHeaderLineLength )
+        {
+            /* We want to overwite the last header value with filler data to reach our desired headerLength. We do this
+             * by writing data at the end of the last header value. Which means we need to go back before the last
+             * "\r\n" written. */
+            nextCopyIndex -= HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH;
+            memset( &( _pRespMessageBuffer[ nextCopyIndex ] ), '0', headerSpaceLeft );
+            nextCopyIndex += headerSpaceLeft;
+            memcpy( &( _pRespMessageBuffer[ nextCopyIndex ] ),
+                    HTTPS_END_OF_HEADER_LINES_INDICATOR,
+                    HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH );
+            nextCopyIndex += HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH;
+            headerSpaceLeft = 0;
+        }
+        else
+        {
+            memcpy( &( _pRespMessageBuffer[ nextCopyIndex ] ), currentHeaderLine, currentHeaderLineLength );
+            index++;
+            nextCopyIndex += currentHeaderLineLength;
+            headerSpaceLeft -= currentHeaderLineLength;
+        }
+    }
+
+    /* Add the last header indicator. */
+    memcpy( &( _pRespMessageBuffer[ nextCopyIndex ] ),
+            HTTPS_END_OF_HEADER_LINES_INDICATOR,
+            HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH );
+    nextCopyIndex += HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH;
+
+    /* Generate the body. Write 'a' through 'z' repeating so that proper copying can be verified. */
+    for( index = 0; index < bodyLength; index++ )
+    {
+        _pRespMessageBuffer[ nextCopyIndex ] = HTTPS_TEST_GENERIC_BODY_STARTING_CHAR + ( index % NUM_LETTERS_IN_ALPHABET ); /* Is modulus too expensive for MCUs? */
+        nextCopyIndex++;
+    }
+
+    /* Set this to mimic reading from the network. */
+    _nextRespMessageBufferByteToReceive = 0;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test verify the response body in pBody up to bodyLength.
+ *
+ * This will verify that 'a' through 'z' (then repeated) are written properly.
+ */
+void _verifyHttpResponseBody( int bodyLength,
+                              uint8_t * pBody,
+                              int startIndex )
+{
+    int curIndex = 0;
+    int endIndex = bodyLength;
+
+    for( curIndex = 0; curIndex < endIndex; curIndex++ )
+    {
+        TEST_ASSERT_EQUAL( HTTPS_TEST_GENERIC_BODY_STARTING_CHAR + ( ( startIndex + curIndex ) % NUM_LETTERS_IN_ALPHABET ), pBody[ curIndex ] );
+    }
+}
diff --git a/libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.h b/libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.h
new file mode 100644
index 000000000..fa8ce169c
--- /dev/null
+++ b/libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.h
@@ -0,0 +1,413 @@
+/*
+ * Amazon FreeRTOS HTTPS Client V1.0.0
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+/**
+ * @file iot_tests_https_common.h
+ * @brief Common definitions for the HTTPS Client unit tests.
+ */
+#ifndef IOT_TESTS_HTTPS_COMMON_H_
+#define IOT_TESTS_HTTPS_COMMON_H_
+
+/* The config header is always included first. */
+#include "iot_config.h"
+
+/* C standard includes. */
+#include <string.h>
+
+/* SDK initialization include. */
+#include "iot_init.h"
+
+/* HTTPS Client internal include. */
+#include "private/iot_https_internal.h"
+
+/* Test access include. */
+#include "iot_test_access_https.h"
+
+/* Credential includes. */
+#include "aws_clientcredential.h"
+#include "aws_clientcredential_keys.h"
+
+/* Test framework includes. */
+#include "unity_fixture.h"
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test TLS TCP port.
+ */
+#define HTTPS_TEST_PORT             ( ( uint16_t ) 443 )
+
+/**
+ * @brief Test address to share among the tests.
+ */
+#define HTTPS_TEST_ADDRESS          "www.amazon.com "
+
+/**
+ * @brief Test path to share among the tests.
+ */
+#define HTTPS_TEST_PATH             "/path.txt"
+
+/**
+ * @brief Test HTTP/1.1 protocol to share among the tests.
+ */
+#define HTTPS_TEST_ALPN_PROTOCOL    "http/1.1"
+
+/**
+ * @brief Baltimore Cybertrust root CA to share among the tests.
+ */
+#define HTTPS_TEST_ROOT_CA                                               \
+    "-----BEGIN CERTIFICATE-----\n"                                      \
+    "MIIDdzCCAl+gAwIBAgIEAgAAuTANBgkqhkiG9w0BAQUFADBaMQswCQYDVQQGEwJJ\n" \
+    "RTESMBAGA1UEChMJQmFsdGltb3JlMRMwEQYDVQQLEwpDeWJlclRydXN0MSIwIAYD\n" \
+    "VQQDExlCYWx0aW1vcmUgQ3liZXJUcnVzdCBSb290MB4XDTAwMDUxMjE4NDYwMFoX\n" \
+    "DTI1MDUxMjIzNTkwMFowWjELMAkGA1UEBhMCSUUxEjAQBgNVBAoTCUJhbHRpbW9y\n" \
+    "ZTETMBEGA1UECxMKQ3liZXJUcnVzdDEiMCAGA1UEAxMZQmFsdGltb3JlIEN5YmVy\n" \
+    "VHJ1c3QgUm9vdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKMEuyKr\n" \
+    "mD1X6CZymrV51Cni4eiVgLGw41uOKymaZN+hXe2wCQVt2yguzmKiYv60iNoS6zjr\n" \
+    "IZ3AQSsBUnuId9Mcj8e6uYi1agnnc+gRQKfRzMpijS3ljwumUNKoUMMo6vWrJYeK\n" \
+    "mpYcqWe4PwzV9/lSEy/CG9VwcPCPwBLKBsua4dnKM3p31vjsufFoREJIE9LAwqSu\n" \
+    "XmD+tqYF/LTdB1kC1FkYmGP1pWPgkAx9XbIGevOF6uvUA65ehD5f/xXtabz5OTZy\n" \
+    "dc93Uk3zyZAsuT3lySNTPx8kmCFcB5kpvcY67Oduhjprl3RjM71oGDHweI12v/ye\n" \
+    "jl0qhqdNkNwnGjkCAwEAAaNFMEMwHQYDVR0OBBYEFOWdWTCCR1jMrPoIVDaGezq1\n" \
+    "BE3wMBIGA1UdEwEB/wQIMAYBAf8CAQMwDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3\n" \
+    "DQEBBQUAA4IBAQCFDF2O5G9RaEIFoN27TyclhAO992T9Ldcw46QQF+vaKSm2eT92\n" \
+    "9hkTI7gQCvlYpNRhcL0EYWoSihfVCr3FvDB81ukMJY2GQE/szKN+OMY3EU/t3Wgx\n" \
+    "jkzSswF07r51XgdIGn9w/xZchMB5hbgF/X++ZRGjD8ACtPhSNzkE1akxehi/oCr0\n" \
+    "Epn3o0WC4zxe9Z2etciefC7IpJ5OCBRLbf1wbWsaY71k5h+3zvDyny67G7fyUIhz\n" \
+    "ksLi4xaNmjICq44Y3ekQEe5+NauQrz4wlHrQMz2nZQ/1/I6eYs9HRCwBXbsdtTLS\n" \
+    "R9I4LtD+gdwyah617jzV/OeBHRnDJELqYzmp\n"                             \
+    "-----END CERTIFICATE-----\n"
+
+
+/**
+ * @brief The size of the connection user buffer to use among the tests.
+ */
+#define HTTPS_TEST_CONN_USER_BUFFER_SIZE        ( sizeof( _httpsConnection_t ) )
+
+/**
+ * @brief The size of the request user buffer to use among the tests.
+ */
+#define HTTPS_TEST_REQ_USER_BUFFER_SIZE         ( 512 )
+
+/**
+ * @brief The size of the response user buffer to use among the tests.
+ *
+ * The header space comes after the response context, hence the addition to the response context.
+ */
+#define HTTPS_TEST_RESP_USER_BUFFER_SIZE        ( sizeof( _httpsResponse_t ) + 128 )
+
+/**
+ * @brief The size of the response body buffer to use among the tests.
+ */
+#define HTTPS_TEST_RESP_BODY_BUFFER_SIZE        ( 256 )
+
+/**
+ * @brief The maximum length of the HTTP response message buffer shared among the test.
+ *
+ * The buffer of this length is used to test a few scenarios where the headers or body are found in either the header
+ * buffer or body buffer and need to be copied over appropriately.
+ */
+#define HTTPS_TEST_RESPONSE_MESSAGE_LENGTH      ( 1024 )
+
+/**
+ * @brief The length of the response header buffer shared among the tests.
+ */
+#define HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH    ( HTTPS_TEST_RESP_USER_BUFFER_SIZE - sizeof( _httpsResponse_t ) )
+
+/**
+ * @brief Test HTTP request body to share among the tests.
+ */
+#define HTTPS_TEST_REQUEST_BODY                                                                                      \
+    "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore " \
+    "magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo" \
+    " consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla paria" \
+    "tur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est lab" \
+    "orum."
+#define HTTPS_TEST_REQUEST_BODY_LENGTH    ( sizeof( HTTPS_TEST_REQUEST_BODY ) - 1 )
+
+/**
+ * @brief A small test HTTPS response to share among the tests.
+ */
+#define HTTPS_TEST_SMALL_RESPONSE                               \
+    "HTTP/1.1 200 OK\r\nheader0: value0\r\nheader1: value1\r\n" \
+    "header2: value2 value2a\r\nContent-Length: 26\r\n\r\nabcdefghijklmnopqrstuvwxyz"
+#define HTTPS_TEST_SMALL_RESPONSE_LENGTH    ( sizeof( HTTPS_TEST_SMALL_RESPONSE ) - 1 )
+
+/**
+ * @brief Test HTTP chunked response message to share among the tests.
+ */
+#define HTTPS_TEST_CHUNKED_RESPONSE  \
+    "HTTP/1.1 403 Forbidden\r\n"     \
+    "header0: value0\r\n"            \
+    "header1: value1\r\n"            \
+    "Transfer-Encoding: chunked\r\n" \
+    "\r\n"                           \
+    "b\r\n"                          \
+    "abcdefghijk\r\n"                \
+    "c\r\n"                          \
+    "lmnopqrstuvw\r\n"               \
+    "3\r\n"                          \
+    "xyz\r\n"                        \
+    "0\r\n"                          \
+    "\r\n"
+#define HTTPS_TEST_CHUNKED_RESPONSE_BODY_LENGTH    ( 0xB + 0xC + 3 )
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief HTTPS Client connection user buffer to share among the tests.
+ *
+ * This variable is extern to save memory. This is acceptable as the HTTPS Client unit tests run sequentially.
+ * The user buffers are always overwritten each utilizing test, so data left over affecting other tests is not a
+ * concern.
+ */
+extern uint8_t _pConnUserBuffer[ HTTPS_TEST_CONN_USER_BUFFER_SIZE ];
+
+/**
+ * @brief HTTPS Response body buffer to share among the tests.
+ *
+ * This variable is extern to save memory. This is acceptable as the HTTPS Client unit tests run sequentially.
+ * The user buffers are always overwritten each utilizing test, so data left over affecting other tests is not a
+ * concern.
+ */
+extern uint8_t _pRespBodyBuffer[ HTTPS_TEST_RESP_BODY_BUFFER_SIZE ];
+
+/**
+ * @brief An HTTP response message to share among the tests.
+ *
+ * This variable is extern to save memory. This is acceptable as the HTTPS Client unit tests run sequentially.
+ * The user buffers are always overwritten each utilizing test, so data left over affecting other tests is not a
+ * concern.
+ */
+extern uint8_t _pRespMessageBuffer[ HTTPS_TEST_RESPONSE_MESSAGE_LENGTH ];
+
+/**
+ * @brief HTTPS Request user buffer to share among the tests.
+ *
+ * This variable is extern to save memory. This is acceptable as the HTTPS Client unit tests run sequentially.
+ * The user buffers are always overwritten each utilizing test, so data left over affecting other tests is not a
+ * concern.
+ */
+extern uint8_t _pReqUserBuffer[ HTTPS_TEST_REQ_USER_BUFFER_SIZE ];
+
+/**
+ * @brief HTTPS Response user buffer to share among the tests.
+ *
+ * This variable is extern to save memory. This is acceptable as the HTTPS Client unit tests run sequentially.
+ * The user buffers are always overwritten each utilizing test, so data left over affecting other tests is not a
+ * concern.
+ */
+extern uint8_t _pRespUserBuffer[ HTTPS_TEST_RESP_USER_BUFFER_SIZE ];
+
+/**
+ * @brief The current place in _pRespMessageBuffer to receive the next byte.
+ *
+ * This is used to mimic receiving the HTTP response message from the network during testing.
+ */
+static uint32_t _nextRespMessageBufferByteToReceive = 0;
+
+/**
+ * @brief An #IotNetworkInterface_t to share among the tests.
+ *
+ */
+static IotNetworkInterface_t _networkInterface = { 0 };
+
+/**
+ * @brief A IotHttpsConnectionInfo_t to share among the tests.
+ */
+static IotHttpsConnectionInfo_t _connInfo = {
+    .pAddress             = HTTPS_TEST_ADDRESS,
+    .addressLen           = sizeof( HTTPS_TEST_ADDRESS ) - 1,
+    .port                 = HTTPS_TEST_PORT,
+    .flags                = 0,
+    .pCaCert              = HTTPS_TEST_ROOT_CA,
+    .caCertLen            = sizeof( HTTPS_TEST_ROOT_CA ),
+    .userBuffer.pBuffer   = _pConnUserBuffer,
+    .userBuffer.bufferLen = sizeof( _pConnUserBuffer ),
+    .pClientCert          = keyCLIENT_CERTIFICATE_PEM,
+    .clientCertLen        = sizeof( keyCLIENT_CERTIFICATE_PEM ),
+    .pPrivateKey          = keyCLIENT_PRIVATE_KEY_PEM,
+    .privateKeyLen        = sizeof( keyCLIENT_PRIVATE_KEY_PEM ),
+    .pAlpnProtocols       = HTTPS_TEST_ALPN_PROTOCOL,
+    .alpnProtocolsLen     = sizeof( HTTPS_TEST_ALPN_PROTOCOL ),
+    .pNetworkInterface    = &_networkInterface
+};
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network Abstraction create function that succeeds.
+ */
+static inline IotNetworkError_t _networkCreateSuccess( void * pConnectionInfo,
+                                                       void * pCredentialInfo,
+                                                       void ** pConnection )
+{
+    ( void ) pConnectionInfo;
+    ( void ) pCredentialInfo;
+    ( void ) pConnection;
+    return IOT_NETWORK_SUCCESS;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network Abstraction setReceiveCallback that succeeds.
+ */
+static inline IotNetworkError_t _setReceiveCallbackSuccess( void * pConnection,
+                                                            IotNetworkReceiveCallback_t receiveCallback,
+                                                            void * pContext )
+{
+    ( void ) pConnection;
+    ( void ) receiveCallback;
+    ( void ) pContext;
+    return IOT_NETWORK_SUCCESS;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Get a valid connected state intialized connection handle using _pConnUserBuffer and _connInfo.
+ */
+static inline IotHttpsConnectionHandle_t _getConnHandle( void )
+{
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+
+    _networkInterface.create = _networkCreateSuccess;
+    _networkInterface.setReceiveCallback = _setReceiveCallbackSuccess;
+    IotHttpsClient_Connect( &connHandle, &_connInfo );
+    return connHandle;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Get a valid request handle with the input pReqInfo.
+ */
+static inline IotHttpsRequestHandle_t _getReqHandle( IotHttpsRequestInfo_t * pReqInfo )
+{
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+
+    IotHttpsClient_InitializeRequest( &reqHandle, pReqInfo );
+    return reqHandle;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Get a valid response handle using _pRespUserBuffer, and respInfoGET.
+ */
+static inline IotHttpsResponseHandle_t _getRespHandle( IotHttpsResponseInfo_t * pRespInfo,
+                                                       IotHttpsRequestHandle_t reqHandle )
+{
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+
+    IotTestHttps_initializeResponse( &respHandle, pRespInfo, reqHandle );
+    return respHandle;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network Abstraction close function that succeeds.
+ */
+static inline IotNetworkError_t _networkCloseSuccess( void * pConnection )
+{
+    ( void ) pConnection;
+    /* When the network closes there should be no data on the socket. */
+    _nextRespMessageBufferByteToReceive = 0;
+    ( void ) memset( _pRespMessageBuffer, 0x00, sizeof( _pRespMessageBuffer ) );
+    return IOT_NETWORK_SUCCESS;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network abstraction destroy function that succeeds.
+ */
+static inline IotNetworkError_t _networkDestroySuccess( void * pConnection )
+{
+    ( void ) pConnection;
+    return IOT_NETWORK_SUCCESS;
+}
+
+
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network abstraction receive function that succeeds.
+ */
+static inline size_t _networkReceiveSuccess( void * pConnection,
+                                             uint8_t * pBuffer,
+                                             size_t bytesRequested )
+{
+    size_t responseMessageLengthLeft = strlen( ( char * ) _pRespMessageBuffer ) - _nextRespMessageBufferByteToReceive;
+    size_t copyLen = 0;
+
+    ( void ) pConnection;
+    ( void ) pBuffer;
+    ( void ) bytesRequested;
+
+    if( responseMessageLengthLeft < bytesRequested )
+    {
+        copyLen = responseMessageLengthLeft;
+    }
+    else
+    {
+        copyLen = bytesRequested;
+    }
+
+    memcpy( pBuffer, &( _pRespMessageBuffer[ _nextRespMessageBufferByteToReceive ] ), copyLen );
+    _nextRespMessageBufferByteToReceive += copyLen;
+
+    return copyLen;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Generate an test HTTP response message with the specified header length and the specified body length.
+ *
+ * This generates the test HTTP response message into _pRespMessageBuffer.
+ * _pRespMessageBuffer must be zeroed out before calling this routine.
+ * The length of _pRespMessageBuffer must not exceed headerLength + bodyLength.
+ * The headerLength is the length of the raw HTTP headers includes delimiters like ": " and \r\n.
+ * The length of headerLength must be greater than:
+ *      "HTTP/1.1 200 OK\r\nContent-Length: <bodyLengthStr>\r\nheader0: value0\r\n\r\n"
+ * in order to generate meaningful header data.
+ */
+void _generateHttpResponseMessage( int headerLength,
+                                   int bodyLength );
+
+/**
+ * @brief Test verify the response body in pBody up to bodyLength.
+ *
+ * This will verify that 'a' through 'z' (then repeated) are written properly.
+ */
+void _verifyHttpResponseBody( int bodyLength,
+                              uint8_t * pBody,
+                              int startIndex );
+
+#endif /* IOT_TESTS_HTTPS_COMMON_H_ */
diff --git a/libraries/c_sdk/standard/https/test/unit/iot_tests_https_sync.c b/libraries/c_sdk/standard/https/test/unit/iot_tests_https_sync.c
new file mode 100644
index 000000000..7c7839ac5
--- /dev/null
+++ b/libraries/c_sdk/standard/https/test/unit/iot_tests_https_sync.c
@@ -0,0 +1,1461 @@
+/*
+ * Amazon FreeRTOS HTTPS Client V1.0.0
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+/**
+ * @file iot_tests_https_sync.c
+ * @brief Tests for IotHttpsClient_SendSync() in iot_https_client.h.
+ */
+
+#include "iot_tests_https_common.h"
+#include "platform/iot_clock.h"
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Timeout for IotHttpsClient_SendSync() for all tests.
+ */
+#define HTTPS_TEST_SYNC_TIMEOUT_MS                         ( ( uint32_t ) 30000 )
+
+/**
+ * @brief Wait time before the network receive callback is invoked.
+ *
+ * This wait time is to mimic not only response being received on the network, but also needs to incorporate the time
+ * it takes to complete sending the request.
+ */
+#define HTTPS_TEST_NETWORK_RECEIVE_CALLBACK_WAIT_MS        ( ( uint32_t ) 300 )
+
+/**
+ * @brief Definitions for part of the small HTTP test response.
+ *
+ * Theser are used to verify behavior when the header buffer ends with just a part of the HTTP response headers.
+ */
+#define HTTPS_TEST_SMALL_RESPONSE_UP_TO_CARRIAGE_RETURN    "HTTP/1.1 200 OK\r\nheader0: value0\r\nheader1: value1\r"
+#define HTTPS_TEST_SMALL_RESPONSE_UP_TO_NEWLINE            "HTTP/1.1 200 OK\r\nheader0: value0\r\nheader1: value1\r\n"
+#define HTTPS_TEST_SMALL_RESPONSE_UP_TO_COLON              "HTTP/1.1 200 OK\r\nheader0: value0\r\nheader1:"
+#define HTTPS_TEST_SMALL_RESPONSE_UP_TO_SPACE              "HTTP/1.1 200 OK\r\nheader0: value0\r\nheader1: "
+#define HTTPS_TEST_SMALL_RESPONSE_UP_TO_SPACE_IN_BETWEEN_VALUE \
+    "HTTP/1.1 200 OK\r\nheader0: value0\r\nheader1: value1\r\nheader2: value2 "
+#define HTTPS_TEST_HEADER1                                 "header1"
+#define HTTPS_TEST_HEADER1_PLUS_COLON                      "header1:"
+#define HTTPS_TEST_HEADER1_PLUS_SPACE                      "header1: "
+#define HTTPS_TEST_HEADER2                                 "header2"
+#define HTTPS_TEST_HEADER_VALUE1                           "value1"
+#define HTTPS_TEST_HEADER_VALUE2_PLUS_SPACE                "value2 "
+#define HTTPS_TEST_HEADER_VALUE2_VALUE2A                   "value2 value2a"
+#define HTTPS_TEST_HEADER_VALUE1_PLUS_CARRIAGE_RETURN      "value1\r"
+#define HTTPS_TEST_HEADER_VALUE1_PLUS_NEWLINE              "value1\r\n"
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief The connection handle that is needed by tests that are testing a workflow that involves receiving data on the
+ * network.
+ *
+ * HTTP tests run sequentially, so there is no race condition here.
+ */
+static IotHttpsConnectionHandle_t _receiveCallbackConnHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+
+/**
+ * @brief Flag indicating that the _invokeNetworkReceiveCallback task was already created.
+ *
+ * This is reset to false before each test. This is set during tests that are testing a workflow that involes
+ * receiving data on the network.
+ *
+ * We do not want to create two tasks that invoke the network receive callback. That is incorrect behavior of the
+ * network receive callback.
+ *
+ * HTTP tests run sequentially, so there is no race condition here.
+ *
+ * This is used for tests sending and receiving one response.
+ */
+static bool _alreadyCreatedReceiveCallbackThread = false;
+
+/**
+ * @brief The request handle that is currently being serviced in the current tests network receive callback.
+ *
+ * This is needed to replace the parseFunc, in the corresponding response, with a unit test mock.
+ * This is needed to check if the network receive or network send buffer is the start of the header or the body buffers
+ * to get proper failure coverage.
+ * This is needed to check if the network receive buffer is the start of the header buffer, so that we can receive
+ * part of the response.
+ */
+static IotHttpsRequestHandle_t _currentlySendingRequestHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+
+/**
+ * @brief A IotHttpsSyncInfo_t for requests and response to share among the tests.
+ *
+ * Even though the method is a GET method for the test _reqInfo, we apply a request body for unit testing purposes. A
+ * request body is allowed for a GET method according to the HTTP specification, although it is pointless in practice.
+ */
+static IotHttpsSyncInfo_t _syncRequestInfo =
+{
+    .pBody   = ( uint8_t * ) ( HTTPS_TEST_REQUEST_BODY ),
+    /* Constant C string in macros have a NULL terminating character that we want to omit. */
+    .bodyLen = HTTPS_TEST_REQUEST_BODY_LENGTH
+};
+static IotHttpsSyncInfo_t _syncResponseInfo =
+{
+    .pBody   = _pRespBodyBuffer,
+    /* Constant C string in macros have a NULL terminating character that we want to omit. */
+    .bodyLen = sizeof( _pRespBodyBuffer )
+};
+
+/**
+ * @brief A IotHttpsRequestInfo_t to share among the tests.
+ */
+static IotHttpsRequestInfo_t _reqInfo =
+{
+    .pPath                = HTTPS_TEST_PATH,
+    .pathLen              = sizeof( HTTPS_TEST_PATH ) - 1,
+    .method               = IOT_HTTPS_METHOD_GET,
+    .pHost                = HTTPS_TEST_ADDRESS,
+    .hostLen              = sizeof( HTTPS_TEST_ADDRESS ) - 1,
+    .isNonPersistent      = false,
+    .userBuffer.pBuffer   = _pReqUserBuffer,
+    .userBuffer.bufferLen = sizeof( _pReqUserBuffer ),
+    .isAsync              = false,
+    .u.pSyncInfo          = &_syncRequestInfo
+};
+
+/**
+ * @brief A IotHttpsResponseInfo_t to share among the tests.
+ */
+static IotHttpsResponseInfo_t _respInfo =
+{
+    .userBuffer.pBuffer   = _pRespUserBuffer,
+    .userBuffer.bufferLen = sizeof( _pRespUserBuffer ),
+    .pSyncInfo            = &_syncResponseInfo
+};
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief thread that invokes the _networkReceiveCallback internal to the library.
+ */
+static void _invokeNetworkReceiveCallback( void * pArgument )
+{
+    void * pNetworkConnection = pArgument;
+
+    /* Sleep for a bit to wait for the rest of test request to finished sending and simulate a network response. */
+    IotClock_SleepMs( HTTPS_TEST_NETWORK_RECEIVE_CALLBACK_WAIT_MS );
+
+    /* Envoke the network receive callback. */
+    IotTestHttps_networkReceiveCallback( pNetworkConnection, _receiveCallbackConnHandle );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Mock the http parser execution failing when parsing the HTTP headers buffer.
+ */
+static size_t _httpParserExecuteFailHeaders( http_parser * parser,
+                                             const http_parser_settings * settings,
+                                             const char * data,
+                                             size_t len )
+{
+    ( void ) settings;
+    ( void ) len;
+
+    if( data == ( char * ) ( _currentlySendingRequestHandle->pHttpsResponse->pHeadersCur ) )
+    {
+        parser->http_errno = HPE_UNKNOWN;
+    }
+    else
+    {
+        http_parser_execute( parser, settings, data, len );
+    }
+
+    return 0;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Mock the http parser execution failing when parsing the HTTP body buffer.
+ */
+static size_t _httpParserExecuteFailBody( http_parser * parser,
+                                          const http_parser_settings * settings,
+                                          const char * data,
+                                          size_t len )
+{
+    ( void ) settings;
+    ( void ) len;
+
+    if( data == ( char * ) ( _currentlySendingRequestHandle->pHttpsResponse->pBodyCur ) )
+    {
+        parser->http_errno = HPE_UNKNOWN;
+    }
+    else
+    {
+        http_parser_execute( parser, settings, data, len );
+    }
+
+    return 0;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network abstraction send function that fails sending the HTTP headers.
+ */
+static size_t _networkSendFailHeaders( void * pConnection,
+                                       const uint8_t * pMessage,
+                                       size_t messageLength )
+{
+    ( void ) pConnection;
+
+    size_t retValue = 0;
+
+    /* Check if we are sending the headers to return failure. */
+    if( pMessage == _currentlySendingRequestHandle->pHeaders )
+    {
+        retValue = 0;
+    }
+    else
+    {
+        retValue = messageLength;
+    }
+
+    return retValue;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network abstraction send function that fails sending the HTTP body.
+ */
+static size_t _networkSendFailBody( void * pConnection,
+                                    const uint8_t * pMessage,
+                                    size_t messageLength )
+{
+    ( void ) pConnection;
+
+    size_t retValue = 0;
+
+    /* Check if we are sending the body to return failure. */
+    if( pMessage == _currentlySendingRequestHandle->pBody )
+    {
+        retValue = 0;
+    }
+    else
+    {
+        retValue = messageLength;
+    }
+
+    return retValue;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network abstraction send function that succeeds.
+ *
+ * Because the network send succeeded we mimic the network by starting a thread to envoke the network receive callback.
+ */
+static size_t _networkSendSuccess( void * pConnection,
+                                   const uint8_t * pMessage,
+                                   size_t messageLength )
+{
+    ( void ) pMessage;
+
+    /* This thread must be created only once to mimic the behavior of the network abstraction.  */
+    if( !_alreadyCreatedReceiveCallbackThread )
+    {
+        Iot_CreateDetachedThread( _invokeNetworkReceiveCallback,
+                                  pConnection,
+                                  IOT_THREAD_DEFAULT_PRIORITY,
+                                  IOT_THREAD_DEFAULT_STACK_SIZE );
+        _alreadyCreatedReceiveCallbackThread = true;
+    }
+
+    return messageLength;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network abstraction receive function that fails when sending the HTTP headers.
+ */
+static size_t _networkReceiveFailHeaders( void * pConnection,
+                                          uint8_t * pBuffer,
+                                          size_t bytesRequested )
+{
+    ( void ) pConnection;
+
+    size_t retValue = 0;
+
+    if( pBuffer == _currentlySendingRequestHandle->pHttpsResponse->pHeadersCur )
+    {
+        retValue = 0;
+    }
+    else
+    {
+        retValue = bytesRequested;
+    }
+
+    return retValue;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network abstraction receive function that fails when sending the HTTP body.
+ */
+static size_t _networkReceiveFailBody( void * pConnection,
+                                       uint8_t * pBuffer,
+                                       size_t bytesRequested )
+{
+    ( void ) pConnection;
+
+    size_t retValue = 0;
+
+    /* We may have received some body in the headers, so pBodyCur will be incremented during the parsing of
+     * data received when receiving into the header buffer. Given this case, when receiving from the network
+     * into the body buffer, start of the pBuffer should always be pBodyCur. */
+    if( pBuffer == _currentlySendingRequestHandle->pHttpsResponse->pBodyCur )
+    {
+        retValue = 0;
+    }
+    else
+    {
+        retValue = _networkReceiveSuccess( pConnection, pBuffer, bytesRequested );
+    }
+
+    return retValue;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network send success that replaces the _httpsResponse_t.httpParserInfo.parseFunc with one from this test.
+ *
+ * This function relies on _httpsResponse_t.pHttpsResponse getting set, in the currently processing _httpsResponse_t,
+ * before the network send function is called.
+ */
+static size_t _networkSendSuccessWithSettingParseFailForHeaders( void * pConnection,
+                                                                 const uint8_t * pMessage,
+                                                                 size_t messageLength )
+{
+    ( void ) pMessage;
+
+    /* Set the response parser function to mock a failure. */
+    _currentlySendingRequestHandle->pHttpsResponse->httpParserInfo.parseFunc = _httpParserExecuteFailHeaders;
+
+    /* This thread must be created only once to mimic the behavior of the network abstraction.  */
+    if( !_alreadyCreatedReceiveCallbackThread )
+    {
+        Iot_CreateDetachedThread( _invokeNetworkReceiveCallback,
+                                  pConnection,
+                                  IOT_THREAD_DEFAULT_PRIORITY,
+                                  IOT_THREAD_DEFAULT_STACK_SIZE );
+        _alreadyCreatedReceiveCallbackThread = true;
+    }
+
+    return messageLength;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Network send success that replaces the _httpsResponse_t.httpParserInfo.parseFunc with one from this test.
+ *
+ * This function relies on _httpsResponse_t.pHttpsResponse getting set, in the currently processing _httpsResponse_t,
+ * before the network send function is called.
+ */
+static size_t _networkSendSuccessWithSettingParseFailForBody( void * pConnection,
+                                                              const uint8_t * pMessage,
+                                                              size_t messageLength )
+{
+    ( void ) pMessage;
+
+    /* Set the response parser function to mock a failure. */
+    _currentlySendingRequestHandle->pHttpsResponse->httpParserInfo.parseFunc = _httpParserExecuteFailBody;
+
+    /* This thread must be created only once to mimic the behavior of the network abstraction.  */
+    if( !_alreadyCreatedReceiveCallbackThread )
+    {
+        Iot_CreateDetachedThread( _invokeNetworkReceiveCallback,
+                                  pConnection,
+                                  IOT_THREAD_DEFAULT_PRIORITY,
+                                  IOT_THREAD_DEFAULT_STACK_SIZE );
+        _alreadyCreatedReceiveCallbackThread = true;
+    }
+
+    return messageLength;
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test group for HTTPS Client Sync Unit tests.
+ */
+TEST_GROUP( HTTPS_Client_Unit_Sync );
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test setup for HTTPS Client Sync Unit tests.
+ */
+TEST_SETUP( HTTPS_Client_Unit_Sync )
+{
+    /* Reset the shared network interface. */
+    ( void ) memset( &_networkInterface, 0x00, sizeof( IotNetworkInterface_t ) );
+    /* Reset the shared response message buffer. */
+    ( void ) memset( _pRespMessageBuffer, 0x00, sizeof( _pRespMessageBuffer ) );
+    /* Reset the buffer we receive HTTP body into. */
+    ( void ) memset( _pRespBodyBuffer, 0x00, sizeof( _pRespBodyBuffer ) );
+
+    /* Reset some global static variables needed for mimicing the network. */
+    _receiveCallbackConnHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    _alreadyCreatedReceiveCallbackThread = false;
+    _currentlySendingRequestHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    _nextRespMessageBufferByteToReceive = 0;
+
+    /* This will initialize the library before every test case, which is OK. */
+    TEST_ASSERT_EQUAL_INT( true, IotSdk_Init() );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, IotHttpsClient_Init() );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test tear down for HTTPS Client Sync Unit tests..
+ */
+TEST_TEAR_DOWN( HTTPS_Client_Unit_Sync )
+{
+    IotHttpsClient_Deinit();
+    IotSdk_Cleanup();
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test group runner for HTTPS Client API tests.
+ */
+TEST_GROUP_RUNNER( HTTPS_Client_Unit_Sync )
+{
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncInvalidParameters );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncFailureSendingHeaders );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncFailureSendingBody )
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncFailureReceivingHeaders );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncFailureReceivingBody );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncFailureParsingHeaders );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncFailureParsingBody );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncSomeBodyInHeaderBuffer );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncSomeHeaderInBodyBuffer );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncEntireResponseInHeaderBuffer );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncBodyTooLarge );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncBodyBufferNull );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncPersistentRequest );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncNonPersistentRequest );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncHeadersEndsWithCarriageReturnSeparator );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncHeadersEndsWithNewlineSeparator );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncHeadersEndsWithColonSeparator );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncHeadersEndsWithSpaceSeparator );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncHeadersEndsWithSpaceAfterHeaderValue );
+    RUN_TEST_CASE( HTTPS_Client_Unit_Sync, SendSyncChunkedResponse );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test various invalid parameters input into IotHttpsClient_SendSync().
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncInvalidParameters )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+    IotHttpsResponseInfo_t testRespInfo = IOT_HTTPS_RESPONSE_INFO_INITIALIZER;
+
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Test a NULL connHandle parameter. */
+    returnCode = IotHttpsClient_SendSync( NULL, reqHandle, &respHandle, &_respInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( respHandle );
+
+    /* Test a NULL reqHandle parameter */
+    returnCode = IotHttpsClient_SendSync( connHandle, NULL, &respHandle, &_respInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( respHandle );
+
+    /* Test a NULL pRespHandle parameter. */
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, NULL, &_respInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( respHandle );
+
+    /* Test a NULL pRespInfo parameter. */
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, NULL, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( respHandle );
+
+    /* Test an async request handle. */
+    reqHandle->isAsync = true;
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &_respInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( respHandle );
+    /* Restore the request handle for other tests. */
+    reqHandle->isAsync = false;
+
+    /* A NULL response user buffer. */
+    memcpy( &testRespInfo, &_respInfo, sizeof( IotHttpsResponseInfo_t ) );
+    testRespInfo.userBuffer.pBuffer = NULL;
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &testRespInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( respHandle );
+
+    /* Test a response user buffer that is too small. */
+    memcpy( &testRespInfo, &_respInfo, sizeof( IotHttpsResponseInfo_t ) );
+    testRespInfo.userBuffer.bufferLen = responseUserBufferMinimumSize - 1;
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &testRespInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INSUFFICIENT_MEMORY, returnCode );
+    TEST_ASSERT_NULL( respHandle );
+
+    /* Test sending a request on a close connection. */
+    memcpy( &testRespInfo, &_respInfo, sizeof( IotHttpsResponseInfo_t ) );
+    connHandle->isConnected = false;
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &testRespInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+    TEST_ASSERT_NULL( respHandle );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test failures to send over the network the request headers.
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncFailureSendingHeaders )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+
+    /* Test a failure to the send the headers. */
+    _networkInterface.send = _networkSendFailHeaders;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    /* Get a valid "connected" handled. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    /* Get a valid request handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    _currentlySendingRequestHandle = reqHandle;
+
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &_respInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NETWORK_ERROR, returnCode );
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test failures to send over the network the request body.
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncFailureSendingBody )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+
+    /* Test a failure to send the body */
+    _networkInterface.send = _networkSendFailBody;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    /* Get a valid "connected" handled. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    /* Get a valid request handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    _currentlySendingRequestHandle = reqHandle;
+
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &_respInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NETWORK_ERROR, returnCode );
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test failures to receive over the network the response headers.
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncFailureReceivingHeaders )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+
+    /* Test a failure to receive the headers. */
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveFailHeaders;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+    /* Get a valid "connected" handled. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    /* Set the global test connection handle to be passed to the library network receive callback. */
+    _receiveCallbackConnHandle = connHandle;
+
+    /* Get a valid request handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Set the currently sending request to be used in _networkReceiveFailHeaders(). This is to check if the
+     * current network receive buffer is the header buffer or the body buffer. */
+    _currentlySendingRequestHandle = reqHandle;
+
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &_respInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NETWORK_ERROR, returnCode );
+    /* Verify that the connection was closed. */
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test failures to receive over the network response body.
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncFailureReceivingBody )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+
+    /* Test a failure to receive the body. */
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveFailBody;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+    /* Get a valid "connected" handled. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    /* Set the global test connection handle to be passed to the library network receive callback. */
+    _receiveCallbackConnHandle = connHandle;
+
+    /* Get a valid request handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Set the current request handle to be used in _networkReceiveFailBody() for checking if the current network
+     * receive buffer is the header buffer or the body buffer. */
+    _currentlySendingRequestHandle = reqHandle;
+
+    /* Generate an ideal case header and body message size just for testing a failure to receive. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &_respInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NETWORK_ERROR, returnCode );
+    /* Verify that the connection was closed. */
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test failure to parse over the network the response headers.
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncFailureParsingHeaders )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+
+    /* Test a parsing failure in the headers buffer. */
+    _networkInterface.send = _networkSendSuccessWithSettingParseFailForHeaders;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+    /* Get a valid "connected" handled. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    /* Set the global test connection handle to be passed to the library network receive callback. */
+    _receiveCallbackConnHandle = connHandle;
+
+    /* Get a valid request handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Set the current request handle to be used in _networkSendSuccessWithSettingParseFailForHeaders() to check if the
+     * current network receive buffer is the header buffer or the body buffer. */
+    _currentlySendingRequestHandle = reqHandle;
+
+    /* Generate an ideal case header and body message size just for testing a failure to parse. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &_respInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_PARSING_ERROR, returnCode );
+    /* Verify that the connection was closed. */
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test failure to parse over the network the response body.
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncFailureParsingBody )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+
+    /* Test a parsing failure in the body buffer. */
+    _networkInterface.send = _networkSendSuccessWithSettingParseFailForBody;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+    /* Get a valid "connected" handled. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    /* Set the global test connection handle to be passed to the library network receive callback. */
+    _receiveCallbackConnHandle = connHandle;
+
+    /* Get a valid request handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Set the current request handle to be used in _networkSendSuccessWithSettingParseFailForBody() to check if the
+     * current network receive buffer is the header buffer or the body buffer. */
+    _currentlySendingRequestHandle = reqHandle;
+
+    /* Generate an ideal case header and body message size just for testing a failure to parse. */
+    _generateHttpResponseMessage( HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH, HTTPS_TEST_RESP_BODY_BUFFER_SIZE );
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &_respInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_PARSING_ERROR, returnCode );
+    /* Verify that the connection was closed. */
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test that we receive the HTTP response body correctly when part of it is network received into the header
+ * buffer.
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncSomeBodyInHeaderBuffer )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+    int headerLength = 0;
+    int bodyLength = 0;
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    /* Get a valid "connected" handled. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    /* Set the global test connection handle to be passed to the library network receive callback. */
+    _receiveCallbackConnHandle = connHandle;
+
+    /* Get a valid request handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Generate a response message where part of the body is received into the header buffer while the rest is received
+     * into the body buffer. This test relies on the HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH to be less than double the
+     * HTTPS_TEST_RESP_BODY_BUFFER_SIZE. */
+    TEST_ASSERT_LESS_THAN_MESSAGE( HTTPS_TEST_RESP_BODY_BUFFER_SIZE * 2,
+                                   HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH,
+                                   "The header buffer size must be less than double of HTTPS_TEST_RESP_BODY_BUFFER_SIZE in order for this test to "
+                                   "be valid. Please resize HTTPS_TEST_RESP_USER_BUFFER_SIZE or HTTPS_TEST_RESP_BODY_BUFFER_SIZE." );
+    headerLength = HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH / 2;
+    bodyLength = HTTPS_TEST_RESP_BODY_BUFFER_SIZE;
+    _generateHttpResponseMessage( headerLength, bodyLength );
+
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &_respInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    _verifyHttpResponseBody( bodyLength, _respInfo.pSyncInfo->pBody, 0 );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test that we receive the HTTP response body correctly when network received headers spill over into the body
+ * buffer.
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncSomeHeaderInBodyBuffer )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+    int headerLength = 0;
+    int bodyLength = 0;
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    /* Get a valid "connected" handled. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    /* Set the global test connection handle to be passed to the library network receive callback. */
+    _receiveCallbackConnHandle = connHandle;
+
+    /* Get a valid request handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Generate a response message where part of the headers is received into the body buffer. */
+    headerLength = HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH * 2;
+    bodyLength = HTTPS_TEST_RESP_BODY_BUFFER_SIZE;
+    _generateHttpResponseMessage( headerLength, bodyLength );
+
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &_respInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    _verifyHttpResponseBody( bodyLength, _respInfo.pSyncInfo->pBody, 0 );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test that we receive the HTTP response body correctly all of the body is network received into the header
+ * buffer.
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncEntireResponseInHeaderBuffer )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+    int headerLength = 0;
+    int bodyLength = 0;
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    /* Get a valid "connected" handled. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    /* Set the global test connection handle to be passed to the library network receive callback. */
+    _receiveCallbackConnHandle = connHandle;
+
+    /* Get a valid request handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Generate a response message where all of the body is in the header buffer. */
+    headerLength = HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH / 2;
+    bodyLength = HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH / 4;
+    _generateHttpResponseMessage( headerLength, bodyLength );
+
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &_respInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    _verifyHttpResponseBody( bodyLength, _respInfo.pSyncInfo->pBody, 0 );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test that we return the correct error code when the HTTP response body is too large to fit into the configured
+ * body buffer.
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncBodyTooLarge )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+    int headerLength = 0;
+    int bodyLength = 0;
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    /* Get a valid "connected" handled. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    /* Set the global test connection handle to be passed to the library network receive callback. */
+    _receiveCallbackConnHandle = connHandle;
+
+    /* Get a valid request handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Generate a response message where all of the body is in the header buffer. */
+    headerLength = HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH;
+    bodyLength = HTTPS_TEST_RESP_BODY_BUFFER_SIZE + 1;
+    _generateHttpResponseMessage( headerLength, bodyLength );
+
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &_respInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_MESSAGE_TOO_LARGE, returnCode );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test a successful synchronous workflow when the body buffer is configured as NULL, but HTTP response body
+ * is received on the network.
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncBodyBufferNull )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    IotHttpsSyncInfo_t syncInfo = IOT_HTTPS_SYNC_INFO_INITIALIZER;
+    IotHttpsResponseInfo_t respInfo = IOT_HTTPS_RESPONSE_INFO_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+    int headerLength = 0;
+    int bodyLength = 0;
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    /* Get a valid "connected" handled. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    /* Set the global test connection handle to be passed to the library network receive callback. */
+    _receiveCallbackConnHandle = connHandle;
+
+    /* Get a valid request handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Generate a response message with a lot of headers and some body. */
+    headerLength = HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH * 2;
+    bodyLength = HTTPS_TEST_RESP_BODY_BUFFER_SIZE / 2;
+    _generateHttpResponseMessage( headerLength, bodyLength );
+
+    /* Set a local testing respInfo to have a NULL body buffer. */
+    memcpy( &respInfo, &_respInfo, sizeof( IotHttpsResponseInfo_t ) );
+    syncInfo.pBody = NULL;
+    syncInfo.bodyLen = 0;
+    respInfo.pSyncInfo = &syncInfo;
+
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &respInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * Test for a successful synchronous workflow that the connection stays open when the request is persistent.
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncPersistentRequest )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestInfo_t reqInfo = IOT_HTTPS_REQUEST_INFO_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+    int headerLength = 0;
+    int bodyLength = 0;
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    /* Get a valid "connected" handled. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    /* Set the global test connection handle to be passed to the library network receive callback. */
+    _receiveCallbackConnHandle = connHandle;
+
+    /* Get a valid request handle where the connection is presistent. We memcpy here so that
+     * we preserver the global _reqInfo. */
+    memcpy( &reqInfo, &_reqInfo, sizeof( IotHttpsRequestInfo_t ) );
+    reqInfo.isNonPersistent = false;
+    reqHandle = _getReqHandle( &reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Generate some ideal case header and body. */
+    headerLength = HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH;
+    bodyLength = HTTPS_TEST_RESP_BODY_BUFFER_SIZE;
+    _generateHttpResponseMessage( headerLength, bodyLength );
+
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &_respInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    _verifyHttpResponseBody( bodyLength, _respInfo.pSyncInfo->pBody, 0 );
+    /* Verify that the connection is still open. */
+    TEST_ASSERT_TRUE( connHandle->isConnected );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * Test for a successful synchronous workflow that the connection closes when the request is non-persistent.
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncNonPersistentRequest )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsRequestInfo_t reqInfo = IOT_HTTPS_REQUEST_INFO_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+    int headerLength = 0;
+    int bodyLength = 0;
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    /* Get a valid "connected" handled. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    /* Set the global test connection handle to be passed to the library network receive callback. */
+    _receiveCallbackConnHandle = connHandle;
+
+    /* Get a valid request handle where the connection is presistent. We memcpy here so that
+     * we preserver the global _reqInfo. */
+    memcpy( &reqInfo, &_reqInfo, sizeof( IotHttpsRequestInfo_t ) );
+    reqInfo.isNonPersistent = true;
+    reqHandle = _getReqHandle( &reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Generate some ideal case header and body. */
+    headerLength = HTTPS_TEST_RESP_HEADER_BUFFER_LENGTH;
+    bodyLength = HTTPS_TEST_RESP_BODY_BUFFER_SIZE;
+    _generateHttpResponseMessage( headerLength, bodyLength );
+
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &_respInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    _verifyHttpResponseBody( bodyLength, _respInfo.pSyncInfo->pBody, 0 );
+    /* Verify that the connection is closed. */
+    TEST_ASSERT_FALSE( connHandle->isConnected );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test that we have the correct header data when it ends on the carriage return of the end of the header lines
+ * separator.
+ *
+ * The end of the header lines separator is "\r\n". This test is important because it makes sure that the pHeaderCur pointer
+ * in the internal response context is updated even though the http-parser callback does not notify the library of
+ * these characters.
+ *
+ * These tests are separated into difference cases so that I can easily free the memory allocated.
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncHeadersEndsWithCarriageReturnSeparator )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsResponseInfo_t respInfo = IOT_HTTPS_RESPONSE_INFO_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+    uint32_t userBufferWithHeaderSpaceUpToCarriageReturnLength =
+        responseUserBufferMinimumSize + sizeof( HTTPS_TEST_SMALL_RESPONSE_UP_TO_CARRIAGE_RETURN ) - 1;
+    uint8_t * pUserBufferWithHeaderSpaceUpToCarriageReturn = NULL;
+    char pValueBuffer[ sizeof( HTTPS_TEST_HEADER_VALUE1 ) ] = { 0 };
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    /* Get a valid "connected" handled. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    /* Set the global test connection handle to be passed to the library network receive callback. */
+    _receiveCallbackConnHandle = connHandle;
+
+    /* Get a valid request handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Setup the test response message to receive a small test message. */
+    memcpy( _pRespMessageBuffer, HTTPS_TEST_SMALL_RESPONSE, sizeof( HTTPS_TEST_SMALL_RESPONSE ) );
+
+    /* Test the header buffer receives up to a carriage return in the header separator.  */
+    memcpy( &respInfo, &_respInfo, sizeof( IotHttpsResponseInfo_t ) );
+    pUserBufferWithHeaderSpaceUpToCarriageReturn =
+        ( uint8_t * ) IotTest_Malloc( userBufferWithHeaderSpaceUpToCarriageReturnLength );
+    TEST_ASSERT_NOT_NULL( pUserBufferWithHeaderSpaceUpToCarriageReturn );
+
+    /* Test protect here so that we can free the memory after a failure. */
+    if( TEST_PROTECT() )
+    {
+        respInfo.userBuffer.pBuffer = pUserBufferWithHeaderSpaceUpToCarriageReturn;
+        respInfo.userBuffer.bufferLen = userBufferWithHeaderSpaceUpToCarriageReturnLength;
+
+        returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &respInfo, timeout );
+        TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+        /* If the internal pointers were incremented correctly then we should successfully find the "value1" header value. */
+        returnCode = IotHttpsClient_ReadHeader( respHandle, HTTPS_TEST_HEADER1, FAST_MACRO_STRLEN( HTTPS_TEST_HEADER1 ), pValueBuffer, sizeof( pValueBuffer ) );
+        TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+        /* Assert that ReadHeader() found the correct "value1" header value. */
+        TEST_ASSERT_EQUAL( 0, strncmp( pValueBuffer, HTTPS_TEST_HEADER_VALUE1, sizeof( HTTPS_TEST_HEADER_VALUE1 ) ) );
+        /* Assert that "value1\r" is found in the header buffer. */
+        TEST_ASSERT_NOT_NULL( strstr( ( char * ) ( respHandle->pHeaders ), HTTPS_TEST_HEADER_VALUE1_PLUS_CARRIAGE_RETURN ) );
+        /* Assert that the final character in the header buffer is '\r'. */
+        TEST_ASSERT_EQUAL( CARRIAGE_RETURN_CHARACTER, ( char ) ( *( respHandle->pHeadersCur - 1 ) ) );
+    }
+
+    IotTest_Free( pUserBufferWithHeaderSpaceUpToCarriageReturn );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test that we have the correct header data when it ends on the newline of the end of the header lines
+ * separator.
+ *
+ * The end of the header lines separator is "\r\n". This test is important because it makes sure that the pHeaderCur pointer
+ * in the internal response context is updated even though the http-parser callback does not notify the library of
+ * these characters.
+ *
+ * These tests are separated into difference cases so that I can easily free the memory allocated.
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncHeadersEndsWithNewlineSeparator )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsResponseInfo_t respInfo = IOT_HTTPS_RESPONSE_INFO_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+    uint32_t userBufferWithHeaderSpaceUpToNewLineLength =
+        responseUserBufferMinimumSize + sizeof( HTTPS_TEST_SMALL_RESPONSE_UP_TO_NEWLINE ) - 1;
+    uint8_t * pUserBufferWithHeaderSpaceUpToNewLine = NULL;
+    char pValueBuffer[ sizeof( HTTPS_TEST_HEADER_VALUE1 ) ] = { 0 };
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    /* Get a valid "connected" handled. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    /* Set the global test connection handle to be passed to the library network receive callback. */
+    _receiveCallbackConnHandle = connHandle;
+
+    /* Get a valid request handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Setup the test response message to receive a small test message. */
+    memcpy( _pRespMessageBuffer, HTTPS_TEST_SMALL_RESPONSE, sizeof( HTTPS_TEST_SMALL_RESPONSE ) );
+
+    /* Test the header buffer receives up to a carriage return in the header separator.  */
+    memcpy( &respInfo, &_respInfo, sizeof( IotHttpsResponseInfo_t ) );
+    pUserBufferWithHeaderSpaceUpToNewLine =
+        ( uint8_t * ) IotTest_Malloc( userBufferWithHeaderSpaceUpToNewLineLength );
+    TEST_ASSERT_NOT_NULL( pUserBufferWithHeaderSpaceUpToNewLine );
+
+    /* Test protect here so that we can free the memory after a failure. */
+    if( TEST_PROTECT() )
+    {
+        respInfo.userBuffer.pBuffer = pUserBufferWithHeaderSpaceUpToNewLine;
+        respInfo.userBuffer.bufferLen = userBufferWithHeaderSpaceUpToNewLineLength;
+
+        returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &respInfo, timeout );
+        TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+        /* If the internal pointers were incremented correctly then we should successfully find the "value1" header value. */
+        returnCode = IotHttpsClient_ReadHeader( respHandle, HTTPS_TEST_HEADER1, FAST_MACRO_STRLEN( HTTPS_TEST_HEADER1 ), pValueBuffer, sizeof( pValueBuffer ) );
+        TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+        /* Assert that ReadHeader() found the correct "value1" header value. */
+        TEST_ASSERT_EQUAL( 0, strncmp( pValueBuffer, HTTPS_TEST_HEADER_VALUE1, sizeof( HTTPS_TEST_HEADER_VALUE1 ) ) );
+        /* Assert that "value1\r\n" is found in the header buffer. */
+        TEST_ASSERT_NOT_NULL( strstr( ( char * ) ( respHandle->pHeaders ), HTTPS_TEST_HEADER_VALUE1_PLUS_NEWLINE ) );
+        /* Assert that the final string in the header buffer is "\r\n". */
+        TEST_ASSERT_EQUAL( 0,
+                           strncmp( HTTPS_END_OF_HEADER_LINES_INDICATOR,
+                                    ( char * ) ( respHandle->pHeadersCur - HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH ),
+                                    HTTPS_END_OF_HEADER_LINES_INDICATOR_LENGTH ) );
+    }
+
+    IotTest_Free( pUserBufferWithHeaderSpaceUpToNewLine );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test that we have the correct header data when it ends on the colon character of the header field value
+ * separator.
+ *
+ * The header field value separator is ": ". This test is important because it makes sure that the pHeaderCur pointer
+ * in the internal response context is updated even though the http-parser callback does not notify the library of
+ * these characters.
+ *
+ * These tests are separated into difference cases so that I can easily free the memory allocated.
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncHeadersEndsWithColonSeparator )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsResponseInfo_t respInfo = IOT_HTTPS_RESPONSE_INFO_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+    uint32_t userBufferWithHeaderSpaceUpToColonLength =
+        responseUserBufferMinimumSize + sizeof( HTTPS_TEST_SMALL_RESPONSE_UP_TO_COLON ) - 1;
+    uint8_t * pUserBufferWithHeaderSpaceUpToColon = NULL;
+    char pValueBuffer[ sizeof( HTTPS_TEST_HEADER_VALUE1 ) ] = { 0 };
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    /* Get a valid "connected" handled. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    /* Set the global test connection handle to be passed to the library network receive callback. */
+    _receiveCallbackConnHandle = connHandle;
+
+    /* Get a valid request handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Setup the test response message to receive a small test message. */
+    memcpy( _pRespMessageBuffer, HTTPS_TEST_SMALL_RESPONSE, HTTPS_TEST_SMALL_RESPONSE_LENGTH );
+
+    /* Test the header buffer receives up to a carriage return in the header separator.  */
+    memcpy( &respInfo, &_respInfo, sizeof( IotHttpsResponseInfo_t ) );
+    pUserBufferWithHeaderSpaceUpToColon =
+        ( uint8_t * ) IotTest_Malloc( userBufferWithHeaderSpaceUpToColonLength );
+    TEST_ASSERT_NOT_NULL( pUserBufferWithHeaderSpaceUpToColon );
+
+    /* Test protect here so that we can free the memory after a failure. */
+    if( TEST_PROTECT() )
+    {
+        respInfo.userBuffer.pBuffer = pUserBufferWithHeaderSpaceUpToColon;
+        respInfo.userBuffer.bufferLen = userBufferWithHeaderSpaceUpToColonLength;
+
+        returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &respInfo, timeout );
+        TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+        /* If the internal pointers were incremented correctly then we should NOT find value1. */
+        returnCode = IotHttpsClient_ReadHeader( respHandle, HTTPS_TEST_HEADER1, FAST_MACRO_STRLEN( HTTPS_TEST_HEADER1 ), pValueBuffer, sizeof( pValueBuffer ) );
+        TEST_ASSERT_EQUAL( IOT_HTTPS_NOT_FOUND, returnCode );
+        /* Assert that "header1:" is found in the header buffer. */
+        TEST_ASSERT_NOT_NULL( strstr( ( char * ) ( respHandle->pHeaders ), HTTPS_TEST_HEADER1_PLUS_COLON ) );
+        /* Assert that the final character in the header buffer is ':'. */
+        TEST_ASSERT_EQUAL( COLON_CHARACTER, ( char ) ( *( respHandle->pHeadersCur - 1 ) ) );
+    }
+
+    IotTest_Free( pUserBufferWithHeaderSpaceUpToColon );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test that we have the correct header data when it ends on the space character of the header field value
+ * separator.
+ *
+ * The header field value separator is ": ". This test is important because it makes sure that the pHeaderCur pointer
+ * in the internal response context is updated even though the http-parser callback does not notify the library of
+ * these characters.
+ *
+ * These tests are separated into difference cases so that I can easily free the memory allocated.
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncHeadersEndsWithSpaceSeparator )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsResponseInfo_t respInfo = IOT_HTTPS_RESPONSE_INFO_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+    uint32_t userBufferWithHeaderSpaceUpToSpaceLength =
+        responseUserBufferMinimumSize + sizeof( HTTPS_TEST_SMALL_RESPONSE_UP_TO_SPACE ) - 1;
+    uint8_t * pUserBufferWithHeaderSpaceUpToSpace = NULL;
+    char pValueBuffer[ sizeof( HTTPS_TEST_HEADER_VALUE1 ) ] = { 0 };
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    /* Get a valid "connected" handled. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    /* Set the global test connection handle to be passed to the library network receive callback. */
+    _receiveCallbackConnHandle = connHandle;
+
+    /* Get a valid request handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Setup the test response message to receive a small test message. */
+    memcpy( _pRespMessageBuffer, HTTPS_TEST_SMALL_RESPONSE, HTTPS_TEST_SMALL_RESPONSE_LENGTH );
+
+    /* Test the header buffer receives up to a carriage return in the header separator.  */
+    memcpy( &respInfo, &_respInfo, sizeof( IotHttpsResponseInfo_t ) );
+    pUserBufferWithHeaderSpaceUpToSpace =
+        ( uint8_t * ) IotTest_Malloc( userBufferWithHeaderSpaceUpToSpaceLength );
+    TEST_ASSERT_NOT_NULL( pUserBufferWithHeaderSpaceUpToSpace );
+
+    /* Test protect here so that we can free the memory after a failure. */
+    if( TEST_PROTECT() )
+    {
+        respInfo.userBuffer.pBuffer = pUserBufferWithHeaderSpaceUpToSpace;
+        respInfo.userBuffer.bufferLen = userBufferWithHeaderSpaceUpToSpaceLength;
+
+        returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &respInfo, timeout );
+        TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+        /* If the internal pointers were incremented correctly then we should NOT find value1. */
+        returnCode = IotHttpsClient_ReadHeader( respHandle, HTTPS_TEST_HEADER1, FAST_MACRO_STRLEN( HTTPS_TEST_HEADER1 ), pValueBuffer, sizeof( pValueBuffer ) );
+        TEST_ASSERT_EQUAL( IOT_HTTPS_NOT_FOUND, returnCode );
+        /* Assert that "header1:" is found in the header buffer. */
+        TEST_ASSERT_NOT_NULL( strstr( ( char * ) ( respHandle->pHeaders ), HTTPS_TEST_HEADER1_PLUS_SPACE ) );
+        /* Assert that the final string in the header buffer is ": ". */
+        TEST_ASSERT_EQUAL( 0,
+                           strncmp( HTTPS_HEADER_FIELD_SEPARATOR,
+                                    ( char * ) ( respHandle->pHeadersCur - HTTPS_HEADER_FIELD_SEPARATOR_LENGTH ),
+                                    HTTPS_HEADER_FIELD_SEPARATOR_LENGTH ) );
+    }
+
+    IotTest_Free( pUserBufferWithHeaderSpaceUpToSpace );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * Test that when the header buffer ends on a space after a header value that this space is treated as parted of
+ * the header value.
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncHeadersEndsWithSpaceAfterHeaderValue )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsResponseInfo_t respInfo = IOT_HTTPS_RESPONSE_INFO_INITIALIZER;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+    uint32_t userBufferWithHeaderSpaceUpToSpaceInBetweenValueLength =
+        responseUserBufferMinimumSize + sizeof( HTTPS_TEST_SMALL_RESPONSE_UP_TO_SPACE_IN_BETWEEN_VALUE ) - 1;
+    uint8_t * pUserBufferWithHeaderSpaceUpToSpaceInBetweenValue = NULL;
+    char pValueBuffer[ sizeof( HTTPS_TEST_HEADER_VALUE2_PLUS_SPACE ) ] = { 0 };
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    /* Get a valid "connected" handled. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    /* Set the global test connection handle to be passed to the library network receive callback. */
+    _receiveCallbackConnHandle = connHandle;
+
+    /* Get a valid request handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Setup the test response message to receive a small test message. */
+    memcpy( _pRespMessageBuffer, HTTPS_TEST_SMALL_RESPONSE, HTTPS_TEST_SMALL_RESPONSE_LENGTH );
+
+    /* Test the header buffer receives up to a carriage return in the header separator.  */
+    memcpy( &respInfo, &_respInfo, sizeof( IotHttpsResponseInfo_t ) );
+    pUserBufferWithHeaderSpaceUpToSpaceInBetweenValue =
+        ( uint8_t * ) IotTest_Malloc( userBufferWithHeaderSpaceUpToSpaceInBetweenValueLength );
+    TEST_ASSERT_NOT_NULL( pUserBufferWithHeaderSpaceUpToSpaceInBetweenValue );
+
+    /* Test protect here so that we can free the memory after a failure. */
+    if( TEST_PROTECT() )
+    {
+        respInfo.userBuffer.pBuffer = pUserBufferWithHeaderSpaceUpToSpaceInBetweenValue;
+        respInfo.userBuffer.bufferLen = userBufferWithHeaderSpaceUpToSpaceInBetweenValueLength;
+
+        returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &respInfo, timeout );
+        TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+        /* If the internal pointers were incremented correctly and so we can find the correct "value2 " header value. */
+        returnCode = IotHttpsClient_ReadHeader( respHandle, HTTPS_TEST_HEADER2, FAST_MACRO_STRLEN( HTTPS_TEST_HEADER2 ), pValueBuffer, sizeof( pValueBuffer ) );
+        TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+        /* Assert that ReadHeader() found the correct "value2 " header value. */
+        TEST_ASSERT_EQUAL( 0, strncmp( pValueBuffer, HTTPS_TEST_HEADER_VALUE2_PLUS_SPACE, sizeof( HTTPS_TEST_HEADER_VALUE2_PLUS_SPACE ) ) );
+    }
+
+    IotTest_Free( pUserBufferWithHeaderSpaceUpToSpaceInBetweenValue );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test receiving a chunked HTTP response message.
+ */
+TEST( HTTPS_Client_Unit_Sync, SendSyncChunkedResponse )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    IotHttpsConnectionHandle_t connHandle = IOT_HTTPS_CONNECTION_HANDLE_INITIALIZER;
+    IotHttpsRequestHandle_t reqHandle = IOT_HTTPS_REQUEST_HANDLE_INITIALIZER;
+    IotHttpsResponseHandle_t respHandle = IOT_HTTPS_RESPONSE_HANDLE_INITIALIZER;
+    uint32_t timeout = HTTPS_TEST_SYNC_TIMEOUT_MS;
+
+    _networkInterface.send = _networkSendSuccess;
+    _networkInterface.receiveUpto = _networkReceiveSuccess;
+    _networkInterface.close = _networkCloseSuccess;
+    _networkInterface.destroy = _networkDestroySuccess;
+
+    /* Get a valid "connected" handled. */
+    connHandle = _getConnHandle();
+    TEST_ASSERT_NOT_NULL( connHandle );
+    /* Set the global test connection handle to be passed to the library network receive callback. */
+    _receiveCallbackConnHandle = connHandle;
+
+    /* Get a valid request handle. */
+    reqHandle = _getReqHandle( &_reqInfo );
+    TEST_ASSERT_NOT_NULL( reqHandle );
+
+    /* Setup the test response message to receive the HTTP rest chinked response. */
+    memcpy( _pRespMessageBuffer, HTTPS_TEST_CHUNKED_RESPONSE, sizeof( HTTPS_TEST_CHUNKED_RESPONSE ) - 1 );
+    returnCode = IotHttpsClient_SendSync( connHandle, reqHandle, &respHandle, &_respInfo, timeout );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_OK, returnCode );
+    _verifyHttpResponseBody( HTTPS_TEST_CHUNKED_RESPONSE_BODY_LENGTH, _respInfo.pSyncInfo->pBody, 0 );
+}
diff --git a/libraries/c_sdk/standard/https/test/unit/iot_tests_https_utils.c b/libraries/c_sdk/standard/https/test/unit/iot_tests_https_utils.c
new file mode 100644
index 000000000..28ea16987
--- /dev/null
+++ b/libraries/c_sdk/standard/https/test/unit/iot_tests_https_utils.c
@@ -0,0 +1,279 @@
+/*
+ * Amazon FreeRTOS HTTPS Client V1.0.0
+ * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
+/**
+ * @file iot_tests_https_utils.c
+ * @brief Tests for the user-facing API functions declared in iot_https_utils.h.
+ */
+
+/* The config header is always included first. */
+#include "iot_config.h"
+
+/* C standard includes. */
+#include <string.h>
+
+/* HTTPS Client Utils include. */
+#include "iot_https_utils.h"
+
+/* Test framework includes. */
+#include "unity_fixture.h"
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test URL with "https://"" prepending and query.
+ */
+#define HTTPS_TEST_URL_HTTPS                          "https://mybucket.s3.amazonaws.com/myobject.txt?AWSAccessKeyId=AAAAAAAAAAAAAAAAAAAA&Expires=0000000000&Signature=abcde%2fghijklmn%2pqrstuvwxyzAB%3D"
+
+/**
+ * @brief The path to the test URL above.
+ */
+#define HTTPS_TEST_URL_HTTPS_EXPECTED_PATH            "/myobject.txt"
+
+/**
+ * @brief The address to the test URL above.
+ */
+#define HTTPS_TSET_URL_HTTPS_EXPECTED_ADDRESS         "mybucket.s3.amazonaws.com"
+
+/**
+ * @brief Test URL with wwww.
+ */
+#define HTTPS_TEST_URL_WWW                            "https://www.amazon.com/gp/css/order-history?ref_=nav_orders_first"
+
+/**
+ * @brief The path to the test URL above.
+ */
+#define HTTPS_TEST_URL_WWW_EXPECTED_PATH              "/gp/css/order-history"
+
+/**
+ * @brief The address to the test URL above.
+ */
+#define HTTPS_TEST_URL_WWW_EXPECTED_ADDRESS           "www.amazon.com"
+
+/**
+ * @brief Test URL without a path.
+ */
+#define HTTPS_TEST_URL_NO_PATH                        "https://www.aws.amazon.com"
+
+/**
+ * @brief The path to the test URL above.
+ */
+#define HTTPS_TEST_URL_NO_PATH_EXPECTED_PATH          NULL
+
+/**
+ * @brief The address to the test URL above.
+ */
+#define HTTPS_TEST_URL_NO_PATH_EXPECTED_ADDRESS       "www.aws.amazon.com"
+
+/**
+ * @brief Test URL without a path.
+ */
+#define HTTPS_TEST_URL_NO_ADDRESS                     "/no/address/path?q=q"
+
+/**
+ * @brief The path to the test URL above.
+ */
+#define HTTPS_TEST_URL_NO_ADDRESS_EXPECTED_PATH       NULL
+
+/**
+ * @brief The address to the test URL above.
+ */
+#define HTTPS_TEST_URL_NO_ADDRESS_EXPECTED_ADDRESS    NULL
+
+/**
+ * @brief Invalid URL.
+ */
+#define HTTPS_TEST_INVALID_URL                        "invalid_url/invalid_path"
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test group for HTTPS Utils API tests.
+ */
+TEST_GROUP( HTTPS_Utils_Unit_API );
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test setup for HTTPS Utils API tests.
+ */
+TEST_SETUP( HTTPS_Utils_Unit_API )
+{
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test tear down for HTTPS Utils API tests.
+ */
+TEST_TEAR_DOWN( HTTPS_Utils_Unit_API )
+{
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test group runner for HTTPS Utils API tests.
+ */
+TEST_GROUP_RUNNER( HTTPS_Utils_Unit_API )
+{
+    RUN_TEST_CASE( HTTPS_Utils_Unit_API, GetUrlPathInvalidParameters );
+    RUN_TEST_CASE( HTTPS_Utils_Unit_API, GetUrlPathVerifications );
+    RUN_TEST_CASE( HTTPS_Utils_Unit_API, GetUrlAddressInvalidParameters );
+    RUN_TEST_CASE( HTTPS_Utils_Unit_API, GetUrlAddressVerifications );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test various invlaid parameters into IotHttpsClient_GetUrlPath().
+ */
+TEST( HTTPS_Utils_Unit_API, GetUrlPathInvalidParameters )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    const char * pReturnPath = NULL;
+    size_t returnPathLen = 0;
+
+    /* Test NULL pUrl parameter. */
+    returnCode = IotHttpsClient_GetUrlPath( NULL, strlen( HTTPS_TEST_URL_HTTPS ), &pReturnPath, &returnPathLen );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test a URL length of zero. */
+    returnCode = IotHttpsClient_GetUrlPath( HTTPS_TEST_URL_HTTPS, 0, &pReturnPath, &returnPathLen );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_PARSING_ERROR, returnCode );
+
+    /* Test NULL pPath parameter. */
+    returnCode = IotHttpsClient_GetUrlPath( HTTPS_TEST_URL_HTTPS, strlen( HTTPS_TEST_URL_HTTPS ), NULL, &returnPathLen );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test NULL pPathLen parameter. */
+    returnCode = IotHttpsClient_GetUrlPath( HTTPS_TEST_URL_HTTPS, strlen( HTTPS_TEST_URL_HTTPS ), &pReturnPath, NULL );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test all parameters NULL. */
+    returnCode = IotHttpsClient_GetUrlPath( NULL, strlen( HTTPS_TEST_URL_HTTPS ), NULL, NULL );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test an invalid URL. */
+    returnCode = IotHttpsClient_GetUrlPath( HTTPS_TEST_INVALID_URL, strlen( HTTPS_TEST_INVALID_URL ), &pReturnPath, &returnPathLen );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_PARSING_ERROR, returnCode );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test parsing the path from various different forms of URLs.
+ */
+TEST( HTTPS_Utils_Unit_API, GetUrlPathVerifications )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    const char * pReturnPath = NULL;
+    size_t returnPathLen = 0;
+
+    /* Test getting the path from a URL with "https://" prepending. */
+    returnCode = IotHttpsClient_GetUrlPath( HTTPS_TEST_URL_HTTPS, strlen( HTTPS_TEST_URL_HTTPS ), &pReturnPath, &returnPathLen );
+    TEST_ASSERT_EQUAL( 0, strncmp( pReturnPath, HTTPS_TEST_URL_HTTPS_EXPECTED_PATH, strlen( HTTPS_TEST_URL_HTTPS_EXPECTED_PATH ) ) );
+    TEST_ASSERT_EQUAL( strlen( HTTPS_TEST_URL_HTTPS_EXPECTED_PATH ), returnPathLen );
+
+    /* Test getting the path from a www URL. */
+    returnCode = IotHttpsClient_GetUrlPath( HTTPS_TEST_URL_WWW, strlen( HTTPS_TEST_URL_WWW ), &pReturnPath, &returnPathLen );
+    TEST_ASSERT_EQUAL( 0, strncmp( pReturnPath, HTTPS_TEST_URL_WWW_EXPECTED_PATH, strlen( HTTPS_TEST_URL_WWW_EXPECTED_PATH ) ) );
+    TEST_ASSERT_EQUAL( strlen( HTTPS_TEST_URL_WWW_EXPECTED_PATH ), returnPathLen );
+
+    /* Test getting the path from a URL without a path. */
+    returnCode = IotHttpsClient_GetUrlPath( HTTPS_TEST_URL_NO_PATH, strlen( HTTPS_TEST_URL_NO_PATH ), &pReturnPath, &returnPathLen );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NOT_FOUND, returnCode );
+    TEST_ASSERT_EQUAL( HTTPS_TEST_URL_NO_PATH_EXPECTED_PATH, pReturnPath );
+    TEST_ASSERT_EQUAL( 0, returnPathLen );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test various invlaid parameters into IotHttpsClient_GetUrlAddress().
+ */
+TEST( HTTPS_Utils_Unit_API, GetUrlAddressInvalidParameters )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    const char * pReturnAddress = NULL;
+    size_t returnAddressLen = 0;
+
+    /* Test NULL pUrl parameter. */
+    returnCode = IotHttpsClient_GetUrlAddress( NULL, strlen( HTTPS_TEST_URL_HTTPS ), &pReturnAddress, &returnAddressLen );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test a URL length of zero. */
+    returnCode = IotHttpsClient_GetUrlAddress( HTTPS_TEST_URL_HTTPS, 0, &pReturnAddress, &returnAddressLen );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_PARSING_ERROR, returnCode );
+
+    /* Test NULL pAddress parameter. */
+    returnCode = IotHttpsClient_GetUrlAddress( HTTPS_TEST_URL_HTTPS, strlen( HTTPS_TEST_URL_HTTPS ), NULL, &returnAddressLen );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test NULL pAddressLen parameter. */
+    returnCode = IotHttpsClient_GetUrlAddress( HTTPS_TEST_URL_HTTPS, strlen( HTTPS_TEST_URL_HTTPS ), &pReturnAddress, NULL );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test all parameters NULL. */
+    returnCode = IotHttpsClient_GetUrlAddress( NULL, strlen( HTTPS_TEST_URL_HTTPS ), NULL, NULL );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_INVALID_PARAMETER, returnCode );
+
+    /* Test an invalid URL. */
+    returnCode = IotHttpsClient_GetUrlAddress( HTTPS_TEST_INVALID_URL, strlen( HTTPS_TEST_INVALID_URL ), &pReturnAddress, &returnAddressLen );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_PARSING_ERROR, returnCode );
+}
+
+/*-----------------------------------------------------------*/
+
+/**
+ * @brief Test parsing the address from various different forms of URLs.
+ */
+TEST( HTTPS_Utils_Unit_API, GetUrlAddressVerifications )
+{
+    IotHttpsReturnCode_t returnCode = IOT_HTTPS_OK;
+    const char * pReturnAddress = NULL;
+    size_t returnAddressLen = 0;
+
+    /* Test getting the address from a URL with "https://" prepending. */
+    returnCode = IotHttpsClient_GetUrlAddress( HTTPS_TEST_URL_HTTPS, strlen( HTTPS_TEST_URL_HTTPS ), &pReturnAddress, &returnAddressLen );
+    TEST_ASSERT_EQUAL( 0, strncmp( pReturnAddress, HTTPS_TSET_URL_HTTPS_EXPECTED_ADDRESS, strlen( HTTPS_TSET_URL_HTTPS_EXPECTED_ADDRESS ) ) );
+    TEST_ASSERT_EQUAL( strlen( HTTPS_TSET_URL_HTTPS_EXPECTED_ADDRESS ), returnAddressLen );
+
+    /* Test getting the address from a www url. */
+    returnCode = IotHttpsClient_GetUrlAddress( HTTPS_TEST_URL_WWW, strlen( HTTPS_TEST_URL_WWW ), &pReturnAddress, &returnAddressLen );
+    TEST_ASSERT_EQUAL( 0, strncmp( pReturnAddress, HTTPS_TEST_URL_WWW_EXPECTED_ADDRESS, strlen( HTTPS_TEST_URL_WWW_EXPECTED_ADDRESS ) ) );
+    TEST_ASSERT_EQUAL( strlen( HTTPS_TEST_URL_WWW_EXPECTED_ADDRESS ), returnAddressLen );
+
+    /* Test getting the address from a URL with no path. */
+    returnCode = IotHttpsClient_GetUrlAddress( HTTPS_TEST_URL_NO_PATH, strlen( HTTPS_TEST_URL_NO_PATH ), &pReturnAddress, &returnAddressLen );
+    TEST_ASSERT_EQUAL( 0, strncmp( pReturnAddress, HTTPS_TEST_URL_NO_PATH_EXPECTED_ADDRESS, strlen( HTTPS_TEST_URL_NO_PATH_EXPECTED_ADDRESS ) ) );
+    TEST_ASSERT_EQUAL( strlen( HTTPS_TEST_URL_NO_PATH_EXPECTED_ADDRESS ), returnAddressLen );
+
+    /* Test getting the address from a URL with no address. */
+    returnCode = IotHttpsClient_GetUrlAddress( HTTPS_TEST_URL_NO_ADDRESS, strlen( HTTPS_TEST_URL_NO_ADDRESS ), &pReturnAddress, &returnAddressLen );
+    TEST_ASSERT_EQUAL( IOT_HTTPS_NOT_FOUND, returnCode );
+    TEST_ASSERT_EQUAL( HTTPS_TEST_URL_NO_ADDRESS_EXPECTED_ADDRESS, pReturnAddress );
+    TEST_ASSERT_EQUAL( 0, returnAddressLen );
+}
diff --git a/libraries/c_sdk/standard/mqtt/include/iot_mqtt.h b/libraries/c_sdk/standard/mqtt/include/iot_mqtt.h
index 9c8bc5fdb..e63c80371 100644
--- a/libraries/c_sdk/standard/mqtt/include/iot_mqtt.h
+++ b/libraries/c_sdk/standard/mqtt/include/iot_mqtt.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/include/iot_mqtt_agent.h b/libraries/c_sdk/standard/mqtt/include/iot_mqtt_agent.h
index 0188d17de..b3d90c306 100644
--- a/libraries/c_sdk/standard/mqtt/include/iot_mqtt_agent.h
+++ b/libraries/c_sdk/standard/mqtt/include/iot_mqtt_agent.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/include/iot_mqtt_agent_config_defaults.h b/libraries/c_sdk/standard/mqtt/include/iot_mqtt_agent_config_defaults.h
index 8f82ef268..989672a17 100644
--- a/libraries/c_sdk/standard/mqtt/include/iot_mqtt_agent_config_defaults.h
+++ b/libraries/c_sdk/standard/mqtt/include/iot_mqtt_agent_config_defaults.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/include/iot_mqtt_config_defaults.h b/libraries/c_sdk/standard/mqtt/include/iot_mqtt_config_defaults.h
index 01eb03032..c5c0310dd 100644
--- a/libraries/c_sdk/standard/mqtt/include/iot_mqtt_config_defaults.h
+++ b/libraries/c_sdk/standard/mqtt/include/iot_mqtt_config_defaults.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/include/iot_mqtt_lib.h b/libraries/c_sdk/standard/mqtt/include/iot_mqtt_lib.h
index 08f7182d1..9a0e7d428 100644
--- a/libraries/c_sdk/standard/mqtt/include/iot_mqtt_lib.h
+++ b/libraries/c_sdk/standard/mqtt/include/iot_mqtt_lib.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/include/types/iot_mqtt_types.h b/libraries/c_sdk/standard/mqtt/include/types/iot_mqtt_types.h
index 589492599..167b40488 100644
--- a/libraries/c_sdk/standard/mqtt/include/types/iot_mqtt_types.h
+++ b/libraries/c_sdk/standard/mqtt/include/types/iot_mqtt_types.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/src/iot_ble_mqtt_serialize.c b/libraries/c_sdk/standard/mqtt/src/iot_ble_mqtt_serialize.c
index cfa8c0c5e..5fdc82e28 100644
--- a/libraries/c_sdk/standard/mqtt/src/iot_ble_mqtt_serialize.c
+++ b/libraries/c_sdk/standard/mqtt/src/iot_ble_mqtt_serialize.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/src/iot_mqtt_agent.c b/libraries/c_sdk/standard/mqtt/src/iot_mqtt_agent.c
index b4567c94a..4417c373e 100644
--- a/libraries/c_sdk/standard/mqtt/src/iot_mqtt_agent.c
+++ b/libraries/c_sdk/standard/mqtt/src/iot_mqtt_agent.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/src/iot_mqtt_api.c b/libraries/c_sdk/standard/mqtt/src/iot_mqtt_api.c
index d1c167007..32b0f995b 100644
--- a/libraries/c_sdk/standard/mqtt/src/iot_mqtt_api.c
+++ b/libraries/c_sdk/standard/mqtt/src/iot_mqtt_api.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/src/iot_mqtt_network.c b/libraries/c_sdk/standard/mqtt/src/iot_mqtt_network.c
index 514e5da28..fe169ea18 100644
--- a/libraries/c_sdk/standard/mqtt/src/iot_mqtt_network.c
+++ b/libraries/c_sdk/standard/mqtt/src/iot_mqtt_network.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/src/iot_mqtt_operation.c b/libraries/c_sdk/standard/mqtt/src/iot_mqtt_operation.c
index d4fdcbb33..9eabc90cc 100644
--- a/libraries/c_sdk/standard/mqtt/src/iot_mqtt_operation.c
+++ b/libraries/c_sdk/standard/mqtt/src/iot_mqtt_operation.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/src/iot_mqtt_serialize.c b/libraries/c_sdk/standard/mqtt/src/iot_mqtt_serialize.c
index 5510c5156..57669803f 100644
--- a/libraries/c_sdk/standard/mqtt/src/iot_mqtt_serialize.c
+++ b/libraries/c_sdk/standard/mqtt/src/iot_mqtt_serialize.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/src/iot_mqtt_static_memory.c b/libraries/c_sdk/standard/mqtt/src/iot_mqtt_static_memory.c
index 6bc8d3634..e2535fe3a 100644
--- a/libraries/c_sdk/standard/mqtt/src/iot_mqtt_static_memory.c
+++ b/libraries/c_sdk/standard/mqtt/src/iot_mqtt_static_memory.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/src/iot_mqtt_subscription.c b/libraries/c_sdk/standard/mqtt/src/iot_mqtt_subscription.c
index 60520d7cb..8c0c2447b 100644
--- a/libraries/c_sdk/standard/mqtt/src/iot_mqtt_subscription.c
+++ b/libraries/c_sdk/standard/mqtt/src/iot_mqtt_subscription.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/src/iot_mqtt_validate.c b/libraries/c_sdk/standard/mqtt/src/iot_mqtt_validate.c
index 80cc263ab..beaaeea57 100644
--- a/libraries/c_sdk/standard/mqtt/src/iot_mqtt_validate.c
+++ b/libraries/c_sdk/standard/mqtt/src/iot_mqtt_validate.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/src/private/iot_mqtt_internal.h b/libraries/c_sdk/standard/mqtt/src/private/iot_mqtt_internal.h
index 9f6368b94..15afbeae8 100644
--- a/libraries/c_sdk/standard/mqtt/src/private/iot_mqtt_internal.h
+++ b/libraries/c_sdk/standard/mqtt/src/private/iot_mqtt_internal.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/test/access/iot_test_access_mqtt.h b/libraries/c_sdk/standard/mqtt/test/access/iot_test_access_mqtt.h
index df9dbbad6..41fdf9cf5 100644
--- a/libraries/c_sdk/standard/mqtt/test/access/iot_test_access_mqtt.h
+++ b/libraries/c_sdk/standard/mqtt/test/access/iot_test_access_mqtt.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/test/access/iot_test_access_mqtt_api.c b/libraries/c_sdk/standard/mqtt/test/access/iot_test_access_mqtt_api.c
index 6e4a77ba8..e1b0d5ba2 100644
--- a/libraries/c_sdk/standard/mqtt/test/access/iot_test_access_mqtt_api.c
+++ b/libraries/c_sdk/standard/mqtt/test/access/iot_test_access_mqtt_api.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/test/access/iot_test_access_mqtt_subscription.c b/libraries/c_sdk/standard/mqtt/test/access/iot_test_access_mqtt_subscription.c
index 2576ef980..618f9c6f9 100644
--- a/libraries/c_sdk/standard/mqtt/test/access/iot_test_access_mqtt_subscription.c
+++ b/libraries/c_sdk/standard/mqtt/test/access/iot_test_access_mqtt_subscription.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/test/iot_test_mqtt_agent.c b/libraries/c_sdk/standard/mqtt/test/iot_test_mqtt_agent.c
index c5232d05d..12f5d3bf5 100644
--- a/libraries/c_sdk/standard/mqtt/test/iot_test_mqtt_agent.c
+++ b/libraries/c_sdk/standard/mqtt/test/iot_test_mqtt_agent.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/test/system/iot_tests_mqtt_system.c b/libraries/c_sdk/standard/mqtt/test/system/iot_tests_mqtt_system.c
index 4e8aebcdd..0ffe0b8c7 100644
--- a/libraries/c_sdk/standard/mqtt/test/system/iot_tests_mqtt_system.c
+++ b/libraries/c_sdk/standard/mqtt/test/system/iot_tests_mqtt_system.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_api.c b/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_api.c
index 5435ba69f..2531abd92 100644
--- a/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_api.c
+++ b/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_api.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_metrics.c b/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_metrics.c
index c918bd8af..38bc7ec5f 100644
--- a/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_metrics.c
+++ b/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_metrics.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_receive.c b/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_receive.c
index 900d5badd..4ec355fac 100644
--- a/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_receive.c
+++ b/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_receive.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_serialize_ble.c b/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_serialize_ble.c
index 8ba55d582..d2a668b99 100644
--- a/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_serialize_ble.c
+++ b/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_serialize_ble.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_subscription.c b/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_subscription.c
index 50bfa8736..5a00bc341 100644
--- a/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_subscription.c
+++ b/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_subscription.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_validate.c b/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_validate.c
index 2c66cfb54..2acd20839 100644
--- a/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_validate.c
+++ b/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_validate.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS MQTT V2.0.0
+ * Amazon FreeRTOS MQTT V2.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/serializer/include/iot_json_utils.h b/libraries/c_sdk/standard/serializer/include/iot_json_utils.h
index 1121090a4..ecc59753e 100644
--- a/libraries/c_sdk/standard/serializer/include/iot_json_utils.h
+++ b/libraries/c_sdk/standard/serializer/include/iot_json_utils.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Serializer V1.0.0
+ * Amazon FreeRTOS Serializer V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/serializer/include/iot_serializer.h b/libraries/c_sdk/standard/serializer/include/iot_serializer.h
index 3b5ad605a..5c478c2ca 100644
--- a/libraries/c_sdk/standard/serializer/include/iot_serializer.h
+++ b/libraries/c_sdk/standard/serializer/include/iot_serializer.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Serializer V1.0.0
+ * Amazon FreeRTOS Serializer V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_decoder.c b/libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_decoder.c
index f6bd3f847..6c42bb3b2 100644
--- a/libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_decoder.c
+++ b/libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_decoder.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Serializer V1.0.0
+ * Amazon FreeRTOS Serializer V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_encoder.c b/libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_encoder.c
index 4c9f3983a..140c3efba 100644
--- a/libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_encoder.c
+++ b/libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_encoder.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Serializer V1.0.0
+ * Amazon FreeRTOS Serializer V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/serializer/src/iot_json_utils.c b/libraries/c_sdk/standard/serializer/src/iot_json_utils.c
index 05c69172e..291bef6ad 100644
--- a/libraries/c_sdk/standard/serializer/src/iot_json_utils.c
+++ b/libraries/c_sdk/standard/serializer/src/iot_json_utils.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Serializer V1.0.0
+ * Amazon FreeRTOS Serializer V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/serializer/src/iot_serializer_static_memory.c b/libraries/c_sdk/standard/serializer/src/iot_serializer_static_memory.c
index 608b7a001..b080e3ee2 100644
--- a/libraries/c_sdk/standard/serializer/src/iot_serializer_static_memory.c
+++ b/libraries/c_sdk/standard/serializer/src/iot_serializer_static_memory.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Serializer V1.0.0
+ * Amazon FreeRTOS Serializer V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_decoder.c b/libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_decoder.c
index 687345616..8668ca28c 100644
--- a/libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_decoder.c
+++ b/libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_decoder.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Serializer V1.0.0
+ * Amazon FreeRTOS Serializer V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_encoder.c b/libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_encoder.c
index 24d8e348b..8b5305e99 100644
--- a/libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_encoder.c
+++ b/libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_encoder.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Serializer V1.0.0
+ * Amazon FreeRTOS Serializer V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/serializer/test/iot_tests_deserializer_json.c b/libraries/c_sdk/standard/serializer/test/iot_tests_deserializer_json.c
index f6fb56c2e..a60fb39b9 100644
--- a/libraries/c_sdk/standard/serializer/test/iot_tests_deserializer_json.c
+++ b/libraries/c_sdk/standard/serializer/test/iot_tests_deserializer_json.c
@@ -1,3 +1,28 @@
+/*
+ * Amazon FreeRTOS Serializer V1.1.0
+ * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
 /* Unity framework includes. */
 #include "unity_fixture.h"
 #include "unity.h"
diff --git a/libraries/c_sdk/standard/serializer/test/iot_tests_serializer_cbor.c b/libraries/c_sdk/standard/serializer/test/iot_tests_serializer_cbor.c
index 6e020d988..b4f0ac40d 100644
--- a/libraries/c_sdk/standard/serializer/test/iot_tests_serializer_cbor.c
+++ b/libraries/c_sdk/standard/serializer/test/iot_tests_serializer_cbor.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Serializer V1.0.0
+ * Amazon FreeRTOS Serializer V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/c_sdk/standard/serializer/test/iot_tests_serializer_json.c b/libraries/c_sdk/standard/serializer/test/iot_tests_serializer_json.c
index 4eb9b91d9..101999c5a 100644
--- a/libraries/c_sdk/standard/serializer/test/iot_tests_serializer_json.c
+++ b/libraries/c_sdk/standard/serializer/test/iot_tests_serializer_json.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Serializer V1.0.0
+ * Amazon FreeRTOS Serializer V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/greengrass/include/aws_ggd_config_defaults.h b/libraries/freertos_plus/aws/greengrass/include/aws_ggd_config_defaults.h
index 2ed565e0f..558560bb7 100644
--- a/libraries/freertos_plus/aws/greengrass/include/aws_ggd_config_defaults.h
+++ b/libraries/freertos_plus/aws/greengrass/include/aws_ggd_config_defaults.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Greengrass V1.0.4
+ * Amazon FreeRTOS Greengrass V1.0.5
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/greengrass/include/aws_greengrass_discovery.h b/libraries/freertos_plus/aws/greengrass/include/aws_greengrass_discovery.h
index 5e435df4b..b9d8ef288 100644
--- a/libraries/freertos_plus/aws/greengrass/include/aws_greengrass_discovery.h
+++ b/libraries/freertos_plus/aws/greengrass/include/aws_greengrass_discovery.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Greengrass V1.0.4
+ * Amazon FreeRTOS Greengrass V1.0.5
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c b/libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c
index 90ff13f0a..bfef03e0c 100644
--- a/libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c
+++ b/libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Greengrass V1.0.4
+ * Amazon FreeRTOS Greengrass V1.0.5
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.c b/libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.c
index 96639f3ec..8a1a9d982 100644
--- a/libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.c
+++ b/libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Greengrass V1.0.4
+ * Amazon FreeRTOS Greengrass V1.0.5
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.h b/libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.h
index 97b1a9163..1a3bf30cc 100644
--- a/libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.h
+++ b/libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Greengrass V1.0.4
+ * Amazon FreeRTOS Greengrass V1.0.5
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/greengrass/test/aws_greengrass_discovery_test_access_declare.h b/libraries/freertos_plus/aws/greengrass/test/aws_greengrass_discovery_test_access_declare.h
index d7a7e15ef..892da7190 100644
--- a/libraries/freertos_plus/aws/greengrass/test/aws_greengrass_discovery_test_access_declare.h
+++ b/libraries/freertos_plus/aws/greengrass/test/aws_greengrass_discovery_test_access_declare.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Greengrass V1.0.4
+ * Amazon FreeRTOS Greengrass V1.0.5
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/greengrass/test/aws_greengrass_discovery_test_access_define.h b/libraries/freertos_plus/aws/greengrass/test/aws_greengrass_discovery_test_access_define.h
index 926e613c5..825bd16c7 100644
--- a/libraries/freertos_plus/aws/greengrass/test/aws_greengrass_discovery_test_access_define.h
+++ b/libraries/freertos_plus/aws/greengrass/test/aws_greengrass_discovery_test_access_define.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Greengrass V1.0.4
+ * Amazon FreeRTOS Greengrass V1.0.5
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/greengrass/test/aws_test_greengrass_discovery.c b/libraries/freertos_plus/aws/greengrass/test/aws_test_greengrass_discovery.c
index a524543ae..00461edeb 100644
--- a/libraries/freertos_plus/aws/greengrass/test/aws_test_greengrass_discovery.c
+++ b/libraries/freertos_plus/aws/greengrass/test/aws_test_greengrass_discovery.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Greengrass V1.0.4
+ * Amazon FreeRTOS Greengrass V1.0.5
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/greengrass/test/aws_test_helper_secure_connect.c b/libraries/freertos_plus/aws/greengrass/test/aws_test_helper_secure_connect.c
index a90cf8f83..106513587 100644
--- a/libraries/freertos_plus/aws/greengrass/test/aws_test_helper_secure_connect.c
+++ b/libraries/freertos_plus/aws/greengrass/test/aws_test_helper_secure_connect.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Greengrass V1.0.4
+ * Amazon FreeRTOS Greengrass V1.0.5
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/include/aws_iot_ota_agent.h b/libraries/freertos_plus/aws/ota/include/aws_iot_ota_agent.h
index cbf6efafd..2ecda077e 100644
--- a/libraries/freertos_plus/aws/ota/include/aws_iot_ota_agent.h
+++ b/libraries/freertos_plus/aws/ota/include/aws_iot_ota_agent.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/include/aws_ota_types.h b/libraries/freertos_plus/aws/ota/include/aws_ota_types.h
index 4ed692dd4..1159ce7e0 100644
--- a/libraries/freertos_plus/aws/ota/include/aws_ota_types.h
+++ b/libraries/freertos_plus/aws/ota/include/aws_ota_types.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/src/aws_iot_ota_agent.c b/libraries/freertos_plus/aws/ota/src/aws_iot_ota_agent.c
index 0117d293f..a16c64990 100644
--- a/libraries/freertos_plus/aws/ota/src/aws_iot_ota_agent.c
+++ b/libraries/freertos_plus/aws/ota/src/aws_iot_ota_agent.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/src/aws_ota_agent_internal.h b/libraries/freertos_plus/aws/ota/src/aws_ota_agent_internal.h
index 27985d1bf..0fb69f092 100644
--- a/libraries/freertos_plus/aws/ota/src/aws_ota_agent_internal.h
+++ b/libraries/freertos_plus/aws/ota/src/aws_ota_agent_internal.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/src/aws_ota_cbor.c b/libraries/freertos_plus/aws/ota/src/aws_ota_cbor.c
index 9f6fe9b3a..f8e2c7562 100644
--- a/libraries/freertos_plus/aws/ota/src/aws_ota_cbor.c
+++ b/libraries/freertos_plus/aws/ota/src/aws_ota_cbor.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/src/aws_ota_cbor.h b/libraries/freertos_plus/aws/ota/src/aws_ota_cbor.h
index 7c40ad753..0d48cc39b 100644
--- a/libraries/freertos_plus/aws/ota/src/aws_ota_cbor.h
+++ b/libraries/freertos_plus/aws/ota/src/aws_ota_cbor.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/src/aws_ota_cbor_internal.h b/libraries/freertos_plus/aws/ota/src/aws_ota_cbor_internal.h
index 8b13a6879..f95af8387 100644
--- a/libraries/freertos_plus/aws/ota/src/aws_ota_cbor_internal.h
+++ b/libraries/freertos_plus/aws/ota/src/aws_ota_cbor_internal.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/src/aws_ota_pal.h b/libraries/freertos_plus/aws/ota/src/aws_ota_pal.h
index 735107cfb..f5f90c676 100644
--- a/libraries/freertos_plus/aws/ota/src/aws_ota_pal.h
+++ b/libraries/freertos_plus/aws/ota/src/aws_ota_pal.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/test/aws_ota_agent_test_access_declare.h b/libraries/freertos_plus/aws/ota/test/aws_ota_agent_test_access_declare.h
index 0a631b878..d1ebd35c5 100644
--- a/libraries/freertos_plus/aws/ota/test/aws_ota_agent_test_access_declare.h
+++ b/libraries/freertos_plus/aws/ota/test/aws_ota_agent_test_access_declare.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/test/aws_ota_agent_test_access_define.h b/libraries/freertos_plus/aws/ota/test/aws_ota_agent_test_access_define.h
index 19d48ca64..d0224fc2e 100644
--- a/libraries/freertos_plus/aws/ota/test/aws_ota_agent_test_access_define.h
+++ b/libraries/freertos_plus/aws/ota/test/aws_ota_agent_test_access_define.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/test/aws_ota_codesigner_certificate.h b/libraries/freertos_plus/aws/ota/test/aws_ota_codesigner_certificate.h
index f047d2410..fcff2bc46 100644
--- a/libraries/freertos_plus/aws/ota/test/aws_ota_codesigner_certificate.h
+++ b/libraries/freertos_plus/aws/ota/test/aws_ota_codesigner_certificate.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/test/aws_ota_pal_test_access_declare.h b/libraries/freertos_plus/aws/ota/test/aws_ota_pal_test_access_declare.h
index 0ae4e6f15..7e1d27eeb 100644
--- a/libraries/freertos_plus/aws/ota/test/aws_ota_pal_test_access_declare.h
+++ b/libraries/freertos_plus/aws/ota/test/aws_ota_pal_test_access_declare.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/test/aws_ota_pal_test_access_define.h b/libraries/freertos_plus/aws/ota/test/aws_ota_pal_test_access_define.h
index c3015adec..c8c58b7d7 100644
--- a/libraries/freertos_plus/aws/ota/test/aws_ota_pal_test_access_define.h
+++ b/libraries/freertos_plus/aws/ota/test/aws_ota_pal_test_access_define.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/test/aws_test_ota_agent.c b/libraries/freertos_plus/aws/ota/test/aws_test_ota_agent.c
index d46839023..c6a22de89 100644
--- a/libraries/freertos_plus/aws/ota/test/aws_test_ota_agent.c
+++ b/libraries/freertos_plus/aws/ota/test/aws_test_ota_agent.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/test/aws_test_ota_cbor.c b/libraries/freertos_plus/aws/ota/test/aws_test_ota_cbor.c
index 50e15a117..56ec0cf66 100644
--- a/libraries/freertos_plus/aws/ota/test/aws_test_ota_cbor.c
+++ b/libraries/freertos_plus/aws/ota/test/aws_test_ota_cbor.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/test/aws_test_ota_end_to_end.c b/libraries/freertos_plus/aws/ota/test/aws_test_ota_end_to_end.c
index 1c7861afb..892fbe554 100644
--- a/libraries/freertos_plus/aws/ota/test/aws_test_ota_end_to_end.c
+++ b/libraries/freertos_plus/aws/ota/test/aws_test_ota_end_to_end.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/test/aws_test_ota_pal.c b/libraries/freertos_plus/aws/ota/test/aws_test_ota_pal.c
index bc8696dcc..2bbc9f880 100644
--- a/libraries/freertos_plus/aws/ota/test/aws_test_ota_pal.c
+++ b/libraries/freertos_plus/aws/ota/test/aws_test_ota_pal.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/test/aws_test_ota_pal_ecdsa_sha256_signature.h b/libraries/freertos_plus/aws/ota/test/aws_test_ota_pal_ecdsa_sha256_signature.h
index 25ae5d6a2..9371e5fd0 100644
--- a/libraries/freertos_plus/aws/ota/test/aws_test_ota_pal_ecdsa_sha256_signature.h
+++ b/libraries/freertos_plus/aws/ota/test/aws_test_ota_pal_ecdsa_sha256_signature.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/test/aws_test_ota_pal_rsa_sha1_signature.h b/libraries/freertos_plus/aws/ota/test/aws_test_ota_pal_rsa_sha1_signature.h
index 1cedf4781..5037e147f 100644
--- a/libraries/freertos_plus/aws/ota/test/aws_test_ota_pal_rsa_sha1_signature.h
+++ b/libraries/freertos_plus/aws/ota/test/aws_test_ota_pal_rsa_sha1_signature.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/test/aws_test_ota_pal_rsa_sha256_signature.h b/libraries/freertos_plus/aws/ota/test/aws_test_ota_pal_rsa_sha256_signature.h
index fd6329b8f..59c5fa04c 100644
--- a/libraries/freertos_plus/aws/ota/test/aws_test_ota_pal_rsa_sha256_signature.h
+++ b/libraries/freertos_plus/aws/ota/test/aws_test_ota_pal_rsa_sha256_signature.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/aws/ota/test/aws_test_ota_signature_methods.h b/libraries/freertos_plus/aws/ota/test/aws_test_ota_signature_methods.h
index 4b887e65d..c8d19ce5a 100644
--- a/libraries/freertos_plus/aws/ota/test/aws_test_ota_signature_methods.h
+++ b/libraries/freertos_plus/aws/ota/test/aws_test_ota_signature_methods.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS OTA V1.0.2
+ * Amazon FreeRTOS OTA V1.0.3
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/crypto/include/iot_crypto.h b/libraries/freertos_plus/standard/crypto/include/iot_crypto.h
index f6ed5f34f..c5012fda4 100644
--- a/libraries/freertos_plus/standard/crypto/include/iot_crypto.h
+++ b/libraries/freertos_plus/standard/crypto/include/iot_crypto.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Crypto V1.0.4
+ * Amazon FreeRTOS Crypto V1.0.5
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/crypto/src/iot_crypto.c b/libraries/freertos_plus/standard/crypto/src/iot_crypto.c
index bf3284e68..4a15ea4f8 100644
--- a/libraries/freertos_plus/standard/crypto/src/iot_crypto.c
+++ b/libraries/freertos_plus/standard/crypto/src/iot_crypto.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Crypto V1.0.4
+ * Amazon FreeRTOS Crypto V1.0.5
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/crypto/test/iot_test_crypto.c b/libraries/freertos_plus/standard/crypto/test/iot_test_crypto.c
index efd305d63..ae5f3f4a6 100644
--- a/libraries/freertos_plus/standard/crypto/test/iot_test_crypto.c
+++ b/libraries/freertos_plus/standard/crypto/test/iot_test_crypto.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Crypto V1.0.4
+ * Amazon FreeRTOS Crypto V1.0.5
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX.h b/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX.h
index d93870923..faef7f2d1 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX.h
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_internal.h b/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_internal.h
index 16f8036b9..a412c75e5 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_internal.h
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_internal.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_portable_default.h b/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_portable_default.h
index 763b9015d..c66d35c14 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_portable_default.h
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_portable_default.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_types.h b/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_types.h
index 3b45b8d3f..3d6153f2a 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_types.h
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_types.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_clock.c b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_clock.c
index 51e592ae4..0aa89c421 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_clock.c
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_clock.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_mqueue.c b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_mqueue.c
index 9f9079bb1..14471dd93 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_mqueue.c
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_mqueue.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread.c b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread.c
index f34e9ec26..c94841693 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread.c
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_barrier.c b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_barrier.c
index 6e14ef3e9..0af756eaa 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_barrier.c
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_barrier.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_cond.c b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_cond.c
index eca888051..376650496 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_cond.c
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_cond.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_mutex.c b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_mutex.c
index 0ea3aeb65..772c0b12b 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_mutex.c
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_mutex.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_sched.c b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_sched.c
index 7916a99e7..a25deeb87 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_sched.c
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_sched.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_semaphore.c b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_semaphore.c
index cee43ca31..8ae14883a 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_semaphore.c
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_semaphore.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_timer.c b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_timer.c
index f790e8348..5965656d0 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_timer.c
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_timer.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_unistd.c b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_unistd.c
index 0d3d9144a..54b1934eb 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_unistd.c
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_unistd.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_utils.c b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_utils.c
index c12158787..0a6a5f6f4 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_utils.c
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_utils.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_clock.c b/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_clock.c
index 85830616d..2f2db3917 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_clock.c
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_clock.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_mqueue.c b/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_mqueue.c
index e86d6fb58..c508e4747 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_mqueue.c
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_mqueue.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_pthread.c b/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_pthread.c
index 3a7c449e3..3dbd7ca8f 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_pthread.c
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_pthread.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_semaphore.c b/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_semaphore.c
index 5507a165e..2addbf29a 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_semaphore.c
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_semaphore.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_stress.c b/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_stress.c
index 4110af504..cc3982697 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_stress.c
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_stress.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_timer.c b/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_timer.c
index f8647896f..d30c83677 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_timer.c
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_timer.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_unistd.c b/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_unistd.c
index c89f8f4ec..a8fc17022 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_unistd.c
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_unistd.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_utils.c b/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_utils.c
index 6742f27ba..b3fd4b905 100644
--- a/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_utils.c
+++ b/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_utils.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS POSIX V1.1.0
+ * Amazon FreeRTOS POSIX V1.1.1
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOSIPConfigDefaults.h b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOSIPConfigDefaults.h
index bec91d528..8dd5d3853 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOSIPConfigDefaults.h
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOSIPConfigDefaults.h
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_ARP.h b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_ARP.h
index 50e01b1ca..1c9e76092 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_ARP.h
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_ARP.h
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_DHCP.h b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_DHCP.h
index ed092bf6d..a720eff01 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_DHCP.h
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_DHCP.h
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_DNS.h b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_DNS.h
index 8da50fce0..1d0ac6ce4 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_DNS.h
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_DNS.h
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_IP.h b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_IP.h
index ad58e304b..9ebc47686 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_IP.h
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_IP.h
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_IP_Private.h b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_IP_Private.h
index c84fdee07..9eb5b2c24 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_IP_Private.h
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_IP_Private.h
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_Sockets.h b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_Sockets.h
index 59fecbf45..3fb856ba8 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_Sockets.h
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_Sockets.h
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_Stream_Buffer.h b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_Stream_Buffer.h
index cb30e6399..ecd387601 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_Stream_Buffer.h
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_Stream_Buffer.h
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_TCP_IP.h b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_TCP_IP.h
index 4b53cc22f..c1448ba63 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_TCP_IP.h
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_TCP_IP.h
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_TCP_WIN.h b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_TCP_WIN.h
index cd8190a51..8c3eb5908 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_TCP_WIN.h
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_TCP_WIN.h
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_UDP_IP.h b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_UDP_IP.h
index 586c9d36a..fb79159ee 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_UDP_IP.h
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_UDP_IP.h
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_errno_TCP.h b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_errno_TCP.h
index c9eda6ff5..66c202714 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_errno_TCP.h
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_errno_TCP.h
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/include/IPTraceMacroDefaults.h b/libraries/freertos_plus/standard/freertos_plus_tcp/include/IPTraceMacroDefaults.h
index 188729fe6..2fa1fa7e5 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/include/IPTraceMacroDefaults.h
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/include/IPTraceMacroDefaults.h
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/include/NetworkBufferManagement.h b/libraries/freertos_plus/standard/freertos_plus_tcp/include/NetworkBufferManagement.h
index 6da7fc1a7..1c8a9d7c7 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/include/NetworkBufferManagement.h
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/include/NetworkBufferManagement.h
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/include/NetworkInterface.h b/libraries/freertos_plus/standard/freertos_plus_tcp/include/NetworkInterface.h
index 2b5e52114..830ad9c15 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/include/NetworkInterface.h
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/include/NetworkInterface.h
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_ARP.c b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_ARP.c
index d41bc7823..0c8f5407b 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_ARP.c
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_ARP.c
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DHCP.c b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DHCP.c
index 75fe7adb5..c4f79e8e7 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DHCP.c
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DHCP.c
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DNS.c b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DNS.c
index cc416d9a7..57fd52491 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DNS.c
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DNS.c
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_IP.c b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_IP.c
index 12a642e04..462ac5e02 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_IP.c
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_IP.c
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_Sockets.c b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_Sockets.c
index 012d05ad7..a7080a298 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_Sockets.c
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_Sockets.c
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_Stream_Buffer.c b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_Stream_Buffer.c
index 340131a9c..6ad3a1c34 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_Stream_Buffer.c
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_Stream_Buffer.c
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_IP.c b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_IP.c
index e23ed9232..5fccdf327 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_IP.c
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_IP.c
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_WIN.c b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_WIN.c
index 3768c6f79..1f5a845fa 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_WIN.c
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_WIN.c
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_UDP_IP.c b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_UDP_IP.c
index 46660db0c..10e6b547f 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_UDP_IP.c
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_UDP_IP.c
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_freertos_tcp_test_access_declare.h b/libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_freertos_tcp_test_access_declare.h
index d0e652294..eb964046c 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_freertos_tcp_test_access_declare.h
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_freertos_tcp_test_access_declare.h
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_freertos_tcp_test_access_dns_define.h b/libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_freertos_tcp_test_access_dns_define.h
index f37a8cbb8..410a47112 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_freertos_tcp_test_access_dns_define.h
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_freertos_tcp_test_access_dns_define.h
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_freertos_tcp_test_access_tcp_define.h b/libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_freertos_tcp_test_access_tcp_define.h
index aefcdabec..b489408ff 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_freertos_tcp_test_access_tcp_define.h
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_freertos_tcp_test_access_tcp_define.h
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_test_freertos_tcp.c b/libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_test_freertos_tcp.c
index 797309875..59dbbc491 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_test_freertos_tcp.c
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_test_freertos_tcp.c
@@ -1,5 +1,5 @@
 /*
- * FreeRTOS+TCP V2.0.11
+ * FreeRTOS+TCP V2.1.0
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/pkcs11/include/iot_pkcs11.h b/libraries/freertos_plus/standard/pkcs11/include/iot_pkcs11.h
index e621b2192..6165f0a3e 100644
--- a/libraries/freertos_plus/standard/pkcs11/include/iot_pkcs11.h
+++ b/libraries/freertos_plus/standard/pkcs11/include/iot_pkcs11.h
@@ -1,6 +1,6 @@
 /*
- * Amazon FreeRTOS
- * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ * Amazon FreeRTOS PKCS #11 V1.0.0
+ * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
  * this software and associated documentation files (the "Software"), to deal in
@@ -23,7 +23,6 @@
  * http://www.FreeRTOS.org
  */
 
-
 #ifndef _AWS_PKCS11_H_
 #define _AWS_PKCS11_H_
 
diff --git a/libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c b/libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c
index b79986b09..de589b81d 100644
--- a/libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c
+++ b/libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c
@@ -1,3 +1,28 @@
+/*
+ * Amazon FreeRTOS PKCS #11 V1.0.0
+ * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ *
+ * Permission is hereby granted, free of charge, to any person obtaining a copy of
+ * this software and associated documentation files (the "Software"), to deal in
+ * the Software without restriction, including without limitation the rights to
+ * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
+ * the Software, and to permit persons to whom the Software is furnished to do so,
+ * subject to the following conditions:
+ *
+ * The above copyright notice and this permission notice shall be included in all
+ * copies or substantial portions of the Software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ *
+ * http://aws.amazon.com/freertos
+ * http://www.FreeRTOS.org
+ */
+
 #include "iot_pkcs11.h"
 #include "iot_pkcs11_config.h"
 #include "FreeRTOS.h"
diff --git a/libraries/freertos_plus/standard/tls/include/iot_tls.h b/libraries/freertos_plus/standard/tls/include/iot_tls.h
index 457c91de4..bfb3c515a 100644
--- a/libraries/freertos_plus/standard/tls/include/iot_tls.h
+++ b/libraries/freertos_plus/standard/tls/include/iot_tls.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS TLS V1.1.4
+ * Amazon FreeRTOS TLS V1.1.5
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/tls/src/iot_tls.c b/libraries/freertos_plus/standard/tls/src/iot_tls.c
index a4f9f4bb0..f8d876f4b 100644
--- a/libraries/freertos_plus/standard/tls/src/iot_tls.c
+++ b/libraries/freertos_plus/standard/tls/src/iot_tls.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS TLS V1.1.4
+ * Amazon FreeRTOS TLS V1.1.5
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
@@ -852,41 +852,39 @@ BaseType_t TLS_Recv( void * pvContext,
 
     if( ( NULL != pxCtx ) && ( pdTRUE == pxCtx->xTLSHandshakeSuccessful ) )
     {
-        while( xRead < xReadLength )
+        /* This routine will return however many bytes are returned from from mbedtls_ssl_read
+         * immediately unless MBEDTLS_ERR_SSL_WANT_READ is returned, in which case we try again. */
+        do
         {
             xResult = mbedtls_ssl_read( &pxCtx->xMbedSslCtx,
                                         pucReadBuffer + xRead,
                                         xReadLength - xRead );
 
-            if( 0 < xResult )
+            if( xResult > 0 )
             {
                 /* Got data, so update the tally and keep looping. */
                 xRead += ( size_t ) xResult;
             }
-            else if( 0 == xResult )
-            {
-                /* No data received (and no error). The secure sockets
-                 * API supports non-blocking read, so stop the loop but don't
-                 * flag an error. */
-                break;
-            }
-            else if( MBEDTLS_ERR_SSL_WANT_READ != xResult )
-            {
-                /* Hard error: invalidate the context and stop. */
-                prvFreeContext( pxCtx );
-                break;
-            }
-        }
+
+            /* If xResult == 0, then no data was received (and there is no error).
+             * The secure sockets API supports non-blocking read, so stop the loop,
+             * but don't flag an error. */
+        } while( ( xResult == MBEDTLS_ERR_SSL_WANT_READ ) );
     }
     else
     {
         xResult = MBEDTLS_ERR_SSL_INTERNAL_ERROR;
     }
 
-    if( 0 <= xResult )
+    if( xResult >= 0 )
     {
         xResult = ( BaseType_t ) xRead;
     }
+    else
+    {
+        /* xResult < 0 is a hard error, so invalidate the context and stop. */
+        prvFreeContext( pxCtx );
+    }
 
     return xResult;
 }
diff --git a/libraries/freertos_plus/standard/tls/test/iot_test_tls.c b/libraries/freertos_plus/standard/tls/test/iot_test_tls.c
index d94c26aff..e078dbfb4 100644
--- a/libraries/freertos_plus/standard/tls/test/iot_test_tls.c
+++ b/libraries/freertos_plus/standard/tls/test/iot_test_tls.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS TLS V1.1.4
+ * Amazon FreeRTOS TLS V1.1.5
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/tls/test/iot_test_tls.h b/libraries/freertos_plus/standard/tls/test/iot_test_tls.h
index 825939632..723c3e84b 100644
--- a/libraries/freertos_plus/standard/tls/test/iot_test_tls.h
+++ b/libraries/freertos_plus/standard/tls/test/iot_test_tls.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS TLS V1.1.4
+ * Amazon FreeRTOS TLS V1.1.5
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/utils/include/iot_pki_utils.h b/libraries/freertos_plus/standard/utils/include/iot_pki_utils.h
index e0264b88c..4b047f3fe 100644
--- a/libraries/freertos_plus/standard/utils/include/iot_pki_utils.h
+++ b/libraries/freertos_plus/standard/utils/include/iot_pki_utils.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS
+ * Amazon FreeRTOS Utils V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/utils/include/iot_system_init.h b/libraries/freertos_plus/standard/utils/include/iot_system_init.h
index 9d8f0eac8..c3df64aea 100644
--- a/libraries/freertos_plus/standard/utils/include/iot_system_init.h
+++ b/libraries/freertos_plus/standard/utils/include/iot_system_init.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Utils V1.0.0
+ * Amazon FreeRTOS Utils V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/libraries/freertos_plus/standard/utils/src/iot_pki_utils.c b/libraries/freertos_plus/standard/utils/src/iot_pki_utils.c
index d8fbf9fe6..9a3603358 100644
--- a/libraries/freertos_plus/standard/utils/src/iot_pki_utils.c
+++ b/libraries/freertos_plus/standard/utils/src/iot_pki_utils.c
@@ -1,6 +1,6 @@
 /*
- * Amazon FreeRTOS PKI Utilities V1.0.0
- * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
+ * Amazon FreeRTOS Utils V1.1.0
+ * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
  * this software and associated documentation files (the "Software"), to deal in
diff --git a/libraries/freertos_plus/standard/utils/src/iot_system_init.c b/libraries/freertos_plus/standard/utils/src/iot_system_init.c
index fc3c4ce4f..b19b08e08 100644
--- a/libraries/freertos_plus/standard/utils/src/iot_system_init.c
+++ b/libraries/freertos_plus/standard/utils/src/iot_system_init.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS Utils V1.0.0
+ * Amazon FreeRTOS Utils V1.1.0
  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/projects/infineon/xmc4800_iotkit/dave4/aws_demos/.cproject b/projects/infineon/xmc4800_iotkit/dave4/aws_demos/.cproject
index f1787d3d5..acb03bb3c 100644
--- a/projects/infineon/xmc4800_iotkit/dave4/aws_demos/.cproject
+++ b/projects/infineon/xmc4800_iotkit/dave4/aws_demos/.cproject
@@ -57,6 +57,7 @@
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/mqtt/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/serializer/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/aws/shadow/include"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/abstractions/posix/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../vendors/infineon/boards/xmc4800_iotkit/ports/posix"/>
@@ -65,6 +66,7 @@
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/abstractions/pkcs11/mbedtls"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/pkcs11"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/tinycbor"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/http-parser"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/jsmn"/>
 								</option>
 								<option id="org.eclipse.cdt.cross.arm.gnu.c.compiler.option.preprocessor.def.2079822681" name="Defined symbols (-D)" superClass="org.eclipse.cdt.cross.arm.gnu.c.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
diff --git a/projects/infineon/xmc4800_iotkit/dave4/aws_demos/.project b/projects/infineon/xmc4800_iotkit/dave4/aws_demos/.project
index df5f13b4f..d33cdc5ea 100644
--- a/projects/infineon/xmc4800_iotkit/dave4/aws_demos/.project
+++ b/projects/infineon/xmc4800_iotkit/dave4/aws_demos/.project
@@ -653,6 +653,11 @@
 			<type>1</type>
 			<locationURI>AFR_HOME/libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c</locationURI>
 		</link>
+		<link>
+			<name>vendors/infineon/boards/xmc4800_iotkit/ports/pkcs11/iot_pkcs11_pal.c</name>
+			<type>1</type>
+			<locationURI>AFR_HOME/vendors/infineon/boards/xmc4800_iotkit/ports/pkcs11/iot_pkcs11_pal.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c</name>
 			<type>1</type>
@@ -663,11 +668,6 @@
 			<type>1</type>
 			<locationURI>AFR_HOME/libraries/abstractions/pkcs11/mbedtls/threading_alt.h</locationURI>
 		</link>
-		<link>
-			<name>vendors/infineon/boards/xmc4800_iotkit/ports/pkcs11/iot_pkcs11_pal.c</name>
-			<type>1</type>
-			<locationURI>AFR_HOME/vendors/infineon/boards/xmc4800_iotkit/ports/pkcs11/iot_pkcs11_pal.c</locationURI>
-		</link>
 		<link>
 			<name>libraries/freertos_plus/standard/utils/src/iot_system_init.c</name>
 			<type>1</type>
@@ -863,6 +863,16 @@
 			<type>1</type>
 			<locationURI>AFR_HOME/libraries/c_sdk/aws/shadow/include/aws_shadow.h</locationURI>
 		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_client.c</name>
+			<type>1</type>
+			<locationURI>AFR_HOME/libraries/c_sdk/standard/https/src/iot_https_client.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_utils.c</name>
+			<type>1</type>
+			<locationURI>AFR_HOME/libraries/c_sdk/standard/https/src/iot_https_utils.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</name>
 			<type>1</type>
@@ -1033,6 +1043,21 @@
 			<type>1</type>
 			<locationURI>AFR_HOME/demos/greengrass_connectivity/aws_greengrass_discovery_demo.c</locationURI>
 		</link>
+		<link>
+			<name>demos/https/iot_demo_https_s3_download_sync.c</name>
+			<type>1</type>
+			<locationURI>AFR_HOME/demos/https/iot_demo_https_s3_download_sync.c</locationURI>
+		</link>
+		<link>
+			<name>demos/https/iot_demo_https_s3_download_async.c</name>
+			<type>1</type>
+			<locationURI>AFR_HOME/demos/https/iot_demo_https_s3_download_async.c</locationURI>
+		</link>
+		<link>
+			<name>demos/https/iot_demo_https_common.c</name>
+			<type>1</type>
+			<locationURI>AFR_HOME/demos/https/iot_demo_https_common.c</locationURI>
+		</link>
 		<link>
 			<name>demos/mqtt/iot_demo_mqtt.c</name>
 			<type>1</type>
@@ -2233,6 +2258,16 @@
 			<type>1</type>
 			<locationURI>AFR_HOME/libraries/3rdparty/tinycbor/cborparser_dup_string.c</locationURI>
 		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.h</name>
+			<type>1</type>
+			<locationURI>AFR_HOME/libraries/3rdparty/http-parser/http_parser.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.c</name>
+			<type>1</type>
+			<locationURI>AFR_HOME/libraries/3rdparty/http-parser/http_parser.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/3rdparty/jsmn/jsmn.h</name>
 			<type>1</type>
diff --git a/projects/infineon/xmc4800_iotkit/dave4/aws_tests/.cproject b/projects/infineon/xmc4800_iotkit/dave4/aws_tests/.cproject
index 03f26a785..d026ba222 100644
--- a/projects/infineon/xmc4800_iotkit/dave4/aws_tests/.cproject
+++ b/projects/infineon/xmc4800_iotkit/dave4/aws_tests/.cproject
@@ -60,6 +60,9 @@
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/serializer/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/aws/shadow/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/aws/shadow/src"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/test/access"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/include"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/src"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/test"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/src"/>
@@ -73,6 +76,7 @@
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/unity/src"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/unity/extras/fixture/src"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/tinycbor"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/http-parser"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/jsmn"/>
 								</option>
 								<option id="org.eclipse.cdt.cross.arm.gnu.c.compiler.option.preprocessor.def.2079822681" name="Defined symbols (-D)" superClass="org.eclipse.cdt.cross.arm.gnu.c.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
diff --git a/projects/infineon/xmc4800_iotkit/dave4/aws_tests/.project b/projects/infineon/xmc4800_iotkit/dave4/aws_tests/.project
index c9a8f81c0..c11bba1ec 100644
--- a/projects/infineon/xmc4800_iotkit/dave4/aws_tests/.project
+++ b/projects/infineon/xmc4800_iotkit/dave4/aws_tests/.project
@@ -643,6 +643,11 @@
 			<type>1</type>
 			<locationURI>AFR_HOME/libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c</locationURI>
 		</link>
+		<link>
+			<name>vendors/infineon/boards/xmc4800_iotkit/ports/pkcs11/iot_pkcs11_pal.c</name>
+			<type>1</type>
+			<locationURI>AFR_HOME/vendors/infineon/boards/xmc4800_iotkit/ports/pkcs11/iot_pkcs11_pal.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c</name>
 			<type>1</type>
@@ -653,11 +658,6 @@
 			<type>1</type>
 			<locationURI>AFR_HOME/libraries/abstractions/pkcs11/mbedtls/threading_alt.h</locationURI>
 		</link>
-		<link>
-			<name>vendors/infineon/boards/xmc4800_iotkit/ports/pkcs11/iot_pkcs11_pal.c</name>
-			<type>1</type>
-			<locationURI>AFR_HOME/vendors/infineon/boards/xmc4800_iotkit/ports/pkcs11/iot_pkcs11_pal.c</locationURI>
-		</link>
 		<link>
 			<name>libraries/freertos_plus/standard/utils/src/iot_system_init.c</name>
 			<type>1</type>
@@ -853,6 +853,16 @@
 			<type>1</type>
 			<locationURI>AFR_HOME/libraries/c_sdk/aws/shadow/include/aws_shadow.h</locationURI>
 		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_client.c</name>
+			<type>1</type>
+			<locationURI>AFR_HOME/libraries/c_sdk/standard/https/src/iot_https_client.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_utils.c</name>
+			<type>1</type>
+			<locationURI>AFR_HOME/libraries/c_sdk/standard/https/src/iot_https_utils.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</name>
 			<type>1</type>
@@ -1048,6 +1058,36 @@
 			<type>1</type>
 			<locationURI>AFR_HOME/libraries/c_sdk/standard/common/test/iot_tests_taskpool.c</locationURI>
 		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_client.c</name>
+			<type>1</type>
+			<locationURI>AFR_HOME/libraries/c_sdk/standard/https/test/unit/iot_tests_https_client.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_utils.c</name>
+			<type>1</type>
+			<locationURI>AFR_HOME/libraries/c_sdk/standard/https/test/unit/iot_tests_https_utils.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.c</name>
+			<type>1</type>
+			<locationURI>AFR_HOME/libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_sync.c</name>
+			<type>1</type>
+			<locationURI>AFR_HOME/libraries/c_sdk/standard/https/test/unit/iot_tests_https_sync.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_async.c</name>
+			<type>1</type>
+			<locationURI>AFR_HOME/libraries/c_sdk/standard/https/test/unit/iot_tests_https_async.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/system/iot_tests_https_system.c</name>
+			<type>1</type>
+			<locationURI>AFR_HOME/libraries/c_sdk/standard/https/test/system/iot_tests_https_system.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_api.c</name>
 			<type>1</type>
@@ -2418,6 +2458,16 @@
 			<type>1</type>
 			<locationURI>AFR_HOME/libraries/3rdparty/tinycbor/cborparser_dup_string.c</locationURI>
 		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.h</name>
+			<type>1</type>
+			<locationURI>AFR_HOME/libraries/3rdparty/http-parser/http_parser.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.c</name>
+			<type>1</type>
+			<locationURI>AFR_HOME/libraries/3rdparty/http-parser/http_parser.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/3rdparty/jsmn/jsmn.h</name>
 			<type>1</type>
diff --git a/projects/mediatek/mt7697hx-dev-kit/uvision/aws_demos/aws_demos.uvprojx b/projects/mediatek/mt7697hx-dev-kit/uvision/aws_demos/aws_demos.uvprojx
index 847fe672f..926ad5f00 100644
--- a/projects/mediatek/mt7697hx-dev-kit/uvision/aws_demos/aws_demos.uvprojx
+++ b/projects/mediatek/mt7697hx-dev-kit/uvision/aws_demos/aws_demos.uvprojx
@@ -335,7 +335,7 @@
 							<MiscControls>--C99</MiscControls>
 							<Define>PCFG_OS=2 _REENT_SMALL PRODUCT_VERSION=7687 MTK_BLE_SMTCN_ENABLE MTK_BT_LWIP_ENABLE MTK_BLE_BQB_TEST_ENABLE MTK_BLE_CLI_ENABLE MTK_BLE_BQB_CLI_ENABLE MTK_HCI_CONSOLE_MIX_ENABLE MTK_MINISUPP_ENABLE MTK_BSPEXT_ENABLE MTK_HAL_LOWPOWER_ENABLE MTK_LWIP_CLI_ENABLE MTK_HTTPCLIENT_SSL_ENABLE MTK_IPERF_ENABLE MTK_SMTCN_ENABLE MTK_CLI_TEST_MODE_ENABLE MTK_WIFI_REPEATER_ENABLE  CONFIG_REPEATER MTK_DEBUG_LEVEL_NONE MTK_WIFI_PRIVILEGE_ENABLE SUPPORT_MBEDTLS __MTK_BLE_ONLY_ENABLE__ MTK_SINGLE_SKU_SUPPORT HAL_DFS_MODULE_ENABLED LWIP_NO_STDINT_H=1 LWIP_TIMEVAL_PRIVATE=1 __little_endian__=1</Define>
 							<Undefine/>
-							<IncludePath>../../../../../freertos_kernel/include;../../../../../freertos_kernel/portable/RVDS/ARM_CM4F;../../../../../vendors/mediatek/sdk/kernel/service/inc;../../../../../vendors/mediatek/sdk/driver/CMSIS/Device/MTK/mt7687/Include;../../../../../vendors/mediatek/sdk/driver/CMSIS/Include;../../../../../vendors/mediatek/sdk/driver/chip/mt7687/src/common/include;../../../../../vendors/mediatek/sdk/driver/chip/inc;../../../../../vendors/mediatek/sdk/driver/chip/mt7687/inc;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/wifi/inc;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/ept/inc;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/util/inc;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/external_flash/inc;../../../../../vendors/mediatek/boards/mt7697hx-dev-kit/aws_demos/config_files;../../../../../vendors/mediatek/boards/mt7697hx-dev-kit/aws_demos/application_code/mediatek_code;../../../../../vendors/mediatek/boards/mt7697hx-dev-kit/aws_demos/application_code/mediatek_code/include;../../../../../demos/include;../../../../../libraries/c_sdk/standard/mqtt/include;../../../../../libraries/c_sdk/standard/common/include;../../../../../libraries/3rdparty/pkcs11;../../../../../libraries/abstractions/secure_sockets/include;../../../../../libraries/c_sdk/standard/common/include/private;../../../../../libraries/freertos_plus/standard/utils/include;../../../../../libraries/abstractions/pkcs11/include;../../../../../libraries/3rdparty/tracealyzer_recorder/Include;../../../../../demos/network_manager;../../../../../libraries/abstractions/platform/include;../../../../../libraries/abstractions/platform/freertos/include;../../../../../libraries/freertos_plus/standard/tls/include;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/freertos_plus/standard/pkcs11/include;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/abstractions/wifi/include;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/wifi/inc;../../../../../vendors/mediatek/sdk/middleware/MTK/minisupp/inc;../../../../../vendors/mediatek/sdk/middleware/third_party/ping/inc;../../../../../vendors/mediatek/sdk/middleware/MTK/dhcpd/inc;../../../../../libraries/3rdparty/lwip/src/portable/mediatek/include;../../../../../demos/dev_mode_key_provisioning/include;../../../../../libraries/c_sdk/aws/defender/include;../../../../../libraries/c_sdk/standard/serializer/include;../../../../../libraries/c_sdk/aws/shadow/include;../../../../../libraries/freertos_plus/aws/greengrass/include;../../../../../libraries/3rdparty/mbedtls/include;../../../../../libraries/3rdparty/mbedtls/include/mbedtls;../../../../../libraries/abstractions/pkcs11/mbedtls;../../../../../libraries/3rdparty/lwip/src/include;../../../../../libraries/3rdparty/lwip/src/include/lwip;../../../../../libraries/3rdparty/lwip/src/portable;../../../../../libraries/3rdparty/tinycbor;../../../../../libraries/3rdparty/jsmn;</IncludePath>
+							<IncludePath>../../../../../freertos_kernel/include;../../../../../freertos_kernel/portable/RVDS/ARM_CM4F;../../../../../vendors/mediatek/sdk/kernel/service/inc;../../../../../vendors/mediatek/sdk/driver/CMSIS/Device/MTK/mt7687/Include;../../../../../vendors/mediatek/sdk/driver/CMSIS/Include;../../../../../vendors/mediatek/sdk/driver/chip/mt7687/src/common/include;../../../../../vendors/mediatek/sdk/driver/chip/inc;../../../../../vendors/mediatek/sdk/driver/chip/mt7687/inc;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/wifi/inc;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/ept/inc;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/util/inc;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/external_flash/inc;../../../../../vendors/mediatek/boards/mt7697hx-dev-kit/aws_demos/config_files;../../../../../vendors/mediatek/boards/mt7697hx-dev-kit/aws_demos/application_code/mediatek_code;../../../../../vendors/mediatek/boards/mt7697hx-dev-kit/aws_demos/application_code/mediatek_code/include;../../../../../demos/include;../../../../../libraries/c_sdk/standard/mqtt/include;../../../../../libraries/c_sdk/standard/common/include;../../../../../libraries/3rdparty/pkcs11;../../../../../libraries/abstractions/secure_sockets/include;../../../../../libraries/c_sdk/standard/common/include/private;../../../../../libraries/freertos_plus/standard/utils/include;../../../../../libraries/abstractions/pkcs11/include;../../../../../libraries/3rdparty/tracealyzer_recorder/Include;../../../../../demos/network_manager;../../../../../libraries/abstractions/platform/include;../../../../../libraries/abstractions/platform/freertos/include;../../../../../libraries/freertos_plus/standard/tls/include;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/freertos_plus/standard/pkcs11/include;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/abstractions/wifi/include;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/wifi/inc;../../../../../vendors/mediatek/sdk/middleware/MTK/minisupp/inc;../../../../../vendors/mediatek/sdk/middleware/third_party/ping/inc;../../../../../vendors/mediatek/sdk/middleware/MTK/dhcpd/inc;../../../../../libraries/3rdparty/lwip/src/portable/mediatek/include;../../../../../demos/dev_mode_key_provisioning/include;../../../../../libraries/c_sdk/aws/defender/include;../../../../../libraries/c_sdk/standard/serializer/include;../../../../../libraries/c_sdk/aws/shadow/include;../../../../../libraries/c_sdk/standard/https/include;../../../../../libraries/freertos_plus/aws/greengrass/include;../../../../../libraries/3rdparty/mbedtls/include;../../../../../libraries/3rdparty/mbedtls/include/mbedtls;../../../../../libraries/abstractions/pkcs11/mbedtls;../../../../../libraries/3rdparty/lwip/src/include;../../../../../libraries/3rdparty/lwip/src/include/lwip;../../../../../libraries/3rdparty/lwip/src/portable;../../../../../libraries/3rdparty/tinycbor;../../../../../libraries/3rdparty/http-parser;../../../../../libraries/3rdparty/jsmn;</IncludePath>
 						</VariousControls>
 					</Cads>
 					<Aads>
@@ -1286,6 +1286,16 @@
 						</File>
 					</Files>
 				</Group>
+				<Group>
+					<GroupName>vendors/mediatek/boards/mt7697hx-dev-kit/ports/pkcs11/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_pkcs11_pal.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/mediatek/boards/mt7697hx-dev-kit/ports/pkcs11/iot_pkcs11_pal.c</FilePath>
+						</File>
+					</Files>
+				</Group>
 				<Group>
 					<GroupName>libraries/abstractions/pkcs11/mbedtls/</GroupName>
 					<Files>
@@ -1301,16 +1311,6 @@
 						</File>
 					</Files>
 				</Group>
-				<Group>
-					<GroupName>vendors/mediatek/boards/mt7697hx-dev-kit/ports/pkcs11/</GroupName>
-					<Files>
-						<File>
-							<FileName>iot_pkcs11_pal.c</FileName>
-							<FileType>1</FileType>
-							<FilePath>../../../../../vendors/mediatek/boards/mt7697hx-dev-kit/ports/pkcs11/iot_pkcs11_pal.c</FilePath>
-						</File>
-					</Files>
-				</Group>
 				<Group>
 					<GroupName>libraries/freertos_plus/standard/utils/src/</GroupName>
 					<Files>
@@ -1706,6 +1706,21 @@
 						</File>
 					</Files>
 				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/https/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_https_client.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/src/iot_https_client.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_https_utils.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/src/iot_https_utils.c</FilePath>
+						</File>
+					</Files>
+				</Group>
 				<Group>
 					<GroupName>libraries/freertos_plus/aws/greengrass/src/</GroupName>
 					<Files>
@@ -1761,6 +1776,26 @@
 						</File>
 					</Files>
 				</Group>
+				<Group>
+					<GroupName>demos/https/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_demo_https_s3_download_sync.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../demos/https/iot_demo_https_s3_download_sync.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_demo_https_s3_download_async.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../demos/https/iot_demo_https_s3_download_async.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_demo_https_common.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../demos/https/iot_demo_https_common.c</FilePath>
+						</File>
+					</Files>
+				</Group>
 				<Group>
 					<GroupName>demos/mqtt/</GroupName>
 					<Files>
@@ -2986,6 +3021,21 @@
 						</File>
 					</Files>
 				</Group>
+				<Group>
+					<GroupName>libraries/3rdparty/http-parser/</GroupName>
+					<Files>
+						<File>
+							<FileName>http_parser.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/http-parser/http_parser.h</FilePath>
+						</File>
+						<File>
+							<FileName>http_parser.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/http-parser/http_parser.c</FilePath>
+						</File>
+					</Files>
+				</Group>
 				<Group>
 					<GroupName>libraries/3rdparty/jsmn/</GroupName>
 					<Files>
diff --git a/projects/mediatek/mt7697hx-dev-kit/uvision/aws_tests/aws_tests.uvprojx b/projects/mediatek/mt7697hx-dev-kit/uvision/aws_tests/aws_tests.uvprojx
index 7f6c4953d..c3caf0c30 100644
--- a/projects/mediatek/mt7697hx-dev-kit/uvision/aws_tests/aws_tests.uvprojx
+++ b/projects/mediatek/mt7697hx-dev-kit/uvision/aws_tests/aws_tests.uvprojx
@@ -335,7 +335,7 @@
 							<MiscControls>--C99</MiscControls>
 							<Define>PCFG_OS=2 _REENT_SMALL PRODUCT_VERSION=7687 MTK_BLE_SMTCN_ENABLE MTK_BT_LWIP_ENABLE MTK_BLE_BQB_TEST_ENABLE MTK_BLE_CLI_ENABLE MTK_BLE_BQB_CLI_ENABLE MTK_HCI_CONSOLE_MIX_ENABLE MTK_MINISUPP_ENABLE MTK_BSPEXT_ENABLE MTK_HAL_LOWPOWER_ENABLE MTK_LWIP_CLI_ENABLE MTK_HTTPCLIENT_SSL_ENABLE MTK_IPERF_ENABLE MTK_SMTCN_ENABLE MTK_CLI_TEST_MODE_ENABLE MTK_WIFI_REPEATER_ENABLE  CONFIG_REPEATER MTK_DEBUG_LEVEL_NONE MTK_WIFI_PRIVILEGE_ENABLE SUPPORT_MBEDTLS __MTK_BLE_ONLY_ENABLE__ MTK_SINGLE_SKU_SUPPORT HAL_DFS_MODULE_ENABLED LWIP_NO_STDINT_H=1 LWIP_TIMEVAL_PRIVATE=1 __little_endian__=1 AMAZON_FREERTOS_ENABLE_UNIT_TESTS</Define>
 							<Undefine/>
-							<IncludePath>../../../../../freertos_kernel/include;../../../../../freertos_kernel/portable/RVDS/ARM_CM4F;../../../../../vendors/mediatek/sdk/kernel/service/inc;../../../../../vendors/mediatek/sdk/driver/CMSIS/Device/MTK/mt7687/Include;../../../../../vendors/mediatek/sdk/driver/CMSIS/Include;../../../../../vendors/mediatek/sdk/driver/chip/mt7687/src/common/include;../../../../../vendors/mediatek/sdk/driver/chip/inc;../../../../../vendors/mediatek/sdk/driver/chip/mt7687/inc;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/wifi/inc;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/ept/inc;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/util/inc;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/external_flash/inc;../../../../../vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/config_files;../../../../../vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/application_code/mediatek_code;../../../../../vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/application_code/mediatek_code/include;../../../../../tests/include;../../../../../libraries/c_sdk/standard/mqtt/include;../../../../../libraries/c_sdk/standard/common/include;../../../../../libraries/3rdparty/pkcs11;../../../../../libraries/abstractions/secure_sockets/include;../../../../../libraries/c_sdk/standard/common/include/private;../../../../../libraries/freertos_plus/standard/utils/include;../../../../../libraries/abstractions/pkcs11/include;../../../../../libraries/3rdparty/tracealyzer_recorder/Include;../../../../../libraries/abstractions/platform/include;../../../../../libraries/abstractions/platform/freertos/include;../../../../../libraries/freertos_plus/standard/tls/include;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/freertos_plus/standard/pkcs11/include;../../../../../libraries/freertos_plus/aws/ota/test;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/abstractions/wifi/include;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/wifi/inc;../../../../../vendors/mediatek/sdk/middleware/MTK/minisupp/inc;../../../../../vendors/mediatek/sdk/middleware/third_party/ping/inc;../../../../../vendors/mediatek/sdk/middleware/MTK/dhcpd/inc;../../../../../libraries/3rdparty/lwip/src/portable/mediatek/include;../../../../../demos/dev_mode_key_provisioning/include;../../../../../libraries/c_sdk/aws/defender/include;../../../../../libraries/c_sdk/standard/mqtt/test/access;../../../../../libraries/c_sdk/standard/mqtt/src;../../../../../libraries/c_sdk/standard/serializer/include;../../../../../libraries/c_sdk/aws/shadow/include;../../../../../libraries/c_sdk/aws/shadow/src;../../../../../libraries/freertos_plus/aws/greengrass/test;../../../../../libraries/freertos_plus/aws/greengrass/include;../../../../../libraries/freertos_plus/aws/greengrass/src;../../../../../libraries/c_sdk/aws/defender/src/private;../../../../../libraries/3rdparty/mbedtls/include;../../../../../libraries/3rdparty/mbedtls/include/mbedtls;../../../../../libraries/abstractions/pkcs11/mbedtls;../../../../../libraries/3rdparty/lwip/src/include;../../../../../libraries/3rdparty/lwip/src/include/lwip;../../../../../libraries/3rdparty/lwip/src/portable;../../../../../libraries/3rdparty/unity/src;../../../../../libraries/3rdparty/unity/extras/fixture/src;../../../../../libraries/3rdparty/tinycbor;../../../../../libraries/3rdparty/jsmn;</IncludePath>
+							<IncludePath>../../../../../freertos_kernel/include;../../../../../freertos_kernel/portable/RVDS/ARM_CM4F;../../../../../vendors/mediatek/sdk/kernel/service/inc;../../../../../vendors/mediatek/sdk/driver/CMSIS/Device/MTK/mt7687/Include;../../../../../vendors/mediatek/sdk/driver/CMSIS/Include;../../../../../vendors/mediatek/sdk/driver/chip/mt7687/src/common/include;../../../../../vendors/mediatek/sdk/driver/chip/inc;../../../../../vendors/mediatek/sdk/driver/chip/mt7687/inc;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/wifi/inc;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/ept/inc;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/util/inc;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/external_flash/inc;../../../../../vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/config_files;../../../../../vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/application_code/mediatek_code;../../../../../vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/application_code/mediatek_code/include;../../../../../tests/include;../../../../../libraries/c_sdk/standard/mqtt/include;../../../../../libraries/c_sdk/standard/common/include;../../../../../libraries/3rdparty/pkcs11;../../../../../libraries/abstractions/secure_sockets/include;../../../../../libraries/c_sdk/standard/common/include/private;../../../../../libraries/freertos_plus/standard/utils/include;../../../../../libraries/abstractions/pkcs11/include;../../../../../libraries/3rdparty/tracealyzer_recorder/Include;../../../../../libraries/abstractions/platform/include;../../../../../libraries/abstractions/platform/freertos/include;../../../../../libraries/freertos_plus/standard/tls/include;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/freertos_plus/standard/pkcs11/include;../../../../../libraries/freertos_plus/aws/ota/test;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/abstractions/wifi/include;../../../../../vendors/mediatek/sdk/driver/board/mt76x7_hdk/wifi/inc;../../../../../vendors/mediatek/sdk/middleware/MTK/minisupp/inc;../../../../../vendors/mediatek/sdk/middleware/third_party/ping/inc;../../../../../vendors/mediatek/sdk/middleware/MTK/dhcpd/inc;../../../../../libraries/3rdparty/lwip/src/portable/mediatek/include;../../../../../demos/dev_mode_key_provisioning/include;../../../../../libraries/c_sdk/aws/defender/include;../../../../../libraries/c_sdk/standard/mqtt/test/access;../../../../../libraries/c_sdk/standard/mqtt/src;../../../../../libraries/c_sdk/standard/serializer/include;../../../../../libraries/c_sdk/aws/shadow/include;../../../../../libraries/c_sdk/aws/shadow/src;../../../../../libraries/c_sdk/standard/https/test/access;../../../../../libraries/c_sdk/standard/https/include;../../../../../libraries/c_sdk/standard/https/src;../../../../../libraries/freertos_plus/aws/greengrass/test;../../../../../libraries/freertos_plus/aws/greengrass/include;../../../../../libraries/freertos_plus/aws/greengrass/src;../../../../../libraries/c_sdk/aws/defender/src/private;../../../../../libraries/3rdparty/mbedtls/include;../../../../../libraries/3rdparty/mbedtls/include/mbedtls;../../../../../libraries/abstractions/pkcs11/mbedtls;../../../../../libraries/3rdparty/lwip/src/include;../../../../../libraries/3rdparty/lwip/src/include/lwip;../../../../../libraries/3rdparty/lwip/src/portable;../../../../../libraries/3rdparty/unity/src;../../../../../libraries/3rdparty/unity/extras/fixture/src;../../../../../libraries/3rdparty/tinycbor;../../../../../libraries/3rdparty/http-parser;../../../../../libraries/3rdparty/jsmn;</IncludePath>
 						</VariousControls>
 					</Cads>
 					<Aads>
@@ -1291,6 +1291,16 @@
 						</File>
 					</Files>
 				</Group>
+				<Group>
+					<GroupName>vendors/mediatek/boards/mt7697hx-dev-kit/ports/pkcs11/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_pkcs11_pal.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/mediatek/boards/mt7697hx-dev-kit/ports/pkcs11/iot_pkcs11_pal.c</FilePath>
+						</File>
+					</Files>
+				</Group>
 				<Group>
 					<GroupName>libraries/abstractions/pkcs11/mbedtls/</GroupName>
 					<Files>
@@ -1306,16 +1316,6 @@
 						</File>
 					</Files>
 				</Group>
-				<Group>
-					<GroupName>vendors/mediatek/boards/mt7697hx-dev-kit/ports/pkcs11/</GroupName>
-					<Files>
-						<File>
-							<FileName>iot_pkcs11_pal.c</FileName>
-							<FileType>1</FileType>
-							<FilePath>../../../../../vendors/mediatek/boards/mt7697hx-dev-kit/ports/pkcs11/iot_pkcs11_pal.c</FilePath>
-						</File>
-					</Files>
-				</Group>
 				<Group>
 					<GroupName>libraries/freertos_plus/standard/utils/src/</GroupName>
 					<Files>
@@ -1711,6 +1711,21 @@
 						</File>
 					</Files>
 				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/https/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_https_client.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/src/iot_https_client.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_https_utils.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/src/iot_https_utils.c</FilePath>
+						</File>
+					</Files>
+				</Group>
 				<Group>
 					<GroupName>libraries/freertos_plus/aws/greengrass/src/</GroupName>
 					<Files>
@@ -1806,6 +1821,46 @@
 						</File>
 					</Files>
 				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/https/test/unit/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_tests_https_client.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/test/unit/iot_tests_https_client.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_tests_https_utils.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/test/unit/iot_tests_https_utils.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_tests_https_common.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_tests_https_sync.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/test/unit/iot_tests_https_sync.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_tests_https_async.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/test/unit/iot_tests_https_async.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/https/test/system/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_tests_https_system.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/test/system/iot_tests_https_system.c</FilePath>
+						</File>
+					</Files>
+				</Group>
 				<Group>
 					<GroupName>libraries/c_sdk/standard/mqtt/test/unit/</GroupName>
 					<Files>
@@ -3206,6 +3261,21 @@
 						</File>
 					</Files>
 				</Group>
+				<Group>
+					<GroupName>libraries/3rdparty/http-parser/</GroupName>
+					<Files>
+						<File>
+							<FileName>http_parser.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/http-parser/http_parser.h</FilePath>
+						</File>
+						<File>
+							<FileName>http_parser.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/http-parser/http_parser.c</FilePath>
+						</File>
+					</Files>
+				</Group>
 				<Group>
 					<GroupName>libraries/3rdparty/jsmn/</GroupName>
 					<Files>
diff --git a/projects/microchip/curiosity_pic32mzef/mplab/aws_demos/nbproject/configurations.xml b/projects/microchip/curiosity_pic32mzef/mplab/aws_demos/nbproject/configurations.xml
index de97131c1..caa50fc83 100644
--- a/projects/microchip/curiosity_pic32mzef/mplab/aws_demos/nbproject/configurations.xml
+++ b/projects/microchip/curiosity_pic32mzef/mplab/aws_demos/nbproject/configurations.xml
@@ -77,6 +77,11 @@
 			<logicalFolder name="greengrass_connectivity" displayName="greengrass_connectivity" projectFiles="true">
 				<itemPath>../../../../../demos/greengrass_connectivity/aws_greengrass_discovery_demo.c</itemPath>
 			</logicalFolder>
+			<logicalFolder name="https" displayName="https" projectFiles="true">
+				<itemPath>../../../../../demos/https/iot_demo_https_s3_download_sync.c</itemPath>
+				<itemPath>../../../../../demos/https/iot_demo_https_s3_download_async.c</itemPath>
+				<itemPath>../../../../../demos/https/iot_demo_https_common.c</itemPath>
+			</logicalFolder>
 			<logicalFolder name="mqtt" displayName="mqtt" projectFiles="true">
 				<itemPath>../../../../../demos/mqtt/iot_demo_mqtt.c</itemPath>
 			</logicalFolder>
@@ -153,6 +158,12 @@
 							<itemPath>../../../../../libraries/c_sdk/standard/serializer/include/iot_json_utils.h</itemPath>
 						</logicalFolder>
 					</logicalFolder>
+					<logicalFolder name="https" displayName="https" projectFiles="true">
+						<logicalFolder name="src" displayName="src" projectFiles="true">
+							<itemPath>../../../../../libraries/c_sdk/standard/https/src/iot_https_client.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/standard/https/src/iot_https_utils.c</itemPath>
+						</logicalFolder>
+					</logicalFolder>
 				</logicalFolder>
 				<logicalFolder name="aws" displayName="aws" projectFiles="true">
 					<logicalFolder name="defender" displayName="defender" projectFiles="true">
@@ -594,6 +605,10 @@
 						<itemPath>../../../../../libraries/3rdparty/tinycrypt/asn1/asn1.h</itemPath>
 					</logicalFolder>
 				</logicalFolder>
+				<logicalFolder name="http-parser" displayName="http-parser" projectFiles="true">
+					<itemPath>../../../../../libraries/3rdparty/http-parser/http_parser.h</itemPath>
+					<itemPath>../../../../../libraries/3rdparty/http-parser/http_parser.c</itemPath>
+				</logicalFolder>
 			</logicalFolder>
 		</logicalFolder>
 		<logicalFolder name="vendors" displayName="vendors" projectFiles="true">
@@ -925,7 +940,7 @@
 				<property key="enable-symbols" value="true"/>
 				<property key="enable-unroll-loops" value="false"/>
 				<property key="exclude-floating-point" value="false"/>
-				<property key="extra-include-directories" value="../../../../../freertos_kernel/include;../../../../../libraries/c_sdk/standard/common/include;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/freertos_plus/standard/tls/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/GCC;../../../../../libraries/abstractions/wifi/include;../../../../../libraries/abstractions/pkcs11/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_demos/application_code/microchip_code;../../../../../freertos_kernel/portable/MPLAB/PIC32MZ;../../../../../vendors/microchip/harmony/v2.05/framework;../../../../../vendors/microchip/harmony/v2.05/bsp;../../../../../demos/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_demos/config_files;../../../../../demos/network_manager;../../../../../libraries/c_sdk/standard/common/include/private;../../../../../libraries/abstractions/platform/include;../../../../../libraries/abstractions/platform/freertos/include;../../../../../libraries/abstractions/secure_sockets/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/test;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/include;../../../../../libraries/freertos_plus/standard/pkcs11/include;../../../../../libraries/freertos_plus/standard/utils/include;../../../../../demos/dev_mode_key_provisioning/include;../../../../../vendors/microchip/harmony/v2.05/framework/system/common;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/include;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/common/include;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/include;../../../../../libraries/c_sdk/aws/defender/include;../../../../../libraries/c_sdk/standard/mqtt/include;../../../../../libraries/c_sdk/standard/serializer/include;../../../../../libraries/c_sdk/aws/shadow/include;../../../../../libraries/freertos_plus/aws/greengrass/include;../../../../../libraries/freertos_plus/aws/ota/src;../../../../../libraries/freertos_plus/aws/ota/include;../../../../../libraries/3rdparty/mbedtls/include;../../../../../libraries/abstractions/posix/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/posix;../../../../../libraries/freertos_plus/standard/freertos_plus_posix/include;../../../../../libraries/3rdparty/jsmn;../../../../../libraries/3rdparty/pkcs11;../../../../../libraries/3rdparty/tinycbor;../../../../../libraries/3rdparty/tinycrypt/asn1;../../../../../libraries/3rdparty/tinycrypt/lib/include;../../../../../libraries/3rdparty/mbedtls/include/mbedtls;../../../../../libraries/abstractions/pkcs11/mbedtls"/>
+				<property key="extra-include-directories" value="../../../../../freertos_kernel/include;../../../../../libraries/c_sdk/standard/common/include;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/freertos_plus/standard/tls/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/GCC;../../../../../libraries/abstractions/wifi/include;../../../../../libraries/abstractions/pkcs11/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_demos/application_code/microchip_code;../../../../../freertos_kernel/portable/MPLAB/PIC32MZ;../../../../../vendors/microchip/harmony/v2.05/framework;../../../../../vendors/microchip/harmony/v2.05/bsp;../../../../../demos/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_demos/config_files;../../../../../demos/network_manager;../../../../../libraries/c_sdk/standard/common/include/private;../../../../../libraries/abstractions/platform/include;../../../../../libraries/abstractions/platform/freertos/include;../../../../../libraries/abstractions/secure_sockets/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/test;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/include;../../../../../libraries/freertos_plus/standard/pkcs11/include;../../../../../libraries/freertos_plus/standard/utils/include;../../../../../demos/dev_mode_key_provisioning/include;../../../../../vendors/microchip/harmony/v2.05/framework/system/common;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/include;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/common/include;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/include;../../../../../libraries/c_sdk/aws/defender/include;../../../../../libraries/c_sdk/standard/mqtt/include;../../../../../libraries/c_sdk/standard/serializer/include;../../../../../libraries/c_sdk/aws/shadow/include;../../../../../libraries/c_sdk/standard/https/include;../../../../../libraries/freertos_plus/aws/greengrass/include;../../../../../libraries/freertos_plus/aws/ota/src;../../../../../libraries/freertos_plus/aws/ota/include;../../../../../libraries/3rdparty/mbedtls/include;../../../../../libraries/abstractions/posix/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/posix;../../../../../libraries/freertos_plus/standard/freertos_plus_posix/include;../../../../../libraries/3rdparty/jsmn;../../../../../libraries/3rdparty/pkcs11;../../../../../libraries/3rdparty/tinycbor;../../../../../libraries/3rdparty/tinycrypt/asn1;../../../../../libraries/3rdparty/tinycrypt/lib/include;../../../../../libraries/3rdparty/mbedtls/include/mbedtls;../../../../../libraries/abstractions/pkcs11/mbedtls;../../../../../libraries/3rdparty/http-parser"/>
 				<property key="generate-16-bit-code" value="false"/>
 				<property key="generate-micro-compressed-code" value="false"/>
 				<property key="isolate-each-function" value="true"/>
@@ -953,7 +968,7 @@
 				<property key="exclude-floating-point-library" value="false"/>
 				<property key="expand-macros" value="false"/>
 				<property key="extra-include-directories-for-assembler" value=""/>
-				<property key="extra-include-directories-for-preprocessor" value="../../../../../freertos_kernel/include;../../../../../libraries/c_sdk/standard/common/include;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/freertos_plus/standard/tls/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/GCC;../../../../../libraries/abstractions/wifi/include;../../../../../libraries/abstractions/pkcs11/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_demos/application_code/microchip_code;../../../../../freertos_kernel/portable/MPLAB/PIC32MZ;../../../../../vendors/microchip/harmony/v2.05/framework;../../../../../vendors/microchip/harmony/v2.05/bsp;../../../../../demos/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_demos/config_files;../../../../../demos/network_manager;../../../../../libraries/c_sdk/standard/common/include/private;../../../../../libraries/abstractions/platform/include;../../../../../libraries/abstractions/platform/freertos/include;../../../../../libraries/abstractions/secure_sockets/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/test;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/include;../../../../../libraries/freertos_plus/standard/pkcs11/include;../../../../../libraries/freertos_plus/standard/utils/include;../../../../../demos/dev_mode_key_provisioning/include;../../../../../vendors/microchip/harmony/v2.05/framework/system/common;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/include;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/common/include;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/include;../../../../../libraries/c_sdk/aws/defender/include;../../../../../libraries/c_sdk/standard/mqtt/include;../../../../../libraries/c_sdk/standard/serializer/include;../../../../../libraries/c_sdk/aws/shadow/include;../../../../../libraries/freertos_plus/aws/greengrass/include;../../../../../libraries/freertos_plus/aws/ota/src;../../../../../libraries/freertos_plus/aws/ota/include;../../../../../libraries/3rdparty/mbedtls/include;../../../../../libraries/abstractions/posix/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/posix;../../../../../libraries/freertos_plus/standard/freertos_plus_posix/include;../../../../../libraries/3rdparty/jsmn;../../../../../libraries/3rdparty/pkcs11;../../../../../libraries/3rdparty/tinycbor;../../../../../libraries/3rdparty/tinycrypt/asn1;../../../../../libraries/3rdparty/tinycrypt/lib/include;../../../../../libraries/3rdparty/mbedtls/include/mbedtls;../../../../../libraries/abstractions/pkcs11/mbedtls"/>
+				<property key="extra-include-directories-for-preprocessor" value="../../../../../freertos_kernel/include;../../../../../libraries/c_sdk/standard/common/include;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/freertos_plus/standard/tls/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/GCC;../../../../../libraries/abstractions/wifi/include;../../../../../libraries/abstractions/pkcs11/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_demos/application_code/microchip_code;../../../../../freertos_kernel/portable/MPLAB/PIC32MZ;../../../../../vendors/microchip/harmony/v2.05/framework;../../../../../vendors/microchip/harmony/v2.05/bsp;../../../../../demos/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_demos/config_files;../../../../../demos/network_manager;../../../../../libraries/c_sdk/standard/common/include/private;../../../../../libraries/abstractions/platform/include;../../../../../libraries/abstractions/platform/freertos/include;../../../../../libraries/abstractions/secure_sockets/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/test;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/include;../../../../../libraries/freertos_plus/standard/pkcs11/include;../../../../../libraries/freertos_plus/standard/utils/include;../../../../../demos/dev_mode_key_provisioning/include;../../../../../vendors/microchip/harmony/v2.05/framework/system/common;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/include;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/common/include;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/include;../../../../../libraries/c_sdk/aws/defender/include;../../../../../libraries/c_sdk/standard/mqtt/include;../../../../../libraries/c_sdk/standard/serializer/include;../../../../../libraries/c_sdk/aws/shadow/include;../../../../../libraries/c_sdk/standard/https/include;../../../../../libraries/freertos_plus/aws/greengrass/include;../../../../../libraries/freertos_plus/aws/ota/src;../../../../../libraries/freertos_plus/aws/ota/include;../../../../../libraries/3rdparty/mbedtls/include;../../../../../libraries/abstractions/posix/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/posix;../../../../../libraries/freertos_plus/standard/freertos_plus_posix/include;../../../../../libraries/3rdparty/jsmn;../../../../../libraries/3rdparty/pkcs11;../../../../../libraries/3rdparty/tinycbor;../../../../../libraries/3rdparty/tinycrypt/asn1;../../../../../libraries/3rdparty/tinycrypt/lib/include;../../../../../libraries/3rdparty/mbedtls/include/mbedtls;../../../../../libraries/abstractions/pkcs11/mbedtls;../../../../../libraries/3rdparty/http-parser"/>
 				<property key="false-conditionals" value="false"/>
 				<property key="generate-16-bit-code" value="false"/>
 				<property key="generate-micro-compressed-code" value="false"/>
diff --git a/projects/microchip/curiosity_pic32mzef/mplab/aws_tests/nbproject/configurations.xml b/projects/microchip/curiosity_pic32mzef/mplab/aws_tests/nbproject/configurations.xml
index 81736cfc4..1f0bfcafa 100644
--- a/projects/microchip/curiosity_pic32mzef/mplab/aws_tests/nbproject/configurations.xml
+++ b/projects/microchip/curiosity_pic32mzef/mplab/aws_tests/nbproject/configurations.xml
@@ -1,1437 +1,1401 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <configurationDescriptor version="65">
-  <logicalFolder name="root" displayName="root" projectFiles="true">
-    <logicalFolder name="demos" displayName="demos" projectFiles="true">
-      <logicalFolder name="dev_mode_key_provisioning"
-                     displayName="dev_mode_key_provisioning"
-                     projectFiles="true">
-        <logicalFolder name="include" displayName="include" projectFiles="true">
-          <itemPath>../../../../../demos/dev_mode_key_provisioning/include/aws_dev_mode_key_provisioning.h</itemPath>
-        </logicalFolder>
-        <logicalFolder name="src" displayName="src" projectFiles="true">
-          <itemPath>../../../../../demos/dev_mode_key_provisioning/src/aws_dev_mode_key_provisioning.c</itemPath>
-        </logicalFolder>
-      </logicalFolder>
-    </logicalFolder>
-    <logicalFolder name="freertos_kernel"
-                   displayName="freertos_kernel"
-                   projectFiles="true">
-      <logicalFolder name="include" displayName="include" projectFiles="true">
-        <itemPath>../../../../../freertos_kernel/include/FreeRTOS.h</itemPath>
-        <itemPath>../../../../../freertos_kernel/include/atomic.h</itemPath>
-        <itemPath>../../../../../freertos_kernel/include/deprecated_definitions.h</itemPath>
-        <itemPath>../../../../../freertos_kernel/include/event_groups.h</itemPath>
-        <itemPath>../../../../../freertos_kernel/include/list.h</itemPath>
-        <itemPath>../../../../../freertos_kernel/include/message_buffer.h</itemPath>
-        <itemPath>../../../../../freertos_kernel/include/mpu_prototypes.h</itemPath>
-        <itemPath>../../../../../freertos_kernel/include/mpu_wrappers.h</itemPath>
-        <itemPath>../../../../../freertos_kernel/include/portable.h</itemPath>
-        <itemPath>../../../../../freertos_kernel/include/projdefs.h</itemPath>
-        <itemPath>../../../../../freertos_kernel/include/queue.h</itemPath>
-        <itemPath>../../../../../freertos_kernel/include/semphr.h</itemPath>
-        <itemPath>../../../../../freertos_kernel/include/stack_macros.h</itemPath>
-        <itemPath>../../../../../freertos_kernel/include/stream_buffer.h</itemPath>
-        <itemPath>../../../../../freertos_kernel/include/task.h</itemPath>
-        <itemPath>../../../../../freertos_kernel/include/timers.h</itemPath>
-      </logicalFolder>
-      <logicalFolder name="portable" displayName="portable" projectFiles="true">
-        <logicalFolder name="MemMang" displayName="MemMang" projectFiles="true">
-          <itemPath>../../../../../freertos_kernel/portable/MemMang/heap_4.c</itemPath>
-        </logicalFolder>
-        <logicalFolder name="MPLAB" displayName="MPLAB" projectFiles="true">
-          <logicalFolder name="PIC32MZ" displayName="PIC32MZ" projectFiles="true">
-            <itemPath>../../../../../freertos_kernel/portable/MPLAB/PIC32MZ/port.c</itemPath>
-            <itemPath>../../../../../freertos_kernel/portable/MPLAB/PIC32MZ/port_asm.S</itemPath>
-            <itemPath>../../../../../freertos_kernel/portable/MPLAB/PIC32MZ/portmacro.h</itemPath>
-          </logicalFolder>
-        </logicalFolder>
-      </logicalFolder>
-      <itemPath>../../../../../freertos_kernel/event_groups.c</itemPath>
-      <itemPath>../../../../../freertos_kernel/list.c</itemPath>
-      <itemPath>../../../../../freertos_kernel/queue.c</itemPath>
-      <itemPath>../../../../../freertos_kernel/stream_buffer.c</itemPath>
-      <itemPath>../../../../../freertos_kernel/tasks.c</itemPath>
-      <itemPath>../../../../../freertos_kernel/timers.c</itemPath>
-    </logicalFolder>
-    <logicalFolder name="libraries" displayName="libraries" projectFiles="true">
-      <logicalFolder name="3rdparty" displayName="3rdparty" projectFiles="true">
-        <logicalFolder name="jsmn" displayName="jsmn" projectFiles="true">
-          <itemPath>../../../../../libraries/3rdparty/jsmn/jsmn.h</itemPath>
-          <itemPath>../../../../../libraries/3rdparty/jsmn/jsmn.c</itemPath>
-        </logicalFolder>
-        <logicalFolder name="mbedtls" displayName="mbedtls" projectFiles="true">
-          <logicalFolder name="include" displayName="include" projectFiles="true">
-            <logicalFolder name="mbedtls" displayName="mbedtls" projectFiles="true">
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/aes.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/aesni.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/arc4.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/asn1.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/asn1write.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/base64.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/bignum.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/blowfish.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/bn_mul.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/camellia.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ccm.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/certs.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/check_config.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/cipher.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/cipher_internal.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/cmac.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/compat-1.3.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/config.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ctr_drbg.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/debug.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/des.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/dhm.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecdh.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecdsa.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecjpake.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecp.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecp_internal.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/entropy.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/entropy_poll.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/error.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/gcm.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/havege.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/hmac_drbg.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md2.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md4.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md5.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md_internal.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/memory_buffer_alloc.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/net.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/net_sockets.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/oid.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/padlock.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pem.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pk.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pk_internal.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pkcs12.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pkcs5.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/platform.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/platform_time.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/platform_util.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ripemd160.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/rsa.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/rsa_internal.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/sha1.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/sha256.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/sha512.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_cache.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_ciphersuites.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_cookie.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_internal.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_ticket.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/threading.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/timing.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/version.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509_crl.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509_crt.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509_csr.h</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/xtea.h</itemPath>
-            </logicalFolder>
-          </logicalFolder>
-          <logicalFolder name="library" displayName="library" projectFiles="true">
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/base64.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/aes.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/aesni.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/arc4.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/asn1parse.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/asn1write.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/bignum.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/blowfish.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/camellia.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/ccm.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/certs.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/cipher.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/cipher_wrap.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/cmac.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/ctr_drbg.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/debug.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/des.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/dhm.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/ecdh.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/ecdsa.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/ecjpake.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/ecp.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/ecp_curves.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/entropy.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/entropy_poll.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/error.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/gcm.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/havege.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/hmac_drbg.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/md.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/md2.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/md4.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/md5.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/md_wrap.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/memory_buffer_alloc.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/net_sockets.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/oid.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/padlock.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/pem.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/pk.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/pk_wrap.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/pkcs12.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/pkcs5.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/pkparse.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/pkwrite.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/platform.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/platform_util.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/ripemd160.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/rsa.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/rsa_internal.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/sha1.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/sha256.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/sha512.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/ssl_cache.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/ssl_ciphersuites.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/ssl_cli.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/ssl_cookie.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/ssl_srv.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/ssl_ticket.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/ssl_tls.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/threading.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/timing.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/version.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/version_features.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/x509.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/x509_create.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/x509_crl.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/x509_crt.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/x509_csr.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/x509write_crt.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/x509write_csr.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/library/xtea.c</itemPath>
-          </logicalFolder>
-          <logicalFolder name="utils" displayName="utils" projectFiles="true">
-            <itemPath>../../../../../libraries/3rdparty/mbedtls/utils/mbedtls_utils.c</itemPath>
-          </logicalFolder>
-        </logicalFolder>
-        <logicalFolder name="pkcs11" displayName="pkcs11" projectFiles="true">
-          <itemPath>../../../../../libraries/3rdparty/pkcs11/pkcs11.h</itemPath>
-          <itemPath>../../../../../libraries/3rdparty/pkcs11/pkcs11f.h</itemPath>
-          <itemPath>../../../../../libraries/3rdparty/pkcs11/pkcs11t.h</itemPath>
-        </logicalFolder>
-        <logicalFolder name="tinycbor" displayName="tinycbor" projectFiles="true">
-          <itemPath>../../../../../libraries/3rdparty/tinycbor/cborpretty.c</itemPath>
-          <itemPath>../../../../../libraries/3rdparty/tinycbor/cborencoder.c</itemPath>
-          <itemPath>../../../../../libraries/3rdparty/tinycbor/cborencoder_close_container_checked.c</itemPath>
-          <itemPath>../../../../../libraries/3rdparty/tinycbor/cborerrorstrings.c</itemPath>
-          <itemPath>../../../../../libraries/3rdparty/tinycbor/cborparser.c</itemPath>
-          <itemPath>../../../../../libraries/3rdparty/tinycbor/cborparser_dup_string.c</itemPath>
-        </logicalFolder>
-        <logicalFolder name="tinycrypt" displayName="tinycrypt" projectFiles="true">
-          <logicalFolder name="asn1" displayName="asn1" projectFiles="true">
-            <itemPath>../../../../../libraries/3rdparty/tinycrypt/asn1/asn1parse.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/tinycrypt/asn1/asn1.h</itemPath>
-          </logicalFolder>
-          <logicalFolder name="lib" displayName="lib" projectFiles="true">
-            <logicalFolder name="include" displayName="include" projectFiles="true">
-              <logicalFolder name="tinycrypt" displayName="tinycrypt" projectFiles="true">
-                <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/aes.h</itemPath>
-                <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/cbc_mode.h</itemPath>
-                <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ccm_mode.h</itemPath>
-                <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/cmac_mode.h</itemPath>
-                <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/constants.h</itemPath>
-                <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ctr_mode.h</itemPath>
-                <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ctr_prng.h</itemPath>
-                <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ecc.h</itemPath>
-                <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ecc_dh.h</itemPath>
-                <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ecc_dsa.h</itemPath>
-                <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ecc_platform_specific.h</itemPath>
-                <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/hmac.h</itemPath>
-                <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/hmac_prng.h</itemPath>
-                <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/sha256.h</itemPath>
-                <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/utils.h</itemPath>
-              </logicalFolder>
-            </logicalFolder>
-            <logicalFolder name="source" displayName="source" projectFiles="true">
-              <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/aes_decrypt.c</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/aes_encrypt.c</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/cbc_mode.c</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/ccm_mode.c</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/cmac_mode.c</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/ctr_mode.c</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/ctr_prng.c</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/ecc.c</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/ecc_dh.c</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/ecc_dsa.c</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/ecc_platform_specific.c</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/hmac.c</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/hmac_prng.c</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/sha256.c</itemPath>
-              <itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/utils.c</itemPath>
-            </logicalFolder>
-          </logicalFolder>
-        </logicalFolder>
-        <logicalFolder name="unity" displayName="unity" projectFiles="true">
-          <logicalFolder name="extras" displayName="extras" projectFiles="true">
-            <logicalFolder name="fixture" displayName="fixture" projectFiles="true">
-              <logicalFolder name="src" displayName="src" projectFiles="true">
-                <itemPath>../../../../../libraries/3rdparty/unity/extras/fixture/src/unity_fixture.c</itemPath>
-                <itemPath>../../../../../libraries/3rdparty/unity/extras/fixture/src/unity_fixture.h</itemPath>
-                <itemPath>../../../../../libraries/3rdparty/unity/extras/fixture/src/unity_fixture_internals.h</itemPath>
-                <itemPath>../../../../../libraries/3rdparty/unity/extras/fixture/src/unity_fixture_malloc_overrides.h</itemPath>
-              </logicalFolder>
-            </logicalFolder>
-          </logicalFolder>
-          <logicalFolder name="src" displayName="src" projectFiles="true">
-            <itemPath>../../../../../libraries/3rdparty/unity/src/unity.c</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/unity/src/unity.h</itemPath>
-            <itemPath>../../../../../libraries/3rdparty/unity/src/unity_internals.h</itemPath>
-          </logicalFolder>
-        </logicalFolder>
-      </logicalFolder>
-      <logicalFolder name="abstractions"
-                     displayName="abstractions"
-                     projectFiles="true">
-        <logicalFolder name="pkcs11" displayName="pkcs11" projectFiles="true">
-          <logicalFolder name="mbedtls" displayName="mbedtls" projectFiles="true">
-            <itemPath>../../../../../libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c</itemPath>
-            <itemPath>../../../../../libraries/abstractions/pkcs11/mbedtls/threading_alt.h</itemPath>
-          </logicalFolder>
-          <logicalFolder name="test" displayName="test" projectFiles="true">
-            <itemPath>../../../../../libraries/abstractions/pkcs11/test/iot_test_pkcs11.c</itemPath>
-          </logicalFolder>
-        </logicalFolder>
-        <logicalFolder name="platform" displayName="platform" projectFiles="true">
-          <logicalFolder name="freertos" displayName="freertos" projectFiles="true">
-            <logicalFolder name="include" displayName="include" projectFiles="true">
-              <logicalFolder name="platform" displayName="platform" projectFiles="true">
-                <itemPath>../../../../../libraries/abstractions/platform/freertos/include/platform/iot_platform_types_freertos.h</itemPath>
-                <itemPath>../../../../../libraries/abstractions/platform/freertos/include/platform/iot_network_freertos.h</itemPath>
-              </logicalFolder>
-            </logicalFolder>
-            <itemPath>../../../../../libraries/abstractions/platform/freertos/iot_clock_freertos.c</itemPath>
-            <itemPath>../../../../../libraries/abstractions/platform/freertos/iot_threads_freertos.c</itemPath>
-            <itemPath>../../../../../libraries/abstractions/platform/freertos/iot_metrics.c</itemPath>
-            <itemPath>../../../../../libraries/abstractions/platform/freertos/iot_network_freertos.c</itemPath>
-          </logicalFolder>
-          <logicalFolder name="include" displayName="include" projectFiles="true">
-            <logicalFolder name="platform" displayName="platform" projectFiles="true">
-              <itemPath>../../../../../libraries/abstractions/platform/include/platform/iot_clock.h</itemPath>
-              <itemPath>../../../../../libraries/abstractions/platform/include/platform/iot_network.h</itemPath>
-              <itemPath>../../../../../libraries/abstractions/platform/include/platform/iot_threads.h</itemPath>
-              <itemPath>../../../../../libraries/abstractions/platform/include/platform/iot_metrics.h</itemPath>
-            </logicalFolder>
-            <logicalFolder name="types" displayName="types" projectFiles="true">
-              <itemPath>../../../../../libraries/abstractions/platform/include/types/iot_platform_types.h</itemPath>
-            </logicalFolder>
-          </logicalFolder>
-          <logicalFolder name="test" displayName="test" projectFiles="true">
-            <itemPath>../../../../../libraries/abstractions/platform/test/iot_test_platform_clock.c</itemPath>
-            <itemPath>../../../../../libraries/abstractions/platform/test/iot_test_platform_threads.c</itemPath>
-          </logicalFolder>
-        </logicalFolder>
-        <logicalFolder name="posix" displayName="posix" projectFiles="true">
-          <logicalFolder name="include" displayName="include" projectFiles="true">
-            <logicalFolder name="FreeRTOS_POSIX"
-                           displayName="FreeRTOS_POSIX"
-                           projectFiles="true">
-              <logicalFolder name="sys" displayName="sys" projectFiles="true">
-                <itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/sys/types.h</itemPath>
-              </logicalFolder>
-              <itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/errno.h</itemPath>
-              <itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/fcntl.h</itemPath>
-              <itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/mqueue.h</itemPath>
-              <itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/pthread.h</itemPath>
-              <itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/sched.h</itemPath>
-              <itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/semaphore.h</itemPath>
-              <itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/signal.h</itemPath>
-              <itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/time.h</itemPath>
-              <itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/unistd.h</itemPath>
-              <itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/utils.h</itemPath>
-            </logicalFolder>
-          </logicalFolder>
-        </logicalFolder>
-        <logicalFolder name="secure_sockets"
-                       displayName="secure_sockets"
-                       projectFiles="true">
-          <logicalFolder name="freertos_plus_tcp"
-                         displayName="freertos_plus_tcp"
-                         projectFiles="true">
-            <itemPath>../../../../../libraries/abstractions/secure_sockets/freertos_plus_tcp/iot_secure_sockets.c</itemPath>
-          </logicalFolder>
-          <logicalFolder name="include" displayName="include" projectFiles="true">
-            <itemPath>../../../../../libraries/abstractions/secure_sockets/include/iot_secure_sockets.h</itemPath>
-            <itemPath>../../../../../libraries/abstractions/secure_sockets/include/iot_secure_sockets_config_defaults.h</itemPath>
-            <itemPath>../../../../../libraries/abstractions/secure_sockets/include/iot_secure_sockets_wrapper_metrics.h</itemPath>
-          </logicalFolder>
-          <logicalFolder name="test" displayName="test" projectFiles="true">
-            <itemPath>../../../../../libraries/abstractions/secure_sockets/test/iot_test_tcp.c</itemPath>
-          </logicalFolder>
-        </logicalFolder>
-        <logicalFolder name="wifi" displayName="wifi" projectFiles="true">
-          <logicalFolder name="include" displayName="include" projectFiles="true">
-            <itemPath>../../../../../libraries/abstractions/wifi/include/iot_wifi.h</itemPath>
-          </logicalFolder>
-          <logicalFolder name="test" displayName="test" projectFiles="true">
-            <itemPath>../../../../../libraries/abstractions/wifi/test/iot_test_wifi.c</itemPath>
-          </logicalFolder>
-        </logicalFolder>
-      </logicalFolder>
-      <logicalFolder name="c_sdk" displayName="c_sdk" projectFiles="true">
-        <logicalFolder name="aws" displayName="aws" projectFiles="true">
-          <logicalFolder name="defender" displayName="defender" projectFiles="true">
-            <logicalFolder name="include" displayName="include" projectFiles="true">
-              <itemPath>../../../../../libraries/c_sdk/aws/defender/include/aws_iot_defender.h</itemPath>
-            </logicalFolder>
-            <logicalFolder name="src" displayName="src" projectFiles="true">
-              <logicalFolder name="private" displayName="private" projectFiles="true">
-                <itemPath>../../../../../libraries/c_sdk/aws/defender/src/private/aws_iot_defender_internal.h</itemPath>
-              </logicalFolder>
-              <itemPath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_api.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_collector.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_mqtt.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_v1.c</itemPath>
-            </logicalFolder>
-            <logicalFolder name="test" displayName="test" projectFiles="true">
-              <itemPath>../../../../../libraries/c_sdk/aws/defender/test/aws_iot_tests_defender_api.c</itemPath>
-            </logicalFolder>
-          </logicalFolder>
-          <logicalFolder name="shadow" displayName="shadow" projectFiles="true">
-            <logicalFolder name="include" displayName="include" projectFiles="true">
-              <itemPath>../../../../../libraries/c_sdk/aws/shadow/include/aws_iot_shadow.h</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/aws/shadow/include/aws_shadow.h</itemPath>
-            </logicalFolder>
-            <logicalFolder name="src" displayName="src" projectFiles="true">
-              <itemPath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_api.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_operation.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_parser.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_static_memory.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_subscription.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/aws/shadow/src/aws_shadow.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/aws/shadow/src/aws_shadow_config_defaults.h</itemPath>
-            </logicalFolder>
-            <logicalFolder name="test" displayName="test" projectFiles="true">
-              <logicalFolder name="system" displayName="system" projectFiles="true">
-                <itemPath>../../../../../libraries/c_sdk/aws/shadow/test/system/aws_iot_tests_shadow_system.c</itemPath>
-              </logicalFolder>
-              <logicalFolder name="unit" displayName="unit" projectFiles="true">
-                <itemPath>../../../../../libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_api.c</itemPath>
-                <itemPath>../../../../../libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_parser.c</itemPath>
-              </logicalFolder>
-              <itemPath>../../../../../libraries/c_sdk/aws/shadow/test/aws_test_shadow.c</itemPath>
-            </logicalFolder>
-          </logicalFolder>
-        </logicalFolder>
-        <logicalFolder name="standard" displayName="standard" projectFiles="true">
-          <logicalFolder name="common" displayName="common" projectFiles="true">
-            <logicalFolder name="include" displayName="include" projectFiles="true">
-              <logicalFolder name="private" displayName="private" projectFiles="true">
-                <itemPath>../../../../../libraries/c_sdk/standard/common/include/private/iot_logging.h</itemPath>
-                <itemPath>../../../../../libraries/c_sdk/standard/common/include/private/iot_taskpool_internal.h</itemPath>
-              </logicalFolder>
-              <logicalFolder name="types" displayName="types" projectFiles="true">
-                <itemPath>../../../../../libraries/c_sdk/standard/common/include/types/iot_network_types.h</itemPath>
-                <itemPath>../../../../../libraries/c_sdk/standard/common/include/types/iot_taskpool_types.h</itemPath>
-              </logicalFolder>
-              <itemPath>../../../../../libraries/c_sdk/standard/common/include/iot_appversion32.h</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/standard/common/include/iot_init.h</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/standard/common/include/iot_linear_containers.h</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/standard/common/include/iot_logging_task.h</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/standard/common/include/iot_logging_setup.h</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/standard/common/include/iot_taskpool.h</itemPath>
-            </logicalFolder>
-            <logicalFolder name="logging" displayName="logging" projectFiles="true">
-              <itemPath>../../../../../libraries/c_sdk/standard/common/logging/iot_logging_task_dynamic_buffers.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/standard/common/logging/iot_logging.c</itemPath>
-            </logicalFolder>
-            <logicalFolder name="taskpool" displayName="taskpool" projectFiles="true">
-              <itemPath>../../../../../libraries/c_sdk/standard/common/taskpool/iot_taskpool.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/standard/common/taskpool/iot_taskpool_static_memory.c</itemPath>
-            </logicalFolder>
-            <logicalFolder name="test" displayName="test" projectFiles="true">
-              <itemPath>../../../../../libraries/c_sdk/standard/common/test/iot_memory_leak.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/standard/common/test/iot_tests_taskpool.c</itemPath>
-            </logicalFolder>
-            <itemPath>../../../../../libraries/c_sdk/standard/common/iot_init.c</itemPath>
-            <itemPath>../../../../../libraries/c_sdk/standard/common/iot_static_memory_common.c</itemPath>
-            <itemPath>../../../../../libraries/c_sdk/standard/common/iot_device_metrics.c</itemPath>
-          </logicalFolder>
-          <logicalFolder name="mqtt" displayName="mqtt" projectFiles="true">
-            <logicalFolder name="src" displayName="src" projectFiles="true">
-              <itemPath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_api.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_network.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_operation.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_serialize.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_static_memory.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_subscription.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_validate.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_agent.c</itemPath>
-            </logicalFolder>
-            <logicalFolder name="test" displayName="test" projectFiles="true">
-              <logicalFolder name="system" displayName="system" projectFiles="true">
-                <itemPath>../../../../../libraries/c_sdk/standard/mqtt/test/system/iot_tests_mqtt_system.c</itemPath>
-              </logicalFolder>
-              <logicalFolder name="unit" displayName="unit" projectFiles="true">
-                <itemPath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_api.c</itemPath>
-                <itemPath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_receive.c</itemPath>
-                <itemPath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_subscription.c</itemPath>
-                <itemPath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_validate.c</itemPath>
-                <itemPath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_metrics.c</itemPath>
-              </logicalFolder>
-              <itemPath>../../../../../libraries/c_sdk/standard/mqtt/test/iot_test_mqtt_agent.c</itemPath>
-            </logicalFolder>
-          </logicalFolder>
-          <logicalFolder name="serializer" displayName="serializer" projectFiles="true">
-            <logicalFolder name="include" displayName="include" projectFiles="true">
-              <itemPath>../../../../../libraries/c_sdk/standard/serializer/include/iot_serializer.h</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/standard/serializer/include/iot_json_utils.h</itemPath>
-            </logicalFolder>
-            <logicalFolder name="src" displayName="src" projectFiles="true">
-              <logicalFolder name="cbor" displayName="cbor" projectFiles="true">
-                <itemPath>../../../../../libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_decoder.c</itemPath>
-                <itemPath>../../../../../libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_encoder.c</itemPath>
-              </logicalFolder>
-              <logicalFolder name="json" displayName="json" projectFiles="true">
-                <itemPath>../../../../../libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_decoder.c</itemPath>
-                <itemPath>../../../../../libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_encoder.c</itemPath>
-              </logicalFolder>
-              <itemPath>../../../../../libraries/c_sdk/standard/serializer/src/iot_serializer_static_memory.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/standard/serializer/src/iot_json_utils.c</itemPath>
-            </logicalFolder>
-            <logicalFolder name="test" displayName="test" projectFiles="true">
-              <itemPath>../../../../../libraries/c_sdk/standard/serializer/test/iot_tests_serializer_cbor.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/standard/serializer/test/iot_tests_serializer_json.c</itemPath>
-              <itemPath>../../../../../libraries/c_sdk/standard/serializer/test/iot_tests_deserializer_json.c</itemPath>
-            </logicalFolder>
-          </logicalFolder>
-        </logicalFolder>
-      </logicalFolder>
-      <logicalFolder name="freertos_plus"
-                     displayName="freertos_plus"
-                     projectFiles="true">
-        <logicalFolder name="aws" displayName="aws" projectFiles="true">
-          <logicalFolder name="greengrass" displayName="greengrass" projectFiles="true">
-            <logicalFolder name="include" displayName="include" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/aws/greengrass/include/aws_ggd_config_defaults.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/aws/greengrass/include/aws_greengrass_discovery.h</itemPath>
-            </logicalFolder>
-            <logicalFolder name="src" displayName="src" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.h</itemPath>
-            </logicalFolder>
-            <logicalFolder name="test" displayName="test" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/aws/greengrass/test/aws_test_greengrass_discovery.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/aws/greengrass/test/aws_test_helper_secure_connect.c</itemPath>
-            </logicalFolder>
-          </logicalFolder>
-          <logicalFolder name="ota" displayName="ota" projectFiles="true">
-            <logicalFolder name="include" displayName="include" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/aws/ota/include/aws_iot_ota_agent.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/aws/ota/include/aws_ota_types.h</itemPath>
-            </logicalFolder>
-            <logicalFolder name="src" displayName="src" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/aws/ota/src/aws_iot_ota_agent.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/aws/ota/src/aws_ota_cbor.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/aws/ota/src/aws_ota_cbor.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/aws/ota/src/aws_ota_pal.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/aws/ota/src/aws_ota_agent_internal.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/aws/ota/src/aws_ota_cbor_internal.h</itemPath>
-            </logicalFolder>
-            <logicalFolder name="test" displayName="test" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/aws/ota/test/aws_test_ota_agent.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/aws/ota/test/aws_test_ota_pal.c</itemPath>
-            </logicalFolder>
-          </logicalFolder>
-        </logicalFolder>
-        <logicalFolder name="standard" displayName="standard" projectFiles="true">
-          <logicalFolder name="crypto" displayName="crypto" projectFiles="true">
-            <logicalFolder name="include" displayName="include" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/standard/crypto/include/iot_crypto.h</itemPath>
-            </logicalFolder>
-            <logicalFolder name="src" displayName="src" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/standard/crypto/src/iot_crypto.c</itemPath>
-            </logicalFolder>
-            <logicalFolder name="test" displayName="test" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/standard/crypto/test/iot_test_crypto.c</itemPath>
-            </logicalFolder>
-          </logicalFolder>
-          <logicalFolder name="freertos_plus_posix"
-                         displayName="freertos_plus_posix"
-                         projectFiles="true">
-            <logicalFolder name="include" displayName="include" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_types.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_internal.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_portable_default.h</itemPath>
-            </logicalFolder>
-            <logicalFolder name="source" displayName="source" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_clock.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_mqueue.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_barrier.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_cond.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_mutex.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_sched.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_semaphore.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_timer.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_unistd.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_utils.c</itemPath>
-            </logicalFolder>
-            <logicalFolder name="test" displayName="test" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_clock.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_mqueue.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_pthread.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_semaphore.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_stress.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_timer.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_unistd.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_utils.c</itemPath>
-            </logicalFolder>
-          </logicalFolder>
-          <logicalFolder name="freertos_plus_tcp"
-                         displayName="freertos_plus_tcp"
-                         projectFiles="true">
-            <logicalFolder name="include" displayName="include" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_ARP.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_DHCP.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_DNS.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_errno_TCP.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOSIPConfigDefaults.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_IP.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_IP_Private.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_Sockets.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_Stream_Buffer.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_TCP_IP.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_TCP_WIN.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_UDP_IP.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/IPTraceMacroDefaults.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/NetworkBufferManagement.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/NetworkInterface.h</itemPath>
-            </logicalFolder>
-            <logicalFolder name="source" displayName="source" projectFiles="true">
-              <logicalFolder name="portable" displayName="portable" projectFiles="true">
-                <logicalFolder name="NetworkInterface"
-                               displayName="NetworkInterface"
-                               projectFiles="true">
-                  <logicalFolder name="pic32mzef" displayName="pic32mzef" projectFiles="true">
-                    <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/pic32mzef/BufferAllocation_2.c</itemPath>
-                    <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/pic32mzef/NetworkInterface_wifi.c</itemPath>
-                    <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/pic32mzef/NetworkInterface_eth.c</itemPath>
-                  </logicalFolder>
-                </logicalFolder>
-              </logicalFolder>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_ARP.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DHCP.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DNS.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_IP.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_Sockets.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_Stream_Buffer.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_IP.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_WIN.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_UDP_IP.c</itemPath>
-            </logicalFolder>
-            <logicalFolder name="test" displayName="test" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_test_freertos_tcp.c</itemPath>
-            </logicalFolder>
-          </logicalFolder>
-          <logicalFolder name="pkcs11" displayName="pkcs11" projectFiles="true">
-            <logicalFolder name="include" displayName="include" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/standard/pkcs11/include/iot_pkcs11.h</itemPath>
-            </logicalFolder>
-            <logicalFolder name="src" displayName="src" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c</itemPath>
-            </logicalFolder>
-          </logicalFolder>
-          <logicalFolder name="tls" displayName="tls" projectFiles="true">
-            <logicalFolder name="include" displayName="include" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/standard/tls/include/iot_tls.h</itemPath>
-            </logicalFolder>
-            <logicalFolder name="src" displayName="src" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/standard/tls/src/iot_tls.c</itemPath>
-            </logicalFolder>
-            <logicalFolder name="test" displayName="test" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/standard/tls/test/iot_test_tls.c</itemPath>
-            </logicalFolder>
-          </logicalFolder>
-          <logicalFolder name="utils" displayName="utils" projectFiles="true">
-            <logicalFolder name="include" displayName="include" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/standard/utils/include/iot_system_init.h</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/utils/include/iot_pki_utils.h</itemPath>
-            </logicalFolder>
-            <logicalFolder name="src" displayName="src" projectFiles="true">
-              <itemPath>../../../../../libraries/freertos_plus/standard/utils/src/iot_system_init.c</itemPath>
-              <itemPath>../../../../../libraries/freertos_plus/standard/utils/src/iot_pki_utils.c</itemPath>
-            </logicalFolder>
-          </logicalFolder>
-        </logicalFolder>
-      </logicalFolder>
-    </logicalFolder>
-    <logicalFolder name="LinkerScript"
-                   displayName="LinkerScript"
-                   projectFiles="true">
-      <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/app_mz.ld</itemPath>
-    </logicalFolder>
-    <logicalFolder name="tests" displayName="tests" projectFiles="true">
-      <logicalFolder name="common" displayName="common" projectFiles="true">
-        <itemPath>../../../../../tests/common/aws_test_framework.c</itemPath>
-        <itemPath>../../../../../tests/common/aws_test_runner.c</itemPath>
-        <itemPath>../../../../../tests/common/aws_test.c</itemPath>
-        <itemPath>../../../../../tests/common/iot_test_freertos.c</itemPath>
-        <itemPath>../../../../../tests/common/iot_tests_network.c</itemPath>
-      </logicalFolder>
-      <logicalFolder name="include" displayName="include" projectFiles="true">
-        <itemPath>../../../../../tests/include/aws_application_version.h</itemPath>
-        <itemPath>../../../../../tests/include/aws_clientcredential.h</itemPath>
-        <itemPath>../../../../../tests/include/aws_clientcredential_keys.h</itemPath>
-        <itemPath>../../../../../tests/include/aws_test_runner.h</itemPath>
-        <itemPath>../../../../../tests/include/aws_test_framework.h</itemPath>
-        <itemPath>../../../../../tests/include/aws_test_tcp.h</itemPath>
-        <itemPath>../../../../../tests/include/aws_test_utils.h</itemPath>
-        <itemPath>../../../../../tests/include/aws_unity_config.h</itemPath>
-        <itemPath>../../../../../tests/include/iot_config_common.h</itemPath>
-      </logicalFolder>
-    </logicalFolder>
-    <logicalFolder name="vendors" displayName="vendors" projectFiles="true">
-      <logicalFolder name="microchip" displayName="microchip" projectFiles="true">
-        <logicalFolder name="boards" displayName="boards" projectFiles="true">
-          <logicalFolder name="curiosity_pic32mzef"
-                         displayName="curiosity_pic32mzef"
-                         projectFiles="true">
-            <logicalFolder name="aws_tests" displayName="aws_tests" projectFiles="true">
-              <logicalFolder name="application_code"
-                             displayName="application_code"
-                             projectFiles="true">
-                <logicalFolder name="microchip_code"
-                               displayName="microchip_code"
-                               projectFiles="true">
-                  <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/rtos_hooks.c</itemPath>
-                  <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/system_exceptions.c</itemPath>
-                  <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/system_init.c</itemPath>
-                  <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/system_interrupt.c</itemPath>
-                  <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/system_tasks.c</itemPath>
-                  <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/NetworkConfig.h</itemPath>
-                  <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/system_config.h</itemPath>
-                  <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/system_definitions.h</itemPath>
-                  <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/system_interrupt_a.S</itemPath>
-                </logicalFolder>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/main.c</itemPath>
-              </logicalFolder>
-              <logicalFolder name="config_files"
-                             displayName="config_files"
-                             projectFiles="true">
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/FreeRTOSConfig.h</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/FreeRTOSIPConfig.h</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_bufferpool_config.h</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_demo_config.h</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_ggd_config.h</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_iot_network_config.h</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_mqtt_config.h</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_ota_agent_config.h</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_secure_sockets_config.h</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_shadow_config.h</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_test_ota_config.h</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_test_runner_config.h</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_test_tcp_config.h</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_test_wifi_config.h</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_wifi_config.h</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/iot_config.h</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/iot_mqtt_agent_config.h</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/iot_pkcs11_config.h</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/iot_test_pkcs11_config.h</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/unity_config.h</itemPath>
-              </logicalFolder>
-            </logicalFolder>
-            <logicalFolder name="ports" displayName="ports" projectFiles="true">
-              <logicalFolder name="ota" displayName="ota" projectFiles="true">
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/ota/aws_ota_pal.c</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/ota/aws_nvm.c</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/ota/aws_nvm.h</itemPath>
-              </logicalFolder>
-              <logicalFolder name="pkcs11" displayName="pkcs11" projectFiles="true">
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/pkcs11/iot_pkcs11_pal.c</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/pkcs11/pkcs11_nvm.c</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/pkcs11/pkcs11_nvm.h</itemPath>
-              </logicalFolder>
-              <logicalFolder name="posix" displayName="posix" projectFiles="true">
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/posix/FreeRTOS_POSIX_portable.h</itemPath>
-              </logicalFolder>
-              <logicalFolder name="wifi" displayName="wifi" projectFiles="true">
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/wifi/iot_wifi.c</itemPath>
-                <itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/wifi/aws_wifi_assert.c</itemPath>
-              </logicalFolder>
-            </logicalFolder>
-          </logicalFolder>
-        </logicalFolder>
-        <logicalFolder name="harmony" displayName="harmony" projectFiles="true">
-          <logicalFolder name="v2.05" displayName="v2.05" projectFiles="true">
-            <logicalFolder name="bsp" displayName="bsp" projectFiles="true">
-              <itemPath>../../../../../vendors/microchip/harmony/v2.05/bsp/bsp.c</itemPath>
-            </logicalFolder>
-            <logicalFolder name="framework" displayName="framework" projectFiles="true">
-              <logicalFolder name="driver" displayName="driver" projectFiles="true">
-                <logicalFolder name="ethmac" displayName="ethmac" projectFiles="true">
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <logicalFolder name="dynamic" displayName="dynamic" projectFiles="true">
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/ethmac/src/dynamic/drv_ethmac.c</itemPath>
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/ethmac/src/dynamic/drv_ethmac_lib.c</itemPath>
-                    </logicalFolder>
-                  </logicalFolder>
-                </logicalFolder>
-                <logicalFolder name="ethphy" displayName="ethphy" projectFiles="true">
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <logicalFolder name="dynamic" displayName="dynamic" projectFiles="true">
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/ethphy/src/dynamic/drv_ethphy.c</itemPath>
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/ethphy/src/dynamic/drv_extphy_smsc8720.c</itemPath>
-                    </logicalFolder>
-                  </logicalFolder>
-                </logicalFolder>
-                <logicalFolder name="flash" displayName="flash" projectFiles="true">
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/flash/src/drv_flash_static.c</itemPath>
-                  </logicalFolder>
-                </logicalFolder>
-                <logicalFolder name="miim" displayName="miim" projectFiles="true">
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <logicalFolder name="dynamic" displayName="dynamic" projectFiles="true">
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/miim/src/dynamic/drv_miim.c</itemPath>
-                    </logicalFolder>
-                  </logicalFolder>
-                </logicalFolder>
-                <logicalFolder name="spi" displayName="spi" projectFiles="true">
-                  <logicalFolder name="dynamic" displayName="dynamic" projectFiles="true">
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/spi/dynamic/drv_spi_api.c</itemPath>
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/spi/dynamic/drv_spi_master_dma_tasks.c</itemPath>
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/spi/dynamic/drv_spi_master_rm_tasks.c</itemPath>
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/spi/dynamic/drv_spi_tasks.c</itemPath>
-                  </logicalFolder>
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <logicalFolder name="dynamic" displayName="dynamic" projectFiles="true">
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/spi/src/dynamic/drv_spi.c</itemPath>
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/spi/src/dynamic/drv_spi_api.c</itemPath>
-                    </logicalFolder>
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/spi/src/drv_spi_sys_queue_fifo.c</itemPath>
-                  </logicalFolder>
-                </logicalFolder>
-                <logicalFolder name="tmr" displayName="tmr" projectFiles="true">
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <logicalFolder name="dynamic" displayName="dynamic" projectFiles="true">
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/tmr/src/dynamic/drv_tmr.c</itemPath>
-                    </logicalFolder>
-                  </logicalFolder>
-                </logicalFolder>
-                <logicalFolder name="usart" displayName="usart" projectFiles="true">
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <logicalFolder name="dynamic" displayName="dynamic" projectFiles="true">
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/usart/src/dynamic/drv_usart.c</itemPath>
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/usart/src/dynamic/drv_usart_buffer_queue.c</itemPath>
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/usart/src/dynamic/drv_usart_buffer_queue_dma.c</itemPath>
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/usart/src/dynamic/drv_usart_byte_model.c</itemPath>
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/usart/src/dynamic/drv_usart_dma.c</itemPath>
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/usart/src/dynamic/drv_usart_read_write.c</itemPath>
-                    </logicalFolder>
-                  </logicalFolder>
-                </logicalFolder>
-                <logicalFolder name="wifi" displayName="wifi" projectFiles="true">
-                  <logicalFolder name="wilc1000" displayName="wilc1000" projectFiles="true">
-                    <logicalFolder name="dev" displayName="dev" projectFiles="true">
-                      <logicalFolder name="console" displayName="console" projectFiles="true">
-                        <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/dev/console/wdrv_wilc1000_console.c</itemPath>
-                      </logicalFolder>
-                      <logicalFolder name="gpio" displayName="gpio" projectFiles="true">
-                        <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/dev/gpio/wdrv_wilc1000_eint.c</itemPath>
-                        <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/dev/gpio/wdrv_wilc1000_gpio.c</itemPath>
-                      </logicalFolder>
-                      <logicalFolder name="spi" displayName="spi" projectFiles="true">
-                        <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/dev/spi/wdrv_wilc1000_spi.c</itemPath>
-                      </logicalFolder>
-                      <logicalFolder name="timer" displayName="timer" projectFiles="true">
-                        <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/dev/timer/wdrv_wilc1000_timer.c</itemPath>
-                      </logicalFolder>
-                    </logicalFolder>
-                    <logicalFolder name="osal" displayName="osal" projectFiles="true">
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/osal/wdrv_wilc1000_osal.c</itemPath>
-                    </logicalFolder>
-                    <logicalFolder name="wireless_driver"
-                                   displayName="wireless_driver"
-                                   projectFiles="true">
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_cli.c</itemPath>
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_config.c</itemPath>
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_connmgr.c</itemPath>
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_events.c</itemPath>
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_iwpriv.c</itemPath>
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_main.c</itemPath>
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_scan_helper.c</itemPath>
-                    </logicalFolder>
-                    <logicalFolder name="wireless_driver_extension"
-                                   displayName="wireless_driver_extension"
-                                   projectFiles="true">
-                      <logicalFolder name="common" displayName="common" projectFiles="true">
-                        <logicalFolder name="source" displayName="source" projectFiles="true">
-                          <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/common/source/nm_common.c</itemPath>
-                        </logicalFolder>
-                      </logicalFolder>
-                      <logicalFolder name="driver" displayName="driver" projectFiles="true">
-                        <logicalFolder name="source" displayName="source" projectFiles="true">
-                          <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/m2m_hif.c</itemPath>
-                          <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/m2m_periph.c</itemPath>
-                          <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/m2m_wifi.c</itemPath>
-                          <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmasic.c</itemPath>
-                          <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmbus.c</itemPath>
-                          <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmdrv.c</itemPath>
-                          <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmspi.c</itemPath>
-                        </logicalFolder>
-                      </logicalFolder>
-                      <logicalFolder name="spi_flash" displayName="spi_flash" projectFiles="true">
-                        <logicalFolder name="source" displayName="source" projectFiles="true">
-                          <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/spi_flash/source/spi_flash.c</itemPath>
-                        </logicalFolder>
-                      </logicalFolder>
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/wdrvext_wilc1000.c</itemPath>
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/wilc1000_fw_update.c</itemPath>
-                      <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/wilc1000_task.c</itemPath>
-                    </logicalFolder>
-                  </logicalFolder>
-                </logicalFolder>
-              </logicalFolder>
-              <logicalFolder name="osal" displayName="osal" projectFiles="true">
-                <logicalFolder name="src" displayName="src" projectFiles="true">
-                  <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/osal/src/osal.c</itemPath>
-                  <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/osal/src/osal_freertos.c</itemPath>
-                </logicalFolder>
-              </logicalFolder>
-              <logicalFolder name="peripheral" displayName="peripheral" projectFiles="true">
-                <logicalFolder name="tmr" displayName="tmr" projectFiles="true">
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/peripheral/tmr/src/plib_tmr_pic32.c</itemPath>
-                  </logicalFolder>
-                </logicalFolder>
-              </logicalFolder>
-              <logicalFolder name="system" displayName="system" projectFiles="true">
-                <logicalFolder name="clk" displayName="clk" projectFiles="true">
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/clk/src/sys_clk_pic32mz.c</itemPath>
-                  </logicalFolder>
-                </logicalFolder>
-                <logicalFolder name="command" displayName="command" projectFiles="true">
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/command/src/sys_command.c</itemPath>
-                  </logicalFolder>
-                </logicalFolder>
-                <logicalFolder name="common" displayName="common" projectFiles="true">
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/common/src/sys_buffer.c</itemPath>
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/common/src/sys_queue.c</itemPath>
-                  </logicalFolder>
-                </logicalFolder>
-                <logicalFolder name="console" displayName="console" projectFiles="true">
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/console/src/sys_console.c</itemPath>
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/console/src/sys_console_uart.c</itemPath>
-                  </logicalFolder>
-                </logicalFolder>
-                <logicalFolder name="debug" displayName="debug" projectFiles="true">
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/debug/src/sys_debug.c</itemPath>
-                  </logicalFolder>
-                </logicalFolder>
-                <logicalFolder name="devcon" displayName="devcon" projectFiles="true">
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/devcon/src/sys_devcon.c</itemPath>
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/devcon/src/sys_devcon_pic32mz.c</itemPath>
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/devcon/src/sys_devcon_cache_pic32mz.S</itemPath>
-                  </logicalFolder>
-                </logicalFolder>
-                <logicalFolder name="dma" displayName="dma" projectFiles="true">
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/dma/src/sys_dma.c</itemPath>
-                  </logicalFolder>
-                </logicalFolder>
-                <logicalFolder name="int" displayName="int" projectFiles="true">
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/int/src/sys_int_pic32.c</itemPath>
-                  </logicalFolder>
-                </logicalFolder>
-                <logicalFolder name="ports" displayName="ports" projectFiles="true">
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/ports/src/sys_ports.c</itemPath>
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/ports/src/sys_ports_static.c</itemPath>
-                  </logicalFolder>
-                </logicalFolder>
-                <logicalFolder name="random" displayName="random" projectFiles="true">
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/random/src/sys_random.c</itemPath>
-                  </logicalFolder>
-                </logicalFolder>
-                <logicalFolder name="reset" displayName="reset" projectFiles="true">
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/reset/src/sys_reset.c</itemPath>
-                  </logicalFolder>
-                </logicalFolder>
-                <logicalFolder name="tmr" displayName="tmr" projectFiles="true">
-                  <logicalFolder name="src" displayName="src" projectFiles="true">
-                    <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/tmr/src/sys_tmr.c</itemPath>
-                  </logicalFolder>
-                </logicalFolder>
-              </logicalFolder>
-              <logicalFolder name="tcpip" displayName="tcpip" projectFiles="true">
-                <logicalFolder name="src" displayName="src" projectFiles="true">
-                  <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/tcpip/src/tcpip_heap_alloc.c</itemPath>
-                  <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/tcpip/src/tcpip_heap_external.c</itemPath>
-                  <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/tcpip/src/tcpip_helpers.c</itemPath>
-                  <itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/tcpip/src/tcpip_packet.c</itemPath>
-                </logicalFolder>
-              </logicalFolder>
-            </logicalFolder>
-          </logicalFolder>
-        </logicalFolder>
-      </logicalFolder>
-    </logicalFolder>
-  </logicalFolder>
-  <projectmakefile>Makefile</projectmakefile>
-  <confs>
-    <conf name="pic32mz_ef_curiosity" type="2">
-      <toolsSet>
-        <developmentServer>localhost</developmentServer>
-        <targetDevice>PIC32MZ2048EFM100</targetDevice>
-        <targetHeader></targetHeader>
-        <targetPluginBoard></targetPluginBoard>
-        <platformTool>ICD4Tool</platformTool>
-        <languageToolchain>XC32</languageToolchain>
-        <languageToolchainVersion>2.05</languageToolchainVersion>
-        <platform>3</platform>
-      </toolsSet>
-      <packs>
-        <pack name="PIC32MZ-EF_DFP" vendor="Microchip" version="1.0.20"/>
-      </packs>
-      <compileType>
-        <linkerTool>
-          <linkerLibItems>
-            <linkerLibFileItem>../../../../../vendors/microchip/harmony/v2.05/bin/framework/peripheral/PIC32MZ2048EFM100_peripherals.a</linkerLibFileItem>
-          </linkerLibItems>
-        </linkerTool>
-        <archiverTool>
-        </archiverTool>
-        <loading>
-          <makeArtifact PL="../bootloader"
-                        CT="1"
-                        CN="pic32mz_ef_curiosity"
-                        AC="true"
-                        BL="true"
-                        WD="../bootloader"
-                        BC="${MAKE}  -f Makefile CONF=pic32mz_ef_curiosity"
-                        DBC="${MAKE}  -f Makefile CONF=pic32mz_ef_curiosity TYPE_IMAGE=DEBUG_RUN"
-                        CC="rm -rf &quot;build/pic32mz_ef_curiosity&quot; &quot;dist/pic32mz_ef_curiosity&quot;"
-                        OP="dist/pic32mz_ef_curiosity/production/bootloader.production.hex"
-                        DOP="dist/pic32mz_ef_curiosity/debug/bootloader.debug.elf"
-                        FL="dist/pic32mz_ef_curiosity/production/bootloader.production.hex"
-                        PD="dist/pic32mz_ef_curiosity/production/bootloader.production.elf"
-                        DD="dist/pic32mz_ef_curiosity/debug/bootloader.debug.elf">
-          </makeArtifact>
-          <useAlternateLoadableFile>false</useAlternateLoadableFile>
-          <parseOnProdLoad>false</parseOnProdLoad>
-          <alternateLoadableFile></alternateLoadableFile>
-        </loading>
-        <subordinates>
-        </subordinates>
-      </compileType>
-      <makeCustomizationType>
-        <makeCustomizationPreStepEnabled>false</makeCustomizationPreStepEnabled>
-        <makeCustomizationPreStep></makeCustomizationPreStep>
-        <makeCustomizationPostStepEnabled>true</makeCustomizationPostStepEnabled>
-        <makeCustomizationPostStep>python ../../../../../vendors/microchip/boards/curiosity_pic32mzef/bootloader/bootloader/utility/binary_image_generator.py -d ${MP_CC_DIR} -b xc32-objcopy -p "-I ihex ${ImagePath} -O binary ${ImageDir}/mplab.${IMAGE_TYPE}.bin" &amp;&amp; python ../../../../../vendors/microchip/boards/curiosity_pic32mzef/bootloader/bootloader/utility/ota_image_generator.py -b ${ImageDir}/mplab.${IMAGE_TYPE}.bin -p MCHP-Curiosity-PIC32MZEF</makeCustomizationPostStep>
-        <makeCustomizationPutChecksumInUserID>false</makeCustomizationPutChecksumInUserID>
-        <makeCustomizationEnableLongLines>false</makeCustomizationEnableLongLines>
-        <makeCustomizationNormalizeHexFile>false</makeCustomizationNormalizeHexFile>
-      </makeCustomizationType>
-      <C32>
-        <property key="additional-warnings" value="true"/>
-        <property key="addresss-attribute-use" value="false"/>
-        <property key="enable-app-io" value="false"/>
-        <property key="enable-omit-frame-pointer" value="false"/>
-        <property key="enable-symbols" value="true"/>
-        <property key="enable-unroll-loops" value="false"/>
-        <property key="exclude-floating-point" value="false"/>
-        <property key="extra-include-directories"
-                  value="../../../../../freertos_kernel/include;../../../../../libraries/c_sdk/standard/common/include;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/freertos_plus/standard/tls/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/GCC;../../../../../libraries/abstractions/wifi/include;../../../../../libraries/abstractions/pkcs11/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code;../../../../../freertos_kernel/portable/MPLAB/PIC32MZ;../../../../../vendors/microchip/harmony/v2.05/framework;../../../../../vendors/microchip/harmony/v2.05/bsp;../../../../../tests/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files;../../../../../libraries/c_sdk/standard/common/include/private;../../../../../libraries/abstractions/platform/include;../../../../../libraries/abstractions/platform/freertos/include;../../../../../libraries/abstractions/secure_sockets/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/test;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/include;../../../../../libraries/freertos_plus/standard/pkcs11/include;../../../../../libraries/freertos_plus/aws/ota/test;../../../../../libraries/freertos_plus/standard/utils/include;../../../../../demos/dev_mode_key_provisioning/include;../../../../../vendors/microchip/harmony/v2.05/framework/system/common;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/include;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/common/include;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/include;../../../../../libraries/c_sdk/aws/defender/include;../../../../../libraries/c_sdk/standard/mqtt/test/access;../../../../../libraries/c_sdk/standard/mqtt/include;../../../../../libraries/c_sdk/standard/mqtt/src;../../../../../libraries/c_sdk/standard/serializer/include;../../../../../libraries/c_sdk/aws/shadow/include;../../../../../libraries/c_sdk/aws/shadow/src;../../../../../libraries/freertos_plus/aws/greengrass/test;../../../../../libraries/freertos_plus/aws/greengrass/include;../../../../../libraries/freertos_plus/aws/greengrass/src;../../../../../libraries/freertos_plus/aws/ota/src;../../../../../libraries/freertos_plus/aws/ota/include;../../../../../libraries/3rdparty/mbedtls/include;../../../../../libraries/abstractions/posix/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/posix;../../../../../libraries/freertos_plus/standard/freertos_plus_posix/include;../../../../../libraries/c_sdk/aws/defender/src/private;../../../../../libraries/3rdparty/jsmn;../../../../../libraries/3rdparty/pkcs11;../../../../../libraries/3rdparty/tinycbor;../../../../../libraries/3rdparty/tinycrypt/asn1;../../../../../libraries/3rdparty/tinycrypt/lib/include;../../../../../libraries/3rdparty/mbedtls/include/mbedtls;../../../../../libraries/abstractions/pkcs11/mbedtls;../../../../../libraries/3rdparty/unity/src;../../../../../libraries/3rdparty/unity/extras/fixture/src"/>
-        <property key="generate-16-bit-code" value="false"/>
-        <property key="generate-micro-compressed-code" value="false"/>
-        <property key="isolate-each-function" value="true"/>
-        <property key="make-warnings-into-errors" value="false"/>
-        <property key="optimization-level" value="-O1"/>
-        <property key="place-data-into-section" value="false"/>
-        <property key="post-instruction-scheduling" value="default"/>
-        <property key="pre-instruction-scheduling" value="default"/>
-        <property key="preprocessor-macros"
-                  value="UNITY_INCLUDE_CONFIG_H;AMAZON_FREERTOS_ENABLE_UNIT_TESTS;__free_rtos__"/>
-        <property key="strict-ansi" value="false"/>
-        <property key="support-ansi" value="false"/>
-        <property key="toplevel-reordering" value=""/>
-        <property key="unaligned-access" value=""/>
-        <property key="use-cci" value="false"/>
-        <property key="use-iar" value="false"/>
-        <property key="use-indirect-calls" value="false"/>
-        <appendMe value="-mnewlib-libc -std=gnu99 -fgnu89-inline"/>
-      </C32>
-      <C32-AR>
-        <property key="additional-options-chop-files" value="false"/>
-      </C32-AR>
-      <C32-AS>
-        <property key="assembler-symbols" value=""/>
-        <property key="enable-symbols" value="true"/>
-        <property key="exclude-floating-point-library" value="false"/>
-        <property key="expand-macros" value="false"/>
-        <property key="extra-include-directories-for-assembler" value=""/>
-        <property key="extra-include-directories-for-preprocessor"
-                  value="../../../../../freertos_kernel/include;../../../../../libraries/c_sdk/standard/common/include;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/freertos_plus/standard/tls/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/GCC;../../../../../libraries/abstractions/wifi/include;../../../../../libraries/abstractions/pkcs11/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code;../../../../../freertos_kernel/portable/MPLAB/PIC32MZ;../../../../../vendors/microchip/harmony/v2.05/framework;../../../../../vendors/microchip/harmony/v2.05/bsp;../../../../../tests/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files;../../../../../libraries/c_sdk/standard/common/include/private;../../../../../libraries/abstractions/platform/include;../../../../../libraries/abstractions/platform/freertos/include;../../../../../libraries/abstractions/secure_sockets/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/test;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/include;../../../../../libraries/freertos_plus/standard/pkcs11/include;../../../../../libraries/freertos_plus/aws/ota/test;../../../../../libraries/freertos_plus/standard/utils/include;../../../../../demos/dev_mode_key_provisioning/include;../../../../../vendors/microchip/harmony/v2.05/framework/system/common;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/include;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/common/include;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/include;../../../../../libraries/c_sdk/aws/defender/include;../../../../../libraries/c_sdk/standard/mqtt/test/access;../../../../../libraries/c_sdk/standard/mqtt/include;../../../../../libraries/c_sdk/standard/mqtt/src;../../../../../libraries/c_sdk/standard/serializer/include;../../../../../libraries/c_sdk/aws/shadow/include;../../../../../libraries/c_sdk/aws/shadow/src;../../../../../libraries/freertos_plus/aws/greengrass/test;../../../../../libraries/freertos_plus/aws/greengrass/include;../../../../../libraries/freertos_plus/aws/greengrass/src;../../../../../libraries/freertos_plus/aws/ota/src;../../../../../libraries/freertos_plus/aws/ota/include;../../../../../libraries/3rdparty/mbedtls/include;../../../../../libraries/abstractions/posix/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/posix;../../../../../libraries/freertos_plus/standard/freertos_plus_posix/include;../../../../../libraries/c_sdk/aws/defender/src/private;../../../../../libraries/3rdparty/jsmn;../../../../../libraries/3rdparty/pkcs11;../../../../../libraries/3rdparty/tinycbor;../../../../../libraries/3rdparty/tinycrypt/asn1;../../../../../libraries/3rdparty/tinycrypt/lib/include;../../../../../libraries/3rdparty/mbedtls/include/mbedtls;../../../../../libraries/abstractions/pkcs11/mbedtls;../../../../../libraries/3rdparty/unity/src;../../../../../libraries/3rdparty/unity/extras/fixture/src"/>
-        <property key="false-conditionals" value="false"/>
-        <property key="generate-16-bit-code" value="false"/>
-        <property key="generate-micro-compressed-code" value="false"/>
-        <property key="keep-locals" value="false"/>
-        <property key="list-assembly" value="false"/>
-        <property key="list-source" value="false"/>
-        <property key="list-symbols" value="false"/>
-        <property key="oXC32asm-list-to-file" value="false"/>
-        <property key="omit-debug-dirs" value="false"/>
-        <property key="omit-forms" value="false"/>
-        <property key="preprocessor-macros" value=""/>
-        <property key="warning-level" value=""/>
-      </C32-AS>
+	<logicalFolder name="root" displayName="root" projectFiles="true">
+		<logicalFolder name="freertos_kernel" displayName="freertos_kernel" projectFiles="true">
+			<itemPath>../../../../../freertos_kernel/event_groups.c</itemPath>
+			<itemPath>../../../../../freertos_kernel/list.c</itemPath>
+			<itemPath>../../../../../freertos_kernel/queue.c</itemPath>
+			<itemPath>../../../../../freertos_kernel/stream_buffer.c</itemPath>
+			<itemPath>../../../../../freertos_kernel/tasks.c</itemPath>
+			<itemPath>../../../../../freertos_kernel/timers.c</itemPath>
+			<logicalFolder name="include" displayName="include" projectFiles="true">
+				<itemPath>../../../../../freertos_kernel/include/FreeRTOS.h</itemPath>
+				<itemPath>../../../../../freertos_kernel/include/atomic.h</itemPath>
+				<itemPath>../../../../../freertos_kernel/include/deprecated_definitions.h</itemPath>
+				<itemPath>../../../../../freertos_kernel/include/event_groups.h</itemPath>
+				<itemPath>../../../../../freertos_kernel/include/list.h</itemPath>
+				<itemPath>../../../../../freertos_kernel/include/message_buffer.h</itemPath>
+				<itemPath>../../../../../freertos_kernel/include/mpu_prototypes.h</itemPath>
+				<itemPath>../../../../../freertos_kernel/include/mpu_wrappers.h</itemPath>
+				<itemPath>../../../../../freertos_kernel/include/portable.h</itemPath>
+				<itemPath>../../../../../freertos_kernel/include/projdefs.h</itemPath>
+				<itemPath>../../../../../freertos_kernel/include/queue.h</itemPath>
+				<itemPath>../../../../../freertos_kernel/include/semphr.h</itemPath>
+				<itemPath>../../../../../freertos_kernel/include/stack_macros.h</itemPath>
+				<itemPath>../../../../../freertos_kernel/include/stream_buffer.h</itemPath>
+				<itemPath>../../../../../freertos_kernel/include/task.h</itemPath>
+				<itemPath>../../../../../freertos_kernel/include/timers.h</itemPath>
+			</logicalFolder>
+			<logicalFolder name="portable" displayName="portable" projectFiles="true">
+				<logicalFolder name="MPLAB" displayName="MPLAB" projectFiles="true">
+					<logicalFolder name="PIC32MZ" displayName="PIC32MZ" projectFiles="true">
+						<itemPath>../../../../../freertos_kernel/portable/MPLAB/PIC32MZ/port.c</itemPath>
+						<itemPath>../../../../../freertos_kernel/portable/MPLAB/PIC32MZ/port_asm.S</itemPath>
+						<itemPath>../../../../../freertos_kernel/portable/MPLAB/PIC32MZ/portmacro.h</itemPath>
+					</logicalFolder>
+				</logicalFolder>
+				<logicalFolder name="MemMang" displayName="MemMang" projectFiles="true">
+					<itemPath>../../../../../freertos_kernel/portable/MemMang/heap_4.c</itemPath>
+				</logicalFolder>
+			</logicalFolder>
+		</logicalFolder>
+		<logicalFolder name="tests" displayName="tests" projectFiles="true">
+			<logicalFolder name="common" displayName="common" projectFiles="true">
+				<itemPath>../../../../../tests/common/aws_test_framework.c</itemPath>
+				<itemPath>../../../../../tests/common/aws_test_runner.c</itemPath>
+				<itemPath>../../../../../tests/common/aws_test.c</itemPath>
+				<itemPath>../../../../../tests/common/iot_test_freertos.c</itemPath>
+				<itemPath>../../../../../tests/common/iot_tests_network.c</itemPath>
+			</logicalFolder>
+			<logicalFolder name="include" displayName="include" projectFiles="true">
+				<itemPath>../../../../../tests/include/aws_application_version.h</itemPath>
+				<itemPath>../../../../../tests/include/aws_clientcredential.h</itemPath>
+				<itemPath>../../../../../tests/include/aws_clientcredential_keys.h</itemPath>
+				<itemPath>../../../../../tests/include/aws_test_runner.h</itemPath>
+				<itemPath>../../../../../tests/include/aws_test_framework.h</itemPath>
+				<itemPath>../../../../../tests/include/aws_test_tcp.h</itemPath>
+				<itemPath>../../../../../tests/include/aws_test_utils.h</itemPath>
+				<itemPath>../../../../../tests/include/aws_unity_config.h</itemPath>
+				<itemPath>../../../../../tests/include/iot_config_common.h</itemPath>
+			</logicalFolder>
+		</logicalFolder>
+		<logicalFolder name="libraries" displayName="libraries" projectFiles="true">
+			<logicalFolder name="c_sdk" displayName="c_sdk" projectFiles="true">
+				<logicalFolder name="standard" displayName="standard" projectFiles="true">
+					<logicalFolder name="common" displayName="common" projectFiles="true">
+						<itemPath>../../../../../libraries/c_sdk/standard/common/iot_init.c</itemPath>
+						<logicalFolder name="include" displayName="include" projectFiles="true">
+							<itemPath>../../../../../libraries/c_sdk/standard/common/include/iot_appversion32.h</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/standard/common/include/iot_init.h</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/standard/common/include/iot_linear_containers.h</itemPath>
+							<logicalFolder name="private" displayName="private" projectFiles="true">
+								<itemPath>../../../../../libraries/c_sdk/standard/common/include/private/iot_logging.h</itemPath>
+								<itemPath>../../../../../libraries/c_sdk/standard/common/include/private/iot_taskpool_internal.h</itemPath>
+							</logicalFolder>
+							<itemPath>../../../../../libraries/c_sdk/standard/common/include/iot_logging_task.h</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/standard/common/include/iot_logging_setup.h</itemPath>
+							<logicalFolder name="types" displayName="types" projectFiles="true">
+								<itemPath>../../../../../libraries/c_sdk/standard/common/include/types/iot_network_types.h</itemPath>
+								<itemPath>../../../../../libraries/c_sdk/standard/common/include/types/iot_taskpool_types.h</itemPath>
+							</logicalFolder>
+							<itemPath>../../../../../libraries/c_sdk/standard/common/include/iot_taskpool.h</itemPath>
+						</logicalFolder>
+						<logicalFolder name="logging" displayName="logging" projectFiles="true">
+							<itemPath>../../../../../libraries/c_sdk/standard/common/logging/iot_logging_task_dynamic_buffers.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/standard/common/logging/iot_logging.c</itemPath>
+						</logicalFolder>
+						<itemPath>../../../../../libraries/c_sdk/standard/common/iot_static_memory_common.c</itemPath>
+						<itemPath>../../../../../libraries/c_sdk/standard/common/iot_device_metrics.c</itemPath>
+						<logicalFolder name="taskpool" displayName="taskpool" projectFiles="true">
+							<itemPath>../../../../../libraries/c_sdk/standard/common/taskpool/iot_taskpool.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/standard/common/taskpool/iot_taskpool_static_memory.c</itemPath>
+						</logicalFolder>
+						<logicalFolder name="test" displayName="test" projectFiles="true">
+							<itemPath>../../../../../libraries/c_sdk/standard/common/test/iot_memory_leak.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/standard/common/test/iot_tests_taskpool.c</itemPath>
+						</logicalFolder>
+					</logicalFolder>
+					<logicalFolder name="mqtt" displayName="mqtt" projectFiles="true">
+						<logicalFolder name="src" displayName="src" projectFiles="true">
+							<itemPath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_api.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_network.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_operation.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_serialize.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_static_memory.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_subscription.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_validate.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_agent.c</itemPath>
+						</logicalFolder>
+						<logicalFolder name="test" displayName="test" projectFiles="true">
+							<logicalFolder name="unit" displayName="unit" projectFiles="true">
+								<itemPath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_api.c</itemPath>
+								<itemPath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_receive.c</itemPath>
+								<itemPath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_subscription.c</itemPath>
+								<itemPath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_validate.c</itemPath>
+								<itemPath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_metrics.c</itemPath>
+							</logicalFolder>
+							<logicalFolder name="system" displayName="system" projectFiles="true">
+								<itemPath>../../../../../libraries/c_sdk/standard/mqtt/test/system/iot_tests_mqtt_system.c</itemPath>
+							</logicalFolder>
+							<itemPath>../../../../../libraries/c_sdk/standard/mqtt/test/iot_test_mqtt_agent.c</itemPath>
+						</logicalFolder>
+					</logicalFolder>
+					<logicalFolder name="serializer" displayName="serializer" projectFiles="true">
+						<logicalFolder name="src" displayName="src" projectFiles="true">
+							<logicalFolder name="cbor" displayName="cbor" projectFiles="true">
+								<itemPath>../../../../../libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_decoder.c</itemPath>
+								<itemPath>../../../../../libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_encoder.c</itemPath>
+							</logicalFolder>
+							<logicalFolder name="json" displayName="json" projectFiles="true">
+								<itemPath>../../../../../libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_decoder.c</itemPath>
+								<itemPath>../../../../../libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_encoder.c</itemPath>
+							</logicalFolder>
+							<itemPath>../../../../../libraries/c_sdk/standard/serializer/src/iot_serializer_static_memory.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/standard/serializer/src/iot_json_utils.c</itemPath>
+						</logicalFolder>
+						<logicalFolder name="include" displayName="include" projectFiles="true">
+							<itemPath>../../../../../libraries/c_sdk/standard/serializer/include/iot_serializer.h</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/standard/serializer/include/iot_json_utils.h</itemPath>
+						</logicalFolder>
+						<logicalFolder name="test" displayName="test" projectFiles="true">
+							<itemPath>../../../../../libraries/c_sdk/standard/serializer/test/iot_tests_serializer_cbor.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/standard/serializer/test/iot_tests_serializer_json.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/standard/serializer/test/iot_tests_deserializer_json.c</itemPath>
+						</logicalFolder>
+					</logicalFolder>
+					<logicalFolder name="https" displayName="https" projectFiles="true">
+						<logicalFolder name="src" displayName="src" projectFiles="true">
+							<itemPath>../../../../../libraries/c_sdk/standard/https/src/iot_https_client.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/standard/https/src/iot_https_utils.c</itemPath>
+						</logicalFolder>
+						<logicalFolder name="test" displayName="test" projectFiles="true">
+							<logicalFolder name="unit" displayName="unit" projectFiles="true">
+								<itemPath>../../../../../libraries/c_sdk/standard/https/test/unit/iot_tests_https_client.c</itemPath>
+								<itemPath>../../../../../libraries/c_sdk/standard/https/test/unit/iot_tests_https_utils.c</itemPath>
+								<itemPath>../../../../../libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.c</itemPath>
+								<itemPath>../../../../../libraries/c_sdk/standard/https/test/unit/iot_tests_https_sync.c</itemPath>
+								<itemPath>../../../../../libraries/c_sdk/standard/https/test/unit/iot_tests_https_async.c</itemPath>
+							</logicalFolder>
+							<logicalFolder name="system" displayName="system" projectFiles="true">
+								<itemPath>../../../../../libraries/c_sdk/standard/https/test/system/iot_tests_https_system.c</itemPath>
+							</logicalFolder>
+						</logicalFolder>
+					</logicalFolder>
+				</logicalFolder>
+				<logicalFolder name="aws" displayName="aws" projectFiles="true">
+					<logicalFolder name="defender" displayName="defender" projectFiles="true">
+						<logicalFolder name="src" displayName="src" projectFiles="true">
+							<itemPath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_api.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_collector.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_mqtt.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_v1.c</itemPath>
+							<logicalFolder name="private" displayName="private" projectFiles="true">
+								<itemPath>../../../../../libraries/c_sdk/aws/defender/src/private/aws_iot_defender_internal.h</itemPath>
+							</logicalFolder>
+						</logicalFolder>
+						<logicalFolder name="include" displayName="include" projectFiles="true">
+							<itemPath>../../../../../libraries/c_sdk/aws/defender/include/aws_iot_defender.h</itemPath>
+						</logicalFolder>
+						<logicalFolder name="test" displayName="test" projectFiles="true">
+							<itemPath>../../../../../libraries/c_sdk/aws/defender/test/aws_iot_tests_defender_api.c</itemPath>
+						</logicalFolder>
+					</logicalFolder>
+					<logicalFolder name="shadow" displayName="shadow" projectFiles="true">
+						<logicalFolder name="src" displayName="src" projectFiles="true">
+							<itemPath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_api.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_operation.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_parser.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_static_memory.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_subscription.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/aws/shadow/src/aws_shadow.c</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/aws/shadow/src/aws_shadow_config_defaults.h</itemPath>
+						</logicalFolder>
+						<logicalFolder name="include" displayName="include" projectFiles="true">
+							<itemPath>../../../../../libraries/c_sdk/aws/shadow/include/aws_iot_shadow.h</itemPath>
+							<itemPath>../../../../../libraries/c_sdk/aws/shadow/include/aws_shadow.h</itemPath>
+						</logicalFolder>
+						<logicalFolder name="test" displayName="test" projectFiles="true">
+							<logicalFolder name="unit" displayName="unit" projectFiles="true">
+								<itemPath>../../../../../libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_api.c</itemPath>
+								<itemPath>../../../../../libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_parser.c</itemPath>
+							</logicalFolder>
+							<logicalFolder name="system" displayName="system" projectFiles="true">
+								<itemPath>../../../../../libraries/c_sdk/aws/shadow/test/system/aws_iot_tests_shadow_system.c</itemPath>
+							</logicalFolder>
+							<itemPath>../../../../../libraries/c_sdk/aws/shadow/test/aws_test_shadow.c</itemPath>
+						</logicalFolder>
+					</logicalFolder>
+				</logicalFolder>
+			</logicalFolder>
+			<logicalFolder name="abstractions" displayName="abstractions" projectFiles="true">
+				<logicalFolder name="platform" displayName="platform" projectFiles="true">
+					<logicalFolder name="include" displayName="include" projectFiles="true">
+						<logicalFolder name="platform" displayName="platform" projectFiles="true">
+							<itemPath>../../../../../libraries/abstractions/platform/include/platform/iot_clock.h</itemPath>
+							<itemPath>../../../../../libraries/abstractions/platform/include/platform/iot_network.h</itemPath>
+							<itemPath>../../../../../libraries/abstractions/platform/include/platform/iot_threads.h</itemPath>
+							<itemPath>../../../../../libraries/abstractions/platform/include/platform/iot_metrics.h</itemPath>
+						</logicalFolder>
+						<logicalFolder name="types" displayName="types" projectFiles="true">
+							<itemPath>../../../../../libraries/abstractions/platform/include/types/iot_platform_types.h</itemPath>
+						</logicalFolder>
+					</logicalFolder>
+					<logicalFolder name="freertos" displayName="freertos" projectFiles="true">
+						<itemPath>../../../../../libraries/abstractions/platform/freertos/iot_clock_freertos.c</itemPath>
+						<itemPath>../../../../../libraries/abstractions/platform/freertos/iot_threads_freertos.c</itemPath>
+						<logicalFolder name="include" displayName="include" projectFiles="true">
+							<logicalFolder name="platform" displayName="platform" projectFiles="true">
+								<itemPath>../../../../../libraries/abstractions/platform/freertos/include/platform/iot_platform_types_freertos.h</itemPath>
+								<itemPath>../../../../../libraries/abstractions/platform/freertos/include/platform/iot_network_freertos.h</itemPath>
+							</logicalFolder>
+						</logicalFolder>
+						<itemPath>../../../../../libraries/abstractions/platform/freertos/iot_metrics.c</itemPath>
+						<itemPath>../../../../../libraries/abstractions/platform/freertos/iot_network_freertos.c</itemPath>
+					</logicalFolder>
+					<logicalFolder name="test" displayName="test" projectFiles="true">
+						<itemPath>../../../../../libraries/abstractions/platform/test/iot_test_platform_clock.c</itemPath>
+						<itemPath>../../../../../libraries/abstractions/platform/test/iot_test_platform_threads.c</itemPath>
+					</logicalFolder>
+				</logicalFolder>
+				<logicalFolder name="secure_sockets" displayName="secure_sockets" projectFiles="true">
+					<logicalFolder name="include" displayName="include" projectFiles="true">
+						<itemPath>../../../../../libraries/abstractions/secure_sockets/include/iot_secure_sockets.h</itemPath>
+						<itemPath>../../../../../libraries/abstractions/secure_sockets/include/iot_secure_sockets_config_defaults.h</itemPath>
+						<itemPath>../../../../../libraries/abstractions/secure_sockets/include/iot_secure_sockets_wrapper_metrics.h</itemPath>
+					</logicalFolder>
+					<logicalFolder name="freertos_plus_tcp" displayName="freertos_plus_tcp" projectFiles="true">
+						<itemPath>../../../../../libraries/abstractions/secure_sockets/freertos_plus_tcp/iot_secure_sockets.c</itemPath>
+					</logicalFolder>
+					<logicalFolder name="test" displayName="test" projectFiles="true">
+						<itemPath>../../../../../libraries/abstractions/secure_sockets/test/iot_test_tcp.c</itemPath>
+					</logicalFolder>
+				</logicalFolder>
+				<logicalFolder name="pkcs11" displayName="pkcs11" projectFiles="true">
+					<logicalFolder name="mbedtls" displayName="mbedtls" projectFiles="true">
+						<itemPath>../../../../../libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c</itemPath>
+						<itemPath>../../../../../libraries/abstractions/pkcs11/mbedtls/threading_alt.h</itemPath>
+					</logicalFolder>
+					<logicalFolder name="test" displayName="test" projectFiles="true">
+						<itemPath>../../../../../libraries/abstractions/pkcs11/test/iot_test_pkcs11.c</itemPath>
+					</logicalFolder>
+				</logicalFolder>
+				<logicalFolder name="wifi" displayName="wifi" projectFiles="true">
+					<logicalFolder name="include" displayName="include" projectFiles="true">
+						<itemPath>../../../../../libraries/abstractions/wifi/include/iot_wifi.h</itemPath>
+					</logicalFolder>
+					<logicalFolder name="test" displayName="test" projectFiles="true">
+						<itemPath>../../../../../libraries/abstractions/wifi/test/iot_test_wifi.c</itemPath>
+					</logicalFolder>
+				</logicalFolder>
+				<logicalFolder name="posix" displayName="posix" projectFiles="true">
+					<logicalFolder name="include" displayName="include" projectFiles="true">
+						<logicalFolder name="FreeRTOS_POSIX" displayName="FreeRTOS_POSIX" projectFiles="true">
+							<itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/errno.h</itemPath>
+							<itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/fcntl.h</itemPath>
+							<itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/mqueue.h</itemPath>
+							<itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/pthread.h</itemPath>
+							<itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/sched.h</itemPath>
+							<itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/semaphore.h</itemPath>
+							<itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/signal.h</itemPath>
+							<logicalFolder name="sys" displayName="sys" projectFiles="true">
+								<itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/sys/types.h</itemPath>
+							</logicalFolder>
+							<itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/time.h</itemPath>
+							<itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/unistd.h</itemPath>
+							<itemPath>../../../../../libraries/abstractions/posix/include/FreeRTOS_POSIX/utils.h</itemPath>
+						</logicalFolder>
+					</logicalFolder>
+				</logicalFolder>
+			</logicalFolder>
+			<logicalFolder name="freertos_plus" displayName="freertos_plus" projectFiles="true">
+				<logicalFolder name="standard" displayName="standard" projectFiles="true">
+					<logicalFolder name="freertos_plus_tcp" displayName="freertos_plus_tcp" projectFiles="true">
+						<logicalFolder name="source" displayName="source" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_ARP.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DHCP.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DNS.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_IP.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_Sockets.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_Stream_Buffer.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_IP.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_WIN.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_UDP_IP.c</itemPath>
+							<logicalFolder name="portable" displayName="portable" projectFiles="true">
+								<logicalFolder name="NetworkInterface" displayName="NetworkInterface" projectFiles="true">
+									<logicalFolder name="pic32mzef" displayName="pic32mzef" projectFiles="true">
+										<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/pic32mzef/BufferAllocation_2.c</itemPath>
+										<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/pic32mzef/NetworkInterface_wifi.c</itemPath>
+										<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/pic32mzef/NetworkInterface_eth.c</itemPath>
+									</logicalFolder>
+								</logicalFolder>
+							</logicalFolder>
+						</logicalFolder>
+						<logicalFolder name="include" displayName="include" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_ARP.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_DHCP.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_DNS.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_errno_TCP.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOSIPConfigDefaults.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_IP.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_IP_Private.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_Sockets.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_Stream_Buffer.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_TCP_IP.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_TCP_WIN.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/FreeRTOS_UDP_IP.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/IPTraceMacroDefaults.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/NetworkBufferManagement.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include/NetworkInterface.h</itemPath>
+						</logicalFolder>
+						<logicalFolder name="test" displayName="test" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/test/iot_test_freertos_tcp.c</itemPath>
+						</logicalFolder>
+					</logicalFolder>
+					<logicalFolder name="tls" displayName="tls" projectFiles="true">
+						<logicalFolder name="src" displayName="src" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/standard/tls/src/iot_tls.c</itemPath>
+						</logicalFolder>
+						<logicalFolder name="include" displayName="include" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/standard/tls/include/iot_tls.h</itemPath>
+						</logicalFolder>
+						<logicalFolder name="test" displayName="test" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/standard/tls/test/iot_test_tls.c</itemPath>
+						</logicalFolder>
+					</logicalFolder>
+					<logicalFolder name="crypto" displayName="crypto" projectFiles="true">
+						<logicalFolder name="src" displayName="src" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/standard/crypto/src/iot_crypto.c</itemPath>
+						</logicalFolder>
+						<logicalFolder name="include" displayName="include" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/standard/crypto/include/iot_crypto.h</itemPath>
+						</logicalFolder>
+						<logicalFolder name="test" displayName="test" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/standard/crypto/test/iot_test_crypto.c</itemPath>
+						</logicalFolder>
+					</logicalFolder>
+					<logicalFolder name="pkcs11" displayName="pkcs11" projectFiles="true">
+						<logicalFolder name="include" displayName="include" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/standard/pkcs11/include/iot_pkcs11.h</itemPath>
+						</logicalFolder>
+						<logicalFolder name="src" displayName="src" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c</itemPath>
+						</logicalFolder>
+					</logicalFolder>
+					<logicalFolder name="utils" displayName="utils" projectFiles="true">
+						<logicalFolder name="src" displayName="src" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/standard/utils/src/iot_system_init.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/utils/src/iot_pki_utils.c</itemPath>
+						</logicalFolder>
+						<logicalFolder name="include" displayName="include" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/standard/utils/include/iot_system_init.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/utils/include/iot_pki_utils.h</itemPath>
+						</logicalFolder>
+					</logicalFolder>
+					<logicalFolder name="freertos_plus_posix" displayName="freertos_plus_posix" projectFiles="true">
+						<logicalFolder name="source" displayName="source" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_clock.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_mqueue.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_barrier.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_cond.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_mutex.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_sched.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_semaphore.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_timer.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_unistd.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_utils.c</itemPath>
+						</logicalFolder>
+						<logicalFolder name="include" displayName="include" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_types.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_internal.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_portable_default.h</itemPath>
+						</logicalFolder>
+						<logicalFolder name="test" displayName="test" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_clock.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_mqueue.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_pthread.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_semaphore.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_stress.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_timer.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_unistd.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_utils.c</itemPath>
+						</logicalFolder>
+					</logicalFolder>
+				</logicalFolder>
+				<logicalFolder name="aws" displayName="aws" projectFiles="true">
+					<logicalFolder name="greengrass" displayName="greengrass" projectFiles="true">
+						<logicalFolder name="src" displayName="src" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.h</itemPath>
+						</logicalFolder>
+						<logicalFolder name="include" displayName="include" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/aws/greengrass/include/aws_ggd_config_defaults.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/aws/greengrass/include/aws_greengrass_discovery.h</itemPath>
+						</logicalFolder>
+						<logicalFolder name="test" displayName="test" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/aws/greengrass/test/aws_test_greengrass_discovery.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/aws/greengrass/test/aws_test_helper_secure_connect.c</itemPath>
+						</logicalFolder>
+					</logicalFolder>
+					<logicalFolder name="ota" displayName="ota" projectFiles="true">
+						<logicalFolder name="src" displayName="src" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/aws/ota/src/aws_iot_ota_agent.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/aws/ota/src/aws_ota_cbor.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/aws/ota/src/aws_ota_cbor.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/aws/ota/src/aws_ota_pal.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/aws/ota/src/aws_ota_agent_internal.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/aws/ota/src/aws_ota_cbor_internal.h</itemPath>
+						</logicalFolder>
+						<logicalFolder name="include" displayName="include" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/aws/ota/include/aws_iot_ota_agent.h</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/aws/ota/include/aws_ota_types.h</itemPath>
+						</logicalFolder>
+						<logicalFolder name="test" displayName="test" projectFiles="true">
+							<itemPath>../../../../../libraries/freertos_plus/aws/ota/test/aws_test_ota_agent.c</itemPath>
+							<itemPath>../../../../../libraries/freertos_plus/aws/ota/test/aws_test_ota_pal.c</itemPath>
+						</logicalFolder>
+					</logicalFolder>
+				</logicalFolder>
+			</logicalFolder>
+			<logicalFolder name="3rdparty" displayName="3rdparty" projectFiles="true">
+				<logicalFolder name="mbedtls" displayName="mbedtls" projectFiles="true">
+					<logicalFolder name="library" displayName="library" projectFiles="true">
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/base64.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/aes.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/aesni.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/arc4.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/asn1parse.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/asn1write.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/bignum.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/blowfish.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/camellia.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/ccm.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/certs.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/cipher.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/cipher_wrap.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/cmac.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/ctr_drbg.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/debug.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/des.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/dhm.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/ecdh.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/ecdsa.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/ecjpake.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/ecp.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/ecp_curves.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/entropy.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/entropy_poll.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/error.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/gcm.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/havege.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/hmac_drbg.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/md.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/md2.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/md4.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/md5.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/md_wrap.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/memory_buffer_alloc.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/net_sockets.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/oid.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/padlock.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/pem.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/pk.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/pk_wrap.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/pkcs12.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/pkcs5.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/pkparse.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/pkwrite.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/platform.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/platform_util.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/ripemd160.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/rsa.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/rsa_internal.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/sha1.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/sha256.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/sha512.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/ssl_cache.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/ssl_ciphersuites.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/ssl_cli.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/ssl_cookie.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/ssl_srv.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/ssl_ticket.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/ssl_tls.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/threading.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/timing.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/version.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/version_features.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/x509.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/x509_create.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/x509_crl.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/x509_crt.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/x509_csr.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/x509write_crt.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/x509write_csr.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/library/xtea.c</itemPath>
+					</logicalFolder>
+					<logicalFolder name="utils" displayName="utils" projectFiles="true">
+						<itemPath>../../../../../libraries/3rdparty/mbedtls/utils/mbedtls_utils.c</itemPath>
+					</logicalFolder>
+					<logicalFolder name="include" displayName="include" projectFiles="true">
+						<logicalFolder name="mbedtls" displayName="mbedtls" projectFiles="true">
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/aes.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/aesni.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/arc4.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/asn1.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/asn1write.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/base64.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/bignum.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/blowfish.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/bn_mul.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/camellia.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ccm.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/certs.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/check_config.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/cipher.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/cipher_internal.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/cmac.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/compat-1.3.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/config.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ctr_drbg.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/debug.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/des.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/dhm.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecdh.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecdsa.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecjpake.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecp.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecp_internal.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/entropy.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/entropy_poll.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/error.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/gcm.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/havege.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/hmac_drbg.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md2.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md4.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md5.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md_internal.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/memory_buffer_alloc.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/net.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/net_sockets.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/oid.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/padlock.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pem.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pk.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pk_internal.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pkcs12.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pkcs5.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/platform.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/platform_time.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/platform_util.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ripemd160.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/rsa.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/rsa_internal.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/sha1.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/sha256.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/sha512.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_cache.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_ciphersuites.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_cookie.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_internal.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_ticket.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/threading.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/timing.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/version.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509_crl.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509_crt.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509_csr.h</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/xtea.h</itemPath>
+						</logicalFolder>
+					</logicalFolder>
+				</logicalFolder>
+				<logicalFolder name="jsmn" displayName="jsmn" projectFiles="true">
+					<itemPath>../../../../../libraries/3rdparty/jsmn/jsmn.h</itemPath>
+					<itemPath>../../../../../libraries/3rdparty/jsmn/jsmn.c</itemPath>
+				</logicalFolder>
+				<logicalFolder name="pkcs11" displayName="pkcs11" projectFiles="true">
+					<itemPath>../../../../../libraries/3rdparty/pkcs11/pkcs11.h</itemPath>
+					<itemPath>../../../../../libraries/3rdparty/pkcs11/pkcs11f.h</itemPath>
+					<itemPath>../../../../../libraries/3rdparty/pkcs11/pkcs11t.h</itemPath>
+				</logicalFolder>
+				<logicalFolder name="tinycbor" displayName="tinycbor" projectFiles="true">
+					<itemPath>../../../../../libraries/3rdparty/tinycbor/cborpretty.c</itemPath>
+					<itemPath>../../../../../libraries/3rdparty/tinycbor/cborencoder.c</itemPath>
+					<itemPath>../../../../../libraries/3rdparty/tinycbor/cborencoder_close_container_checked.c</itemPath>
+					<itemPath>../../../../../libraries/3rdparty/tinycbor/cborerrorstrings.c</itemPath>
+					<itemPath>../../../../../libraries/3rdparty/tinycbor/cborparser.c</itemPath>
+					<itemPath>../../../../../libraries/3rdparty/tinycbor/cborparser_dup_string.c</itemPath>
+				</logicalFolder>
+				<logicalFolder name="tinycrypt" displayName="tinycrypt" projectFiles="true">
+					<logicalFolder name="lib" displayName="lib" projectFiles="true">
+						<logicalFolder name="source" displayName="source" projectFiles="true">
+							<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/aes_decrypt.c</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/aes_encrypt.c</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/cbc_mode.c</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/ccm_mode.c</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/cmac_mode.c</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/ctr_mode.c</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/ctr_prng.c</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/ecc.c</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/ecc_dh.c</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/ecc_dsa.c</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/ecc_platform_specific.c</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/hmac.c</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/hmac_prng.c</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/sha256.c</itemPath>
+							<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/source/utils.c</itemPath>
+						</logicalFolder>
+						<logicalFolder name="include" displayName="include" projectFiles="true">
+							<logicalFolder name="tinycrypt" displayName="tinycrypt" projectFiles="true">
+								<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/aes.h</itemPath>
+								<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/cbc_mode.h</itemPath>
+								<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ccm_mode.h</itemPath>
+								<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/cmac_mode.h</itemPath>
+								<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/constants.h</itemPath>
+								<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ctr_mode.h</itemPath>
+								<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ctr_prng.h</itemPath>
+								<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ecc.h</itemPath>
+								<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ecc_dh.h</itemPath>
+								<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ecc_dsa.h</itemPath>
+								<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/ecc_platform_specific.h</itemPath>
+								<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/hmac.h</itemPath>
+								<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/hmac_prng.h</itemPath>
+								<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/sha256.h</itemPath>
+								<itemPath>../../../../../libraries/3rdparty/tinycrypt/lib/include/tinycrypt/utils.h</itemPath>
+							</logicalFolder>
+						</logicalFolder>
+					</logicalFolder>
+					<logicalFolder name="asn1" displayName="asn1" projectFiles="true">
+						<itemPath>../../../../../libraries/3rdparty/tinycrypt/asn1/asn1parse.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/tinycrypt/asn1/asn1.h</itemPath>
+					</logicalFolder>
+				</logicalFolder>
+				<logicalFolder name="unity" displayName="unity" projectFiles="true">
+					<logicalFolder name="src" displayName="src" projectFiles="true">
+						<itemPath>../../../../../libraries/3rdparty/unity/src/unity.c</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/unity/src/unity.h</itemPath>
+						<itemPath>../../../../../libraries/3rdparty/unity/src/unity_internals.h</itemPath>
+					</logicalFolder>
+					<logicalFolder name="extras" displayName="extras" projectFiles="true">
+						<logicalFolder name="fixture" displayName="fixture" projectFiles="true">
+							<logicalFolder name="src" displayName="src" projectFiles="true">
+								<itemPath>../../../../../libraries/3rdparty/unity/extras/fixture/src/unity_fixture.c</itemPath>
+								<itemPath>../../../../../libraries/3rdparty/unity/extras/fixture/src/unity_fixture.h</itemPath>
+								<itemPath>../../../../../libraries/3rdparty/unity/extras/fixture/src/unity_fixture_internals.h</itemPath>
+								<itemPath>../../../../../libraries/3rdparty/unity/extras/fixture/src/unity_fixture_malloc_overrides.h</itemPath>
+							</logicalFolder>
+						</logicalFolder>
+					</logicalFolder>
+				</logicalFolder>
+				<logicalFolder name="http-parser" displayName="http-parser" projectFiles="true">
+					<itemPath>../../../../../libraries/3rdparty/http-parser/http_parser.h</itemPath>
+					<itemPath>../../../../../libraries/3rdparty/http-parser/http_parser.c</itemPath>
+				</logicalFolder>
+			</logicalFolder>
+		</logicalFolder>
+		<logicalFolder name="vendors" displayName="vendors" projectFiles="true">
+			<logicalFolder name="microchip" displayName="microchip" projectFiles="true">
+				<logicalFolder name="boards" displayName="boards" projectFiles="true">
+					<logicalFolder name="curiosity_pic32mzef" displayName="curiosity_pic32mzef" projectFiles="true">
+						<logicalFolder name="ports" displayName="ports" projectFiles="true">
+							<logicalFolder name="pkcs11" displayName="pkcs11" projectFiles="true">
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/pkcs11/iot_pkcs11_pal.c</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/pkcs11/pkcs11_nvm.c</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/pkcs11/pkcs11_nvm.h</itemPath>
+							</logicalFolder>
+							<logicalFolder name="wifi" displayName="wifi" projectFiles="true">
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/wifi/iot_wifi.c</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/wifi/aws_wifi_assert.c</itemPath>
+							</logicalFolder>
+							<logicalFolder name="ota" displayName="ota" projectFiles="true">
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/ota/aws_ota_pal.c</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/ota/aws_nvm.c</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/ota/aws_nvm.h</itemPath>
+							</logicalFolder>
+							<logicalFolder name="posix" displayName="posix" projectFiles="true">
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/posix/FreeRTOS_POSIX_portable.h</itemPath>
+							</logicalFolder>
+						</logicalFolder>
+						<logicalFolder name="aws_tests" displayName="aws_tests" projectFiles="true">
+							<logicalFolder name="config_files" displayName="config_files" projectFiles="true">
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/FreeRTOSConfig.h</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/FreeRTOSIPConfig.h</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_bufferpool_config.h</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_demo_config.h</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_ggd_config.h</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_iot_network_config.h</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_mqtt_config.h</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_ota_agent_config.h</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_secure_sockets_config.h</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_shadow_config.h</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_test_ota_config.h</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_test_runner_config.h</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_test_tcp_config.h</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_test_wifi_config.h</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_wifi_config.h</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/iot_config.h</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/iot_mqtt_agent_config.h</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/iot_pkcs11_config.h</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/iot_test_pkcs11_config.h</itemPath>
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/unity_config.h</itemPath>
+							</logicalFolder>
+							<logicalFolder name="application_code" displayName="application_code" projectFiles="true">
+								<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/main.c</itemPath>
+								<logicalFolder name="microchip_code" displayName="microchip_code" projectFiles="true">
+									<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/rtos_hooks.c</itemPath>
+									<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/system_exceptions.c</itemPath>
+									<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/system_init.c</itemPath>
+									<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/system_interrupt.c</itemPath>
+									<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/system_tasks.c</itemPath>
+									<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/NetworkConfig.h</itemPath>
+									<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/system_config.h</itemPath>
+									<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/system_definitions.h</itemPath>
+									<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/system_interrupt_a.S</itemPath>
+								</logicalFolder>
+							</logicalFolder>
+						</logicalFolder>
+					</logicalFolder>
+				</logicalFolder>
+				<logicalFolder name="harmony" displayName="harmony" projectFiles="true">
+					<logicalFolder name="v2.05" displayName="v2.05" projectFiles="true">
+						<logicalFolder name="framework" displayName="framework" projectFiles="true">
+							<logicalFolder name="system" displayName="system" projectFiles="true">
+								<logicalFolder name="command" displayName="command" projectFiles="true">
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/command/src/sys_command.c</itemPath>
+									</logicalFolder>
+								</logicalFolder>
+								<logicalFolder name="clk" displayName="clk" projectFiles="true">
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/clk/src/sys_clk_pic32mz.c</itemPath>
+									</logicalFolder>
+								</logicalFolder>
+								<logicalFolder name="common" displayName="common" projectFiles="true">
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/common/src/sys_buffer.c</itemPath>
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/common/src/sys_queue.c</itemPath>
+									</logicalFolder>
+								</logicalFolder>
+								<logicalFolder name="console" displayName="console" projectFiles="true">
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/console/src/sys_console.c</itemPath>
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/console/src/sys_console_uart.c</itemPath>
+									</logicalFolder>
+								</logicalFolder>
+								<logicalFolder name="debug" displayName="debug" projectFiles="true">
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/debug/src/sys_debug.c</itemPath>
+									</logicalFolder>
+								</logicalFolder>
+								<logicalFolder name="devcon" displayName="devcon" projectFiles="true">
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/devcon/src/sys_devcon.c</itemPath>
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/devcon/src/sys_devcon_pic32mz.c</itemPath>
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/devcon/src/sys_devcon_cache_pic32mz.S</itemPath>
+									</logicalFolder>
+								</logicalFolder>
+								<logicalFolder name="dma" displayName="dma" projectFiles="true">
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/dma/src/sys_dma.c</itemPath>
+									</logicalFolder>
+								</logicalFolder>
+								<logicalFolder name="int" displayName="int" projectFiles="true">
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/int/src/sys_int_pic32.c</itemPath>
+									</logicalFolder>
+								</logicalFolder>
+								<logicalFolder name="ports" displayName="ports" projectFiles="true">
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/ports/src/sys_ports.c</itemPath>
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/ports/src/sys_ports_static.c</itemPath>
+									</logicalFolder>
+								</logicalFolder>
+								<logicalFolder name="random" displayName="random" projectFiles="true">
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/random/src/sys_random.c</itemPath>
+									</logicalFolder>
+								</logicalFolder>
+								<logicalFolder name="reset" displayName="reset" projectFiles="true">
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/reset/src/sys_reset.c</itemPath>
+									</logicalFolder>
+								</logicalFolder>
+								<logicalFolder name="tmr" displayName="tmr" projectFiles="true">
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/system/tmr/src/sys_tmr.c</itemPath>
+									</logicalFolder>
+								</logicalFolder>
+							</logicalFolder>
+							<logicalFolder name="driver" displayName="driver" projectFiles="true">
+								<logicalFolder name="ethmac" displayName="ethmac" projectFiles="true">
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<logicalFolder name="dynamic" displayName="dynamic" projectFiles="true">
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/ethmac/src/dynamic/drv_ethmac.c</itemPath>
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/ethmac/src/dynamic/drv_ethmac_lib.c</itemPath>
+										</logicalFolder>
+									</logicalFolder>
+								</logicalFolder>
+								<logicalFolder name="ethphy" displayName="ethphy" projectFiles="true">
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<logicalFolder name="dynamic" displayName="dynamic" projectFiles="true">
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/ethphy/src/dynamic/drv_ethphy.c</itemPath>
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/ethphy/src/dynamic/drv_extphy_smsc8720.c</itemPath>
+										</logicalFolder>
+									</logicalFolder>
+								</logicalFolder>
+								<logicalFolder name="flash" displayName="flash" projectFiles="true">
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/flash/src/drv_flash_static.c</itemPath>
+									</logicalFolder>
+								</logicalFolder>
+								<logicalFolder name="miim" displayName="miim" projectFiles="true">
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<logicalFolder name="dynamic" displayName="dynamic" projectFiles="true">
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/miim/src/dynamic/drv_miim.c</itemPath>
+										</logicalFolder>
+									</logicalFolder>
+								</logicalFolder>
+								<logicalFolder name="spi" displayName="spi" projectFiles="true">
+									<logicalFolder name="dynamic" displayName="dynamic" projectFiles="true">
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/spi/dynamic/drv_spi_api.c</itemPath>
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/spi/dynamic/drv_spi_master_dma_tasks.c</itemPath>
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/spi/dynamic/drv_spi_master_rm_tasks.c</itemPath>
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/spi/dynamic/drv_spi_tasks.c</itemPath>
+									</logicalFolder>
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<logicalFolder name="dynamic" displayName="dynamic" projectFiles="true">
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/spi/src/dynamic/drv_spi.c</itemPath>
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/spi/src/dynamic/drv_spi_api.c</itemPath>
+										</logicalFolder>
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/spi/src/drv_spi_sys_queue_fifo.c</itemPath>
+									</logicalFolder>
+								</logicalFolder>
+								<logicalFolder name="tmr" displayName="tmr" projectFiles="true">
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<logicalFolder name="dynamic" displayName="dynamic" projectFiles="true">
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/tmr/src/dynamic/drv_tmr.c</itemPath>
+										</logicalFolder>
+									</logicalFolder>
+								</logicalFolder>
+								<logicalFolder name="usart" displayName="usart" projectFiles="true">
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<logicalFolder name="dynamic" displayName="dynamic" projectFiles="true">
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/usart/src/dynamic/drv_usart.c</itemPath>
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/usart/src/dynamic/drv_usart_buffer_queue.c</itemPath>
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/usart/src/dynamic/drv_usart_buffer_queue_dma.c</itemPath>
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/usart/src/dynamic/drv_usart_byte_model.c</itemPath>
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/usart/src/dynamic/drv_usart_dma.c</itemPath>
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/usart/src/dynamic/drv_usart_read_write.c</itemPath>
+										</logicalFolder>
+									</logicalFolder>
+								</logicalFolder>
+								<logicalFolder name="wifi" displayName="wifi" projectFiles="true">
+									<logicalFolder name="wilc1000" displayName="wilc1000" projectFiles="true">
+										<logicalFolder name="dev" displayName="dev" projectFiles="true">
+											<logicalFolder name="console" displayName="console" projectFiles="true">
+												<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/dev/console/wdrv_wilc1000_console.c</itemPath>
+											</logicalFolder>
+											<logicalFolder name="gpio" displayName="gpio" projectFiles="true">
+												<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/dev/gpio/wdrv_wilc1000_eint.c</itemPath>
+												<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/dev/gpio/wdrv_wilc1000_gpio.c</itemPath>
+											</logicalFolder>
+											<logicalFolder name="spi" displayName="spi" projectFiles="true">
+												<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/dev/spi/wdrv_wilc1000_spi.c</itemPath>
+											</logicalFolder>
+											<logicalFolder name="timer" displayName="timer" projectFiles="true">
+												<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/dev/timer/wdrv_wilc1000_timer.c</itemPath>
+											</logicalFolder>
+										</logicalFolder>
+										<logicalFolder name="osal" displayName="osal" projectFiles="true">
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/osal/wdrv_wilc1000_osal.c</itemPath>
+										</logicalFolder>
+										<logicalFolder name="wireless_driver" displayName="wireless_driver" projectFiles="true">
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_cli.c</itemPath>
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_config.c</itemPath>
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_connmgr.c</itemPath>
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_events.c</itemPath>
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_iwpriv.c</itemPath>
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_main.c</itemPath>
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/wdrv_wilc1000_scan_helper.c</itemPath>
+										</logicalFolder>
+										<logicalFolder name="wireless_driver_extension" displayName="wireless_driver_extension" projectFiles="true">
+											<logicalFolder name="common" displayName="common" projectFiles="true">
+												<logicalFolder name="source" displayName="source" projectFiles="true">
+													<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/common/source/nm_common.c</itemPath>
+												</logicalFolder>
+											</logicalFolder>
+											<logicalFolder name="driver" displayName="driver" projectFiles="true">
+												<logicalFolder name="source" displayName="source" projectFiles="true">
+													<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/m2m_hif.c</itemPath>
+													<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/m2m_periph.c</itemPath>
+													<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/m2m_wifi.c</itemPath>
+													<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmasic.c</itemPath>
+													<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmbus.c</itemPath>
+													<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmdrv.c</itemPath>
+													<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source/nmspi.c</itemPath>
+												</logicalFolder>
+											</logicalFolder>
+											<logicalFolder name="spi_flash" displayName="spi_flash" projectFiles="true">
+												<logicalFolder name="source" displayName="source" projectFiles="true">
+													<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/spi_flash/source/spi_flash.c</itemPath>
+												</logicalFolder>
+											</logicalFolder>
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/wdrvext_wilc1000.c</itemPath>
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/wilc1000_fw_update.c</itemPath>
+											<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/wilc1000_task.c</itemPath>
+										</logicalFolder>
+									</logicalFolder>
+								</logicalFolder>
+							</logicalFolder>
+							<logicalFolder name="osal" displayName="osal" projectFiles="true">
+								<logicalFolder name="src" displayName="src" projectFiles="true">
+									<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/osal/src/osal.c</itemPath>
+									<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/osal/src/osal_freertos.c</itemPath>
+								</logicalFolder>
+							</logicalFolder>
+							<logicalFolder name="peripheral" displayName="peripheral" projectFiles="true">
+								<logicalFolder name="tmr" displayName="tmr" projectFiles="true">
+									<logicalFolder name="src" displayName="src" projectFiles="true">
+										<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/peripheral/tmr/src/plib_tmr_pic32.c</itemPath>
+									</logicalFolder>
+								</logicalFolder>
+							</logicalFolder>
+							<logicalFolder name="tcpip" displayName="tcpip" projectFiles="true">
+								<logicalFolder name="src" displayName="src" projectFiles="true">
+									<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/tcpip/src/tcpip_heap_alloc.c</itemPath>
+									<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/tcpip/src/tcpip_heap_external.c</itemPath>
+									<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/tcpip/src/tcpip_helpers.c</itemPath>
+									<itemPath>../../../../../vendors/microchip/harmony/v2.05/framework/tcpip/src/tcpip_packet.c</itemPath>
+								</logicalFolder>
+							</logicalFolder>
+						</logicalFolder>
+						<logicalFolder name="bsp" displayName="bsp" projectFiles="true">
+							<itemPath>../../../../../vendors/microchip/harmony/v2.05/bsp/bsp.c</itemPath>
+						</logicalFolder>
+					</logicalFolder>
+				</logicalFolder>
+			</logicalFolder>
+		</logicalFolder>
+		<logicalFolder name="demos" displayName="demos" projectFiles="true">
+			<logicalFolder name="dev_mode_key_provisioning" displayName="dev_mode_key_provisioning" projectFiles="true">
+				<logicalFolder name="src" displayName="src" projectFiles="true">
+					<itemPath>../../../../../demos/dev_mode_key_provisioning/src/aws_dev_mode_key_provisioning.c</itemPath>
+				</logicalFolder>
+				<logicalFolder name="include" displayName="include" projectFiles="true">
+					<itemPath>../../../../../demos/dev_mode_key_provisioning/include/aws_dev_mode_key_provisioning.h</itemPath>
+				</logicalFolder>
+			</logicalFolder>
+		</logicalFolder>
+		<logicalFolder name="LinkerScript" displayName="LinkerScript" projectFiles="true">
+			<itemPath>../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code/app_mz.ld</itemPath>
+		</logicalFolder>
+	</logicalFolder>
+	<projectmakefile>Makefile</projectmakefile>
+	<confs>
+		<conf name="pic32mz_ef_curiosity" type="2">
+			<toolsSet>
+				<developmentServer>localhost</developmentServer>
+				<targetDevice>PIC32MZ2048EFM100</targetDevice>
+				<targetHeader/>
+				<targetPluginBoard/>
+				<platformTool>ICD4Tool</platformTool>
+				<languageToolchain>XC32</languageToolchain>
+				<languageToolchainVersion>2.05</languageToolchainVersion>
+				<platform>3</platform>
+			</toolsSet>
+			<packs>
+				<pack name="PIC32MZ-EF_DFP" vendor="Microchip" version="1.0.20"/>
+			</packs>
+			<compileType>
+				<linkerTool>
+					<linkerLibItems>
+						<linkerLibFileItem>../../../../../vendors/microchip/harmony/v2.05/bin/framework/peripheral/PIC32MZ2048EFM100_peripherals.a</linkerLibFileItem>
+					</linkerLibItems>
+				</linkerTool>
+				<archiverTool/>
+				<loading>
+					<makeArtifact PL="../bootloader" CT="1" CN="pic32mz_ef_curiosity" AC="true" BL="true" WD="../bootloader" BC="${MAKE}  -f Makefile CONF=pic32mz_ef_curiosity" DBC="${MAKE}  -f Makefile CONF=pic32mz_ef_curiosity TYPE_IMAGE=DEBUG_RUN" CC="rm -rf &quot;build/pic32mz_ef_curiosity&quot; &quot;dist/pic32mz_ef_curiosity&quot;" OP="dist/pic32mz_ef_curiosity/production/bootloader.production.hex" DOP="dist/pic32mz_ef_curiosity/debug/bootloader.debug.elf" FL="dist/pic32mz_ef_curiosity/production/bootloader.production.hex" PD="dist/pic32mz_ef_curiosity/production/bootloader.production.elf" DD="dist/pic32mz_ef_curiosity/debug/bootloader.debug.elf"/>
+					<useAlternateLoadableFile>false</useAlternateLoadableFile>
+					<parseOnProdLoad>false</parseOnProdLoad>
+					<alternateLoadableFile/>
+				</loading>
+				<subordinates/>
+			</compileType>
+			<makeCustomizationType>
+				<makeCustomizationPreStepEnabled>false</makeCustomizationPreStepEnabled>
+				<makeCustomizationPreStep/>
+				<makeCustomizationPostStepEnabled>true</makeCustomizationPostStepEnabled>
+				<makeCustomizationPostStep>python ../../../../../vendors/microchip/boards/curiosity_pic32mzef/bootloader/bootloader/utility/binary_image_generator.py -d ${MP_CC_DIR} -b xc32-objcopy -p &quot;-I ihex ${ImagePath} -O binary ${ImageDir}/mplab.${IMAGE_TYPE}.bin&quot; &amp;&amp; python ../../../../../vendors/microchip/boards/curiosity_pic32mzef/bootloader/bootloader/utility/ota_image_generator.py -b ${ImageDir}/mplab.${IMAGE_TYPE}.bin -p MCHP-Curiosity-PIC32MZEF</makeCustomizationPostStep>
+				<makeCustomizationPutChecksumInUserID>false</makeCustomizationPutChecksumInUserID>
+				<makeCustomizationEnableLongLines>false</makeCustomizationEnableLongLines>
+				<makeCustomizationNormalizeHexFile>false</makeCustomizationNormalizeHexFile>
+			</makeCustomizationType>
+			<C32>
+				<property key="additional-warnings" value="true"/>
+				<property key="addresss-attribute-use" value="false"/>
+				<property key="enable-app-io" value="false"/>
+				<property key="enable-omit-frame-pointer" value="false"/>
+				<property key="enable-symbols" value="true"/>
+				<property key="enable-unroll-loops" value="false"/>
+				<property key="exclude-floating-point" value="false"/>
+				<property key="extra-include-directories" value="../../../../../freertos_kernel/include;../../../../../libraries/c_sdk/standard/common/include;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/freertos_plus/standard/tls/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/GCC;../../../../../libraries/abstractions/wifi/include;../../../../../libraries/abstractions/pkcs11/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code;../../../../../freertos_kernel/portable/MPLAB/PIC32MZ;../../../../../vendors/microchip/harmony/v2.05/framework;../../../../../vendors/microchip/harmony/v2.05/bsp;../../../../../tests/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files;../../../../../libraries/c_sdk/standard/common/include/private;../../../../../libraries/abstractions/platform/include;../../../../../libraries/abstractions/platform/freertos/include;../../../../../libraries/abstractions/secure_sockets/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/test;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/include;../../../../../libraries/freertos_plus/standard/pkcs11/include;../../../../../libraries/freertos_plus/aws/ota/test;../../../../../libraries/freertos_plus/standard/utils/include;../../../../../demos/dev_mode_key_provisioning/include;../../../../../vendors/microchip/harmony/v2.05/framework/system/common;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/include;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/common/include;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/include;../../../../../libraries/c_sdk/aws/defender/include;../../../../../libraries/c_sdk/standard/mqtt/test/access;../../../../../libraries/c_sdk/standard/mqtt/include;../../../../../libraries/c_sdk/standard/mqtt/src;../../../../../libraries/c_sdk/standard/serializer/include;../../../../../libraries/c_sdk/aws/shadow/include;../../../../../libraries/c_sdk/aws/shadow/src;../../../../../libraries/c_sdk/standard/https/test/access;../../../../../libraries/c_sdk/standard/https/include;../../../../../libraries/c_sdk/standard/https/src;../../../../../libraries/freertos_plus/aws/greengrass/test;../../../../../libraries/freertos_plus/aws/greengrass/include;../../../../../libraries/freertos_plus/aws/greengrass/src;../../../../../libraries/freertos_plus/aws/ota/src;../../../../../libraries/freertos_plus/aws/ota/include;../../../../../libraries/3rdparty/mbedtls/include;../../../../../libraries/abstractions/posix/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/posix;../../../../../libraries/freertos_plus/standard/freertos_plus_posix/include;../../../../../libraries/c_sdk/aws/defender/src/private;../../../../../libraries/3rdparty/jsmn;../../../../../libraries/3rdparty/pkcs11;../../../../../libraries/3rdparty/tinycbor;../../../../../libraries/3rdparty/tinycrypt/asn1;../../../../../libraries/3rdparty/tinycrypt/lib/include;../../../../../libraries/3rdparty/mbedtls/include/mbedtls;../../../../../libraries/abstractions/pkcs11/mbedtls;../../../../../libraries/3rdparty/unity/src;../../../../../libraries/3rdparty/unity/extras/fixture/src;../../../../../libraries/3rdparty/http-parser"/>
+				<property key="generate-16-bit-code" value="false"/>
+				<property key="generate-micro-compressed-code" value="false"/>
+				<property key="isolate-each-function" value="true"/>
+				<property key="make-warnings-into-errors" value="false"/>
+				<property key="optimization-level" value="-O1"/>
+				<property key="place-data-into-section" value="false"/>
+				<property key="post-instruction-scheduling" value="default"/>
+				<property key="pre-instruction-scheduling" value="default"/>
+				<property key="preprocessor-macros" value="UNITY_INCLUDE_CONFIG_H;AMAZON_FREERTOS_ENABLE_UNIT_TESTS;__free_rtos__"/>
+				<property key="strict-ansi" value="false"/>
+				<property key="support-ansi" value="false"/>
+				<property key="toplevel-reordering" value=""/>
+				<property key="unaligned-access" value=""/>
+				<property key="use-cci" value="false"/>
+				<property key="use-iar" value="false"/>
+				<property key="use-indirect-calls" value="false"/>
+				<appendMe value="-mnewlib-libc -std=gnu99 -fgnu89-inline"/>
+			</C32>
+			<C32-AR>
+				<property key="additional-options-chop-files" value="false"/>
+			</C32-AR>
+			<C32-AS>
+				<property key="assembler-symbols" value=""/>
+				<property key="enable-symbols" value="true"/>
+				<property key="exclude-floating-point-library" value="false"/>
+				<property key="expand-macros" value="false"/>
+				<property key="extra-include-directories-for-assembler" value=""/>
+				<property key="extra-include-directories-for-preprocessor" value="../../../../../freertos_kernel/include;../../../../../libraries/c_sdk/standard/common/include;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/freertos_plus/standard/tls/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/GCC;../../../../../libraries/abstractions/wifi/include;../../../../../libraries/abstractions/pkcs11/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/application_code/microchip_code;../../../../../freertos_kernel/portable/MPLAB/PIC32MZ;../../../../../vendors/microchip/harmony/v2.05/framework;../../../../../vendors/microchip/harmony/v2.05/bsp;../../../../../tests/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files;../../../../../libraries/c_sdk/standard/common/include/private;../../../../../libraries/abstractions/platform/include;../../../../../libraries/abstractions/platform/freertos/include;../../../../../libraries/abstractions/secure_sockets/include;../../../../../libraries/freertos_plus/standard/freertos_plus_tcp/test;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/include;../../../../../libraries/freertos_plus/standard/pkcs11/include;../../../../../libraries/freertos_plus/aws/ota/test;../../../../../libraries/freertos_plus/standard/utils/include;../../../../../demos/dev_mode_key_provisioning/include;../../../../../vendors/microchip/harmony/v2.05/framework/system/common;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/include;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/common/include;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver_extension/driver/source;../../../../../vendors/microchip/harmony/v2.05/framework/driver/wifi/wilc1000/wireless_driver/include;../../../../../libraries/c_sdk/aws/defender/include;../../../../../libraries/c_sdk/standard/mqtt/test/access;../../../../../libraries/c_sdk/standard/mqtt/include;../../../../../libraries/c_sdk/standard/mqtt/src;../../../../../libraries/c_sdk/standard/serializer/include;../../../../../libraries/c_sdk/aws/shadow/include;../../../../../libraries/c_sdk/aws/shadow/src;../../../../../libraries/c_sdk/standard/https/test/access;../../../../../libraries/c_sdk/standard/https/include;../../../../../libraries/c_sdk/standard/https/src;../../../../../libraries/freertos_plus/aws/greengrass/test;../../../../../libraries/freertos_plus/aws/greengrass/include;../../../../../libraries/freertos_plus/aws/greengrass/src;../../../../../libraries/freertos_plus/aws/ota/src;../../../../../libraries/freertos_plus/aws/ota/include;../../../../../libraries/3rdparty/mbedtls/include;../../../../../libraries/abstractions/posix/include;../../../../../vendors/microchip/boards/curiosity_pic32mzef/ports/posix;../../../../../libraries/freertos_plus/standard/freertos_plus_posix/include;../../../../../libraries/c_sdk/aws/defender/src/private;../../../../../libraries/3rdparty/jsmn;../../../../../libraries/3rdparty/pkcs11;../../../../../libraries/3rdparty/tinycbor;../../../../../libraries/3rdparty/tinycrypt/asn1;../../../../../libraries/3rdparty/tinycrypt/lib/include;../../../../../libraries/3rdparty/mbedtls/include/mbedtls;../../../../../libraries/abstractions/pkcs11/mbedtls;../../../../../libraries/3rdparty/unity/src;../../../../../libraries/3rdparty/unity/extras/fixture/src;../../../../../libraries/3rdparty/http-parser"/>
+				<property key="false-conditionals" value="false"/>
+				<property key="generate-16-bit-code" value="false"/>
+				<property key="generate-micro-compressed-code" value="false"/>
+				<property key="keep-locals" value="false"/>
+				<property key="list-assembly" value="false"/>
+				<property key="list-source" value="false"/>
+				<property key="list-symbols" value="false"/>
+				<property key="oXC32asm-list-to-file" value="false"/>
+				<property key="omit-debug-dirs" value="false"/>
+				<property key="omit-forms" value="false"/>
+				<property key="preprocessor-macros" value=""/>
+				<property key="warning-level" value=""/>
+			</C32-AS>
       <C32-CO>
         <property key="coverage-enable" value=""/>
       </C32-CO>
-      <C32-LD>
-        <property key="additional-options-use-response-files" value="false"/>
-        <property key="additional-options-write-sla" value="false"/>
-        <property key="allocate-dinit" value="false"/>
-        <property key="code-dinit" value="false"/>
-        <property key="ebase-addr" value=""/>
-        <property key="enable-check-sections" value="false"/>
-        <property key="exclude-floating-point-library" value="false"/>
-        <property key="exclude-standard-libraries" value="false"/>
-        <property key="extra-lib-directories" value=""/>
-        <property key="fill-flash-options-addr" value=""/>
-        <property key="fill-flash-options-const" value=""/>
-        <property key="fill-flash-options-how" value="0"/>
-        <property key="fill-flash-options-inc-const" value="1"/>
-        <property key="fill-flash-options-increment" value=""/>
-        <property key="fill-flash-options-seq" value=""/>
-        <property key="fill-flash-options-what" value="0"/>
-        <property key="generate-16-bit-code" value="false"/>
-        <property key="generate-cross-reference-file" value="false"/>
-        <property key="generate-micro-compressed-code" value="false"/>
-        <property key="heap-size" value="170000"/>
-        <property key="input-libraries" value=""/>
-        <property key="kseg-length" value=""/>
-        <property key="kseg-origin" value=""/>
-        <property key="linker-symbols" value=""/>
-        <property key="map-file" value="${DISTDIR}/${PROJECTNAME}.${IMAGE_TYPE}.map"/>
-        <property key="no-device-startup-code" value="false"/>
-        <property key="no-startup-files" value="false"/>
-        <property key="oXC32ld-extra-opts" value="-mnewlib-libc"/>
-        <property key="optimization-level" value=""/>
-        <property key="preprocessor-macros" value=""/>
-        <property key="remove-unused-sections" value="true"/>
-        <property key="report-memory-usage" value="false"/>
-        <property key="serial-length" value=""/>
-        <property key="serial-origin" value=""/>
-        <property key="stack-size" value="10000"/>
-        <property key="symbol-stripping" value=""/>
-        <property key="trace-symbols" value=""/>
-        <property key="warn-section-align" value="false"/>
-        <appendMe value="--allow-multiple-definition"/>
-      </C32-LD>
-      <C32CPP>
-        <property key="additional-warnings" value="false"/>
-        <property key="addresss-attribute-use" value="false"/>
-        <property key="check-new" value="false"/>
-        <property key="eh-specs" value="true"/>
-        <property key="enable-app-io" value="false"/>
-        <property key="enable-omit-frame-pointer" value="false"/>
-        <property key="enable-symbols" value="true"/>
-        <property key="enable-unroll-loops" value="false"/>
-        <property key="exceptions" value="true"/>
-        <property key="exclude-floating-point" value="false"/>
-        <property key="extra-include-directories" value=""/>
-        <property key="generate-16-bit-code" value="false"/>
-        <property key="generate-micro-compressed-code" value="false"/>
-        <property key="isolate-each-function" value="false"/>
-        <property key="make-warnings-into-errors" value="false"/>
-        <property key="optimization-level" value=""/>
-        <property key="place-data-into-section" value="false"/>
-        <property key="post-instruction-scheduling" value="default"/>
-        <property key="pre-instruction-scheduling" value="default"/>
-        <property key="preprocessor-macros" value=""/>
-        <property key="rtti" value="true"/>
-        <property key="strict-ansi" value="false"/>
-        <property key="toplevel-reordering" value=""/>
-        <property key="unaligned-access" value=""/>
-        <property key="use-cci" value="false"/>
-        <property key="use-iar" value="false"/>
-        <property key="use-indirect-calls" value="false"/>
-      </C32CPP>
-      <C32Global>
-        <property key="common-include-directories" value=""/>
-        <property key="gp-relative-option" value=""/>
-        <property key="legacy-libc" value="false"/>
-        <property key="mdtcm" value=""/>
-        <property key="mitcm" value=""/>
-        <property key="mstacktcm" value="false"/>
-        <property key="relaxed-math" value="false"/>
-        <property key="save-temps" value="false"/>
-        <property key="wpo-lto" value="false"/>
-      </C32Global>
-      <ICD3PlatformTool>
-        <property key="firmware.download.all" value="false"/>
-      </ICD3PlatformTool>
-      <ICD4Tool>
-        <property key="ADC" value="true"/>
-        <property key="AutoSelectMemRanges" value="auto"/>
-        <property key="CAN1" value="true"/>
-        <property key="CAN2" value="true"/>
-        <property key="CHANGE NOTICE A" value="true"/>
-        <property key="CHANGE NOTICE B" value="true"/>
-        <property key="CHANGE NOTICE C" value="true"/>
-        <property key="CHANGE NOTICE D" value="true"/>
-        <property key="CHANGE NOTICE E" value="true"/>
-        <property key="CHANGE NOTICE F" value="true"/>
-        <property key="CHANGE NOTICE G" value="true"/>
-        <property key="COMPARATOR" value="true"/>
-        <property key="DMA" value="true"/>
-        <property key="ETHERNET CONTROLLER" value="true"/>
-        <property key="Freeze All Other Peripherals" value="true"/>
-        <property key="I2C 1" value="true"/>
-        <property key="I2C 2" value="true"/>
-        <property key="I2C 3" value="true"/>
-        <property key="I2C 4" value="true"/>
-        <property key="I2C 5" value="true"/>
-        <property key="INPUT CAPTURE 1" value="true"/>
-        <property key="INPUT CAPTURE 2" value="true"/>
-        <property key="INPUT CAPTURE 3" value="true"/>
-        <property key="INPUT CAPTURE 4" value="true"/>
-        <property key="INPUT CAPTURE 5" value="true"/>
-        <property key="INPUT CAPTURE 6" value="true"/>
-        <property key="INPUT CAPTURE 7" value="true"/>
-        <property key="INPUT CAPTURE 8" value="true"/>
-        <property key="INPUT CAPTURE 9" value="true"/>
-        <property key="INTERRUPT CONTROL" value="true"/>
-        <property key="OUTPUT COMPARE 1" value="true"/>
-        <property key="OUTPUT COMPARE 2" value="true"/>
-        <property key="OUTPUT COMPARE 3" value="true"/>
-        <property key="OUTPUT COMPARE 4" value="true"/>
-        <property key="OUTPUT COMPARE 5" value="true"/>
-        <property key="OUTPUT COMPARE 6" value="true"/>
-        <property key="OUTPUT COMPARE 7" value="true"/>
-        <property key="OUTPUT COMPARE 8" value="true"/>
-        <property key="OUTPUT COMPARE 9" value="true"/>
-        <property key="PARALLEL MASTER/SLAVE PORT" value="true"/>
-        <property key="REAL TIME CLOCK" value="true"/>
-        <property key="REFERENCE CLOCK1" value="true"/>
-        <property key="REFERENCE CLOCK2" value="true"/>
-        <property key="REFERENCE CLOCK3" value="true"/>
-        <property key="REFERENCE CLOCK4" value="true"/>
-        <property key="SPI/I2S 1" value="true"/>
-        <property key="SPI/I2S 2" value="true"/>
-        <property key="SPI/I2S 3" value="true"/>
-        <property key="SPI/I2S 4" value="true"/>
-        <property key="SPI/I2S 5" value="true"/>
-        <property key="SPI/I2S 6" value="true"/>
-        <property key="SecureSegment.SegmentProgramming" value="FullChipProgramming"/>
-        <property key="TIMER1" value="true"/>
-        <property key="TIMER2" value="true"/>
-        <property key="TIMER3" value="true"/>
-        <property key="TIMER4" value="true"/>
-        <property key="TIMER5" value="true"/>
-        <property key="TIMER6" value="true"/>
-        <property key="TIMER7" value="true"/>
-        <property key="TIMER8" value="true"/>
-        <property key="TIMER9" value="true"/>
-        <property key="ToolFirmwareFilePath"
-                  value="Press to browse for a specific firmware version"/>
-        <property key="ToolFirmwareOption.UseLatestFirmware" value="true"/>
-        <property key="UART1" value="true"/>
-        <property key="UART2" value="true"/>
-        <property key="UART3" value="true"/>
-        <property key="UART4" value="true"/>
-        <property key="UART5" value="true"/>
-        <property key="UART6" value="true"/>
-        <property key="debugoptions.useswbreakpoints" value="false"/>
-        <property key="hwtoolclock.frcindebug" value="false"/>
-        <property key="memories.aux" value="false"/>
-        <property key="memories.bootflash" value="true"/>
-        <property key="memories.configurationmemory" value="true"/>
-        <property key="memories.configurationmemory2" value="true"/>
-        <property key="memories.dataflash" value="true"/>
-        <property key="memories.eeprom" value="true"/>
-        <property key="memories.exclude.configurationmemory" value="true"/>
-        <property key="memories.flashdata" value="true"/>
-        <property key="memories.id" value="true"/>
-        <property key="memories.instruction.ram.ranges"
-                  value="${memories.instruction.ram.ranges}"/>
-        <property key="memories.programmemory" value="true"/>
-        <property key="memories.programmemory.ranges" value="1d000000-1d1fffff"/>
-        <property key="poweroptions.powerenable" value="false"/>
-        <property key="programoptions.donoteraseauxmem" value="false"/>
-        <property key="programoptions.eraseb4program" value="true"/>
-        <property key="programoptions.ledbrightness" value="5"/>
-        <property key="programoptions.pgcconfig" value="pull down"/>
-        <property key="programoptions.pgcresistor.value" value="4.7"/>
-        <property key="programoptions.pgdconfig" value="pull down"/>
-        <property key="programoptions.pgdresistor.value" value="4.7"/>
-        <property key="programoptions.pgmentry.voltage" value="low"/>
-        <property key="programoptions.pgmspeed" value="Med"/>
-        <property key="programoptions.preservedataflash" value="false"/>
-        <property key="programoptions.preserveeeprom" value="false"/>
-        <property key="programoptions.preserveeeprom.ranges" value=""/>
-        <property key="programoptions.preserveprogram.ranges" value=""/>
-        <property key="programoptions.preserveprogramrange" value="false"/>
-        <property key="programoptions.preserveuserid" value="false"/>
-        <property key="programoptions.programcalmem" value="false"/>
-        <property key="programoptions.programuserotp" value="false"/>
-        <property key="programoptions.testmodeentrymethod" value="VDDFirst"/>
-        <property key="voltagevalue" value="3.25"/>
-      </ICD4Tool>
-      <PKOBSKDEPlatformTool>
-        <property key="AutoSelectMemRanges" value="auto"/>
-        <property key="SecureSegment.SegmentProgramming" value="FullChipProgramming"/>
-        <property key="ToolFirmwareFilePath"
-                  value="Press to browse for a specific firmware version"/>
-        <property key="ToolFirmwareOption.UseLatestFirmware" value="true"/>
-        <property key="memories.configurationmemory" value="true"/>
-        <property key="memories.dataflash" value="true"/>
-        <property key="memories.eeprom" value="true"/>
-        <property key="memories.id" value="true"/>
-        <property key="memories.programmemory" value="true"/>
-        <property key="memories.programmemory.ranges" value="1d000000-1d1fffff"/>
-        <property key="memories.userotp" value="true"/>
-        <property key="programoptions.donoteraseauxmem" value="false"/>
-        <property key="programoptions.eraseb4program" value="true"/>
-        <property key="programoptions.preservedataflash" value="false"/>
-        <property key="programoptions.preservedataflash.ranges" value=""/>
-        <property key="programoptions.preserveeeprom" value="false"/>
-        <property key="programoptions.preserveeeprom.ranges" value=""/>
-        <property key="programoptions.preserveprogram.ranges" value=""/>
-        <property key="programoptions.preserveprogramrange" value="false"/>
-        <property key="programoptions.usehighvoltageonmclr" value="false"/>
-        <property key="programoptions.uselvpprogramming" value="true"/>
-      </PKOBSKDEPlatformTool>
-      <RealICEPlatformTool>
-        <property key="ADC" value="true"/>
-        <property key="AutoSelectMemRanges" value="auto"/>
-        <property key="CAN1" value="true"/>
-        <property key="CAN2" value="true"/>
-        <property key="CHANGE NOTICE A" value="true"/>
-        <property key="CHANGE NOTICE B" value="true"/>
-        <property key="CHANGE NOTICE C" value="true"/>
-        <property key="CHANGE NOTICE D" value="true"/>
-        <property key="CHANGE NOTICE E" value="true"/>
-        <property key="CHANGE NOTICE F" value="true"/>
-        <property key="CHANGE NOTICE G" value="true"/>
-        <property key="COMPARATOR" value="true"/>
-        <property key="DMA" value="true"/>
-        <property key="ETHERNET CONTROLLER" value="true"/>
-        <property key="Freeze All Other Peripherals" value="true"/>
-        <property key="I2C 1" value="true"/>
-        <property key="I2C 2" value="true"/>
-        <property key="I2C 3" value="true"/>
-        <property key="I2C 4" value="true"/>
-        <property key="I2C 5" value="true"/>
-        <property key="INPUT CAPTURE 1" value="true"/>
-        <property key="INPUT CAPTURE 2" value="true"/>
-        <property key="INPUT CAPTURE 3" value="true"/>
-        <property key="INPUT CAPTURE 4" value="true"/>
-        <property key="INPUT CAPTURE 5" value="true"/>
-        <property key="INPUT CAPTURE 6" value="true"/>
-        <property key="INPUT CAPTURE 7" value="true"/>
-        <property key="INPUT CAPTURE 8" value="true"/>
-        <property key="INPUT CAPTURE 9" value="true"/>
-        <property key="INTERRUPT CONTROL" value="true"/>
-        <property key="OUTPUT COMPARE 1" value="true"/>
-        <property key="OUTPUT COMPARE 2" value="true"/>
-        <property key="OUTPUT COMPARE 3" value="true"/>
-        <property key="OUTPUT COMPARE 4" value="true"/>
-        <property key="OUTPUT COMPARE 5" value="true"/>
-        <property key="OUTPUT COMPARE 6" value="true"/>
-        <property key="OUTPUT COMPARE 7" value="true"/>
-        <property key="OUTPUT COMPARE 8" value="true"/>
-        <property key="OUTPUT COMPARE 9" value="true"/>
-        <property key="PARALLEL MASTER/SLAVE PORT" value="true"/>
-        <property key="REAL TIME CLOCK" value="true"/>
-        <property key="REFERENCE CLOCK1" value="true"/>
-        <property key="REFERENCE CLOCK2" value="true"/>
-        <property key="REFERENCE CLOCK3" value="true"/>
-        <property key="REFERENCE CLOCK4" value="true"/>
-        <property key="RIExTrigs.Five" value="OFF"/>
-        <property key="RIExTrigs.Four" value="OFF"/>
-        <property key="RIExTrigs.One" value="OFF"/>
-        <property key="RIExTrigs.Seven" value="OFF"/>
-        <property key="RIExTrigs.Six" value="OFF"/>
-        <property key="RIExTrigs.Three" value="OFF"/>
-        <property key="RIExTrigs.Two" value="OFF"/>
-        <property key="RIExTrigs.Zero" value="OFF"/>
-        <property key="SPI/I2S 1" value="true"/>
-        <property key="SPI/I2S 2" value="true"/>
-        <property key="SPI/I2S 3" value="true"/>
-        <property key="SPI/I2S 4" value="true"/>
-        <property key="SPI/I2S 5" value="true"/>
-        <property key="SPI/I2S 6" value="true"/>
-        <property key="SecureSegment.SegmentProgramming" value="FullChipProgramming"/>
-        <property key="TIMER1" value="true"/>
-        <property key="TIMER2" value="true"/>
-        <property key="TIMER3" value="true"/>
-        <property key="TIMER4" value="true"/>
-        <property key="TIMER5" value="true"/>
-        <property key="TIMER6" value="true"/>
-        <property key="TIMER7" value="true"/>
-        <property key="TIMER8" value="true"/>
-        <property key="TIMER9" value="true"/>
-        <property key="ToolFirmwareFilePath"
-                  value="Press to browse for a specific firmware version"/>
-        <property key="ToolFirmwareOption.UseLatestFirmware" value="true"/>
-        <property key="UART1" value="true"/>
-        <property key="UART2" value="true"/>
-        <property key="UART3" value="true"/>
-        <property key="UART4" value="true"/>
-        <property key="UART5" value="true"/>
-        <property key="UART6" value="true"/>
-        <property key="debugoptions.useswbreakpoints" value="false"/>
-        <property key="hwtoolclock.frcindebug" value="false"/>
-        <property key="hwtoolclock.instructionspeed" value="4"/>
-        <property key="hwtoolclock.units" value="mips"/>
-        <property key="memories.aux" value="false"/>
-        <property key="memories.bootflash" value="true"/>
-        <property key="memories.configurationmemory" value="true"/>
-        <property key="memories.configurationmemory2" value="true"/>
-        <property key="memories.dataflash" value="true"/>
-        <property key="memories.eeprom" value="true"/>
-        <property key="memories.flashdata" value="true"/>
-        <property key="memories.id" value="true"/>
-        <property key="memories.instruction.ram" value="true"/>
-        <property key="memories.instruction.ram.ranges"
-                  value="${memories.instruction.ram.ranges}"/>
-        <property key="memories.programmemory" value="true"/>
-        <property key="memories.programmemory.ranges" value="1d000000-1d1fffff"/>
-        <property key="poweroptions.powerenable" value="false"/>
-        <property key="programoptions.donoteraseauxmem" value="false"/>
-        <property key="programoptions.eraseb4program" value="true"/>
-        <property key="programoptions.preservedataflash" value="false"/>
-        <property key="programoptions.preservedataflash.ranges" value=""/>
-        <property key="programoptions.preserveeeprom" value="false"/>
-        <property key="programoptions.preserveeeprom.ranges" value=""/>
-        <property key="programoptions.preserveprogram.ranges" value=""/>
-        <property key="programoptions.preserveprogramrange" value="false"/>
-        <property key="programoptions.preserveuserid" value="false"/>
-        <property key="programoptions.programcalmem" value="false"/>
-        <property key="programoptions.programuserotp" value="false"/>
-        <property key="programoptions.usehighvoltageonmclr" value="false"/>
-        <property key="programoptions.uselvpprogramming" value="false"/>
-        <property key="tracecontrol.include.timestamp" value="summarydataenabled"/>
-        <property key="tracecontrol.select" value="0"/>
-        <property key="tracecontrol.stallontracebufferfull" value="false"/>
-        <property key="tracecontrol.tracebufmax" value="546000"/>
-        <property key="tracecontrol.tracefile" value="defmplabxtrace.log"/>
-        <property key="tracecontrol.tracefilemax" value="10000000"/>
-        <property key="voltagevalue" value="3.25"/>
-      </RealICEPlatformTool>
-    </conf>
-  </confs>
+			<C32-LD>
+				<property key="additional-options-use-response-files" value="false"/>
+				<property key="additional-options-write-sla" value="false"/>
+				<property key="allocate-dinit" value="false"/>
+				<property key="code-dinit" value="false"/>
+				<property key="ebase-addr" value=""/>
+				<property key="enable-check-sections" value="false"/>
+				<property key="exclude-floating-point-library" value="false"/>
+				<property key="exclude-standard-libraries" value="false"/>
+				<property key="extra-lib-directories" value=""/>
+				<property key="fill-flash-options-addr" value=""/>
+				<property key="fill-flash-options-const" value=""/>
+				<property key="fill-flash-options-how" value="0"/>
+				<property key="fill-flash-options-inc-const" value="1"/>
+				<property key="fill-flash-options-increment" value=""/>
+				<property key="fill-flash-options-seq" value=""/>
+				<property key="fill-flash-options-what" value="0"/>
+				<property key="generate-16-bit-code" value="false"/>
+				<property key="generate-cross-reference-file" value="false"/>
+				<property key="generate-micro-compressed-code" value="false"/>
+				<property key="heap-size" value="170000"/>
+				<property key="input-libraries" value=""/>
+				<property key="kseg-length" value=""/>
+				<property key="kseg-origin" value=""/>
+				<property key="linker-symbols" value=""/>
+				<property key="map-file" value="${DISTDIR}/${PROJECTNAME}.${IMAGE_TYPE}.map"/>
+				<property key="no-device-startup-code" value="false"/>
+				<property key="no-startup-files" value="false"/>
+				<property key="oXC32ld-extra-opts" value="-mnewlib-libc"/>
+				<property key="optimization-level" value=""/>
+				<property key="preprocessor-macros" value=""/>
+				<property key="remove-unused-sections" value="true"/>
+				<property key="report-memory-usage" value="false"/>
+				<property key="serial-length" value=""/>
+				<property key="serial-origin" value=""/>
+				<property key="stack-size" value="10000"/>
+				<property key="symbol-stripping" value=""/>
+				<property key="trace-symbols" value=""/>
+				<property key="warn-section-align" value="false"/>
+				<appendMe value="--allow-multiple-definition"/>
+			</C32-LD>
+			<C32CPP>
+				<property key="additional-warnings" value="false"/>
+				<property key="addresss-attribute-use" value="false"/>
+				<property key="check-new" value="false"/>
+				<property key="eh-specs" value="true"/>
+				<property key="enable-app-io" value="false"/>
+				<property key="enable-omit-frame-pointer" value="false"/>
+				<property key="enable-symbols" value="true"/>
+				<property key="enable-unroll-loops" value="false"/>
+				<property key="exceptions" value="true"/>
+				<property key="exclude-floating-point" value="false"/>
+				<property key="extra-include-directories" value=""/>
+				<property key="generate-16-bit-code" value="false"/>
+				<property key="generate-micro-compressed-code" value="false"/>
+				<property key="isolate-each-function" value="false"/>
+				<property key="make-warnings-into-errors" value="false"/>
+				<property key="optimization-level" value=""/>
+				<property key="place-data-into-section" value="false"/>
+				<property key="post-instruction-scheduling" value="default"/>
+				<property key="pre-instruction-scheduling" value="default"/>
+				<property key="preprocessor-macros" value=""/>
+				<property key="rtti" value="true"/>
+				<property key="strict-ansi" value="false"/>
+				<property key="toplevel-reordering" value=""/>
+				<property key="unaligned-access" value=""/>
+				<property key="use-cci" value="false"/>
+				<property key="use-iar" value="false"/>
+				<property key="use-indirect-calls" value="false"/>
+			</C32CPP>
+			<C32Global>
+				<property key="common-include-directories" value=""/>
+				<property key="gp-relative-option" value=""/>
+				<property key="legacy-libc" value="false"/>
+				<property key="mdtcm" value=""/>
+				<property key="mitcm" value=""/>
+				<property key="mstacktcm" value="false"/>
+				<property key="relaxed-math" value="false"/>
+				<property key="save-temps" value="false"/>
+				<property key="wpo-lto" value="false"/>
+			</C32Global>
+			<ICD3PlatformTool>
+				<property key="firmware.download.all" value="false"/>
+			</ICD3PlatformTool>
+			<ICD4Tool>
+				<property key="ADC" value="true"/>
+				<property key="AutoSelectMemRanges" value="auto"/>
+				<property key="CAN1" value="true"/>
+				<property key="CAN2" value="true"/>
+				<property key="CHANGE NOTICE A" value="true"/>
+				<property key="CHANGE NOTICE B" value="true"/>
+				<property key="CHANGE NOTICE C" value="true"/>
+				<property key="CHANGE NOTICE D" value="true"/>
+				<property key="CHANGE NOTICE E" value="true"/>
+				<property key="CHANGE NOTICE F" value="true"/>
+				<property key="CHANGE NOTICE G" value="true"/>
+				<property key="COMPARATOR" value="true"/>
+				<property key="DMA" value="true"/>
+				<property key="ETHERNET CONTROLLER" value="true"/>
+				<property key="Freeze All Other Peripherals" value="true"/>
+				<property key="I2C 1" value="true"/>
+				<property key="I2C 2" value="true"/>
+				<property key="I2C 3" value="true"/>
+				<property key="I2C 4" value="true"/>
+				<property key="I2C 5" value="true"/>
+				<property key="INPUT CAPTURE 1" value="true"/>
+				<property key="INPUT CAPTURE 2" value="true"/>
+				<property key="INPUT CAPTURE 3" value="true"/>
+				<property key="INPUT CAPTURE 4" value="true"/>
+				<property key="INPUT CAPTURE 5" value="true"/>
+				<property key="INPUT CAPTURE 6" value="true"/>
+				<property key="INPUT CAPTURE 7" value="true"/>
+				<property key="INPUT CAPTURE 8" value="true"/>
+				<property key="INPUT CAPTURE 9" value="true"/>
+				<property key="INTERRUPT CONTROL" value="true"/>
+				<property key="OUTPUT COMPARE 1" value="true"/>
+				<property key="OUTPUT COMPARE 2" value="true"/>
+				<property key="OUTPUT COMPARE 3" value="true"/>
+				<property key="OUTPUT COMPARE 4" value="true"/>
+				<property key="OUTPUT COMPARE 5" value="true"/>
+				<property key="OUTPUT COMPARE 6" value="true"/>
+				<property key="OUTPUT COMPARE 7" value="true"/>
+				<property key="OUTPUT COMPARE 8" value="true"/>
+				<property key="OUTPUT COMPARE 9" value="true"/>
+				<property key="PARALLEL MASTER/SLAVE PORT" value="true"/>
+				<property key="REAL TIME CLOCK" value="true"/>
+				<property key="REFERENCE CLOCK1" value="true"/>
+				<property key="REFERENCE CLOCK2" value="true"/>
+				<property key="REFERENCE CLOCK3" value="true"/>
+				<property key="REFERENCE CLOCK4" value="true"/>
+				<property key="SPI/I2S 1" value="true"/>
+				<property key="SPI/I2S 2" value="true"/>
+				<property key="SPI/I2S 3" value="true"/>
+				<property key="SPI/I2S 4" value="true"/>
+				<property key="SPI/I2S 5" value="true"/>
+				<property key="SPI/I2S 6" value="true"/>
+				<property key="SecureSegment.SegmentProgramming" value="FullChipProgramming"/>
+				<property key="TIMER1" value="true"/>
+				<property key="TIMER2" value="true"/>
+				<property key="TIMER3" value="true"/>
+				<property key="TIMER4" value="true"/>
+				<property key="TIMER5" value="true"/>
+				<property key="TIMER6" value="true"/>
+				<property key="TIMER7" value="true"/>
+				<property key="TIMER8" value="true"/>
+				<property key="TIMER9" value="true"/>
+				<property key="ToolFirmwareFilePath" value="Press to browse for a specific firmware version"/>
+				<property key="ToolFirmwareOption.UseLatestFirmware" value="true"/>
+				<property key="UART1" value="true"/>
+				<property key="UART2" value="true"/>
+				<property key="UART3" value="true"/>
+				<property key="UART4" value="true"/>
+				<property key="UART5" value="true"/>
+				<property key="UART6" value="true"/>
+				<property key="debugoptions.useswbreakpoints" value="false"/>
+				<property key="hwtoolclock.frcindebug" value="false"/>
+				<property key="memories.aux" value="false"/>
+				<property key="memories.bootflash" value="true"/>
+				<property key="memories.configurationmemory" value="true"/>
+				<property key="memories.configurationmemory2" value="true"/>
+				<property key="memories.dataflash" value="true"/>
+				<property key="memories.eeprom" value="true"/>
+				<property key="memories.exclude.configurationmemory" value="true"/>
+				<property key="memories.flashdata" value="true"/>
+				<property key="memories.id" value="true"/>
+				<property key="memories.instruction.ram.ranges" value="${memories.instruction.ram.ranges}"/>
+				<property key="memories.programmemory" value="true"/>
+				<property key="memories.programmemory.ranges" value="1d000000-1d1fffff"/>
+				<property key="poweroptions.powerenable" value="false"/>
+				<property key="programoptions.donoteraseauxmem" value="false"/>
+				<property key="programoptions.eraseb4program" value="true"/>
+				<property key="programoptions.ledbrightness" value="5"/>
+				<property key="programoptions.pgcconfig" value="pull down"/>
+				<property key="programoptions.pgcresistor.value" value="4.7"/>
+				<property key="programoptions.pgdconfig" value="pull down"/>
+				<property key="programoptions.pgdresistor.value" value="4.7"/>
+				<property key="programoptions.pgmentry.voltage" value="low"/>
+				<property key="programoptions.pgmspeed" value="Med"/>
+				<property key="programoptions.preservedataflash" value="false"/>
+				<property key="programoptions.preserveeeprom" value="false"/>
+				<property key="programoptions.preserveeeprom.ranges" value=""/>
+				<property key="programoptions.preserveprogram.ranges" value=""/>
+				<property key="programoptions.preserveprogramrange" value="false"/>
+				<property key="programoptions.preserveuserid" value="false"/>
+				<property key="programoptions.programcalmem" value="false"/>
+				<property key="programoptions.programuserotp" value="false"/>
+				<property key="programoptions.testmodeentrymethod" value="VDDFirst"/>
+				<property key="voltagevalue" value="3.25"/>
+			</ICD4Tool>
+			<PKOBSKDEPlatformTool>
+				<property key="AutoSelectMemRanges" value="auto"/>
+				<property key="SecureSegment.SegmentProgramming" value="FullChipProgramming"/>
+				<property key="ToolFirmwareFilePath" value="Press to browse for a specific firmware version"/>
+				<property key="ToolFirmwareOption.UseLatestFirmware" value="true"/>
+				<property key="memories.configurationmemory" value="true"/>
+				<property key="memories.dataflash" value="true"/>
+				<property key="memories.eeprom" value="true"/>
+				<property key="memories.id" value="true"/>
+				<property key="memories.programmemory" value="true"/>
+				<property key="memories.programmemory.ranges" value="1d000000-1d1fffff"/>
+				<property key="memories.userotp" value="true"/>
+				<property key="programoptions.donoteraseauxmem" value="false"/>
+				<property key="programoptions.eraseb4program" value="true"/>
+				<property key="programoptions.preservedataflash" value="false"/>
+				<property key="programoptions.preservedataflash.ranges" value=""/>
+				<property key="programoptions.preserveeeprom" value="false"/>
+				<property key="programoptions.preserveeeprom.ranges" value=""/>
+				<property key="programoptions.preserveprogram.ranges" value=""/>
+				<property key="programoptions.preserveprogramrange" value="false"/>
+				<property key="programoptions.usehighvoltageonmclr" value="false"/>
+				<property key="programoptions.uselvpprogramming" value="true"/>
+			</PKOBSKDEPlatformTool>
+			<RealICEPlatformTool>
+				<property key="ADC" value="true"/>
+				<property key="AutoSelectMemRanges" value="auto"/>
+				<property key="CAN1" value="true"/>
+				<property key="CAN2" value="true"/>
+				<property key="CHANGE NOTICE A" value="true"/>
+				<property key="CHANGE NOTICE B" value="true"/>
+				<property key="CHANGE NOTICE C" value="true"/>
+				<property key="CHANGE NOTICE D" value="true"/>
+				<property key="CHANGE NOTICE E" value="true"/>
+				<property key="CHANGE NOTICE F" value="true"/>
+				<property key="CHANGE NOTICE G" value="true"/>
+				<property key="COMPARATOR" value="true"/>
+				<property key="DMA" value="true"/>
+				<property key="ETHERNET CONTROLLER" value="true"/>
+				<property key="Freeze All Other Peripherals" value="true"/>
+				<property key="I2C 1" value="true"/>
+				<property key="I2C 2" value="true"/>
+				<property key="I2C 3" value="true"/>
+				<property key="I2C 4" value="true"/>
+				<property key="I2C 5" value="true"/>
+				<property key="INPUT CAPTURE 1" value="true"/>
+				<property key="INPUT CAPTURE 2" value="true"/>
+				<property key="INPUT CAPTURE 3" value="true"/>
+				<property key="INPUT CAPTURE 4" value="true"/>
+				<property key="INPUT CAPTURE 5" value="true"/>
+				<property key="INPUT CAPTURE 6" value="true"/>
+				<property key="INPUT CAPTURE 7" value="true"/>
+				<property key="INPUT CAPTURE 8" value="true"/>
+				<property key="INPUT CAPTURE 9" value="true"/>
+				<property key="INTERRUPT CONTROL" value="true"/>
+				<property key="OUTPUT COMPARE 1" value="true"/>
+				<property key="OUTPUT COMPARE 2" value="true"/>
+				<property key="OUTPUT COMPARE 3" value="true"/>
+				<property key="OUTPUT COMPARE 4" value="true"/>
+				<property key="OUTPUT COMPARE 5" value="true"/>
+				<property key="OUTPUT COMPARE 6" value="true"/>
+				<property key="OUTPUT COMPARE 7" value="true"/>
+				<property key="OUTPUT COMPARE 8" value="true"/>
+				<property key="OUTPUT COMPARE 9" value="true"/>
+				<property key="PARALLEL MASTER/SLAVE PORT" value="true"/>
+				<property key="REAL TIME CLOCK" value="true"/>
+				<property key="REFERENCE CLOCK1" value="true"/>
+				<property key="REFERENCE CLOCK2" value="true"/>
+				<property key="REFERENCE CLOCK3" value="true"/>
+				<property key="REFERENCE CLOCK4" value="true"/>
+				<property key="RIExTrigs.Five" value="OFF"/>
+				<property key="RIExTrigs.Four" value="OFF"/>
+				<property key="RIExTrigs.One" value="OFF"/>
+				<property key="RIExTrigs.Seven" value="OFF"/>
+				<property key="RIExTrigs.Six" value="OFF"/>
+				<property key="RIExTrigs.Three" value="OFF"/>
+				<property key="RIExTrigs.Two" value="OFF"/>
+				<property key="RIExTrigs.Zero" value="OFF"/>
+				<property key="SPI/I2S 1" value="true"/>
+				<property key="SPI/I2S 2" value="true"/>
+				<property key="SPI/I2S 3" value="true"/>
+				<property key="SPI/I2S 4" value="true"/>
+				<property key="SPI/I2S 5" value="true"/>
+				<property key="SPI/I2S 6" value="true"/>
+				<property key="SecureSegment.SegmentProgramming" value="FullChipProgramming"/>
+				<property key="TIMER1" value="true"/>
+				<property key="TIMER2" value="true"/>
+				<property key="TIMER3" value="true"/>
+				<property key="TIMER4" value="true"/>
+				<property key="TIMER5" value="true"/>
+				<property key="TIMER6" value="true"/>
+				<property key="TIMER7" value="true"/>
+				<property key="TIMER8" value="true"/>
+				<property key="TIMER9" value="true"/>
+				<property key="ToolFirmwareFilePath" value="Press to browse for a specific firmware version"/>
+				<property key="ToolFirmwareOption.UseLatestFirmware" value="true"/>
+				<property key="UART1" value="true"/>
+				<property key="UART2" value="true"/>
+				<property key="UART3" value="true"/>
+				<property key="UART4" value="true"/>
+				<property key="UART5" value="true"/>
+				<property key="UART6" value="true"/>
+				<property key="debugoptions.useswbreakpoints" value="false"/>
+				<property key="hwtoolclock.frcindebug" value="false"/>
+				<property key="hwtoolclock.instructionspeed" value="4"/>
+				<property key="hwtoolclock.units" value="mips"/>
+				<property key="memories.aux" value="false"/>
+				<property key="memories.bootflash" value="true"/>
+				<property key="memories.configurationmemory" value="true"/>
+				<property key="memories.configurationmemory2" value="true"/>
+				<property key="memories.dataflash" value="true"/>
+				<property key="memories.eeprom" value="true"/>
+				<property key="memories.flashdata" value="true"/>
+				<property key="memories.id" value="true"/>
+				<property key="memories.instruction.ram" value="true"/>
+				<property key="memories.instruction.ram.ranges" value="${memories.instruction.ram.ranges}"/>
+				<property key="memories.programmemory" value="true"/>
+				<property key="memories.programmemory.ranges" value="1d000000-1d1fffff"/>
+				<property key="poweroptions.powerenable" value="false"/>
+				<property key="programoptions.donoteraseauxmem" value="false"/>
+				<property key="programoptions.eraseb4program" value="true"/>
+				<property key="programoptions.preservedataflash" value="false"/>
+				<property key="programoptions.preservedataflash.ranges" value=""/>
+				<property key="programoptions.preserveeeprom" value="false"/>
+				<property key="programoptions.preserveeeprom.ranges" value=""/>
+				<property key="programoptions.preserveprogram.ranges" value=""/>
+				<property key="programoptions.preserveprogramrange" value="false"/>
+				<property key="programoptions.preserveuserid" value="false"/>
+				<property key="programoptions.programcalmem" value="false"/>
+				<property key="programoptions.programuserotp" value="false"/>
+				<property key="programoptions.usehighvoltageonmclr" value="false"/>
+				<property key="programoptions.uselvpprogramming" value="false"/>
+				<property key="tracecontrol.include.timestamp" value="summarydataenabled"/>
+				<property key="tracecontrol.select" value="0"/>
+				<property key="tracecontrol.stallontracebufferfull" value="false"/>
+				<property key="tracecontrol.tracebufmax" value="546000"/>
+				<property key="tracecontrol.tracefile" value="defmplabxtrace.log"/>
+				<property key="tracecontrol.tracefilemax" value="10000000"/>
+				<property key="voltagevalue" value="3.25"/>
+			</RealICEPlatformTool>
+		</conf>
+	</confs>
 </configurationDescriptor>
diff --git a/projects/nuvoton/numaker_iot_m487_wifi/uvision/aws_demos/aws_demos.uvproj b/projects/nuvoton/numaker_iot_m487_wifi/uvision/aws_demos/aws_demos.uvproj
index 948548c41..b09bf98b6 100644
--- a/projects/nuvoton/numaker_iot_m487_wifi/uvision/aws_demos/aws_demos.uvproj
+++ b/projects/nuvoton/numaker_iot_m487_wifi/uvision/aws_demos/aws_demos.uvproj
@@ -1,2290 +1,2336 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <Project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="project_proj.xsd">
-
-  <SchemaVersion>1.1</SchemaVersion>
-
-  <Header>### uVision Project, (C) Keil Software</Header>
-
-  <Targets>
-    <Target>
-      <TargetName>aws_demos</TargetName>
-      <ToolsetNumber>0x4</ToolsetNumber>
-      <ToolsetName>ARM-ADS</ToolsetName>
-      <pCCUsed>5060750::V5.06 update 6 (build 750)::ARMCC</pCCUsed>
-      <uAC6>0</uAC6>
-      <TargetOption>
-        <TargetCommonOption>
-          <Device>M487JIDAE</Device>
-          <Vendor>Nuvoton</Vendor>
-          <Cpu>IRAM(0x20000000-0x2000FFFF) IROM(0-0x7FFFF) CLOCK(50000000) CPUTYPE("Cortex-M4") FPU2</Cpu>
-          <FlashUtilSpec></FlashUtilSpec>
-          <StartupFile>undefined</StartupFile>
-          <FlashDriverDll></FlashDriverDll>
-          <DeviceId>0</DeviceId>
-          <RegisterFile></RegisterFile>
-          <MemoryEnv></MemoryEnv>
-          <Cmp></Cmp>
-          <Asm></Asm>
-          <Linker></Linker>
-          <OHString></OHString>
-          <InfinionOptionDll></InfinionOptionDll>
-          <SLE66CMisc></SLE66CMisc>
-          <SLE66AMisc></SLE66AMisc>
-          <SLE66LinkerMisc></SLE66LinkerMisc>
-          <SFDFile>SFD\Nuvoton\M481_v1.SFR</SFDFile>
-          <bCustSvd>0</bCustSvd>
-          <UseEnv>0</UseEnv>
-          <BinPath></BinPath>
-          <IncludePath></IncludePath>
-          <LibPath></LibPath>
-          <RegisterFilePath></RegisterFilePath>
-          <DBRegisterFilePath></DBRegisterFilePath>
-          <TargetStatus>
-            <Error>0</Error>
-            <ExitCodeStop>0</ExitCodeStop>
-            <ButtonStop>0</ButtonStop>
-            <NotGenerated>0</NotGenerated>
-            <InvalidFlash>1</InvalidFlash>
-          </TargetStatus>
-          <OutputDirectory>.\obj\</OutputDirectory>
-          <OutputName>aws_demos</OutputName>
-          <CreateExecutable>1</CreateExecutable>
-          <CreateLib>0</CreateLib>
-          <CreateHexFile>1</CreateHexFile>
-          <DebugInformation>1</DebugInformation>
-          <BrowseInformation>1</BrowseInformation>
-          <ListingPath>.\lst\</ListingPath>
-          <HexFormatSelection>1</HexFormatSelection>
-          <Merge32K>0</Merge32K>
-          <CreateBatchFile>0</CreateBatchFile>
-          <BeforeCompile>
-            <RunUserProg1>0</RunUserProg1>
-            <RunUserProg2>0</RunUserProg2>
-            <UserProg1Name></UserProg1Name>
-            <UserProg2Name></UserProg2Name>
-            <UserProg1Dos16Mode>0</UserProg1Dos16Mode>
-            <UserProg2Dos16Mode>0</UserProg2Dos16Mode>
-            <nStopU1X>0</nStopU1X>
-            <nStopU2X>0</nStopU2X>
-          </BeforeCompile>
-          <BeforeMake>
-            <RunUserProg1>0</RunUserProg1>
-            <RunUserProg2>0</RunUserProg2>
-            <UserProg1Name></UserProg1Name>
-            <UserProg2Name></UserProg2Name>
-            <UserProg1Dos16Mode>0</UserProg1Dos16Mode>
-            <UserProg2Dos16Mode>0</UserProg2Dos16Mode>
-            <nStopB1X>0</nStopB1X>
-            <nStopB2X>0</nStopB2X>
-          </BeforeMake>
-          <AfterMake>
-            <RunUserProg1>1</RunUserProg1>
-            <RunUserProg2>1</RunUserProg2>
-            <UserProg1Name>fromelf --bin ".\obj\@L.axf" --output ".\obj\@L.bin"</UserProg1Name>
-            <UserProg2Name>fromelf --text -c ".\obj\@L.axf" --output ".\obj\@L.txt"</UserProg2Name>
-            <UserProg1Dos16Mode>0</UserProg1Dos16Mode>
-            <UserProg2Dos16Mode>0</UserProg2Dos16Mode>
-            <nStopA1X>0</nStopA1X>
-            <nStopA2X>0</nStopA2X>
-          </AfterMake>
-          <SelectedForBatchBuild>0</SelectedForBatchBuild>
-          <SVCSIdString></SVCSIdString>
-        </TargetCommonOption>
-        <CommonProperty>
-          <UseCPPCompiler>0</UseCPPCompiler>
-          <RVCTCodeConst>0</RVCTCodeConst>
-          <RVCTZI>0</RVCTZI>
-          <RVCTOtherData>0</RVCTOtherData>
-          <ModuleSelection>0</ModuleSelection>
-          <IncludeInBuild>1</IncludeInBuild>
-          <AlwaysBuild>0</AlwaysBuild>
-          <GenerateAssemblyFile>0</GenerateAssemblyFile>
-          <AssembleAssemblyFile>0</AssembleAssemblyFile>
-          <PublicsOnly>0</PublicsOnly>
-          <StopOnExitCode>3</StopOnExitCode>
-          <CustomArgument></CustomArgument>
-          <IncludeLibraryModules></IncludeLibraryModules>
-          <ComprImg>1</ComprImg>
-        </CommonProperty>
-        <DllOption>
-          <SimDllName>SARMCM3.DLL</SimDllName>
-          <SimDllArguments></SimDllArguments>
-          <SimDlgDll>DARMCM1.DLL</SimDlgDll>
-          <SimDlgDllArguments></SimDlgDllArguments>
-          <TargetDllName>SARMCM3.DLL</TargetDllName>
-          <TargetDllArguments></TargetDllArguments>
-          <TargetDlgDll>TARMCM1.DLL</TargetDlgDll>
-          <TargetDlgDllArguments></TargetDlgDllArguments>
-        </DllOption>
-        <DebugOption>
-          <OPTHX>
-            <HexSelection>1</HexSelection>
-            <HexRangeLowAddress>0</HexRangeLowAddress>
-            <HexRangeHighAddress>0</HexRangeHighAddress>
-            <HexOffset>0</HexOffset>
-            <Oh166RecLen>16</Oh166RecLen>
-          </OPTHX>
-          <Simulator>
-            <UseSimulator>0</UseSimulator>
-            <LoadApplicationAtStartup>1</LoadApplicationAtStartup>
-            <RunToMain>0</RunToMain>
-            <RestoreBreakpoints>1</RestoreBreakpoints>
-            <RestoreWatchpoints>1</RestoreWatchpoints>
-            <RestoreMemoryDisplay>1</RestoreMemoryDisplay>
-            <RestoreFunctions>1</RestoreFunctions>
-            <RestoreToolbox>1</RestoreToolbox>
-            <LimitSpeedToRealTime>0</LimitSpeedToRealTime>
-            <RestoreSysVw>1</RestoreSysVw>
-          </Simulator>
-          <Target>
-            <UseTarget>1</UseTarget>
-            <LoadApplicationAtStartup>1</LoadApplicationAtStartup>
-            <RunToMain>1</RunToMain>
-            <RestoreBreakpoints>1</RestoreBreakpoints>
-            <RestoreWatchpoints>0</RestoreWatchpoints>
-            <RestoreMemoryDisplay>1</RestoreMemoryDisplay>
-            <RestoreFunctions>0</RestoreFunctions>
-            <RestoreToolbox>1</RestoreToolbox>
-            <RestoreTracepoints>0</RestoreTracepoints>
-            <RestoreSysVw>1</RestoreSysVw>
-          </Target>
-          <RunDebugAfterBuild>0</RunDebugAfterBuild>
-          <TargetSelection>20</TargetSelection>
-          <SimDlls>
-            <CpuDll></CpuDll>
-            <CpuDllArguments></CpuDllArguments>
-            <PeripheralDll></PeripheralDll>
-            <PeripheralDllArguments></PeripheralDllArguments>
-            <InitializationFile></InitializationFile>
-          </SimDlls>
-          <TargetDlls>
-            <CpuDll></CpuDll>
-            <CpuDllArguments></CpuDllArguments>
-            <PeripheralDll></PeripheralDll>
-            <PeripheralDllArguments></PeripheralDllArguments>
-            <InitializationFile></InitializationFile>
-            <Driver>Bin\Nu_Link.dll</Driver>
-          </TargetDlls>
-        </DebugOption>
-        <Utilities>
-          <Flash1>
-            <UseTargetDll>1</UseTargetDll>
-            <UseExternalTool>0</UseExternalTool>
-            <RunIndependent>0</RunIndependent>
-            <UpdateFlashBeforeDebugging>1</UpdateFlashBeforeDebugging>
-            <Capability>1</Capability>
-            <DriverSelection>4106</DriverSelection>
-          </Flash1>
-          <bUseTDR>0</bUseTDR>
-          <Flash2>Bin\Nu_Link.dll</Flash2>
-          <Flash3>"" ()</Flash3>
-          <Flash4></Flash4>
-          <pFcarmOut></pFcarmOut>
-          <pFcarmGrp></pFcarmGrp>
-          <pFcArmRoot></pFcArmRoot>
-          <FcArmLst>0</FcArmLst>
-        </Utilities>
-        <TargetArmAds>
-          <ArmAdsMisc>
-            <GenerateListings>0</GenerateListings>
-            <asHll>1</asHll>
-            <asAsm>1</asAsm>
-            <asMacX>1</asMacX>
-            <asSyms>1</asSyms>
-            <asFals>1</asFals>
-            <asDbgD>1</asDbgD>
-            <asForm>1</asForm>
-            <ldLst>0</ldLst>
-            <ldmm>1</ldmm>
-            <ldXref>1</ldXref>
-            <BigEnd>0</BigEnd>
-            <AdsALst>1</AdsALst>
-            <AdsACrf>1</AdsACrf>
-            <AdsANop>0</AdsANop>
-            <AdsANot>0</AdsANot>
-            <AdsLLst>1</AdsLLst>
-            <AdsLmap>1</AdsLmap>
-            <AdsLcgr>1</AdsLcgr>
-            <AdsLsym>1</AdsLsym>
-            <AdsLszi>1</AdsLszi>
-            <AdsLtoi>1</AdsLtoi>
-            <AdsLsun>1</AdsLsun>
-            <AdsLven>1</AdsLven>
-            <AdsLsxf>1</AdsLsxf>
-            <RvctClst>0</RvctClst>
-            <GenPPlst>0</GenPPlst>
-            <AdsCpuType>"Cortex-M4"</AdsCpuType>
-            <RvctDeviceName></RvctDeviceName>
-            <mOS>0</mOS>
-            <uocRom>0</uocRom>
-            <uocRam>0</uocRam>
-            <hadIROM>1</hadIROM>
-            <hadIRAM>1</hadIRAM>
-            <hadXRAM>0</hadXRAM>
-            <uocXRam>0</uocXRam>
-            <RvdsVP>2</RvdsVP>
-            <RvdsMve>0</RvdsMve>
-            <hadIRAM2>0</hadIRAM2>
-            <hadIROM2>0</hadIROM2>
-            <StupSel>8</StupSel>
-            <useUlib>1</useUlib>
-            <EndSel>0</EndSel>
-            <uLtcg>0</uLtcg>
-            <nSecure>0</nSecure>
-            <RoSelD>3</RoSelD>
-            <RwSelD>3</RwSelD>
-            <CodeSel>0</CodeSel>
-            <OptFeed>0</OptFeed>
-            <NoZi1>0</NoZi1>
-            <NoZi2>0</NoZi2>
-            <NoZi3>0</NoZi3>
-            <NoZi4>0</NoZi4>
-            <NoZi5>0</NoZi5>
-            <Ro1Chk>0</Ro1Chk>
-            <Ro2Chk>0</Ro2Chk>
-            <Ro3Chk>0</Ro3Chk>
-            <Ir1Chk>1</Ir1Chk>
-            <Ir2Chk>0</Ir2Chk>
-            <Ra1Chk>0</Ra1Chk>
-            <Ra2Chk>0</Ra2Chk>
-            <Ra3Chk>0</Ra3Chk>
-            <Im1Chk>1</Im1Chk>
-            <Im2Chk>0</Im2Chk>
-            <OnChipMemories>
-              <Ocm1>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </Ocm1>
-              <Ocm2>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </Ocm2>
-              <Ocm3>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </Ocm3>
-              <Ocm4>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </Ocm4>
-              <Ocm5>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </Ocm5>
-              <Ocm6>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </Ocm6>
-              <IRAM>
-                <Type>0</Type>
-                <StartAddress>0x20000000</StartAddress>
-                <Size>0x10000</Size>
-              </IRAM>
-              <IROM>
-                <Type>1</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x80000</Size>
-              </IROM>
-              <XRAM>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </XRAM>
-              <OCR_RVCT1>
-                <Type>1</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </OCR_RVCT1>
-              <OCR_RVCT2>
-                <Type>1</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </OCR_RVCT2>
-              <OCR_RVCT3>
-                <Type>1</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </OCR_RVCT3>
-              <OCR_RVCT4>
-                <Type>1</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x80000</Size>
-              </OCR_RVCT4>
-              <OCR_RVCT5>
-                <Type>1</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </OCR_RVCT5>
-              <OCR_RVCT6>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </OCR_RVCT6>
-              <OCR_RVCT7>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </OCR_RVCT7>
-              <OCR_RVCT8>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </OCR_RVCT8>
-              <OCR_RVCT9>
-                <Type>0</Type>
-                <StartAddress>0x20000000</StartAddress>
-                <Size>0x28000</Size>
-              </OCR_RVCT9>
-              <OCR_RVCT10>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </OCR_RVCT10>
-            </OnChipMemories>
-            <RvctStartVector></RvctStartVector>
-          </ArmAdsMisc>
-          <Cads>
-            <interw>1</interw>
-            <Optim>1</Optim>
-            <oTime>0</oTime>
-            <SplitLS>0</SplitLS>
-            <OneElfS>0</OneElfS>
-            <Strict>0</Strict>
-            <EnumInt>0</EnumInt>
-            <PlainCh>0</PlainCh>
-            <Ropi>0</Ropi>
-            <Rwpi>0</Rwpi>
-            <wLevel>0</wLevel>
-            <uThumb>0</uThumb>
-            <uSurpInc>0</uSurpInc>
-            <uC99>1</uC99>
-            <uGnu>0</uGnu>
-            <useXO>0</useXO>
-            <v6Lang>1</v6Lang>
-            <v6LangP>1</v6LangP>
-            <vShortEn>1</vShortEn>
-            <vShortWch>1</vShortWch>
-            <v6Lto>0</v6Lto>
-            <v6WtE>0</v6WtE>
-            <v6Rtti>0</v6Rtti>
-            <VariousControls>
-              <MiscControls>--diag_suppress=550,177,C4017,111,2770,223</MiscControls>
-              <Define>RVDS_ARMCM4_NUC4xx __little_endian__=1 NDEBUG</Define>
-              <Undefine></Undefine>
-              <IncludePath>../../../../../freertos_kernel/include;../../../../../freertos_kernel/portable/RVDS/ARM_CM4F;../../../../../vendors/nuvoton/sdk/CMSIS/Include;../../../../../vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Include;../../../../../vendors/nuvoton/sdk/middleware/wifi_esp8266;../../../../../vendors/nuvoton/sdk/StdDriver/inc;../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files;../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/application_code/nuvoton_code;../../../../../demos/include;../../../../../demos/network_manager;../../../../../libraries/c_sdk/standard/common/include/private;../../../../../libraries/c_sdk/standard/common/include;../../../../../libraries/abstractions/platform/include;../../../../../libraries/abstractions/platform/freertos/include;../../../../../libraries/abstractions/secure_sockets/include;../../../../../libraries/freertos_plus/standard/tls/include;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/freertos_plus/standard/pkcs11/include;../../../../../libraries/abstractions/pkcs11/include;../../../../../libraries/freertos_plus/standard/utils/include;../../../../../libraries/abstractions/wifi/include;../../../../../demos/dev_mode_key_provisioning/include;../../../../../libraries/c_sdk/aws/defender/include;../../../../../libraries/c_sdk/standard/mqtt/include;../../../../../libraries/c_sdk/standard/serializer/include;../../../../../libraries/c_sdk/aws/shadow/include;../../../../../libraries/freertos_plus/aws/greengrass/include;../../../../../libraries/3rdparty/mbedtls/include;../../../../../libraries/3rdparty/mbedtls/include/mbedtls;../../../../../libraries/abstractions/pkcs11/mbedtls;../../../../../libraries/3rdparty/pkcs11;../../../../../libraries/3rdparty/tinycbor;../../../../../libraries/3rdparty/jsmn</IncludePath>
-            </VariousControls>
-          </Cads>
-          <Aads>
-            <interw>1</interw>
-            <Ropi>0</Ropi>
-            <Rwpi>0</Rwpi>
-            <thumb>1</thumb>
-            <SplitLS>0</SplitLS>
-            <SwStkChk>0</SwStkChk>
-            <NoWarn>0</NoWarn>
-            <uSurpInc>0</uSurpInc>
-            <useXO>0</useXO>
-            <uClangAs>0</uClangAs>
-            <VariousControls>
-              <MiscControls></MiscControls>
-              <Define></Define>
-              <Undefine></Undefine>
-              <IncludePath></IncludePath>
-            </VariousControls>
-          </Aads>
-          <LDads>
-            <umfTarg>1</umfTarg>
-            <Ropi>0</Ropi>
-            <Rwpi>0</Rwpi>
-            <noStLib>0</noStLib>
-            <RepFail>1</RepFail>
-            <useFile>0</useFile>
-            <TextAddressRange>0x08000000</TextAddressRange>
-            <DataAddressRange>0x20000000</DataAddressRange>
-            <pXoBase></pXoBase>
-            <ScatterFile></ScatterFile>
-            <IncludeLibs></IncludeLibs>
-            <IncludeLibsPath></IncludeLibsPath>
-            <Misc></Misc>
-            <LinkerInputFile></LinkerInputFile>
-            <DisabledWarnings></DisabledWarnings>
-          </LDads>
-        </TargetArmAds>
-      </TargetOption>
-      <Groups>
-        <Group>
-          <GroupName>freertos_kernel/</GroupName>
-          <Files>
-            <File>
-              <FileName>event_groups.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../freertos_kernel/event_groups.c</FilePath>
-            </File>
-            <File>
-              <FileName>list.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../freertos_kernel/list.c</FilePath>
-            </File>
-            <File>
-              <FileName>queue.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../freertos_kernel/queue.c</FilePath>
-            </File>
-            <File>
-              <FileName>stream_buffer.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../freertos_kernel/stream_buffer.c</FilePath>
-            </File>
-            <File>
-              <FileName>tasks.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../freertos_kernel/tasks.c</FilePath>
-            </File>
-            <File>
-              <FileName>timers.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../freertos_kernel/timers.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>freertos_kernel/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>FreeRTOS.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/FreeRTOS.h</FilePath>
-            </File>
-            <File>
-              <FileName>atomic.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/atomic.h</FilePath>
-            </File>
-            <File>
-              <FileName>deprecated_definitions.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/deprecated_definitions.h</FilePath>
-            </File>
-            <File>
-              <FileName>event_groups.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/event_groups.h</FilePath>
-            </File>
-            <File>
-              <FileName>list.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/list.h</FilePath>
-            </File>
-            <File>
-              <FileName>message_buffer.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/message_buffer.h</FilePath>
-            </File>
-            <File>
-              <FileName>mpu_prototypes.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/mpu_prototypes.h</FilePath>
-            </File>
-            <File>
-              <FileName>mpu_wrappers.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/mpu_wrappers.h</FilePath>
-            </File>
-            <File>
-              <FileName>portable.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/portable.h</FilePath>
-            </File>
-            <File>
-              <FileName>projdefs.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/projdefs.h</FilePath>
-            </File>
-            <File>
-              <FileName>queue.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/queue.h</FilePath>
-            </File>
-            <File>
-              <FileName>semphr.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/semphr.h</FilePath>
-            </File>
-            <File>
-              <FileName>stack_macros.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/stack_macros.h</FilePath>
-            </File>
-            <File>
-              <FileName>stream_buffer.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/stream_buffer.h</FilePath>
-            </File>
-            <File>
-              <FileName>task.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/task.h</FilePath>
-            </File>
-            <File>
-              <FileName>timers.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/timers.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/sdk/StdDriver/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>clk.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/clk.c</FilePath>
-            </File>
-            <File>
-              <FileName>crypto.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/crypto.c</FilePath>
-            </File>
-            <File>
-              <FileName>fmc.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/fmc.c</FilePath>
-            </File>
-            <File>
-              <FileName>sys.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/sys.c</FilePath>
-            </File>
-            <File>
-              <FileName>uart.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/uart.c</FilePath>
-            </File>
-            <File>
-              <FileName>retarget.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/retarget.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>freertos_kernel/portable/MemMang/</GroupName>
-          <Files>
-            <File>
-              <FileName>heap_4.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../freertos_kernel/portable/MemMang/heap_4.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>freertos_kernel/portable/RVDS/ARM_CM4F/</GroupName>
-          <Files>
-            <File>
-              <FileName>port.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../freertos_kernel/portable/RVDS/ARM_CM4F/port.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/application_code/nuvoton_code/</GroupName>
-          <Files>
-            <File>
-              <FileName>entropy_hardware_poll.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/application_code/nuvoton_code/entropy_hardware_poll.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>demos/demo_runner/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_demo_version.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../demos/demo_runner/aws_demo_version.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_demo.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../demos/demo_runner/aws_demo.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_demo_freertos.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../demos/demo_runner/iot_demo_freertos.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_demo_runner.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../demos/demo_runner/iot_demo_runner.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>demos/network_manager/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_iot_network_manager.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../demos/network_manager/aws_iot_network_manager.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_iot_demo_network.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../demos/network_manager/aws_iot_demo_network.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_network_manager_private.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../demos/network_manager/iot_network_manager_private.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>demos/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_application_version.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../demos/include/aws_application_version.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_clientcredential.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../demos/include/aws_clientcredential.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_clientcredential_keys.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../demos/include/aws_clientcredential_keys.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_demo.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../demos/include/aws_demo.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_iot_demo_network.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../demos/include/aws_iot_demo_network.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_ota_codesigner_certificate.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../demos/include/aws_ota_codesigner_certificate.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_config_common.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../demos/include/iot_config_common.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_demo_logging.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../demos/include/iot_demo_logging.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_demo_runner.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../demos/include/iot_demo_runner.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/common/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_init.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/iot_init.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_static_memory_common.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/iot_static_memory_common.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_device_metrics.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/iot_device_metrics.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/common/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_appversion32.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_appversion32.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_init.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_init.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_linear_containers.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_linear_containers.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_logging_task.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_logging_task.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_logging_setup.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_logging_setup.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_taskpool.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_taskpool.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/common/logging/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_logging_task_dynamic_buffers.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/logging/iot_logging_task_dynamic_buffers.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_logging.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/logging/iot_logging.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/common/include/private/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_logging.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/private/iot_logging.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_taskpool_internal.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/private/iot_taskpool_internal.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/common/include/types/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_network_types.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/types/iot_network_types.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_taskpool_types.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/types/iot_taskpool_types.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/common/taskpool/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_taskpool.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/taskpool/iot_taskpool.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_taskpool_static_memory.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/taskpool/iot_taskpool_static_memory.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/abstractions/platform/include/platform/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_clock.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/include/platform/iot_clock.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_network.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/include/platform/iot_network.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_threads.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/include/platform/iot_threads.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_metrics.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/include/platform/iot_metrics.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/abstractions/platform/include/types/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_platform_types.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/include/types/iot_platform_types.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/abstractions/platform/freertos/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_clock_freertos.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/freertos/iot_clock_freertos.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_threads_freertos.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/freertos/iot_threads_freertos.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_metrics.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/freertos/iot_metrics.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_network_freertos.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/freertos/iot_network_freertos.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/abstractions/platform/freertos/include/platform/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_platform_types_freertos.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/freertos/include/platform/iot_platform_types_freertos.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_network_freertos.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/freertos/include/platform/iot_network_freertos.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/abstractions/secure_sockets/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_secure_sockets.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/secure_sockets/include/iot_secure_sockets.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_secure_sockets_config_defaults.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/secure_sockets/include/iot_secure_sockets_config_defaults.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_secure_sockets_wrapper_metrics.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/secure_sockets/include/iot_secure_sockets_wrapper_metrics.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/secure_sockets/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_secure_sockets.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/secure_sockets/iot_secure_sockets.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/standard/tls/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_tls.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/tls/src/iot_tls.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/standard/tls/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_tls.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/tls/include/iot_tls.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/standard/crypto/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_crypto.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/crypto/src/iot_crypto.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/standard/crypto/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_crypto.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/crypto/include/iot_crypto.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/standard/pkcs11/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_pkcs11.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/pkcs11/include/iot_pkcs11.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/standard/pkcs11/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_pkcs11.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/pkcs11/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_pkcs11_pal.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/pkcs11/iot_pkcs11_pal.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/abstractions/pkcs11/mbedtls/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_pkcs11_mbedtls.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c</FilePath>
-            </File>
-            <File>
-              <FileName>threading_alt.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/pkcs11/mbedtls/threading_alt.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/standard/utils/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_system_init.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/utils/src/iot_system_init.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_pki_utils.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/utils/src/iot_pki_utils.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/standard/utils/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_system_init.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/utils/include/iot_system_init.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_pki_utils.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/utils/include/iot_pki_utils.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/abstractions/wifi/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_wifi.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/wifi/include/iot_wifi.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/wifi/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_wifi.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/wifi/iot_wifi.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/sdk/middleware/wifi_esp8266/</GroupName>
-          <Files>
-            <File>
-              <FileName>esp8266_wifi.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/sdk/middleware/wifi_esp8266/esp8266_wifi.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>demos/dev_mode_key_provisioning/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_dev_mode_key_provisioning.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../demos/dev_mode_key_provisioning/src/aws_dev_mode_key_provisioning.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>demos/dev_mode_key_provisioning/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_dev_mode_key_provisioning.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../demos/dev_mode_key_provisioning/include/aws_dev_mode_key_provisioning.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/aws/defender/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_iot_defender_api.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_api.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_iot_defender_collector.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_collector.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_iot_defender_mqtt.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_mqtt.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_iot_defender_v1.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_v1.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/aws/defender/src/private/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_iot_defender_internal.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/defender/src/private/aws_iot_defender_internal.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/aws/defender/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_iot_defender.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/defender/include/aws_iot_defender.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/mqtt/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_mqtt_api.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_api.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_mqtt_network.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_network.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_mqtt_operation.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_operation.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_mqtt_serialize.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_serialize.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_mqtt_static_memory.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_static_memory.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_mqtt_subscription.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_subscription.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_mqtt_validate.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_validate.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_mqtt_agent.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_agent.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/serializer/src/cbor/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_serializer_tinycbor_decoder.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_decoder.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_serializer_tinycbor_encoder.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_encoder.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/serializer/src/json/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_serializer_json_decoder.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_decoder.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_serializer_json_encoder.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_encoder.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/serializer/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_serializer_static_memory.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/serializer/src/iot_serializer_static_memory.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_json_utils.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/serializer/src/iot_json_utils.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/serializer/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_serializer.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/serializer/include/iot_serializer.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_json_utils.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/serializer/include/iot_json_utils.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/aws/shadow/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_iot_shadow_api.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_api.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_iot_shadow_operation.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_operation.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_iot_shadow_parser.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_parser.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_iot_shadow_static_memory.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_static_memory.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_iot_shadow_subscription.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_subscription.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_shadow.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_shadow.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_shadow_config_defaults.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_shadow_config_defaults.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/aws/shadow/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_iot_shadow.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/include/aws_iot_shadow.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_shadow.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/include/aws_shadow.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/aws/greengrass/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_greengrass_discovery.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_helper_secure_connect.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_helper_secure_connect.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/aws/greengrass/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_ggd_config_defaults.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/aws/greengrass/include/aws_ggd_config_defaults.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_greengrass_discovery.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/aws/greengrass/include/aws_greengrass_discovery.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>demos/defender/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_iot_demo_defender.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../demos/defender/aws_iot_demo_defender.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>demos/greengrass_connectivity/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_greengrass_discovery_demo.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../demos/greengrass_connectivity/aws_greengrass_discovery_demo.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>demos/mqtt/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_demo_mqtt.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../demos/mqtt/iot_demo_mqtt.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>demos/shadow/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_iot_demo_shadow.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../demos/shadow/aws_iot_demo_shadow.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>demos/tcp/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_tcp_echo_client_single_task.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../demos/tcp/aws_tcp_echo_client_single_task.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_tcp_echo_client_single_tasks.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../demos/tcp/aws_tcp_echo_client_single_tasks.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/</GroupName>
-          <Files>
-            <File>
-              <FileName>FreeRTOSConfig.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/FreeRTOSConfig.h</FilePath>
-            </File>
-            <File>
-              <FileName>FreeRTOSIPConfig.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/FreeRTOSIPConfig.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_bufferpool_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_bufferpool_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_demo_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_demo_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_ggd_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_ggd_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_iot_network_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_iot_network_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_mqtt_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_mqtt_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_secure_sockets_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_secure_sockets_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_shadow_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_shadow_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_wifi_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_wifi_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/iot_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_mqtt_agent_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/iot_mqtt_agent_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_pkcs11_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/iot_pkcs11_config.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/application_code/</GroupName>
-          <Files>
-            <File>
-              <FileName>main.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/application_code/main.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Source/ARM/</GroupName>
-          <Files>
-            <File>
-              <FileName>startup_M480.s</FileName>
-              <FileType>2</FileType>
-              <FilePath>../../../../../vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Source/ARM/startup_M480.s</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Source/</GroupName>
-          <Files>
-            <File>
-              <FileName>system_M480.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Source/system_M480.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/3rdparty/mbedtls/library/</GroupName>
-          <Files>
-            <File>
-              <FileName>aes.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/aes.c</FilePath>
-            </File>
-            <File>
-              <FileName>aesni.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/aesni.c</FilePath>
-            </File>
-            <File>
-              <FileName>arc4.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/arc4.c</FilePath>
-            </File>
-            <File>
-              <FileName>asn1parse.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/asn1parse.c</FilePath>
-            </File>
-            <File>
-              <FileName>asn1write.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/asn1write.c</FilePath>
-            </File>
-            <File>
-              <FileName>base64.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/base64.c</FilePath>
-            </File>
-            <File>
-              <FileName>bignum.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/bignum.c</FilePath>
-            </File>
-            <File>
-              <FileName>blowfish.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/blowfish.c</FilePath>
-            </File>
-            <File>
-              <FileName>camellia.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/camellia.c</FilePath>
-            </File>
-            <File>
-              <FileName>ccm.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ccm.c</FilePath>
-            </File>
-            <File>
-              <FileName>certs.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/certs.c</FilePath>
-            </File>
-            <File>
-              <FileName>cipher.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/cipher.c</FilePath>
-            </File>
-            <File>
-              <FileName>cipher_wrap.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/cipher_wrap.c</FilePath>
-            </File>
-            <File>
-              <FileName>cmac.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/cmac.c</FilePath>
-            </File>
-            <File>
-              <FileName>ctr_drbg.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ctr_drbg.c</FilePath>
-            </File>
-            <File>
-              <FileName>debug.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/debug.c</FilePath>
-            </File>
-            <File>
-              <FileName>des.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/des.c</FilePath>
-            </File>
-            <File>
-              <FileName>dhm.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/dhm.c</FilePath>
-            </File>
-            <File>
-              <FileName>ecdh.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecdh.c</FilePath>
-            </File>
-            <File>
-              <FileName>ecdsa.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecdsa.c</FilePath>
-            </File>
-            <File>
-              <FileName>ecjpake.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecjpake.c</FilePath>
-            </File>
-            <File>
-              <FileName>ecp.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecp.c</FilePath>
-            </File>
-            <File>
-              <FileName>ecp_curves.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecp_curves.c</FilePath>
-            </File>
-            <File>
-              <FileName>entropy.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/entropy.c</FilePath>
-            </File>
-            <File>
-              <FileName>entropy_poll.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/entropy_poll.c</FilePath>
-            </File>
-            <File>
-              <FileName>error.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/error.c</FilePath>
-            </File>
-            <File>
-              <FileName>gcm.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/gcm.c</FilePath>
-            </File>
-            <File>
-              <FileName>havege.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/havege.c</FilePath>
-            </File>
-            <File>
-              <FileName>hmac_drbg.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/hmac_drbg.c</FilePath>
-            </File>
-            <File>
-              <FileName>md.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/md.c</FilePath>
-            </File>
-            <File>
-              <FileName>md2.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/md2.c</FilePath>
-            </File>
-            <File>
-              <FileName>md4.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/md4.c</FilePath>
-            </File>
-            <File>
-              <FileName>md5.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/md5.c</FilePath>
-            </File>
-            <File>
-              <FileName>md_wrap.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/md_wrap.c</FilePath>
-            </File>
-            <File>
-              <FileName>memory_buffer_alloc.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/memory_buffer_alloc.c</FilePath>
-            </File>
-            <File>
-              <FileName>net_sockets.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/net_sockets.c</FilePath>
-            </File>
-            <File>
-              <FileName>oid.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/oid.c</FilePath>
-            </File>
-            <File>
-              <FileName>padlock.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/padlock.c</FilePath>
-            </File>
-            <File>
-              <FileName>pem.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/pem.c</FilePath>
-            </File>
-            <File>
-              <FileName>pk.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/pk.c</FilePath>
-            </File>
-            <File>
-              <FileName>pk_wrap.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/pk_wrap.c</FilePath>
-            </File>
-            <File>
-              <FileName>pkcs12.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/pkcs12.c</FilePath>
-            </File>
-            <File>
-              <FileName>pkcs5.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/pkcs5.c</FilePath>
-            </File>
-            <File>
-              <FileName>pkparse.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/pkparse.c</FilePath>
-            </File>
-            <File>
-              <FileName>pkwrite.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/pkwrite.c</FilePath>
-            </File>
-            <File>
-              <FileName>platform.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/platform.c</FilePath>
-            </File>
-            <File>
-              <FileName>platform_util.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/platform_util.c</FilePath>
-            </File>
-            <File>
-              <FileName>ripemd160.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ripemd160.c</FilePath>
-            </File>
-            <File>
-              <FileName>rsa.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/rsa.c</FilePath>
-            </File>
-            <File>
-              <FileName>rsa_internal.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/rsa_internal.c</FilePath>
-            </File>
-            <File>
-              <FileName>sha1.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/sha1.c</FilePath>
-            </File>
-            <File>
-              <FileName>sha256.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/sha256.c</FilePath>
-            </File>
-            <File>
-              <FileName>sha512.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/sha512.c</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_cache.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_cache.c</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_ciphersuites.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_ciphersuites.c</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_cli.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_cli.c</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_cookie.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_cookie.c</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_srv.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_srv.c</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_ticket.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_ticket.c</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_tls.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_tls.c</FilePath>
-            </File>
-            <File>
-              <FileName>threading.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/threading.c</FilePath>
-            </File>
-            <File>
-              <FileName>timing.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/timing.c</FilePath>
-            </File>
-            <File>
-              <FileName>version.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/version.c</FilePath>
-            </File>
-            <File>
-              <FileName>version_features.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/version_features.c</FilePath>
-            </File>
-            <File>
-              <FileName>x509.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509.c</FilePath>
-            </File>
-            <File>
-              <FileName>x509_create.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509_create.c</FilePath>
-            </File>
-            <File>
-              <FileName>x509_crl.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509_crl.c</FilePath>
-            </File>
-            <File>
-              <FileName>x509_crt.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509_crt.c</FilePath>
-            </File>
-            <File>
-              <FileName>x509_csr.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509_csr.c</FilePath>
-            </File>
-            <File>
-              <FileName>x509write_crt.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509write_crt.c</FilePath>
-            </File>
-            <File>
-              <FileName>x509write_csr.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509write_csr.c</FilePath>
-            </File>
-            <File>
-              <FileName>xtea.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/xtea.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/3rdparty/mbedtls/utils/</GroupName>
-          <Files>
-            <File>
-              <FileName>mbedtls_utils.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/utils/mbedtls_utils.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/3rdparty/mbedtls/include/mbedtls/</GroupName>
-          <Files>
-            <File>
-              <FileName>aes.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/aes.h</FilePath>
-            </File>
-            <File>
-              <FileName>aesni.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/aesni.h</FilePath>
-            </File>
-            <File>
-              <FileName>arc4.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/arc4.h</FilePath>
-            </File>
-            <File>
-              <FileName>asn1.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/asn1.h</FilePath>
-            </File>
-            <File>
-              <FileName>asn1write.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/asn1write.h</FilePath>
-            </File>
-            <File>
-              <FileName>base64.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/base64.h</FilePath>
-            </File>
-            <File>
-              <FileName>bignum.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/bignum.h</FilePath>
-            </File>
-            <File>
-              <FileName>blowfish.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/blowfish.h</FilePath>
-            </File>
-            <File>
-              <FileName>bn_mul.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/bn_mul.h</FilePath>
-            </File>
-            <File>
-              <FileName>camellia.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/camellia.h</FilePath>
-            </File>
-            <File>
-              <FileName>ccm.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ccm.h</FilePath>
-            </File>
-            <File>
-              <FileName>certs.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/certs.h</FilePath>
-            </File>
-            <File>
-              <FileName>check_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/check_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>cipher.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/cipher.h</FilePath>
-            </File>
-            <File>
-              <FileName>cipher_internal.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/cipher_internal.h</FilePath>
-            </File>
-            <File>
-              <FileName>cmac.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/cmac.h</FilePath>
-            </File>
-            <File>
-              <FileName>compat-1.3.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/compat-1.3.h</FilePath>
-            </File>
-            <File>
-              <FileName>config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/config.h</FilePath>
-            </File>
-            <File>
-              <FileName>ctr_drbg.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ctr_drbg.h</FilePath>
-            </File>
-            <File>
-              <FileName>debug.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/debug.h</FilePath>
-            </File>
-            <File>
-              <FileName>des.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/des.h</FilePath>
-            </File>
-            <File>
-              <FileName>dhm.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/dhm.h</FilePath>
-            </File>
-            <File>
-              <FileName>ecdh.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecdh.h</FilePath>
-            </File>
-            <File>
-              <FileName>ecdsa.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecdsa.h</FilePath>
-            </File>
-            <File>
-              <FileName>ecjpake.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecjpake.h</FilePath>
-            </File>
-            <File>
-              <FileName>ecp.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecp.h</FilePath>
-            </File>
-            <File>
-              <FileName>ecp_internal.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecp_internal.h</FilePath>
-            </File>
-            <File>
-              <FileName>entropy.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/entropy.h</FilePath>
-            </File>
-            <File>
-              <FileName>entropy_poll.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/entropy_poll.h</FilePath>
-            </File>
-            <File>
-              <FileName>error.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/error.h</FilePath>
-            </File>
-            <File>
-              <FileName>gcm.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/gcm.h</FilePath>
-            </File>
-            <File>
-              <FileName>havege.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/havege.h</FilePath>
-            </File>
-            <File>
-              <FileName>hmac_drbg.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/hmac_drbg.h</FilePath>
-            </File>
-            <File>
-              <FileName>md.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md.h</FilePath>
-            </File>
-            <File>
-              <FileName>md2.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md2.h</FilePath>
-            </File>
-            <File>
-              <FileName>md4.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md4.h</FilePath>
-            </File>
-            <File>
-              <FileName>md5.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md5.h</FilePath>
-            </File>
-            <File>
-              <FileName>md_internal.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md_internal.h</FilePath>
-            </File>
-            <File>
-              <FileName>memory_buffer_alloc.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/memory_buffer_alloc.h</FilePath>
-            </File>
-            <File>
-              <FileName>net.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/net.h</FilePath>
-            </File>
-            <File>
-              <FileName>net_sockets.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/net_sockets.h</FilePath>
-            </File>
-            <File>
-              <FileName>oid.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/oid.h</FilePath>
-            </File>
-            <File>
-              <FileName>padlock.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/padlock.h</FilePath>
-            </File>
-            <File>
-              <FileName>pem.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pem.h</FilePath>
-            </File>
-            <File>
-              <FileName>pk.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pk.h</FilePath>
-            </File>
-            <File>
-              <FileName>pk_internal.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pk_internal.h</FilePath>
-            </File>
-            <File>
-              <FileName>pkcs12.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pkcs12.h</FilePath>
-            </File>
-            <File>
-              <FileName>pkcs5.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pkcs5.h</FilePath>
-            </File>
-            <File>
-              <FileName>platform.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/platform.h</FilePath>
-            </File>
-            <File>
-              <FileName>platform_time.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/platform_time.h</FilePath>
-            </File>
-            <File>
-              <FileName>platform_util.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/platform_util.h</FilePath>
-            </File>
-            <File>
-              <FileName>ripemd160.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ripemd160.h</FilePath>
-            </File>
-            <File>
-              <FileName>rsa.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/rsa.h</FilePath>
-            </File>
-            <File>
-              <FileName>rsa_internal.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/rsa_internal.h</FilePath>
-            </File>
-            <File>
-              <FileName>sha1.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/sha1.h</FilePath>
-            </File>
-            <File>
-              <FileName>sha256.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/sha256.h</FilePath>
-            </File>
-            <File>
-              <FileName>sha512.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/sha512.h</FilePath>
-            </File>
-            <File>
-              <FileName>ssl.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl.h</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_cache.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_cache.h</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_ciphersuites.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_ciphersuites.h</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_cookie.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_cookie.h</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_internal.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_internal.h</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_ticket.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_ticket.h</FilePath>
-            </File>
-            <File>
-              <FileName>threading.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/threading.h</FilePath>
-            </File>
-            <File>
-              <FileName>timing.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/timing.h</FilePath>
-            </File>
-            <File>
-              <FileName>version.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/version.h</FilePath>
-            </File>
-            <File>
-              <FileName>x509.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509.h</FilePath>
-            </File>
-            <File>
-              <FileName>x509_crl.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509_crl.h</FilePath>
-            </File>
-            <File>
-              <FileName>x509_crt.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509_crt.h</FilePath>
-            </File>
-            <File>
-              <FileName>x509_csr.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509_csr.h</FilePath>
-            </File>
-            <File>
-              <FileName>xtea.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/xtea.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/3rdparty/pkcs11/</GroupName>
-          <Files>
-            <File>
-              <FileName>pkcs11.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/pkcs11/pkcs11.h</FilePath>
-            </File>
-            <File>
-              <FileName>pkcs11f.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/pkcs11/pkcs11f.h</FilePath>
-            </File>
-            <File>
-              <FileName>pkcs11t.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/pkcs11/pkcs11t.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/3rdparty/tinycbor/</GroupName>
-          <Files>
-            <File>
-              <FileName>cborpretty.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/tinycbor/cborpretty.c</FilePath>
-            </File>
-            <File>
-              <FileName>cborencoder.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/tinycbor/cborencoder.c</FilePath>
-            </File>
-            <File>
-              <FileName>cborencoder_close_container_checked.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/tinycbor/cborencoder_close_container_checked.c</FilePath>
-            </File>
-            <File>
-              <FileName>cborerrorstrings.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/tinycbor/cborerrorstrings.c</FilePath>
-            </File>
-            <File>
-              <FileName>cborparser.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/tinycbor/cborparser.c</FilePath>
-            </File>
-            <File>
-              <FileName>cborparser_dup_string.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/tinycbor/cborparser_dup_string.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/3rdparty/jsmn/</GroupName>
-          <Files>
-            <File>
-              <FileName>jsmn.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/jsmn/jsmn.h</FilePath>
-            </File>
-            <File>
-              <FileName>jsmn.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/jsmn/jsmn.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-      </Groups>
-    </Target>
-  </Targets>
-
+	<SchemaVersion>1.1</SchemaVersion>
+	<Header>### uVision Project, (C) Keil Software</Header>
+	<Targets>
+		<Target>
+			<TargetName>aws_demos</TargetName>
+			<ToolsetNumber>0x4</ToolsetNumber>
+			<ToolsetName>ARM-ADS</ToolsetName>
+			<pCCUsed>5060750::V5.06 update 6 (build 750)::ARMCC</pCCUsed>
+			<uAC6>0</uAC6>
+			<TargetOption>
+				<TargetCommonOption>
+					<Device>M487JIDAE</Device>
+					<Vendor>Nuvoton</Vendor>
+					<Cpu>IRAM(0x20000000-0x2000FFFF) IROM(0-0x7FFFF) CLOCK(50000000) CPUTYPE(&quot;Cortex-M4&quot;) FPU2</Cpu>
+					<FlashUtilSpec/>
+					<StartupFile>undefined</StartupFile>
+					<FlashDriverDll/>
+					<DeviceId>0</DeviceId>
+					<RegisterFile/>
+					<MemoryEnv/>
+					<Cmp/>
+					<Asm/>
+					<Linker/>
+					<OHString/>
+					<InfinionOptionDll/>
+					<SLE66CMisc/>
+					<SLE66AMisc/>
+					<SLE66LinkerMisc/>
+					<SFDFile>SFD\Nuvoton\M481_v1.SFR</SFDFile>
+					<bCustSvd>0</bCustSvd>
+					<UseEnv>0</UseEnv>
+					<BinPath/>
+					<IncludePath/>
+					<LibPath/>
+					<RegisterFilePath/>
+					<DBRegisterFilePath/>
+					<TargetStatus>
+						<Error>0</Error>
+						<ExitCodeStop>0</ExitCodeStop>
+						<ButtonStop>0</ButtonStop>
+						<NotGenerated>0</NotGenerated>
+						<InvalidFlash>1</InvalidFlash>
+					</TargetStatus>
+					<OutputDirectory>.\obj\</OutputDirectory>
+					<OutputName>aws_demos</OutputName>
+					<CreateExecutable>1</CreateExecutable>
+					<CreateLib>0</CreateLib>
+					<CreateHexFile>1</CreateHexFile>
+					<DebugInformation>1</DebugInformation>
+					<BrowseInformation>1</BrowseInformation>
+					<ListingPath>.\lst\</ListingPath>
+					<HexFormatSelection>1</HexFormatSelection>
+					<Merge32K>0</Merge32K>
+					<CreateBatchFile>0</CreateBatchFile>
+					<BeforeCompile>
+						<RunUserProg1>0</RunUserProg1>
+						<RunUserProg2>0</RunUserProg2>
+						<UserProg1Name/>
+						<UserProg2Name/>
+						<UserProg1Dos16Mode>0</UserProg1Dos16Mode>
+						<UserProg2Dos16Mode>0</UserProg2Dos16Mode>
+						<nStopU1X>0</nStopU1X>
+						<nStopU2X>0</nStopU2X>
+					</BeforeCompile>
+					<BeforeMake>
+						<RunUserProg1>0</RunUserProg1>
+						<RunUserProg2>0</RunUserProg2>
+						<UserProg1Name/>
+						<UserProg2Name/>
+						<UserProg1Dos16Mode>0</UserProg1Dos16Mode>
+						<UserProg2Dos16Mode>0</UserProg2Dos16Mode>
+						<nStopB1X>0</nStopB1X>
+						<nStopB2X>0</nStopB2X>
+					</BeforeMake>
+					<AfterMake>
+						<RunUserProg1>1</RunUserProg1>
+						<RunUserProg2>1</RunUserProg2>
+						<UserProg1Name>fromelf --bin &quot;.\obj\@L.axf&quot; --output &quot;.\obj\@L.bin&quot;</UserProg1Name>
+						<UserProg2Name>fromelf --text -c &quot;.\obj\@L.axf&quot; --output &quot;.\obj\@L.txt&quot;</UserProg2Name>
+						<UserProg1Dos16Mode>0</UserProg1Dos16Mode>
+						<UserProg2Dos16Mode>0</UserProg2Dos16Mode>
+						<nStopA1X>0</nStopA1X>
+						<nStopA2X>0</nStopA2X>
+					</AfterMake>
+					<SelectedForBatchBuild>0</SelectedForBatchBuild>
+					<SVCSIdString/>
+				</TargetCommonOption>
+				<CommonProperty>
+					<UseCPPCompiler>0</UseCPPCompiler>
+					<RVCTCodeConst>0</RVCTCodeConst>
+					<RVCTZI>0</RVCTZI>
+					<RVCTOtherData>0</RVCTOtherData>
+					<ModuleSelection>0</ModuleSelection>
+					<IncludeInBuild>1</IncludeInBuild>
+					<AlwaysBuild>0</AlwaysBuild>
+					<GenerateAssemblyFile>0</GenerateAssemblyFile>
+					<AssembleAssemblyFile>0</AssembleAssemblyFile>
+					<PublicsOnly>0</PublicsOnly>
+					<StopOnExitCode>3</StopOnExitCode>
+					<CustomArgument/>
+					<IncludeLibraryModules/>
+					<ComprImg>1</ComprImg>
+				</CommonProperty>
+				<DllOption>
+					<SimDllName>SARMCM3.DLL</SimDllName>
+					<SimDllArguments/>
+					<SimDlgDll>DARMCM1.DLL</SimDlgDll>
+					<SimDlgDllArguments/>
+					<TargetDllName>SARMCM3.DLL</TargetDllName>
+					<TargetDllArguments/>
+					<TargetDlgDll>TARMCM1.DLL</TargetDlgDll>
+					<TargetDlgDllArguments/>
+				</DllOption>
+				<DebugOption>
+					<OPTHX>
+						<HexSelection>1</HexSelection>
+						<HexRangeLowAddress>0</HexRangeLowAddress>
+						<HexRangeHighAddress>0</HexRangeHighAddress>
+						<HexOffset>0</HexOffset>
+						<Oh166RecLen>16</Oh166RecLen>
+					</OPTHX>
+					<Simulator>
+						<UseSimulator>0</UseSimulator>
+						<LoadApplicationAtStartup>1</LoadApplicationAtStartup>
+						<RunToMain>0</RunToMain>
+						<RestoreBreakpoints>1</RestoreBreakpoints>
+						<RestoreWatchpoints>1</RestoreWatchpoints>
+						<RestoreMemoryDisplay>1</RestoreMemoryDisplay>
+						<RestoreFunctions>1</RestoreFunctions>
+						<RestoreToolbox>1</RestoreToolbox>
+						<LimitSpeedToRealTime>0</LimitSpeedToRealTime>
+						<RestoreSysVw>1</RestoreSysVw>
+					</Simulator>
+					<Target>
+						<UseTarget>1</UseTarget>
+						<LoadApplicationAtStartup>1</LoadApplicationAtStartup>
+						<RunToMain>1</RunToMain>
+						<RestoreBreakpoints>1</RestoreBreakpoints>
+						<RestoreWatchpoints>0</RestoreWatchpoints>
+						<RestoreMemoryDisplay>1</RestoreMemoryDisplay>
+						<RestoreFunctions>0</RestoreFunctions>
+						<RestoreToolbox>1</RestoreToolbox>
+						<RestoreTracepoints>0</RestoreTracepoints>
+						<RestoreSysVw>1</RestoreSysVw>
+					</Target>
+					<RunDebugAfterBuild>0</RunDebugAfterBuild>
+					<TargetSelection>20</TargetSelection>
+					<SimDlls>
+						<CpuDll/>
+						<CpuDllArguments/>
+						<PeripheralDll/>
+						<PeripheralDllArguments/>
+						<InitializationFile/>
+					</SimDlls>
+					<TargetDlls>
+						<CpuDll/>
+						<CpuDllArguments/>
+						<PeripheralDll/>
+						<PeripheralDllArguments/>
+						<InitializationFile/>
+						<Driver>Bin\Nu_Link.dll</Driver>
+					</TargetDlls>
+				</DebugOption>
+				<Utilities>
+					<Flash1>
+						<UseTargetDll>1</UseTargetDll>
+						<UseExternalTool>0</UseExternalTool>
+						<RunIndependent>0</RunIndependent>
+						<UpdateFlashBeforeDebugging>1</UpdateFlashBeforeDebugging>
+						<Capability>1</Capability>
+						<DriverSelection>4106</DriverSelection>
+					</Flash1>
+					<bUseTDR>0</bUseTDR>
+					<Flash2>Bin\Nu_Link.dll</Flash2>
+					<Flash3>&quot;&quot; ()</Flash3>
+					<Flash4/>
+					<pFcarmOut/>
+					<pFcarmGrp/>
+					<pFcArmRoot/>
+					<FcArmLst>0</FcArmLst>
+				</Utilities>
+				<TargetArmAds>
+					<ArmAdsMisc>
+						<GenerateListings>0</GenerateListings>
+						<asHll>1</asHll>
+						<asAsm>1</asAsm>
+						<asMacX>1</asMacX>
+						<asSyms>1</asSyms>
+						<asFals>1</asFals>
+						<asDbgD>1</asDbgD>
+						<asForm>1</asForm>
+						<ldLst>0</ldLst>
+						<ldmm>1</ldmm>
+						<ldXref>1</ldXref>
+						<BigEnd>0</BigEnd>
+						<AdsALst>1</AdsALst>
+						<AdsACrf>1</AdsACrf>
+						<AdsANop>0</AdsANop>
+						<AdsANot>0</AdsANot>
+						<AdsLLst>1</AdsLLst>
+						<AdsLmap>1</AdsLmap>
+						<AdsLcgr>1</AdsLcgr>
+						<AdsLsym>1</AdsLsym>
+						<AdsLszi>1</AdsLszi>
+						<AdsLtoi>1</AdsLtoi>
+						<AdsLsun>1</AdsLsun>
+						<AdsLven>1</AdsLven>
+						<AdsLsxf>1</AdsLsxf>
+						<RvctClst>0</RvctClst>
+						<GenPPlst>0</GenPPlst>
+						<AdsCpuType>&quot;Cortex-M4&quot;</AdsCpuType>
+						<RvctDeviceName/>
+						<mOS>0</mOS>
+						<uocRom>0</uocRom>
+						<uocRam>0</uocRam>
+						<hadIROM>1</hadIROM>
+						<hadIRAM>1</hadIRAM>
+						<hadXRAM>0</hadXRAM>
+						<uocXRam>0</uocXRam>
+						<RvdsVP>2</RvdsVP>
+						<RvdsMve>0</RvdsMve>
+						<hadIRAM2>0</hadIRAM2>
+						<hadIROM2>0</hadIROM2>
+						<StupSel>8</StupSel>
+						<useUlib>1</useUlib>
+						<EndSel>0</EndSel>
+						<uLtcg>0</uLtcg>
+						<nSecure>0</nSecure>
+						<RoSelD>3</RoSelD>
+						<RwSelD>3</RwSelD>
+						<CodeSel>0</CodeSel>
+						<OptFeed>0</OptFeed>
+						<NoZi1>0</NoZi1>
+						<NoZi2>0</NoZi2>
+						<NoZi3>0</NoZi3>
+						<NoZi4>0</NoZi4>
+						<NoZi5>0</NoZi5>
+						<Ro1Chk>0</Ro1Chk>
+						<Ro2Chk>0</Ro2Chk>
+						<Ro3Chk>0</Ro3Chk>
+						<Ir1Chk>1</Ir1Chk>
+						<Ir2Chk>0</Ir2Chk>
+						<Ra1Chk>0</Ra1Chk>
+						<Ra2Chk>0</Ra2Chk>
+						<Ra3Chk>0</Ra3Chk>
+						<Im1Chk>1</Im1Chk>
+						<Im2Chk>0</Im2Chk>
+						<OnChipMemories>
+							<Ocm1>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</Ocm1>
+							<Ocm2>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</Ocm2>
+							<Ocm3>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</Ocm3>
+							<Ocm4>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</Ocm4>
+							<Ocm5>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</Ocm5>
+							<Ocm6>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</Ocm6>
+							<IRAM>
+								<Type>0</Type>
+								<StartAddress>0x20000000</StartAddress>
+								<Size>0x10000</Size>
+							</IRAM>
+							<IROM>
+								<Type>1</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x80000</Size>
+							</IROM>
+							<XRAM>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</XRAM>
+							<OCR_RVCT1>
+								<Type>1</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</OCR_RVCT1>
+							<OCR_RVCT2>
+								<Type>1</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</OCR_RVCT2>
+							<OCR_RVCT3>
+								<Type>1</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</OCR_RVCT3>
+							<OCR_RVCT4>
+								<Type>1</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x80000</Size>
+							</OCR_RVCT4>
+							<OCR_RVCT5>
+								<Type>1</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</OCR_RVCT5>
+							<OCR_RVCT6>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</OCR_RVCT6>
+							<OCR_RVCT7>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</OCR_RVCT7>
+							<OCR_RVCT8>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</OCR_RVCT8>
+							<OCR_RVCT9>
+								<Type>0</Type>
+								<StartAddress>0x20000000</StartAddress>
+								<Size>0x28000</Size>
+							</OCR_RVCT9>
+							<OCR_RVCT10>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</OCR_RVCT10>
+						</OnChipMemories>
+						<RvctStartVector/>
+					</ArmAdsMisc>
+					<Cads>
+						<interw>1</interw>
+						<Optim>1</Optim>
+						<oTime>0</oTime>
+						<SplitLS>0</SplitLS>
+						<OneElfS>0</OneElfS>
+						<Strict>0</Strict>
+						<EnumInt>0</EnumInt>
+						<PlainCh>0</PlainCh>
+						<Ropi>0</Ropi>
+						<Rwpi>0</Rwpi>
+						<wLevel>0</wLevel>
+						<uThumb>0</uThumb>
+						<uSurpInc>0</uSurpInc>
+						<uC99>1</uC99>
+						<uGnu>0</uGnu>
+						<useXO>0</useXO>
+						<v6Lang>1</v6Lang>
+						<v6LangP>1</v6LangP>
+						<vShortEn>1</vShortEn>
+						<vShortWch>1</vShortWch>
+						<v6Lto>0</v6Lto>
+						<v6WtE>0</v6WtE>
+						<v6Rtti>0</v6Rtti>
+						<VariousControls>
+							<MiscControls>--diag_suppress=550,177,C4017,111,2770,223</MiscControls>
+							<Define>RVDS_ARMCM4_NUC4xx __little_endian__=1 NDEBUG</Define>
+							<Undefine/>
+							<IncludePath>../../../../../freertos_kernel/include;../../../../../freertos_kernel/portable/RVDS/ARM_CM4F;../../../../../vendors/nuvoton/sdk/CMSIS/Include;../../../../../vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Include;../../../../../vendors/nuvoton/sdk/middleware/wifi_esp8266;../../../../../vendors/nuvoton/sdk/StdDriver/inc;../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files;../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/application_code/nuvoton_code;../../../../../demos/include;../../../../../demos/network_manager;../../../../../libraries/c_sdk/standard/common/include/private;../../../../../libraries/c_sdk/standard/common/include;../../../../../libraries/abstractions/platform/include;../../../../../libraries/abstractions/platform/freertos/include;../../../../../libraries/abstractions/secure_sockets/include;../../../../../libraries/freertos_plus/standard/tls/include;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/freertos_plus/standard/pkcs11/include;../../../../../libraries/abstractions/pkcs11/include;../../../../../libraries/freertos_plus/standard/utils/include;../../../../../libraries/abstractions/wifi/include;../../../../../demos/dev_mode_key_provisioning/include;../../../../../libraries/c_sdk/aws/defender/include;../../../../../libraries/c_sdk/standard/mqtt/include;../../../../../libraries/c_sdk/standard/serializer/include;../../../../../libraries/c_sdk/aws/shadow/include;../../../../../libraries/c_sdk/standard/https/include;../../../../../libraries/freertos_plus/aws/greengrass/include;../../../../../libraries/3rdparty/mbedtls/include;../../../../../libraries/3rdparty/mbedtls/include/mbedtls;../../../../../libraries/abstractions/pkcs11/mbedtls;../../../../../libraries/3rdparty/pkcs11;../../../../../libraries/3rdparty/tinycbor;../../../../../libraries/3rdparty/http-parser;../../../../../libraries/3rdparty/jsmn;</IncludePath>
+						</VariousControls>
+					</Cads>
+					<Aads>
+						<interw>1</interw>
+						<Ropi>0</Ropi>
+						<Rwpi>0</Rwpi>
+						<thumb>1</thumb>
+						<SplitLS>0</SplitLS>
+						<SwStkChk>0</SwStkChk>
+						<NoWarn>0</NoWarn>
+						<uSurpInc>0</uSurpInc>
+						<useXO>0</useXO>
+						<uClangAs>0</uClangAs>
+						<VariousControls>
+							<MiscControls/>
+							<Define/>
+							<Undefine/>
+							<IncludePath/>
+						</VariousControls>
+					</Aads>
+					<LDads>
+						<umfTarg>1</umfTarg>
+						<Ropi>0</Ropi>
+						<Rwpi>0</Rwpi>
+						<noStLib>0</noStLib>
+						<RepFail>1</RepFail>
+						<useFile>0</useFile>
+						<TextAddressRange>0x08000000</TextAddressRange>
+						<DataAddressRange>0x20000000</DataAddressRange>
+						<pXoBase/>
+						<ScatterFile/>
+						<IncludeLibs/>
+						<IncludeLibsPath/>
+						<Misc/>
+						<LinkerInputFile/>
+						<DisabledWarnings/>
+					</LDads>
+				</TargetArmAds>
+			</TargetOption>
+			<Groups>
+				<Group>
+					<GroupName>freertos_kernel/</GroupName>
+					<Files>
+						<File>
+							<FileName>event_groups.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../freertos_kernel/event_groups.c</FilePath>
+						</File>
+						<File>
+							<FileName>list.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../freertos_kernel/list.c</FilePath>
+						</File>
+						<File>
+							<FileName>queue.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../freertos_kernel/queue.c</FilePath>
+						</File>
+						<File>
+							<FileName>stream_buffer.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../freertos_kernel/stream_buffer.c</FilePath>
+						</File>
+						<File>
+							<FileName>tasks.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../freertos_kernel/tasks.c</FilePath>
+						</File>
+						<File>
+							<FileName>timers.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../freertos_kernel/timers.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>freertos_kernel/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>FreeRTOS.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/FreeRTOS.h</FilePath>
+						</File>
+						<File>
+							<FileName>atomic.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/atomic.h</FilePath>
+						</File>
+						<File>
+							<FileName>deprecated_definitions.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/deprecated_definitions.h</FilePath>
+						</File>
+						<File>
+							<FileName>event_groups.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/event_groups.h</FilePath>
+						</File>
+						<File>
+							<FileName>list.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/list.h</FilePath>
+						</File>
+						<File>
+							<FileName>message_buffer.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/message_buffer.h</FilePath>
+						</File>
+						<File>
+							<FileName>mpu_prototypes.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/mpu_prototypes.h</FilePath>
+						</File>
+						<File>
+							<FileName>mpu_wrappers.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/mpu_wrappers.h</FilePath>
+						</File>
+						<File>
+							<FileName>portable.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/portable.h</FilePath>
+						</File>
+						<File>
+							<FileName>projdefs.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/projdefs.h</FilePath>
+						</File>
+						<File>
+							<FileName>queue.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/queue.h</FilePath>
+						</File>
+						<File>
+							<FileName>semphr.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/semphr.h</FilePath>
+						</File>
+						<File>
+							<FileName>stack_macros.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/stack_macros.h</FilePath>
+						</File>
+						<File>
+							<FileName>stream_buffer.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/stream_buffer.h</FilePath>
+						</File>
+						<File>
+							<FileName>task.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/task.h</FilePath>
+						</File>
+						<File>
+							<FileName>timers.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/timers.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/sdk/StdDriver/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>clk.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/clk.c</FilePath>
+						</File>
+						<File>
+							<FileName>crypto.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/crypto.c</FilePath>
+						</File>
+						<File>
+							<FileName>fmc.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/fmc.c</FilePath>
+						</File>
+						<File>
+							<FileName>sys.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/sys.c</FilePath>
+						</File>
+						<File>
+							<FileName>uart.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/uart.c</FilePath>
+						</File>
+						<File>
+							<FileName>retarget.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/retarget.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>freertos_kernel/portable/MemMang/</GroupName>
+					<Files>
+						<File>
+							<FileName>heap_4.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../freertos_kernel/portable/MemMang/heap_4.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>freertos_kernel/portable/RVDS/ARM_CM4F/</GroupName>
+					<Files>
+						<File>
+							<FileName>port.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../freertos_kernel/portable/RVDS/ARM_CM4F/port.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/application_code/nuvoton_code/</GroupName>
+					<Files>
+						<File>
+							<FileName>entropy_hardware_poll.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/application_code/nuvoton_code/entropy_hardware_poll.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>demos/demo_runner/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_demo_version.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../demos/demo_runner/aws_demo_version.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_demo.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../demos/demo_runner/aws_demo.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_demo_freertos.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../demos/demo_runner/iot_demo_freertos.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_demo_runner.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../demos/demo_runner/iot_demo_runner.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>demos/network_manager/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_iot_network_manager.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../demos/network_manager/aws_iot_network_manager.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_iot_demo_network.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../demos/network_manager/aws_iot_demo_network.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_network_manager_private.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../demos/network_manager/iot_network_manager_private.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>demos/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_application_version.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../demos/include/aws_application_version.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_clientcredential.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../demos/include/aws_clientcredential.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_clientcredential_keys.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../demos/include/aws_clientcredential_keys.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_demo.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../demos/include/aws_demo.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_iot_demo_network.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../demos/include/aws_iot_demo_network.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_ota_codesigner_certificate.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../demos/include/aws_ota_codesigner_certificate.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_config_common.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../demos/include/iot_config_common.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_demo_logging.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../demos/include/iot_demo_logging.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_demo_runner.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../demos/include/iot_demo_runner.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/common/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_init.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/iot_init.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_static_memory_common.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/iot_static_memory_common.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_device_metrics.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/iot_device_metrics.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/common/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_appversion32.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_appversion32.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_init.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_init.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_linear_containers.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_linear_containers.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_logging_task.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_logging_task.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_logging_setup.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_logging_setup.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_taskpool.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_taskpool.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/common/logging/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_logging_task_dynamic_buffers.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/logging/iot_logging_task_dynamic_buffers.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_logging.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/logging/iot_logging.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/common/include/private/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_logging.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/private/iot_logging.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_taskpool_internal.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/private/iot_taskpool_internal.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/common/include/types/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_network_types.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/types/iot_network_types.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_taskpool_types.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/types/iot_taskpool_types.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/common/taskpool/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_taskpool.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/taskpool/iot_taskpool.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_taskpool_static_memory.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/taskpool/iot_taskpool_static_memory.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/abstractions/platform/include/platform/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_clock.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/include/platform/iot_clock.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_network.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/include/platform/iot_network.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_threads.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/include/platform/iot_threads.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_metrics.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/include/platform/iot_metrics.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/abstractions/platform/include/types/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_platform_types.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/include/types/iot_platform_types.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/abstractions/platform/freertos/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_clock_freertos.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/freertos/iot_clock_freertos.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_threads_freertos.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/freertos/iot_threads_freertos.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_metrics.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/freertos/iot_metrics.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_network_freertos.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/freertos/iot_network_freertos.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/abstractions/platform/freertos/include/platform/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_platform_types_freertos.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/freertos/include/platform/iot_platform_types_freertos.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_network_freertos.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/freertos/include/platform/iot_network_freertos.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/abstractions/secure_sockets/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_secure_sockets.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/secure_sockets/include/iot_secure_sockets.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_secure_sockets_config_defaults.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/secure_sockets/include/iot_secure_sockets_config_defaults.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_secure_sockets_wrapper_metrics.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/secure_sockets/include/iot_secure_sockets_wrapper_metrics.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/secure_sockets/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_secure_sockets.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/secure_sockets/iot_secure_sockets.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/standard/tls/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_tls.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/tls/src/iot_tls.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/standard/tls/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_tls.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/tls/include/iot_tls.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/standard/crypto/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_crypto.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/crypto/src/iot_crypto.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/standard/crypto/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_crypto.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/crypto/include/iot_crypto.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/standard/pkcs11/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_pkcs11.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/pkcs11/include/iot_pkcs11.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/standard/pkcs11/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_pkcs11.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/pkcs11/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_pkcs11_pal.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/pkcs11/iot_pkcs11_pal.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/abstractions/pkcs11/mbedtls/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_pkcs11_mbedtls.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c</FilePath>
+						</File>
+						<File>
+							<FileName>threading_alt.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/pkcs11/mbedtls/threading_alt.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/standard/utils/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_system_init.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/utils/src/iot_system_init.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_pki_utils.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/utils/src/iot_pki_utils.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/standard/utils/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_system_init.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/utils/include/iot_system_init.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_pki_utils.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/utils/include/iot_pki_utils.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/abstractions/wifi/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_wifi.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/wifi/include/iot_wifi.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/wifi/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_wifi.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/wifi/iot_wifi.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/sdk/middleware/wifi_esp8266/</GroupName>
+					<Files>
+						<File>
+							<FileName>esp8266_wifi.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/sdk/middleware/wifi_esp8266/esp8266_wifi.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>demos/dev_mode_key_provisioning/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_dev_mode_key_provisioning.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../demos/dev_mode_key_provisioning/src/aws_dev_mode_key_provisioning.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>demos/dev_mode_key_provisioning/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_dev_mode_key_provisioning.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../demos/dev_mode_key_provisioning/include/aws_dev_mode_key_provisioning.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/aws/defender/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_iot_defender_api.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_api.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_iot_defender_collector.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_collector.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_iot_defender_mqtt.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_mqtt.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_iot_defender_v1.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_v1.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/aws/defender/src/private/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_iot_defender_internal.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/defender/src/private/aws_iot_defender_internal.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/aws/defender/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_iot_defender.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/defender/include/aws_iot_defender.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/mqtt/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_mqtt_api.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_api.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_mqtt_network.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_network.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_mqtt_operation.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_operation.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_mqtt_serialize.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_serialize.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_mqtt_static_memory.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_static_memory.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_mqtt_subscription.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_subscription.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_mqtt_validate.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_validate.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_mqtt_agent.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_agent.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/serializer/src/cbor/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_serializer_tinycbor_decoder.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_decoder.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_serializer_tinycbor_encoder.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_encoder.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/serializer/src/json/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_serializer_json_decoder.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_decoder.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_serializer_json_encoder.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_encoder.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/serializer/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_serializer_static_memory.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/serializer/src/iot_serializer_static_memory.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_json_utils.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/serializer/src/iot_json_utils.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/serializer/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_serializer.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/serializer/include/iot_serializer.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_json_utils.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/serializer/include/iot_json_utils.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/aws/shadow/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_iot_shadow_api.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_api.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_iot_shadow_operation.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_operation.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_iot_shadow_parser.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_parser.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_iot_shadow_static_memory.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_static_memory.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_iot_shadow_subscription.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_subscription.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_shadow.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_shadow.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_shadow_config_defaults.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_shadow_config_defaults.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/aws/shadow/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_iot_shadow.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/include/aws_iot_shadow.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_shadow.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/include/aws_shadow.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/https/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_https_client.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/src/iot_https_client.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_https_utils.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/src/iot_https_utils.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/aws/greengrass/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_greengrass_discovery.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_helper_secure_connect.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_helper_secure_connect.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/aws/greengrass/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_ggd_config_defaults.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/aws/greengrass/include/aws_ggd_config_defaults.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_greengrass_discovery.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/aws/greengrass/include/aws_greengrass_discovery.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>demos/defender/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_iot_demo_defender.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../demos/defender/aws_iot_demo_defender.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>demos/greengrass_connectivity/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_greengrass_discovery_demo.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../demos/greengrass_connectivity/aws_greengrass_discovery_demo.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>demos/https/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_demo_https_s3_download_sync.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../demos/https/iot_demo_https_s3_download_sync.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_demo_https_s3_download_async.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../demos/https/iot_demo_https_s3_download_async.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_demo_https_common.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../demos/https/iot_demo_https_common.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>demos/mqtt/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_demo_mqtt.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../demos/mqtt/iot_demo_mqtt.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>demos/shadow/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_iot_demo_shadow.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../demos/shadow/aws_iot_demo_shadow.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>demos/tcp/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_tcp_echo_client_single_task.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../demos/tcp/aws_tcp_echo_client_single_task.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_tcp_echo_client_single_tasks.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../demos/tcp/aws_tcp_echo_client_single_tasks.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/</GroupName>
+					<Files>
+						<File>
+							<FileName>FreeRTOSConfig.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/FreeRTOSConfig.h</FilePath>
+						</File>
+						<File>
+							<FileName>FreeRTOSIPConfig.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/FreeRTOSIPConfig.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_bufferpool_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_bufferpool_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_demo_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_demo_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_ggd_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_ggd_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_iot_network_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_iot_network_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_mqtt_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_mqtt_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_secure_sockets_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_secure_sockets_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_shadow_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_shadow_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_wifi_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_wifi_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/iot_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_mqtt_agent_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/iot_mqtt_agent_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_pkcs11_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/iot_pkcs11_config.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/application_code/</GroupName>
+					<Files>
+						<File>
+							<FileName>main.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/application_code/main.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Source/ARM/</GroupName>
+					<Files>
+						<File>
+							<FileName>startup_M480.s</FileName>
+							<FileType>2</FileType>
+							<FilePath>../../../../../vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Source/ARM/startup_M480.s</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Source/</GroupName>
+					<Files>
+						<File>
+							<FileName>system_M480.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Source/system_M480.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/3rdparty/mbedtls/library/</GroupName>
+					<Files>
+						<File>
+							<FileName>aes.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/aes.c</FilePath>
+						</File>
+						<File>
+							<FileName>aesni.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/aesni.c</FilePath>
+						</File>
+						<File>
+							<FileName>arc4.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/arc4.c</FilePath>
+						</File>
+						<File>
+							<FileName>asn1parse.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/asn1parse.c</FilePath>
+						</File>
+						<File>
+							<FileName>asn1write.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/asn1write.c</FilePath>
+						</File>
+						<File>
+							<FileName>base64.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/base64.c</FilePath>
+						</File>
+						<File>
+							<FileName>bignum.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/bignum.c</FilePath>
+						</File>
+						<File>
+							<FileName>blowfish.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/blowfish.c</FilePath>
+						</File>
+						<File>
+							<FileName>camellia.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/camellia.c</FilePath>
+						</File>
+						<File>
+							<FileName>ccm.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ccm.c</FilePath>
+						</File>
+						<File>
+							<FileName>certs.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/certs.c</FilePath>
+						</File>
+						<File>
+							<FileName>cipher.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/cipher.c</FilePath>
+						</File>
+						<File>
+							<FileName>cipher_wrap.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/cipher_wrap.c</FilePath>
+						</File>
+						<File>
+							<FileName>cmac.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/cmac.c</FilePath>
+						</File>
+						<File>
+							<FileName>ctr_drbg.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ctr_drbg.c</FilePath>
+						</File>
+						<File>
+							<FileName>debug.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/debug.c</FilePath>
+						</File>
+						<File>
+							<FileName>des.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/des.c</FilePath>
+						</File>
+						<File>
+							<FileName>dhm.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/dhm.c</FilePath>
+						</File>
+						<File>
+							<FileName>ecdh.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecdh.c</FilePath>
+						</File>
+						<File>
+							<FileName>ecdsa.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecdsa.c</FilePath>
+						</File>
+						<File>
+							<FileName>ecjpake.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecjpake.c</FilePath>
+						</File>
+						<File>
+							<FileName>ecp.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecp.c</FilePath>
+						</File>
+						<File>
+							<FileName>ecp_curves.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecp_curves.c</FilePath>
+						</File>
+						<File>
+							<FileName>entropy.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/entropy.c</FilePath>
+						</File>
+						<File>
+							<FileName>entropy_poll.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/entropy_poll.c</FilePath>
+						</File>
+						<File>
+							<FileName>error.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/error.c</FilePath>
+						</File>
+						<File>
+							<FileName>gcm.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/gcm.c</FilePath>
+						</File>
+						<File>
+							<FileName>havege.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/havege.c</FilePath>
+						</File>
+						<File>
+							<FileName>hmac_drbg.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/hmac_drbg.c</FilePath>
+						</File>
+						<File>
+							<FileName>md.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/md.c</FilePath>
+						</File>
+						<File>
+							<FileName>md2.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/md2.c</FilePath>
+						</File>
+						<File>
+							<FileName>md4.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/md4.c</FilePath>
+						</File>
+						<File>
+							<FileName>md5.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/md5.c</FilePath>
+						</File>
+						<File>
+							<FileName>md_wrap.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/md_wrap.c</FilePath>
+						</File>
+						<File>
+							<FileName>memory_buffer_alloc.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/memory_buffer_alloc.c</FilePath>
+						</File>
+						<File>
+							<FileName>net_sockets.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/net_sockets.c</FilePath>
+						</File>
+						<File>
+							<FileName>oid.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/oid.c</FilePath>
+						</File>
+						<File>
+							<FileName>padlock.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/padlock.c</FilePath>
+						</File>
+						<File>
+							<FileName>pem.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/pem.c</FilePath>
+						</File>
+						<File>
+							<FileName>pk.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/pk.c</FilePath>
+						</File>
+						<File>
+							<FileName>pk_wrap.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/pk_wrap.c</FilePath>
+						</File>
+						<File>
+							<FileName>pkcs12.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/pkcs12.c</FilePath>
+						</File>
+						<File>
+							<FileName>pkcs5.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/pkcs5.c</FilePath>
+						</File>
+						<File>
+							<FileName>pkparse.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/pkparse.c</FilePath>
+						</File>
+						<File>
+							<FileName>pkwrite.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/pkwrite.c</FilePath>
+						</File>
+						<File>
+							<FileName>platform.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/platform.c</FilePath>
+						</File>
+						<File>
+							<FileName>platform_util.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/platform_util.c</FilePath>
+						</File>
+						<File>
+							<FileName>ripemd160.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ripemd160.c</FilePath>
+						</File>
+						<File>
+							<FileName>rsa.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/rsa.c</FilePath>
+						</File>
+						<File>
+							<FileName>rsa_internal.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/rsa_internal.c</FilePath>
+						</File>
+						<File>
+							<FileName>sha1.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/sha1.c</FilePath>
+						</File>
+						<File>
+							<FileName>sha256.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/sha256.c</FilePath>
+						</File>
+						<File>
+							<FileName>sha512.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/sha512.c</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_cache.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_cache.c</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_ciphersuites.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_ciphersuites.c</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_cli.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_cli.c</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_cookie.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_cookie.c</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_srv.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_srv.c</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_ticket.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_ticket.c</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_tls.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_tls.c</FilePath>
+						</File>
+						<File>
+							<FileName>threading.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/threading.c</FilePath>
+						</File>
+						<File>
+							<FileName>timing.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/timing.c</FilePath>
+						</File>
+						<File>
+							<FileName>version.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/version.c</FilePath>
+						</File>
+						<File>
+							<FileName>version_features.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/version_features.c</FilePath>
+						</File>
+						<File>
+							<FileName>x509.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509.c</FilePath>
+						</File>
+						<File>
+							<FileName>x509_create.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509_create.c</FilePath>
+						</File>
+						<File>
+							<FileName>x509_crl.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509_crl.c</FilePath>
+						</File>
+						<File>
+							<FileName>x509_crt.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509_crt.c</FilePath>
+						</File>
+						<File>
+							<FileName>x509_csr.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509_csr.c</FilePath>
+						</File>
+						<File>
+							<FileName>x509write_crt.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509write_crt.c</FilePath>
+						</File>
+						<File>
+							<FileName>x509write_csr.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509write_csr.c</FilePath>
+						</File>
+						<File>
+							<FileName>xtea.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/xtea.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/3rdparty/mbedtls/utils/</GroupName>
+					<Files>
+						<File>
+							<FileName>mbedtls_utils.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/utils/mbedtls_utils.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/3rdparty/mbedtls/include/mbedtls/</GroupName>
+					<Files>
+						<File>
+							<FileName>aes.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/aes.h</FilePath>
+						</File>
+						<File>
+							<FileName>aesni.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/aesni.h</FilePath>
+						</File>
+						<File>
+							<FileName>arc4.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/arc4.h</FilePath>
+						</File>
+						<File>
+							<FileName>asn1.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/asn1.h</FilePath>
+						</File>
+						<File>
+							<FileName>asn1write.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/asn1write.h</FilePath>
+						</File>
+						<File>
+							<FileName>base64.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/base64.h</FilePath>
+						</File>
+						<File>
+							<FileName>bignum.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/bignum.h</FilePath>
+						</File>
+						<File>
+							<FileName>blowfish.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/blowfish.h</FilePath>
+						</File>
+						<File>
+							<FileName>bn_mul.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/bn_mul.h</FilePath>
+						</File>
+						<File>
+							<FileName>camellia.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/camellia.h</FilePath>
+						</File>
+						<File>
+							<FileName>ccm.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ccm.h</FilePath>
+						</File>
+						<File>
+							<FileName>certs.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/certs.h</FilePath>
+						</File>
+						<File>
+							<FileName>check_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/check_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>cipher.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/cipher.h</FilePath>
+						</File>
+						<File>
+							<FileName>cipher_internal.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/cipher_internal.h</FilePath>
+						</File>
+						<File>
+							<FileName>cmac.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/cmac.h</FilePath>
+						</File>
+						<File>
+							<FileName>compat-1.3.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/compat-1.3.h</FilePath>
+						</File>
+						<File>
+							<FileName>config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/config.h</FilePath>
+						</File>
+						<File>
+							<FileName>ctr_drbg.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ctr_drbg.h</FilePath>
+						</File>
+						<File>
+							<FileName>debug.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/debug.h</FilePath>
+						</File>
+						<File>
+							<FileName>des.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/des.h</FilePath>
+						</File>
+						<File>
+							<FileName>dhm.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/dhm.h</FilePath>
+						</File>
+						<File>
+							<FileName>ecdh.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecdh.h</FilePath>
+						</File>
+						<File>
+							<FileName>ecdsa.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecdsa.h</FilePath>
+						</File>
+						<File>
+							<FileName>ecjpake.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecjpake.h</FilePath>
+						</File>
+						<File>
+							<FileName>ecp.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecp.h</FilePath>
+						</File>
+						<File>
+							<FileName>ecp_internal.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecp_internal.h</FilePath>
+						</File>
+						<File>
+							<FileName>entropy.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/entropy.h</FilePath>
+						</File>
+						<File>
+							<FileName>entropy_poll.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/entropy_poll.h</FilePath>
+						</File>
+						<File>
+							<FileName>error.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/error.h</FilePath>
+						</File>
+						<File>
+							<FileName>gcm.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/gcm.h</FilePath>
+						</File>
+						<File>
+							<FileName>havege.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/havege.h</FilePath>
+						</File>
+						<File>
+							<FileName>hmac_drbg.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/hmac_drbg.h</FilePath>
+						</File>
+						<File>
+							<FileName>md.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md.h</FilePath>
+						</File>
+						<File>
+							<FileName>md2.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md2.h</FilePath>
+						</File>
+						<File>
+							<FileName>md4.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md4.h</FilePath>
+						</File>
+						<File>
+							<FileName>md5.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md5.h</FilePath>
+						</File>
+						<File>
+							<FileName>md_internal.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md_internal.h</FilePath>
+						</File>
+						<File>
+							<FileName>memory_buffer_alloc.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/memory_buffer_alloc.h</FilePath>
+						</File>
+						<File>
+							<FileName>net.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/net.h</FilePath>
+						</File>
+						<File>
+							<FileName>net_sockets.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/net_sockets.h</FilePath>
+						</File>
+						<File>
+							<FileName>oid.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/oid.h</FilePath>
+						</File>
+						<File>
+							<FileName>padlock.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/padlock.h</FilePath>
+						</File>
+						<File>
+							<FileName>pem.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pem.h</FilePath>
+						</File>
+						<File>
+							<FileName>pk.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pk.h</FilePath>
+						</File>
+						<File>
+							<FileName>pk_internal.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pk_internal.h</FilePath>
+						</File>
+						<File>
+							<FileName>pkcs12.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pkcs12.h</FilePath>
+						</File>
+						<File>
+							<FileName>pkcs5.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pkcs5.h</FilePath>
+						</File>
+						<File>
+							<FileName>platform.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/platform.h</FilePath>
+						</File>
+						<File>
+							<FileName>platform_time.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/platform_time.h</FilePath>
+						</File>
+						<File>
+							<FileName>platform_util.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/platform_util.h</FilePath>
+						</File>
+						<File>
+							<FileName>ripemd160.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ripemd160.h</FilePath>
+						</File>
+						<File>
+							<FileName>rsa.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/rsa.h</FilePath>
+						</File>
+						<File>
+							<FileName>rsa_internal.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/rsa_internal.h</FilePath>
+						</File>
+						<File>
+							<FileName>sha1.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/sha1.h</FilePath>
+						</File>
+						<File>
+							<FileName>sha256.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/sha256.h</FilePath>
+						</File>
+						<File>
+							<FileName>sha512.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/sha512.h</FilePath>
+						</File>
+						<File>
+							<FileName>ssl.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl.h</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_cache.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_cache.h</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_ciphersuites.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_ciphersuites.h</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_cookie.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_cookie.h</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_internal.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_internal.h</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_ticket.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_ticket.h</FilePath>
+						</File>
+						<File>
+							<FileName>threading.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/threading.h</FilePath>
+						</File>
+						<File>
+							<FileName>timing.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/timing.h</FilePath>
+						</File>
+						<File>
+							<FileName>version.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/version.h</FilePath>
+						</File>
+						<File>
+							<FileName>x509.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509.h</FilePath>
+						</File>
+						<File>
+							<FileName>x509_crl.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509_crl.h</FilePath>
+						</File>
+						<File>
+							<FileName>x509_crt.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509_crt.h</FilePath>
+						</File>
+						<File>
+							<FileName>x509_csr.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509_csr.h</FilePath>
+						</File>
+						<File>
+							<FileName>xtea.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/xtea.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/3rdparty/pkcs11/</GroupName>
+					<Files>
+						<File>
+							<FileName>pkcs11.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/pkcs11/pkcs11.h</FilePath>
+						</File>
+						<File>
+							<FileName>pkcs11f.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/pkcs11/pkcs11f.h</FilePath>
+						</File>
+						<File>
+							<FileName>pkcs11t.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/pkcs11/pkcs11t.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/3rdparty/tinycbor/</GroupName>
+					<Files>
+						<File>
+							<FileName>cborpretty.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/tinycbor/cborpretty.c</FilePath>
+						</File>
+						<File>
+							<FileName>cborencoder.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/tinycbor/cborencoder.c</FilePath>
+						</File>
+						<File>
+							<FileName>cborencoder_close_container_checked.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/tinycbor/cborencoder_close_container_checked.c</FilePath>
+						</File>
+						<File>
+							<FileName>cborerrorstrings.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/tinycbor/cborerrorstrings.c</FilePath>
+						</File>
+						<File>
+							<FileName>cborparser.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/tinycbor/cborparser.c</FilePath>
+						</File>
+						<File>
+							<FileName>cborparser_dup_string.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/tinycbor/cborparser_dup_string.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/3rdparty/http-parser/</GroupName>
+					<Files>
+						<File>
+							<FileName>http_parser.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/http-parser/http_parser.h</FilePath>
+						</File>
+						<File>
+							<FileName>http_parser.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/http-parser/http_parser.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/3rdparty/jsmn/</GroupName>
+					<Files>
+						<File>
+							<FileName>jsmn.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/jsmn/jsmn.h</FilePath>
+						</File>
+						<File>
+							<FileName>jsmn.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/jsmn/jsmn.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+			</Groups>
+		</Target>
+	</Targets>
 </Project>
diff --git a/projects/nuvoton/numaker_iot_m487_wifi/uvision/aws_tests/aws_tests.uvproj b/projects/nuvoton/numaker_iot_m487_wifi/uvision/aws_tests/aws_tests.uvproj
index e414b589b..4af91aaa4 100644
--- a/projects/nuvoton/numaker_iot_m487_wifi/uvision/aws_tests/aws_tests.uvproj
+++ b/projects/nuvoton/numaker_iot_m487_wifi/uvision/aws_tests/aws_tests.uvproj
@@ -1,2495 +1,2561 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <Project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="project_proj.xsd">
-
-  <SchemaVersion>1.1</SchemaVersion>
-
-  <Header>### uVision Project, (C) Keil Software</Header>
-
-  <Targets>
-    <Target>
-      <TargetName>aws_tests</TargetName>
-      <ToolsetNumber>0x4</ToolsetNumber>
-      <ToolsetName>ARM-ADS</ToolsetName>
-      <pCCUsed>5060750::V5.06 update 6 (build 750)::ARMCC</pCCUsed>
-      <uAC6>0</uAC6>
-      <TargetOption>
-        <TargetCommonOption>
-          <Device>M487JIDAE</Device>
-          <Vendor>Nuvoton</Vendor>
-          <Cpu>IRAM(0x20000000-0x2000FFFF) IROM(0-0x7FFFF) CLOCK(50000000) CPUTYPE("Cortex-M4") FPU2</Cpu>
-          <FlashUtilSpec></FlashUtilSpec>
-          <StartupFile>undefined</StartupFile>
-          <FlashDriverDll></FlashDriverDll>
-          <DeviceId>0</DeviceId>
-          <RegisterFile></RegisterFile>
-          <MemoryEnv></MemoryEnv>
-          <Cmp></Cmp>
-          <Asm></Asm>
-          <Linker></Linker>
-          <OHString></OHString>
-          <InfinionOptionDll></InfinionOptionDll>
-          <SLE66CMisc></SLE66CMisc>
-          <SLE66AMisc></SLE66AMisc>
-          <SLE66LinkerMisc></SLE66LinkerMisc>
-          <SFDFile>SFD\Nuvoton\M481_v1.SFR</SFDFile>
-          <bCustSvd>0</bCustSvd>
-          <UseEnv>0</UseEnv>
-          <BinPath></BinPath>
-          <IncludePath></IncludePath>
-          <LibPath></LibPath>
-          <RegisterFilePath></RegisterFilePath>
-          <DBRegisterFilePath></DBRegisterFilePath>
-          <TargetStatus>
-            <Error>0</Error>
-            <ExitCodeStop>0</ExitCodeStop>
-            <ButtonStop>0</ButtonStop>
-            <NotGenerated>0</NotGenerated>
-            <InvalidFlash>1</InvalidFlash>
-          </TargetStatus>
-          <OutputDirectory>.\obj\</OutputDirectory>
-          <OutputName>aws_tests</OutputName>
-          <CreateExecutable>1</CreateExecutable>
-          <CreateLib>0</CreateLib>
-          <CreateHexFile>1</CreateHexFile>
-          <DebugInformation>1</DebugInformation>
-          <BrowseInformation>1</BrowseInformation>
-          <ListingPath>.\lst\</ListingPath>
-          <HexFormatSelection>1</HexFormatSelection>
-          <Merge32K>0</Merge32K>
-          <CreateBatchFile>0</CreateBatchFile>
-          <BeforeCompile>
-            <RunUserProg1>0</RunUserProg1>
-            <RunUserProg2>0</RunUserProg2>
-            <UserProg1Name></UserProg1Name>
-            <UserProg2Name></UserProg2Name>
-            <UserProg1Dos16Mode>0</UserProg1Dos16Mode>
-            <UserProg2Dos16Mode>0</UserProg2Dos16Mode>
-            <nStopU1X>0</nStopU1X>
-            <nStopU2X>0</nStopU2X>
-          </BeforeCompile>
-          <BeforeMake>
-            <RunUserProg1>0</RunUserProg1>
-            <RunUserProg2>0</RunUserProg2>
-            <UserProg1Name></UserProg1Name>
-            <UserProg2Name></UserProg2Name>
-            <UserProg1Dos16Mode>0</UserProg1Dos16Mode>
-            <UserProg2Dos16Mode>0</UserProg2Dos16Mode>
-            <nStopB1X>0</nStopB1X>
-            <nStopB2X>0</nStopB2X>
-          </BeforeMake>
-          <AfterMake>
-            <RunUserProg1>1</RunUserProg1>
-            <RunUserProg2>1</RunUserProg2>
-            <UserProg1Name>fromelf --bin ".\obj\@L.axf" --output ".\obj\@L.bin"</UserProg1Name>
-            <UserProg2Name>fromelf --text -c ".\obj\@L.axf" --output ".\obj\@L.txt"</UserProg2Name>
-            <UserProg1Dos16Mode>0</UserProg1Dos16Mode>
-            <UserProg2Dos16Mode>0</UserProg2Dos16Mode>
-            <nStopA1X>0</nStopA1X>
-            <nStopA2X>0</nStopA2X>
-          </AfterMake>
-          <SelectedForBatchBuild>0</SelectedForBatchBuild>
-          <SVCSIdString></SVCSIdString>
-        </TargetCommonOption>
-        <CommonProperty>
-          <UseCPPCompiler>0</UseCPPCompiler>
-          <RVCTCodeConst>0</RVCTCodeConst>
-          <RVCTZI>0</RVCTZI>
-          <RVCTOtherData>0</RVCTOtherData>
-          <ModuleSelection>0</ModuleSelection>
-          <IncludeInBuild>1</IncludeInBuild>
-          <AlwaysBuild>0</AlwaysBuild>
-          <GenerateAssemblyFile>0</GenerateAssemblyFile>
-          <AssembleAssemblyFile>0</AssembleAssemblyFile>
-          <PublicsOnly>0</PublicsOnly>
-          <StopOnExitCode>3</StopOnExitCode>
-          <CustomArgument></CustomArgument>
-          <IncludeLibraryModules></IncludeLibraryModules>
-          <ComprImg>1</ComprImg>
-        </CommonProperty>
-        <DllOption>
-          <SimDllName>SARMCM3.DLL</SimDllName>
-          <SimDllArguments></SimDllArguments>
-          <SimDlgDll>DARMCM1.DLL</SimDlgDll>
-          <SimDlgDllArguments></SimDlgDllArguments>
-          <TargetDllName>SARMCM3.DLL</TargetDllName>
-          <TargetDllArguments></TargetDllArguments>
-          <TargetDlgDll>TARMCM1.DLL</TargetDlgDll>
-          <TargetDlgDllArguments></TargetDlgDllArguments>
-        </DllOption>
-        <DebugOption>
-          <OPTHX>
-            <HexSelection>1</HexSelection>
-            <HexRangeLowAddress>0</HexRangeLowAddress>
-            <HexRangeHighAddress>0</HexRangeHighAddress>
-            <HexOffset>0</HexOffset>
-            <Oh166RecLen>16</Oh166RecLen>
-          </OPTHX>
-          <Simulator>
-            <UseSimulator>0</UseSimulator>
-            <LoadApplicationAtStartup>1</LoadApplicationAtStartup>
-            <RunToMain>0</RunToMain>
-            <RestoreBreakpoints>1</RestoreBreakpoints>
-            <RestoreWatchpoints>1</RestoreWatchpoints>
-            <RestoreMemoryDisplay>1</RestoreMemoryDisplay>
-            <RestoreFunctions>1</RestoreFunctions>
-            <RestoreToolbox>1</RestoreToolbox>
-            <LimitSpeedToRealTime>0</LimitSpeedToRealTime>
-            <RestoreSysVw>1</RestoreSysVw>
-          </Simulator>
-          <Target>
-            <UseTarget>1</UseTarget>
-            <LoadApplicationAtStartup>1</LoadApplicationAtStartup>
-            <RunToMain>1</RunToMain>
-            <RestoreBreakpoints>1</RestoreBreakpoints>
-            <RestoreWatchpoints>0</RestoreWatchpoints>
-            <RestoreMemoryDisplay>1</RestoreMemoryDisplay>
-            <RestoreFunctions>0</RestoreFunctions>
-            <RestoreToolbox>1</RestoreToolbox>
-            <RestoreTracepoints>0</RestoreTracepoints>
-            <RestoreSysVw>1</RestoreSysVw>
-          </Target>
-          <RunDebugAfterBuild>0</RunDebugAfterBuild>
-          <TargetSelection>-1</TargetSelection>
-          <SimDlls>
-            <CpuDll></CpuDll>
-            <CpuDllArguments></CpuDllArguments>
-            <PeripheralDll></PeripheralDll>
-            <PeripheralDllArguments></PeripheralDllArguments>
-            <InitializationFile></InitializationFile>
-          </SimDlls>
-          <TargetDlls>
-            <CpuDll></CpuDll>
-            <CpuDllArguments></CpuDllArguments>
-            <PeripheralDll></PeripheralDll>
-            <PeripheralDllArguments></PeripheralDllArguments>
-            <InitializationFile></InitializationFile>
-            <Driver></Driver>
-          </TargetDlls>
-        </DebugOption>
-        <Utilities>
-          <Flash1>
-            <UseTargetDll>1</UseTargetDll>
-            <UseExternalTool>0</UseExternalTool>
-            <RunIndependent>0</RunIndependent>
-            <UpdateFlashBeforeDebugging>1</UpdateFlashBeforeDebugging>
-            <Capability>1</Capability>
-            <DriverSelection>4107</DriverSelection>
-          </Flash1>
-          <bUseTDR>0</bUseTDR>
-          <Flash2>Bin\Nu_Link.dll</Flash2>
-          <Flash3>"" ()</Flash3>
-          <Flash4></Flash4>
-          <pFcarmOut></pFcarmOut>
-          <pFcarmGrp></pFcarmGrp>
-          <pFcArmRoot></pFcArmRoot>
-          <FcArmLst>0</FcArmLst>
-        </Utilities>
-        <TargetArmAds>
-          <ArmAdsMisc>
-            <GenerateListings>0</GenerateListings>
-            <asHll>1</asHll>
-            <asAsm>1</asAsm>
-            <asMacX>1</asMacX>
-            <asSyms>1</asSyms>
-            <asFals>1</asFals>
-            <asDbgD>1</asDbgD>
-            <asForm>1</asForm>
-            <ldLst>0</ldLst>
-            <ldmm>1</ldmm>
-            <ldXref>1</ldXref>
-            <BigEnd>0</BigEnd>
-            <AdsALst>1</AdsALst>
-            <AdsACrf>1</AdsACrf>
-            <AdsANop>0</AdsANop>
-            <AdsANot>0</AdsANot>
-            <AdsLLst>1</AdsLLst>
-            <AdsLmap>1</AdsLmap>
-            <AdsLcgr>1</AdsLcgr>
-            <AdsLsym>1</AdsLsym>
-            <AdsLszi>1</AdsLszi>
-            <AdsLtoi>1</AdsLtoi>
-            <AdsLsun>1</AdsLsun>
-            <AdsLven>1</AdsLven>
-            <AdsLsxf>1</AdsLsxf>
-            <RvctClst>0</RvctClst>
-            <GenPPlst>0</GenPPlst>
-            <AdsCpuType>"Cortex-M4"</AdsCpuType>
-            <RvctDeviceName></RvctDeviceName>
-            <mOS>0</mOS>
-            <uocRom>0</uocRom>
-            <uocRam>0</uocRam>
-            <hadIROM>1</hadIROM>
-            <hadIRAM>1</hadIRAM>
-            <hadXRAM>0</hadXRAM>
-            <uocXRam>0</uocXRam>
-            <RvdsVP>2</RvdsVP>
-            <RvdsMve>0</RvdsMve>
-            <hadIRAM2>0</hadIRAM2>
-            <hadIROM2>0</hadIROM2>
-            <StupSel>8</StupSel>
-            <useUlib>1</useUlib>
-            <EndSel>0</EndSel>
-            <uLtcg>0</uLtcg>
-            <nSecure>0</nSecure>
-            <RoSelD>3</RoSelD>
-            <RwSelD>3</RwSelD>
-            <CodeSel>0</CodeSel>
-            <OptFeed>0</OptFeed>
-            <NoZi1>0</NoZi1>
-            <NoZi2>0</NoZi2>
-            <NoZi3>0</NoZi3>
-            <NoZi4>0</NoZi4>
-            <NoZi5>0</NoZi5>
-            <Ro1Chk>0</Ro1Chk>
-            <Ro2Chk>0</Ro2Chk>
-            <Ro3Chk>0</Ro3Chk>
-            <Ir1Chk>1</Ir1Chk>
-            <Ir2Chk>0</Ir2Chk>
-            <Ra1Chk>0</Ra1Chk>
-            <Ra2Chk>0</Ra2Chk>
-            <Ra3Chk>0</Ra3Chk>
-            <Im1Chk>1</Im1Chk>
-            <Im2Chk>0</Im2Chk>
-            <OnChipMemories>
-              <Ocm1>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </Ocm1>
-              <Ocm2>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </Ocm2>
-              <Ocm3>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </Ocm3>
-              <Ocm4>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </Ocm4>
-              <Ocm5>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </Ocm5>
-              <Ocm6>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </Ocm6>
-              <IRAM>
-                <Type>0</Type>
-                <StartAddress>0x20000000</StartAddress>
-                <Size>0x10000</Size>
-              </IRAM>
-              <IROM>
-                <Type>1</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x80000</Size>
-              </IROM>
-              <XRAM>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </XRAM>
-              <OCR_RVCT1>
-                <Type>1</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </OCR_RVCT1>
-              <OCR_RVCT2>
-                <Type>1</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </OCR_RVCT2>
-              <OCR_RVCT3>
-                <Type>1</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </OCR_RVCT3>
-              <OCR_RVCT4>
-                <Type>1</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x80000</Size>
-              </OCR_RVCT4>
-              <OCR_RVCT5>
-                <Type>1</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </OCR_RVCT5>
-              <OCR_RVCT6>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </OCR_RVCT6>
-              <OCR_RVCT7>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </OCR_RVCT7>
-              <OCR_RVCT8>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </OCR_RVCT8>
-              <OCR_RVCT9>
-                <Type>0</Type>
-                <StartAddress>0x20000000</StartAddress>
-                <Size>0x28000</Size>
-              </OCR_RVCT9>
-              <OCR_RVCT10>
-                <Type>0</Type>
-                <StartAddress>0x0</StartAddress>
-                <Size>0x0</Size>
-              </OCR_RVCT10>
-            </OnChipMemories>
-            <RvctStartVector></RvctStartVector>
-          </ArmAdsMisc>
-          <Cads>
-            <interw>1</interw>
-            <Optim>1</Optim>
-            <oTime>0</oTime>
-            <SplitLS>0</SplitLS>
-            <OneElfS>0</OneElfS>
-            <Strict>0</Strict>
-            <EnumInt>0</EnumInt>
-            <PlainCh>0</PlainCh>
-            <Ropi>0</Ropi>
-            <Rwpi>0</Rwpi>
-            <wLevel>0</wLevel>
-            <uThumb>0</uThumb>
-            <uSurpInc>0</uSurpInc>
-            <uC99>1</uC99>
-            <uGnu>0</uGnu>
-            <useXO>0</useXO>
-            <v6Lang>1</v6Lang>
-            <v6LangP>1</v6LangP>
-            <vShortEn>1</vShortEn>
-            <vShortWch>1</vShortWch>
-            <v6Lto>0</v6Lto>
-            <v6WtE>0</v6WtE>
-            <v6Rtti>0</v6Rtti>
-            <VariousControls>
-              <MiscControls>--diag_suppress=550,177,C4017,111,2770,223</MiscControls>
-              <Define>MBEDTLS_USER_CONFIG_FILE=\"mbedtls_user_config.h\" UNITY_INCLUDE_CONFIG_H RVDS_ARMCM4_NUC4xx __LITTLE_ENDIAN__ AMAZON_FREERTOS_ENABLE_UNIT_TESTS M487 __little_endian__=1 NDEBUG</Define>
-              <Undefine></Undefine>
-              <IncludePath>../../../../../freertos_kernel/include;../../../../../freertos_kernel/portable/RVDS/ARM_CM4F;../../../../../vendors/nuvoton/sdk/CMSIS/Include;../../../../../vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Include;../../../../../vendors/nuvoton/sdk/middleware/wifi_esp8266;../../../../../vendors/nuvoton/sdk/StdDriver/inc;../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files;../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/application_code/nuvoton_code;../../../../../tests/include;../../../../../libraries/c_sdk/standard/common/include/private;../../../../../libraries/c_sdk/standard/common/include;../../../../../libraries/abstractions/platform/include;../../../../../libraries/abstractions/platform/freertos/include;../../../../../libraries/abstractions/secure_sockets/include;../../../../../libraries/freertos_plus/standard/tls/include;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/freertos_plus/standard/pkcs11/include;../../../../../libraries/freertos_plus/aws/ota/test;../../../../../libraries/abstractions/pkcs11/include;../../../../../libraries/freertos_plus/standard/utils/include;../../../../../libraries/abstractions/wifi/include;../../../../../demos/dev_mode_key_provisioning/include;../../../../../libraries/c_sdk/aws/defender/include;../../../../../libraries/c_sdk/standard/mqtt/test/access;../../../../../libraries/c_sdk/standard/mqtt/include;../../../../../libraries/c_sdk/standard/mqtt/src;../../../../../libraries/c_sdk/standard/serializer/include;../../../../../libraries/c_sdk/aws/shadow/include;../../../../../libraries/c_sdk/aws/shadow/src;../../../../../libraries/freertos_plus/aws/greengrass/test;../../../../../libraries/freertos_plus/aws/greengrass/include;../../../../../libraries/freertos_plus/aws/greengrass/src;../../../../../libraries/c_sdk/aws/defender/src/private;../../../../../libraries/3rdparty/mbedtls/include;../../../../../libraries/3rdparty/mbedtls/include/mbedtls;../../../../../libraries/abstractions/pkcs11/mbedtls;../../../../../libraries/3rdparty/pkcs11;../../../../../libraries/3rdparty/unity/src;../../../../../libraries/3rdparty/unity/extras/fixture/src;../../../../../libraries/3rdparty/tinycbor;../../../../../libraries/3rdparty/jsmn</IncludePath>
-            </VariousControls>
-          </Cads>
-          <Aads>
-            <interw>1</interw>
-            <Ropi>0</Ropi>
-            <Rwpi>0</Rwpi>
-            <thumb>1</thumb>
-            <SplitLS>0</SplitLS>
-            <SwStkChk>0</SwStkChk>
-            <NoWarn>0</NoWarn>
-            <uSurpInc>0</uSurpInc>
-            <useXO>0</useXO>
-            <uClangAs>0</uClangAs>
-            <VariousControls>
-              <MiscControls></MiscControls>
-              <Define></Define>
-              <Undefine></Undefine>
-              <IncludePath></IncludePath>
-            </VariousControls>
-          </Aads>
-          <LDads>
-            <umfTarg>1</umfTarg>
-            <Ropi>0</Ropi>
-            <Rwpi>0</Rwpi>
-            <noStLib>0</noStLib>
-            <RepFail>1</RepFail>
-            <useFile>0</useFile>
-            <TextAddressRange>0x08000000</TextAddressRange>
-            <DataAddressRange>0x20000000</DataAddressRange>
-            <pXoBase></pXoBase>
-            <ScatterFile></ScatterFile>
-            <IncludeLibs></IncludeLibs>
-            <IncludeLibsPath></IncludeLibsPath>
-            <Misc></Misc>
-            <LinkerInputFile></LinkerInputFile>
-            <DisabledWarnings></DisabledWarnings>
-          </LDads>
-        </TargetArmAds>
-      </TargetOption>
-      <Groups>
-        <Group>
-          <GroupName>freertos_kernel/</GroupName>
-          <Files>
-            <File>
-              <FileName>event_groups.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../freertos_kernel/event_groups.c</FilePath>
-            </File>
-            <File>
-              <FileName>list.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../freertos_kernel/list.c</FilePath>
-            </File>
-            <File>
-              <FileName>queue.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../freertos_kernel/queue.c</FilePath>
-            </File>
-            <File>
-              <FileName>stream_buffer.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../freertos_kernel/stream_buffer.c</FilePath>
-            </File>
-            <File>
-              <FileName>tasks.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../freertos_kernel/tasks.c</FilePath>
-            </File>
-            <File>
-              <FileName>timers.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../freertos_kernel/timers.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>freertos_kernel/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>FreeRTOS.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/FreeRTOS.h</FilePath>
-            </File>
-            <File>
-              <FileName>atomic.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/atomic.h</FilePath>
-            </File>
-            <File>
-              <FileName>deprecated_definitions.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/deprecated_definitions.h</FilePath>
-            </File>
-            <File>
-              <FileName>event_groups.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/event_groups.h</FilePath>
-            </File>
-            <File>
-              <FileName>list.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/list.h</FilePath>
-            </File>
-            <File>
-              <FileName>message_buffer.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/message_buffer.h</FilePath>
-            </File>
-            <File>
-              <FileName>mpu_prototypes.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/mpu_prototypes.h</FilePath>
-            </File>
-            <File>
-              <FileName>mpu_wrappers.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/mpu_wrappers.h</FilePath>
-            </File>
-            <File>
-              <FileName>portable.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/portable.h</FilePath>
-            </File>
-            <File>
-              <FileName>projdefs.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/projdefs.h</FilePath>
-            </File>
-            <File>
-              <FileName>queue.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/queue.h</FilePath>
-            </File>
-            <File>
-              <FileName>semphr.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/semphr.h</FilePath>
-            </File>
-            <File>
-              <FileName>stack_macros.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/stack_macros.h</FilePath>
-            </File>
-            <File>
-              <FileName>stream_buffer.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/stream_buffer.h</FilePath>
-            </File>
-            <File>
-              <FileName>task.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/task.h</FilePath>
-            </File>
-            <File>
-              <FileName>timers.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../freertos_kernel/include/timers.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/sdk/StdDriver/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>clk.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/clk.c</FilePath>
-            </File>
-            <File>
-              <FileName>crypto.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/crypto.c</FilePath>
-            </File>
-            <File>
-              <FileName>fmc.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/fmc.c</FilePath>
-            </File>
-            <File>
-              <FileName>sys.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/sys.c</FilePath>
-            </File>
-            <File>
-              <FileName>uart.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/uart.c</FilePath>
-            </File>
-            <File>
-              <FileName>retarget.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/retarget.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>freertos_kernel/portable/MemMang/</GroupName>
-          <Files>
-            <File>
-              <FileName>heap_4.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../freertos_kernel/portable/MemMang/heap_4.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>freertos_kernel/portable/RVDS/ARM_CM4F/</GroupName>
-          <Files>
-            <File>
-              <FileName>port.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../freertos_kernel/portable/RVDS/ARM_CM4F/port.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/application_code/nuvoton_code/</GroupName>
-          <Files>
-            <File>
-              <FileName>entropy_hardware_poll.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/application_code/nuvoton_code/entropy_hardware_poll.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>tests/common/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_test_framework.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../tests/common/aws_test_framework.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_test_runner.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../tests/common/aws_test_runner.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_test.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../tests/common/aws_test.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_test_freertos.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../tests/common/iot_test_freertos.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_tests_network.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../tests/common/iot_tests_network.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>tests/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_application_version.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../tests/include/aws_application_version.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_clientcredential.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../tests/include/aws_clientcredential.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_clientcredential_keys.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../tests/include/aws_clientcredential_keys.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_test_runner.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../tests/include/aws_test_runner.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_test_framework.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../tests/include/aws_test_framework.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_test_tcp.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../tests/include/aws_test_tcp.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_test_utils.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../tests/include/aws_test_utils.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_unity_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../tests/include/aws_unity_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_config_common.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../tests/include/iot_config_common.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/common/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_init.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/iot_init.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_static_memory_common.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/iot_static_memory_common.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_device_metrics.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/iot_device_metrics.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/common/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_appversion32.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_appversion32.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_init.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_init.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_linear_containers.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_linear_containers.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_logging_task.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_logging_task.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_logging_setup.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_logging_setup.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_taskpool.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_taskpool.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/common/logging/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_logging_task_dynamic_buffers.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/logging/iot_logging_task_dynamic_buffers.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_logging.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/logging/iot_logging.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/common/include/private/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_logging.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/private/iot_logging.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_taskpool_internal.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/private/iot_taskpool_internal.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/common/include/types/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_network_types.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/types/iot_network_types.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_taskpool_types.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/include/types/iot_taskpool_types.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/common/taskpool/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_taskpool.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/taskpool/iot_taskpool.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_taskpool_static_memory.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/taskpool/iot_taskpool_static_memory.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/abstractions/platform/include/platform/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_clock.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/include/platform/iot_clock.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_network.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/include/platform/iot_network.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_threads.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/include/platform/iot_threads.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_metrics.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/include/platform/iot_metrics.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/abstractions/platform/include/types/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_platform_types.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/include/types/iot_platform_types.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/abstractions/platform/freertos/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_clock_freertos.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/freertos/iot_clock_freertos.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_threads_freertos.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/freertos/iot_threads_freertos.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_metrics.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/freertos/iot_metrics.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_network_freertos.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/freertos/iot_network_freertos.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/abstractions/platform/freertos/include/platform/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_platform_types_freertos.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/freertos/include/platform/iot_platform_types_freertos.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_network_freertos.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/freertos/include/platform/iot_network_freertos.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/abstractions/secure_sockets/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_secure_sockets.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/secure_sockets/include/iot_secure_sockets.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_secure_sockets_config_defaults.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/secure_sockets/include/iot_secure_sockets_config_defaults.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_secure_sockets_wrapper_metrics.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/secure_sockets/include/iot_secure_sockets_wrapper_metrics.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/secure_sockets/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_secure_sockets.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/secure_sockets/iot_secure_sockets.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/standard/tls/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_tls.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/tls/src/iot_tls.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/standard/tls/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_tls.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/tls/include/iot_tls.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/standard/crypto/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_crypto.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/crypto/src/iot_crypto.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/standard/crypto/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_crypto.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/crypto/include/iot_crypto.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/standard/pkcs11/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_pkcs11.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/pkcs11/include/iot_pkcs11.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/standard/pkcs11/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_pkcs11.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/pkcs11/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_pkcs11_pal.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/pkcs11/iot_pkcs11_pal.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/abstractions/pkcs11/mbedtls/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_pkcs11_mbedtls.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c</FilePath>
-            </File>
-            <File>
-              <FileName>threading_alt.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/pkcs11/mbedtls/threading_alt.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/standard/utils/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_system_init.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/utils/src/iot_system_init.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_pki_utils.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/utils/src/iot_pki_utils.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/standard/utils/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_system_init.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/utils/include/iot_system_init.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_pki_utils.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/utils/include/iot_pki_utils.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/abstractions/wifi/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_wifi.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/abstractions/wifi/include/iot_wifi.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/wifi/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_wifi.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/wifi/iot_wifi.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/sdk/middleware/wifi_esp8266/</GroupName>
-          <Files>
-            <File>
-              <FileName>esp8266_wifi.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/sdk/middleware/wifi_esp8266/esp8266_wifi.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>demos/dev_mode_key_provisioning/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_dev_mode_key_provisioning.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../demos/dev_mode_key_provisioning/src/aws_dev_mode_key_provisioning.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>demos/dev_mode_key_provisioning/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_dev_mode_key_provisioning.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../demos/dev_mode_key_provisioning/include/aws_dev_mode_key_provisioning.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/aws/defender/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_iot_defender_api.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_api.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_iot_defender_collector.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_collector.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_iot_defender_mqtt.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_mqtt.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_iot_defender_v1.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_v1.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/aws/defender/src/private/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_iot_defender_internal.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/defender/src/private/aws_iot_defender_internal.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/aws/defender/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_iot_defender.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/defender/include/aws_iot_defender.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/mqtt/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_mqtt_api.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_api.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_mqtt_network.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_network.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_mqtt_operation.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_operation.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_mqtt_serialize.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_serialize.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_mqtt_static_memory.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_static_memory.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_mqtt_subscription.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_subscription.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_mqtt_validate.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_validate.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_mqtt_agent.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_agent.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/serializer/src/cbor/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_serializer_tinycbor_decoder.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_decoder.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_serializer_tinycbor_encoder.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_encoder.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/serializer/src/json/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_serializer_json_decoder.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_decoder.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_serializer_json_encoder.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_encoder.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/serializer/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_serializer_static_memory.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/serializer/src/iot_serializer_static_memory.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_json_utils.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/serializer/src/iot_json_utils.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/serializer/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_serializer.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/serializer/include/iot_serializer.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_json_utils.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/serializer/include/iot_json_utils.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/aws/shadow/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_iot_shadow_api.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_api.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_iot_shadow_operation.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_operation.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_iot_shadow_parser.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_parser.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_iot_shadow_static_memory.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_static_memory.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_iot_shadow_subscription.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_subscription.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_shadow.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_shadow.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_shadow_config_defaults.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_shadow_config_defaults.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/aws/shadow/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_iot_shadow.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/include/aws_iot_shadow.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_shadow.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/include/aws_shadow.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/aws/greengrass/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_greengrass_discovery.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_helper_secure_connect.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_helper_secure_connect.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/aws/greengrass/include/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_ggd_config_defaults.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/aws/greengrass/include/aws_ggd_config_defaults.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_greengrass_discovery.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/aws/greengrass/include/aws_greengrass_discovery.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/aws/defender/test/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_iot_tests_defender_api.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/defender/test/aws_iot_tests_defender_api.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/aws/shadow/test/unit/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_iot_tests_shadow_api.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_api.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_iot_tests_shadow_parser.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_parser.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/aws/shadow/test/system/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_iot_tests_shadow_system.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/test/system/aws_iot_tests_shadow_system.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/aws/shadow/test/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_test_shadow.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/aws/shadow/test/aws_test_shadow.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/common/test/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_memory_leak.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/test/iot_memory_leak.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_tests_taskpool.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/common/test/iot_tests_taskpool.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/mqtt/test/unit/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_tests_mqtt_api.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_api.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_tests_mqtt_receive.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_receive.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_tests_mqtt_subscription.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_subscription.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_tests_mqtt_validate.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_validate.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_tests_mqtt_metrics.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_metrics.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/mqtt/test/system/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_tests_mqtt_system.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/test/system/iot_tests_mqtt_system.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/mqtt/test/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_test_mqtt_agent.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/mqtt/test/iot_test_mqtt_agent.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/c_sdk/standard/serializer/test/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_tests_serializer_cbor.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/serializer/test/iot_tests_serializer_cbor.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_tests_serializer_json.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/serializer/test/iot_tests_serializer_json.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_tests_deserializer_json.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/c_sdk/standard/serializer/test/iot_tests_deserializer_json.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/aws/greengrass/test/</GroupName>
-          <Files>
-            <File>
-              <FileName>aws_test_greengrass_discovery.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/aws/greengrass/test/aws_test_greengrass_discovery.c</FilePath>
-            </File>
-            <File>
-              <FileName>aws_test_helper_secure_connect.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/aws/greengrass/test/aws_test_helper_secure_connect.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/standard/crypto/test/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_test_crypto.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/crypto/test/iot_test_crypto.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/freertos_plus/standard/tls/test/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_test_tls.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/freertos_plus/standard/tls/test/iot_test_tls.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/abstractions/pkcs11/test/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_test_pkcs11.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/abstractions/pkcs11/test/iot_test_pkcs11.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/abstractions/platform/test/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_test_platform_clock.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/test/iot_test_platform_clock.c</FilePath>
-            </File>
-            <File>
-              <FileName>iot_test_platform_threads.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/abstractions/platform/test/iot_test_platform_threads.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/abstractions/secure_sockets/test/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_test_tcp.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/abstractions/secure_sockets/test/iot_test_tcp.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/abstractions/wifi/test/</GroupName>
-          <Files>
-            <File>
-              <FileName>iot_test_wifi.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/abstractions/wifi/test/iot_test_wifi.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/</GroupName>
-          <Files>
-            <File>
-              <FileName>FreeRTOSConfig.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/FreeRTOSConfig.h</FilePath>
-            </File>
-            <File>
-              <FileName>FreeRTOSIPConfig.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/FreeRTOSIPConfig.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_bufferpool_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_bufferpool_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_ggd_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_ggd_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_mqtt_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_mqtt_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_secure_sockets_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_secure_sockets_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_shadow_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_shadow_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_test_pkcs11_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_test_pkcs11_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_test_runner_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_test_runner_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_test_tcp_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_test_tcp_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_test_wifi_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_test_wifi_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>aws_wifi_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_wifi_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/iot_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_mqtt_agent_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/iot_mqtt_agent_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_pkcs11_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/iot_pkcs11_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>iot_test_pkcs11_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/iot_test_pkcs11_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>unity_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/unity_config.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/application_code/</GroupName>
-          <Files>
-            <File>
-              <FileName>main.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/application_code/main.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Source/ARM/</GroupName>
-          <Files>
-            <File>
-              <FileName>startup_M480.s</FileName>
-              <FileType>2</FileType>
-              <FilePath>../../../../../vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Source/ARM/startup_M480.s</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Source/</GroupName>
-          <Files>
-            <File>
-              <FileName>system_M480.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Source/system_M480.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/3rdparty/mbedtls/library/</GroupName>
-          <Files>
-            <File>
-              <FileName>aes.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/aes.c</FilePath>
-            </File>
-            <File>
-              <FileName>aesni.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/aesni.c</FilePath>
-            </File>
-            <File>
-              <FileName>arc4.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/arc4.c</FilePath>
-            </File>
-            <File>
-              <FileName>asn1parse.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/asn1parse.c</FilePath>
-            </File>
-            <File>
-              <FileName>asn1write.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/asn1write.c</FilePath>
-            </File>
-            <File>
-              <FileName>base64.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/base64.c</FilePath>
-            </File>
-            <File>
-              <FileName>bignum.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/bignum.c</FilePath>
-            </File>
-            <File>
-              <FileName>blowfish.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/blowfish.c</FilePath>
-            </File>
-            <File>
-              <FileName>camellia.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/camellia.c</FilePath>
-            </File>
-            <File>
-              <FileName>ccm.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ccm.c</FilePath>
-            </File>
-            <File>
-              <FileName>certs.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/certs.c</FilePath>
-            </File>
-            <File>
-              <FileName>cipher.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/cipher.c</FilePath>
-            </File>
-            <File>
-              <FileName>cipher_wrap.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/cipher_wrap.c</FilePath>
-            </File>
-            <File>
-              <FileName>cmac.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/cmac.c</FilePath>
-            </File>
-            <File>
-              <FileName>ctr_drbg.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ctr_drbg.c</FilePath>
-            </File>
-            <File>
-              <FileName>debug.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/debug.c</FilePath>
-            </File>
-            <File>
-              <FileName>des.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/des.c</FilePath>
-            </File>
-            <File>
-              <FileName>dhm.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/dhm.c</FilePath>
-            </File>
-            <File>
-              <FileName>ecdh.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecdh.c</FilePath>
-            </File>
-            <File>
-              <FileName>ecdsa.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecdsa.c</FilePath>
-            </File>
-            <File>
-              <FileName>ecjpake.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecjpake.c</FilePath>
-            </File>
-            <File>
-              <FileName>ecp.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecp.c</FilePath>
-            </File>
-            <File>
-              <FileName>ecp_curves.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecp_curves.c</FilePath>
-            </File>
-            <File>
-              <FileName>entropy.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/entropy.c</FilePath>
-            </File>
-            <File>
-              <FileName>entropy_poll.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/entropy_poll.c</FilePath>
-            </File>
-            <File>
-              <FileName>error.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/error.c</FilePath>
-            </File>
-            <File>
-              <FileName>gcm.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/gcm.c</FilePath>
-            </File>
-            <File>
-              <FileName>havege.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/havege.c</FilePath>
-            </File>
-            <File>
-              <FileName>hmac_drbg.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/hmac_drbg.c</FilePath>
-            </File>
-            <File>
-              <FileName>md.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/md.c</FilePath>
-            </File>
-            <File>
-              <FileName>md2.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/md2.c</FilePath>
-            </File>
-            <File>
-              <FileName>md4.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/md4.c</FilePath>
-            </File>
-            <File>
-              <FileName>md5.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/md5.c</FilePath>
-            </File>
-            <File>
-              <FileName>md_wrap.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/md_wrap.c</FilePath>
-            </File>
-            <File>
-              <FileName>memory_buffer_alloc.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/memory_buffer_alloc.c</FilePath>
-            </File>
-            <File>
-              <FileName>net_sockets.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/net_sockets.c</FilePath>
-            </File>
-            <File>
-              <FileName>oid.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/oid.c</FilePath>
-            </File>
-            <File>
-              <FileName>padlock.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/padlock.c</FilePath>
-            </File>
-            <File>
-              <FileName>pem.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/pem.c</FilePath>
-            </File>
-            <File>
-              <FileName>pk.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/pk.c</FilePath>
-            </File>
-            <File>
-              <FileName>pk_wrap.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/pk_wrap.c</FilePath>
-            </File>
-            <File>
-              <FileName>pkcs12.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/pkcs12.c</FilePath>
-            </File>
-            <File>
-              <FileName>pkcs5.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/pkcs5.c</FilePath>
-            </File>
-            <File>
-              <FileName>pkparse.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/pkparse.c</FilePath>
-            </File>
-            <File>
-              <FileName>pkwrite.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/pkwrite.c</FilePath>
-            </File>
-            <File>
-              <FileName>platform.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/platform.c</FilePath>
-            </File>
-            <File>
-              <FileName>platform_util.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/platform_util.c</FilePath>
-            </File>
-            <File>
-              <FileName>ripemd160.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ripemd160.c</FilePath>
-            </File>
-            <File>
-              <FileName>rsa.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/rsa.c</FilePath>
-            </File>
-            <File>
-              <FileName>rsa_internal.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/rsa_internal.c</FilePath>
-            </File>
-            <File>
-              <FileName>sha1.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/sha1.c</FilePath>
-            </File>
-            <File>
-              <FileName>sha256.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/sha256.c</FilePath>
-            </File>
-            <File>
-              <FileName>sha512.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/sha512.c</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_cache.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_cache.c</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_ciphersuites.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_ciphersuites.c</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_cli.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_cli.c</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_cookie.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_cookie.c</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_srv.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_srv.c</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_ticket.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_ticket.c</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_tls.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_tls.c</FilePath>
-            </File>
-            <File>
-              <FileName>threading.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/threading.c</FilePath>
-            </File>
-            <File>
-              <FileName>timing.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/timing.c</FilePath>
-            </File>
-            <File>
-              <FileName>version.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/version.c</FilePath>
-            </File>
-            <File>
-              <FileName>version_features.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/version_features.c</FilePath>
-            </File>
-            <File>
-              <FileName>x509.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509.c</FilePath>
-            </File>
-            <File>
-              <FileName>x509_create.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509_create.c</FilePath>
-            </File>
-            <File>
-              <FileName>x509_crl.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509_crl.c</FilePath>
-            </File>
-            <File>
-              <FileName>x509_crt.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509_crt.c</FilePath>
-            </File>
-            <File>
-              <FileName>x509_csr.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509_csr.c</FilePath>
-            </File>
-            <File>
-              <FileName>x509write_crt.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509write_crt.c</FilePath>
-            </File>
-            <File>
-              <FileName>x509write_csr.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509write_csr.c</FilePath>
-            </File>
-            <File>
-              <FileName>xtea.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/library/xtea.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/3rdparty/mbedtls/utils/</GroupName>
-          <Files>
-            <File>
-              <FileName>mbedtls_utils.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/utils/mbedtls_utils.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/3rdparty/mbedtls/include/mbedtls/</GroupName>
-          <Files>
-            <File>
-              <FileName>aes.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/aes.h</FilePath>
-            </File>
-            <File>
-              <FileName>aesni.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/aesni.h</FilePath>
-            </File>
-            <File>
-              <FileName>arc4.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/arc4.h</FilePath>
-            </File>
-            <File>
-              <FileName>asn1.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/asn1.h</FilePath>
-            </File>
-            <File>
-              <FileName>asn1write.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/asn1write.h</FilePath>
-            </File>
-            <File>
-              <FileName>base64.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/base64.h</FilePath>
-            </File>
-            <File>
-              <FileName>bignum.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/bignum.h</FilePath>
-            </File>
-            <File>
-              <FileName>blowfish.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/blowfish.h</FilePath>
-            </File>
-            <File>
-              <FileName>bn_mul.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/bn_mul.h</FilePath>
-            </File>
-            <File>
-              <FileName>camellia.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/camellia.h</FilePath>
-            </File>
-            <File>
-              <FileName>ccm.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ccm.h</FilePath>
-            </File>
-            <File>
-              <FileName>certs.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/certs.h</FilePath>
-            </File>
-            <File>
-              <FileName>check_config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/check_config.h</FilePath>
-            </File>
-            <File>
-              <FileName>cipher.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/cipher.h</FilePath>
-            </File>
-            <File>
-              <FileName>cipher_internal.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/cipher_internal.h</FilePath>
-            </File>
-            <File>
-              <FileName>cmac.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/cmac.h</FilePath>
-            </File>
-            <File>
-              <FileName>compat-1.3.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/compat-1.3.h</FilePath>
-            </File>
-            <File>
-              <FileName>config.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/config.h</FilePath>
-            </File>
-            <File>
-              <FileName>ctr_drbg.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ctr_drbg.h</FilePath>
-            </File>
-            <File>
-              <FileName>debug.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/debug.h</FilePath>
-            </File>
-            <File>
-              <FileName>des.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/des.h</FilePath>
-            </File>
-            <File>
-              <FileName>dhm.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/dhm.h</FilePath>
-            </File>
-            <File>
-              <FileName>ecdh.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecdh.h</FilePath>
-            </File>
-            <File>
-              <FileName>ecdsa.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecdsa.h</FilePath>
-            </File>
-            <File>
-              <FileName>ecjpake.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecjpake.h</FilePath>
-            </File>
-            <File>
-              <FileName>ecp.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecp.h</FilePath>
-            </File>
-            <File>
-              <FileName>ecp_internal.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecp_internal.h</FilePath>
-            </File>
-            <File>
-              <FileName>entropy.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/entropy.h</FilePath>
-            </File>
-            <File>
-              <FileName>entropy_poll.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/entropy_poll.h</FilePath>
-            </File>
-            <File>
-              <FileName>error.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/error.h</FilePath>
-            </File>
-            <File>
-              <FileName>gcm.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/gcm.h</FilePath>
-            </File>
-            <File>
-              <FileName>havege.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/havege.h</FilePath>
-            </File>
-            <File>
-              <FileName>hmac_drbg.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/hmac_drbg.h</FilePath>
-            </File>
-            <File>
-              <FileName>md.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md.h</FilePath>
-            </File>
-            <File>
-              <FileName>md2.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md2.h</FilePath>
-            </File>
-            <File>
-              <FileName>md4.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md4.h</FilePath>
-            </File>
-            <File>
-              <FileName>md5.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md5.h</FilePath>
-            </File>
-            <File>
-              <FileName>md_internal.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md_internal.h</FilePath>
-            </File>
-            <File>
-              <FileName>memory_buffer_alloc.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/memory_buffer_alloc.h</FilePath>
-            </File>
-            <File>
-              <FileName>net.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/net.h</FilePath>
-            </File>
-            <File>
-              <FileName>net_sockets.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/net_sockets.h</FilePath>
-            </File>
-            <File>
-              <FileName>oid.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/oid.h</FilePath>
-            </File>
-            <File>
-              <FileName>padlock.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/padlock.h</FilePath>
-            </File>
-            <File>
-              <FileName>pem.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pem.h</FilePath>
-            </File>
-            <File>
-              <FileName>pk.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pk.h</FilePath>
-            </File>
-            <File>
-              <FileName>pk_internal.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pk_internal.h</FilePath>
-            </File>
-            <File>
-              <FileName>pkcs12.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pkcs12.h</FilePath>
-            </File>
-            <File>
-              <FileName>pkcs5.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pkcs5.h</FilePath>
-            </File>
-            <File>
-              <FileName>platform.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/platform.h</FilePath>
-            </File>
-            <File>
-              <FileName>platform_time.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/platform_time.h</FilePath>
-            </File>
-            <File>
-              <FileName>platform_util.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/platform_util.h</FilePath>
-            </File>
-            <File>
-              <FileName>ripemd160.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ripemd160.h</FilePath>
-            </File>
-            <File>
-              <FileName>rsa.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/rsa.h</FilePath>
-            </File>
-            <File>
-              <FileName>rsa_internal.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/rsa_internal.h</FilePath>
-            </File>
-            <File>
-              <FileName>sha1.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/sha1.h</FilePath>
-            </File>
-            <File>
-              <FileName>sha256.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/sha256.h</FilePath>
-            </File>
-            <File>
-              <FileName>sha512.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/sha512.h</FilePath>
-            </File>
-            <File>
-              <FileName>ssl.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl.h</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_cache.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_cache.h</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_ciphersuites.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_ciphersuites.h</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_cookie.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_cookie.h</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_internal.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_internal.h</FilePath>
-            </File>
-            <File>
-              <FileName>ssl_ticket.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_ticket.h</FilePath>
-            </File>
-            <File>
-              <FileName>threading.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/threading.h</FilePath>
-            </File>
-            <File>
-              <FileName>timing.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/timing.h</FilePath>
-            </File>
-            <File>
-              <FileName>version.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/version.h</FilePath>
-            </File>
-            <File>
-              <FileName>x509.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509.h</FilePath>
-            </File>
-            <File>
-              <FileName>x509_crl.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509_crl.h</FilePath>
-            </File>
-            <File>
-              <FileName>x509_crt.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509_crt.h</FilePath>
-            </File>
-            <File>
-              <FileName>x509_csr.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509_csr.h</FilePath>
-            </File>
-            <File>
-              <FileName>xtea.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/xtea.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/3rdparty/pkcs11/</GroupName>
-          <Files>
-            <File>
-              <FileName>pkcs11.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/pkcs11/pkcs11.h</FilePath>
-            </File>
-            <File>
-              <FileName>pkcs11f.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/pkcs11/pkcs11f.h</FilePath>
-            </File>
-            <File>
-              <FileName>pkcs11t.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/pkcs11/pkcs11t.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/3rdparty/unity/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>unity.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/unity/src/unity.c</FilePath>
-            </File>
-            <File>
-              <FileName>unity.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/unity/src/unity.h</FilePath>
-            </File>
-            <File>
-              <FileName>unity_internals.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/unity/src/unity_internals.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/3rdparty/unity/extras/fixture/src/</GroupName>
-          <Files>
-            <File>
-              <FileName>unity_fixture.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/unity/extras/fixture/src/unity_fixture.c</FilePath>
-            </File>
-            <File>
-              <FileName>unity_fixture.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/unity/extras/fixture/src/unity_fixture.h</FilePath>
-            </File>
-            <File>
-              <FileName>unity_fixture_internals.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/unity/extras/fixture/src/unity_fixture_internals.h</FilePath>
-            </File>
-            <File>
-              <FileName>unity_fixture_malloc_overrides.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/unity/extras/fixture/src/unity_fixture_malloc_overrides.h</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/3rdparty/tinycbor/</GroupName>
-          <Files>
-            <File>
-              <FileName>cborpretty.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/tinycbor/cborpretty.c</FilePath>
-            </File>
-            <File>
-              <FileName>cborencoder.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/tinycbor/cborencoder.c</FilePath>
-            </File>
-            <File>
-              <FileName>cborencoder_close_container_checked.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/tinycbor/cborencoder_close_container_checked.c</FilePath>
-            </File>
-            <File>
-              <FileName>cborerrorstrings.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/tinycbor/cborerrorstrings.c</FilePath>
-            </File>
-            <File>
-              <FileName>cborparser.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/tinycbor/cborparser.c</FilePath>
-            </File>
-            <File>
-              <FileName>cborparser_dup_string.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/tinycbor/cborparser_dup_string.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-        <Group>
-          <GroupName>libraries/3rdparty/jsmn/</GroupName>
-          <Files>
-            <File>
-              <FileName>jsmn.h</FileName>
-              <FileType>5</FileType>
-              <FilePath>../../../../../libraries/3rdparty/jsmn/jsmn.h</FilePath>
-            </File>
-            <File>
-              <FileName>jsmn.c</FileName>
-              <FileType>1</FileType>
-              <FilePath>../../../../../libraries/3rdparty/jsmn/jsmn.c</FilePath>
-            </File>
-          </Files>
-        </Group>
-      </Groups>
-    </Target>
-  </Targets>
-
+	<SchemaVersion>1.1</SchemaVersion>
+	<Header>### uVision Project, (C) Keil Software</Header>
+	<Targets>
+		<Target>
+			<TargetName>aws_tests</TargetName>
+			<ToolsetNumber>0x4</ToolsetNumber>
+			<ToolsetName>ARM-ADS</ToolsetName>
+			<pCCUsed>5060750::V5.06 update 6 (build 750)::ARMCC</pCCUsed>
+			<uAC6>0</uAC6>
+			<TargetOption>
+				<TargetCommonOption>
+					<Device>M487JIDAE</Device>
+					<Vendor>Nuvoton</Vendor>
+					<Cpu>IRAM(0x20000000-0x2000FFFF) IROM(0-0x7FFFF) CLOCK(50000000) CPUTYPE(&quot;Cortex-M4&quot;) FPU2</Cpu>
+					<FlashUtilSpec/>
+					<StartupFile>undefined</StartupFile>
+					<FlashDriverDll/>
+					<DeviceId>0</DeviceId>
+					<RegisterFile/>
+					<MemoryEnv/>
+					<Cmp/>
+					<Asm/>
+					<Linker/>
+					<OHString/>
+					<InfinionOptionDll/>
+					<SLE66CMisc/>
+					<SLE66AMisc/>
+					<SLE66LinkerMisc/>
+					<SFDFile>SFD\Nuvoton\M481_v1.SFR</SFDFile>
+					<bCustSvd>0</bCustSvd>
+					<UseEnv>0</UseEnv>
+					<BinPath/>
+					<IncludePath/>
+					<LibPath/>
+					<RegisterFilePath/>
+					<DBRegisterFilePath/>
+					<TargetStatus>
+						<Error>0</Error>
+						<ExitCodeStop>0</ExitCodeStop>
+						<ButtonStop>0</ButtonStop>
+						<NotGenerated>0</NotGenerated>
+						<InvalidFlash>1</InvalidFlash>
+					</TargetStatus>
+					<OutputDirectory>.\obj\</OutputDirectory>
+					<OutputName>aws_tests</OutputName>
+					<CreateExecutable>1</CreateExecutable>
+					<CreateLib>0</CreateLib>
+					<CreateHexFile>1</CreateHexFile>
+					<DebugInformation>1</DebugInformation>
+					<BrowseInformation>1</BrowseInformation>
+					<ListingPath>.\lst\</ListingPath>
+					<HexFormatSelection>1</HexFormatSelection>
+					<Merge32K>0</Merge32K>
+					<CreateBatchFile>0</CreateBatchFile>
+					<BeforeCompile>
+						<RunUserProg1>0</RunUserProg1>
+						<RunUserProg2>0</RunUserProg2>
+						<UserProg1Name/>
+						<UserProg2Name/>
+						<UserProg1Dos16Mode>0</UserProg1Dos16Mode>
+						<UserProg2Dos16Mode>0</UserProg2Dos16Mode>
+						<nStopU1X>0</nStopU1X>
+						<nStopU2X>0</nStopU2X>
+					</BeforeCompile>
+					<BeforeMake>
+						<RunUserProg1>0</RunUserProg1>
+						<RunUserProg2>0</RunUserProg2>
+						<UserProg1Name/>
+						<UserProg2Name/>
+						<UserProg1Dos16Mode>0</UserProg1Dos16Mode>
+						<UserProg2Dos16Mode>0</UserProg2Dos16Mode>
+						<nStopB1X>0</nStopB1X>
+						<nStopB2X>0</nStopB2X>
+					</BeforeMake>
+					<AfterMake>
+						<RunUserProg1>1</RunUserProg1>
+						<RunUserProg2>1</RunUserProg2>
+						<UserProg1Name>fromelf --bin &quot;.\obj\@L.axf&quot; --output &quot;.\obj\@L.bin&quot;</UserProg1Name>
+						<UserProg2Name>fromelf --text -c &quot;.\obj\@L.axf&quot; --output &quot;.\obj\@L.txt&quot;</UserProg2Name>
+						<UserProg1Dos16Mode>0</UserProg1Dos16Mode>
+						<UserProg2Dos16Mode>0</UserProg2Dos16Mode>
+						<nStopA1X>0</nStopA1X>
+						<nStopA2X>0</nStopA2X>
+					</AfterMake>
+					<SelectedForBatchBuild>0</SelectedForBatchBuild>
+					<SVCSIdString/>
+				</TargetCommonOption>
+				<CommonProperty>
+					<UseCPPCompiler>0</UseCPPCompiler>
+					<RVCTCodeConst>0</RVCTCodeConst>
+					<RVCTZI>0</RVCTZI>
+					<RVCTOtherData>0</RVCTOtherData>
+					<ModuleSelection>0</ModuleSelection>
+					<IncludeInBuild>1</IncludeInBuild>
+					<AlwaysBuild>0</AlwaysBuild>
+					<GenerateAssemblyFile>0</GenerateAssemblyFile>
+					<AssembleAssemblyFile>0</AssembleAssemblyFile>
+					<PublicsOnly>0</PublicsOnly>
+					<StopOnExitCode>3</StopOnExitCode>
+					<CustomArgument/>
+					<IncludeLibraryModules/>
+					<ComprImg>1</ComprImg>
+				</CommonProperty>
+				<DllOption>
+					<SimDllName>SARMCM3.DLL</SimDllName>
+					<SimDllArguments/>
+					<SimDlgDll>DARMCM1.DLL</SimDlgDll>
+					<SimDlgDllArguments/>
+					<TargetDllName>SARMCM3.DLL</TargetDllName>
+					<TargetDllArguments/>
+					<TargetDlgDll>TARMCM1.DLL</TargetDlgDll>
+					<TargetDlgDllArguments/>
+				</DllOption>
+				<DebugOption>
+					<OPTHX>
+						<HexSelection>1</HexSelection>
+						<HexRangeLowAddress>0</HexRangeLowAddress>
+						<HexRangeHighAddress>0</HexRangeHighAddress>
+						<HexOffset>0</HexOffset>
+						<Oh166RecLen>16</Oh166RecLen>
+					</OPTHX>
+					<Simulator>
+						<UseSimulator>0</UseSimulator>
+						<LoadApplicationAtStartup>1</LoadApplicationAtStartup>
+						<RunToMain>0</RunToMain>
+						<RestoreBreakpoints>1</RestoreBreakpoints>
+						<RestoreWatchpoints>1</RestoreWatchpoints>
+						<RestoreMemoryDisplay>1</RestoreMemoryDisplay>
+						<RestoreFunctions>1</RestoreFunctions>
+						<RestoreToolbox>1</RestoreToolbox>
+						<LimitSpeedToRealTime>0</LimitSpeedToRealTime>
+						<RestoreSysVw>1</RestoreSysVw>
+					</Simulator>
+					<Target>
+						<UseTarget>1</UseTarget>
+						<LoadApplicationAtStartup>1</LoadApplicationAtStartup>
+						<RunToMain>1</RunToMain>
+						<RestoreBreakpoints>1</RestoreBreakpoints>
+						<RestoreWatchpoints>0</RestoreWatchpoints>
+						<RestoreMemoryDisplay>1</RestoreMemoryDisplay>
+						<RestoreFunctions>0</RestoreFunctions>
+						<RestoreToolbox>1</RestoreToolbox>
+						<RestoreTracepoints>0</RestoreTracepoints>
+						<RestoreSysVw>1</RestoreSysVw>
+					</Target>
+					<RunDebugAfterBuild>0</RunDebugAfterBuild>
+					<TargetSelection>-1</TargetSelection>
+					<SimDlls>
+						<CpuDll/>
+						<CpuDllArguments/>
+						<PeripheralDll/>
+						<PeripheralDllArguments/>
+						<InitializationFile/>
+					</SimDlls>
+					<TargetDlls>
+						<CpuDll/>
+						<CpuDllArguments/>
+						<PeripheralDll/>
+						<PeripheralDllArguments/>
+						<InitializationFile/>
+						<Driver/>
+					</TargetDlls>
+				</DebugOption>
+				<Utilities>
+					<Flash1>
+						<UseTargetDll>1</UseTargetDll>
+						<UseExternalTool>0</UseExternalTool>
+						<RunIndependent>0</RunIndependent>
+						<UpdateFlashBeforeDebugging>1</UpdateFlashBeforeDebugging>
+						<Capability>1</Capability>
+						<DriverSelection>4107</DriverSelection>
+					</Flash1>
+					<bUseTDR>0</bUseTDR>
+					<Flash2>Bin\Nu_Link.dll</Flash2>
+					<Flash3>&quot;&quot; ()</Flash3>
+					<Flash4/>
+					<pFcarmOut/>
+					<pFcarmGrp/>
+					<pFcArmRoot/>
+					<FcArmLst>0</FcArmLst>
+				</Utilities>
+				<TargetArmAds>
+					<ArmAdsMisc>
+						<GenerateListings>0</GenerateListings>
+						<asHll>1</asHll>
+						<asAsm>1</asAsm>
+						<asMacX>1</asMacX>
+						<asSyms>1</asSyms>
+						<asFals>1</asFals>
+						<asDbgD>1</asDbgD>
+						<asForm>1</asForm>
+						<ldLst>0</ldLst>
+						<ldmm>1</ldmm>
+						<ldXref>1</ldXref>
+						<BigEnd>0</BigEnd>
+						<AdsALst>1</AdsALst>
+						<AdsACrf>1</AdsACrf>
+						<AdsANop>0</AdsANop>
+						<AdsANot>0</AdsANot>
+						<AdsLLst>1</AdsLLst>
+						<AdsLmap>1</AdsLmap>
+						<AdsLcgr>1</AdsLcgr>
+						<AdsLsym>1</AdsLsym>
+						<AdsLszi>1</AdsLszi>
+						<AdsLtoi>1</AdsLtoi>
+						<AdsLsun>1</AdsLsun>
+						<AdsLven>1</AdsLven>
+						<AdsLsxf>1</AdsLsxf>
+						<RvctClst>0</RvctClst>
+						<GenPPlst>0</GenPPlst>
+						<AdsCpuType>&quot;Cortex-M4&quot;</AdsCpuType>
+						<RvctDeviceName/>
+						<mOS>0</mOS>
+						<uocRom>0</uocRom>
+						<uocRam>0</uocRam>
+						<hadIROM>1</hadIROM>
+						<hadIRAM>1</hadIRAM>
+						<hadXRAM>0</hadXRAM>
+						<uocXRam>0</uocXRam>
+						<RvdsVP>2</RvdsVP>
+						<RvdsMve>0</RvdsMve>
+						<hadIRAM2>0</hadIRAM2>
+						<hadIROM2>0</hadIROM2>
+						<StupSel>8</StupSel>
+						<useUlib>1</useUlib>
+						<EndSel>0</EndSel>
+						<uLtcg>0</uLtcg>
+						<nSecure>0</nSecure>
+						<RoSelD>3</RoSelD>
+						<RwSelD>3</RwSelD>
+						<CodeSel>0</CodeSel>
+						<OptFeed>0</OptFeed>
+						<NoZi1>0</NoZi1>
+						<NoZi2>0</NoZi2>
+						<NoZi3>0</NoZi3>
+						<NoZi4>0</NoZi4>
+						<NoZi5>0</NoZi5>
+						<Ro1Chk>0</Ro1Chk>
+						<Ro2Chk>0</Ro2Chk>
+						<Ro3Chk>0</Ro3Chk>
+						<Ir1Chk>1</Ir1Chk>
+						<Ir2Chk>0</Ir2Chk>
+						<Ra1Chk>0</Ra1Chk>
+						<Ra2Chk>0</Ra2Chk>
+						<Ra3Chk>0</Ra3Chk>
+						<Im1Chk>1</Im1Chk>
+						<Im2Chk>0</Im2Chk>
+						<OnChipMemories>
+							<Ocm1>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</Ocm1>
+							<Ocm2>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</Ocm2>
+							<Ocm3>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</Ocm3>
+							<Ocm4>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</Ocm4>
+							<Ocm5>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</Ocm5>
+							<Ocm6>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</Ocm6>
+							<IRAM>
+								<Type>0</Type>
+								<StartAddress>0x20000000</StartAddress>
+								<Size>0x10000</Size>
+							</IRAM>
+							<IROM>
+								<Type>1</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x80000</Size>
+							</IROM>
+							<XRAM>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</XRAM>
+							<OCR_RVCT1>
+								<Type>1</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</OCR_RVCT1>
+							<OCR_RVCT2>
+								<Type>1</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</OCR_RVCT2>
+							<OCR_RVCT3>
+								<Type>1</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</OCR_RVCT3>
+							<OCR_RVCT4>
+								<Type>1</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x80000</Size>
+							</OCR_RVCT4>
+							<OCR_RVCT5>
+								<Type>1</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</OCR_RVCT5>
+							<OCR_RVCT6>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</OCR_RVCT6>
+							<OCR_RVCT7>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</OCR_RVCT7>
+							<OCR_RVCT8>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</OCR_RVCT8>
+							<OCR_RVCT9>
+								<Type>0</Type>
+								<StartAddress>0x20000000</StartAddress>
+								<Size>0x28000</Size>
+							</OCR_RVCT9>
+							<OCR_RVCT10>
+								<Type>0</Type>
+								<StartAddress>0x0</StartAddress>
+								<Size>0x0</Size>
+							</OCR_RVCT10>
+						</OnChipMemories>
+						<RvctStartVector/>
+					</ArmAdsMisc>
+					<Cads>
+						<interw>1</interw>
+						<Optim>1</Optim>
+						<oTime>0</oTime>
+						<SplitLS>0</SplitLS>
+						<OneElfS>0</OneElfS>
+						<Strict>0</Strict>
+						<EnumInt>0</EnumInt>
+						<PlainCh>0</PlainCh>
+						<Ropi>0</Ropi>
+						<Rwpi>0</Rwpi>
+						<wLevel>0</wLevel>
+						<uThumb>0</uThumb>
+						<uSurpInc>0</uSurpInc>
+						<uC99>1</uC99>
+						<uGnu>0</uGnu>
+						<useXO>0</useXO>
+						<v6Lang>1</v6Lang>
+						<v6LangP>1</v6LangP>
+						<vShortEn>1</vShortEn>
+						<vShortWch>1</vShortWch>
+						<v6Lto>0</v6Lto>
+						<v6WtE>0</v6WtE>
+						<v6Rtti>0</v6Rtti>
+						<VariousControls>
+							<MiscControls>--diag_suppress=550,177,C4017,111,2770,223</MiscControls>
+							<Define>MBEDTLS_USER_CONFIG_FILE=\&quot;mbedtls_user_config.h\&quot; UNITY_INCLUDE_CONFIG_H RVDS_ARMCM4_NUC4xx __LITTLE_ENDIAN__ AMAZON_FREERTOS_ENABLE_UNIT_TESTS M487 __little_endian__=1 NDEBUG</Define>
+							<Undefine/>
+							<IncludePath>../../../../../freertos_kernel/include;../../../../../freertos_kernel/portable/RVDS/ARM_CM4F;../../../../../vendors/nuvoton/sdk/CMSIS/Include;../../../../../vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Include;../../../../../vendors/nuvoton/sdk/middleware/wifi_esp8266;../../../../../vendors/nuvoton/sdk/StdDriver/inc;../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files;../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/application_code/nuvoton_code;../../../../../tests/include;../../../../../libraries/c_sdk/standard/common/include/private;../../../../../libraries/c_sdk/standard/common/include;../../../../../libraries/abstractions/platform/include;../../../../../libraries/abstractions/platform/freertos/include;../../../../../libraries/abstractions/secure_sockets/include;../../../../../libraries/freertos_plus/standard/tls/include;../../../../../libraries/freertos_plus/standard/crypto/include;../../../../../libraries/freertos_plus/standard/pkcs11/include;../../../../../libraries/freertos_plus/aws/ota/test;../../../../../libraries/abstractions/pkcs11/include;../../../../../libraries/freertos_plus/standard/utils/include;../../../../../libraries/abstractions/wifi/include;../../../../../demos/dev_mode_key_provisioning/include;../../../../../libraries/c_sdk/aws/defender/include;../../../../../libraries/c_sdk/standard/mqtt/test/access;../../../../../libraries/c_sdk/standard/mqtt/include;../../../../../libraries/c_sdk/standard/mqtt/src;../../../../../libraries/c_sdk/standard/serializer/include;../../../../../libraries/c_sdk/aws/shadow/include;../../../../../libraries/c_sdk/aws/shadow/src;../../../../../libraries/c_sdk/standard/https/test/access;../../../../../libraries/c_sdk/standard/https/include;../../../../../libraries/c_sdk/standard/https/src;../../../../../libraries/freertos_plus/aws/greengrass/test;../../../../../libraries/freertos_plus/aws/greengrass/include;../../../../../libraries/freertos_plus/aws/greengrass/src;../../../../../libraries/c_sdk/aws/defender/src/private;../../../../../libraries/3rdparty/mbedtls/include;../../../../../libraries/3rdparty/mbedtls/include/mbedtls;../../../../../libraries/abstractions/pkcs11/mbedtls;../../../../../libraries/3rdparty/pkcs11;../../../../../libraries/3rdparty/unity/src;../../../../../libraries/3rdparty/unity/extras/fixture/src;../../../../../libraries/3rdparty/tinycbor;../../../../../libraries/3rdparty/http-parser;../../../../../libraries/3rdparty/jsmn;</IncludePath>
+						</VariousControls>
+					</Cads>
+					<Aads>
+						<interw>1</interw>
+						<Ropi>0</Ropi>
+						<Rwpi>0</Rwpi>
+						<thumb>1</thumb>
+						<SplitLS>0</SplitLS>
+						<SwStkChk>0</SwStkChk>
+						<NoWarn>0</NoWarn>
+						<uSurpInc>0</uSurpInc>
+						<useXO>0</useXO>
+						<uClangAs>0</uClangAs>
+						<VariousControls>
+							<MiscControls/>
+							<Define/>
+							<Undefine/>
+							<IncludePath/>
+						</VariousControls>
+					</Aads>
+					<LDads>
+						<umfTarg>1</umfTarg>
+						<Ropi>0</Ropi>
+						<Rwpi>0</Rwpi>
+						<noStLib>0</noStLib>
+						<RepFail>1</RepFail>
+						<useFile>0</useFile>
+						<TextAddressRange>0x08000000</TextAddressRange>
+						<DataAddressRange>0x20000000</DataAddressRange>
+						<pXoBase/>
+						<ScatterFile/>
+						<IncludeLibs/>
+						<IncludeLibsPath/>
+						<Misc/>
+						<LinkerInputFile/>
+						<DisabledWarnings/>
+					</LDads>
+				</TargetArmAds>
+			</TargetOption>
+			<Groups>
+				<Group>
+					<GroupName>freertos_kernel/</GroupName>
+					<Files>
+						<File>
+							<FileName>event_groups.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../freertos_kernel/event_groups.c</FilePath>
+						</File>
+						<File>
+							<FileName>list.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../freertos_kernel/list.c</FilePath>
+						</File>
+						<File>
+							<FileName>queue.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../freertos_kernel/queue.c</FilePath>
+						</File>
+						<File>
+							<FileName>stream_buffer.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../freertos_kernel/stream_buffer.c</FilePath>
+						</File>
+						<File>
+							<FileName>tasks.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../freertos_kernel/tasks.c</FilePath>
+						</File>
+						<File>
+							<FileName>timers.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../freertos_kernel/timers.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>freertos_kernel/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>FreeRTOS.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/FreeRTOS.h</FilePath>
+						</File>
+						<File>
+							<FileName>atomic.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/atomic.h</FilePath>
+						</File>
+						<File>
+							<FileName>deprecated_definitions.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/deprecated_definitions.h</FilePath>
+						</File>
+						<File>
+							<FileName>event_groups.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/event_groups.h</FilePath>
+						</File>
+						<File>
+							<FileName>list.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/list.h</FilePath>
+						</File>
+						<File>
+							<FileName>message_buffer.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/message_buffer.h</FilePath>
+						</File>
+						<File>
+							<FileName>mpu_prototypes.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/mpu_prototypes.h</FilePath>
+						</File>
+						<File>
+							<FileName>mpu_wrappers.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/mpu_wrappers.h</FilePath>
+						</File>
+						<File>
+							<FileName>portable.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/portable.h</FilePath>
+						</File>
+						<File>
+							<FileName>projdefs.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/projdefs.h</FilePath>
+						</File>
+						<File>
+							<FileName>queue.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/queue.h</FilePath>
+						</File>
+						<File>
+							<FileName>semphr.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/semphr.h</FilePath>
+						</File>
+						<File>
+							<FileName>stack_macros.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/stack_macros.h</FilePath>
+						</File>
+						<File>
+							<FileName>stream_buffer.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/stream_buffer.h</FilePath>
+						</File>
+						<File>
+							<FileName>task.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/task.h</FilePath>
+						</File>
+						<File>
+							<FileName>timers.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../freertos_kernel/include/timers.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/sdk/StdDriver/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>clk.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/clk.c</FilePath>
+						</File>
+						<File>
+							<FileName>crypto.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/crypto.c</FilePath>
+						</File>
+						<File>
+							<FileName>fmc.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/fmc.c</FilePath>
+						</File>
+						<File>
+							<FileName>sys.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/sys.c</FilePath>
+						</File>
+						<File>
+							<FileName>uart.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/uart.c</FilePath>
+						</File>
+						<File>
+							<FileName>retarget.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/sdk/StdDriver/src/retarget.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>freertos_kernel/portable/MemMang/</GroupName>
+					<Files>
+						<File>
+							<FileName>heap_4.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../freertos_kernel/portable/MemMang/heap_4.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>freertos_kernel/portable/RVDS/ARM_CM4F/</GroupName>
+					<Files>
+						<File>
+							<FileName>port.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../freertos_kernel/portable/RVDS/ARM_CM4F/port.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/application_code/nuvoton_code/</GroupName>
+					<Files>
+						<File>
+							<FileName>entropy_hardware_poll.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/application_code/nuvoton_code/entropy_hardware_poll.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>tests/common/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_test_framework.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../tests/common/aws_test_framework.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_test_runner.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../tests/common/aws_test_runner.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_test.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../tests/common/aws_test.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_test_freertos.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../tests/common/iot_test_freertos.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_tests_network.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../tests/common/iot_tests_network.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>tests/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_application_version.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../tests/include/aws_application_version.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_clientcredential.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../tests/include/aws_clientcredential.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_clientcredential_keys.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../tests/include/aws_clientcredential_keys.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_test_runner.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../tests/include/aws_test_runner.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_test_framework.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../tests/include/aws_test_framework.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_test_tcp.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../tests/include/aws_test_tcp.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_test_utils.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../tests/include/aws_test_utils.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_unity_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../tests/include/aws_unity_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_config_common.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../tests/include/iot_config_common.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/common/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_init.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/iot_init.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_static_memory_common.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/iot_static_memory_common.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_device_metrics.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/iot_device_metrics.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/common/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_appversion32.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_appversion32.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_init.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_init.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_linear_containers.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_linear_containers.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_logging_task.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_logging_task.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_logging_setup.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_logging_setup.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_taskpool.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/iot_taskpool.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/common/logging/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_logging_task_dynamic_buffers.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/logging/iot_logging_task_dynamic_buffers.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_logging.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/logging/iot_logging.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/common/include/private/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_logging.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/private/iot_logging.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_taskpool_internal.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/private/iot_taskpool_internal.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/common/include/types/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_network_types.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/types/iot_network_types.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_taskpool_types.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/include/types/iot_taskpool_types.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/common/taskpool/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_taskpool.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/taskpool/iot_taskpool.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_taskpool_static_memory.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/taskpool/iot_taskpool_static_memory.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/abstractions/platform/include/platform/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_clock.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/include/platform/iot_clock.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_network.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/include/platform/iot_network.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_threads.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/include/platform/iot_threads.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_metrics.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/include/platform/iot_metrics.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/abstractions/platform/include/types/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_platform_types.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/include/types/iot_platform_types.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/abstractions/platform/freertos/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_clock_freertos.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/freertos/iot_clock_freertos.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_threads_freertos.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/freertos/iot_threads_freertos.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_metrics.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/freertos/iot_metrics.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_network_freertos.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/freertos/iot_network_freertos.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/abstractions/platform/freertos/include/platform/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_platform_types_freertos.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/freertos/include/platform/iot_platform_types_freertos.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_network_freertos.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/freertos/include/platform/iot_network_freertos.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/abstractions/secure_sockets/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_secure_sockets.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/secure_sockets/include/iot_secure_sockets.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_secure_sockets_config_defaults.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/secure_sockets/include/iot_secure_sockets_config_defaults.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_secure_sockets_wrapper_metrics.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/secure_sockets/include/iot_secure_sockets_wrapper_metrics.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/secure_sockets/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_secure_sockets.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/secure_sockets/iot_secure_sockets.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/standard/tls/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_tls.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/tls/src/iot_tls.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/standard/tls/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_tls.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/tls/include/iot_tls.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/standard/crypto/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_crypto.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/crypto/src/iot_crypto.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/standard/crypto/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_crypto.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/crypto/include/iot_crypto.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/standard/pkcs11/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_pkcs11.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/pkcs11/include/iot_pkcs11.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/standard/pkcs11/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_pkcs11.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/pkcs11/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_pkcs11_pal.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/pkcs11/iot_pkcs11_pal.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/abstractions/pkcs11/mbedtls/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_pkcs11_mbedtls.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c</FilePath>
+						</File>
+						<File>
+							<FileName>threading_alt.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/pkcs11/mbedtls/threading_alt.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/standard/utils/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_system_init.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/utils/src/iot_system_init.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_pki_utils.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/utils/src/iot_pki_utils.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/standard/utils/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_system_init.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/utils/include/iot_system_init.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_pki_utils.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/utils/include/iot_pki_utils.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/abstractions/wifi/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_wifi.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/abstractions/wifi/include/iot_wifi.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/wifi/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_wifi.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/ports/wifi/iot_wifi.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/sdk/middleware/wifi_esp8266/</GroupName>
+					<Files>
+						<File>
+							<FileName>esp8266_wifi.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/sdk/middleware/wifi_esp8266/esp8266_wifi.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>demos/dev_mode_key_provisioning/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_dev_mode_key_provisioning.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../demos/dev_mode_key_provisioning/src/aws_dev_mode_key_provisioning.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>demos/dev_mode_key_provisioning/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_dev_mode_key_provisioning.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../demos/dev_mode_key_provisioning/include/aws_dev_mode_key_provisioning.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/aws/defender/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_iot_defender_api.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_api.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_iot_defender_collector.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_collector.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_iot_defender_mqtt.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_mqtt.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_iot_defender_v1.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/defender/src/aws_iot_defender_v1.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/aws/defender/src/private/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_iot_defender_internal.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/defender/src/private/aws_iot_defender_internal.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/aws/defender/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_iot_defender.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/defender/include/aws_iot_defender.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/mqtt/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_mqtt_api.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_api.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_mqtt_network.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_network.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_mqtt_operation.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_operation.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_mqtt_serialize.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_serialize.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_mqtt_static_memory.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_static_memory.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_mqtt_subscription.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_subscription.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_mqtt_validate.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_validate.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_mqtt_agent.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/src/iot_mqtt_agent.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/serializer/src/cbor/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_serializer_tinycbor_decoder.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_decoder.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_serializer_tinycbor_encoder.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_encoder.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/serializer/src/json/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_serializer_json_decoder.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_decoder.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_serializer_json_encoder.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_encoder.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/serializer/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_serializer_static_memory.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/serializer/src/iot_serializer_static_memory.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_json_utils.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/serializer/src/iot_json_utils.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/serializer/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_serializer.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/serializer/include/iot_serializer.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_json_utils.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/serializer/include/iot_json_utils.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/aws/shadow/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_iot_shadow_api.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_api.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_iot_shadow_operation.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_operation.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_iot_shadow_parser.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_parser.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_iot_shadow_static_memory.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_static_memory.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_iot_shadow_subscription.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_iot_shadow_subscription.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_shadow.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_shadow.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_shadow_config_defaults.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/src/aws_shadow_config_defaults.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/aws/shadow/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_iot_shadow.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/include/aws_iot_shadow.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_shadow.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/include/aws_shadow.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/https/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_https_client.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/src/iot_https_client.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_https_utils.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/src/iot_https_utils.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/aws/greengrass/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_greengrass_discovery.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_helper_secure_connect.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_helper_secure_connect.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/aws/greengrass/include/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_ggd_config_defaults.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/aws/greengrass/include/aws_ggd_config_defaults.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_greengrass_discovery.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/aws/greengrass/include/aws_greengrass_discovery.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/aws/defender/test/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_iot_tests_defender_api.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/defender/test/aws_iot_tests_defender_api.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/aws/shadow/test/unit/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_iot_tests_shadow_api.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_api.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_iot_tests_shadow_parser.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_parser.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/aws/shadow/test/system/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_iot_tests_shadow_system.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/test/system/aws_iot_tests_shadow_system.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/aws/shadow/test/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_test_shadow.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/aws/shadow/test/aws_test_shadow.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/common/test/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_memory_leak.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/test/iot_memory_leak.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_tests_taskpool.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/common/test/iot_tests_taskpool.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/https/test/unit/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_tests_https_client.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/test/unit/iot_tests_https_client.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_tests_https_utils.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/test/unit/iot_tests_https_utils.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_tests_https_common.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_tests_https_sync.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/test/unit/iot_tests_https_sync.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_tests_https_async.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/test/unit/iot_tests_https_async.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/https/test/system/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_tests_https_system.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/https/test/system/iot_tests_https_system.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/mqtt/test/unit/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_tests_mqtt_api.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_api.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_tests_mqtt_receive.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_receive.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_tests_mqtt_subscription.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_subscription.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_tests_mqtt_validate.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_validate.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_tests_mqtt_metrics.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_metrics.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/mqtt/test/system/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_tests_mqtt_system.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/test/system/iot_tests_mqtt_system.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/mqtt/test/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_test_mqtt_agent.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/mqtt/test/iot_test_mqtt_agent.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/c_sdk/standard/serializer/test/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_tests_serializer_cbor.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/serializer/test/iot_tests_serializer_cbor.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_tests_serializer_json.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/serializer/test/iot_tests_serializer_json.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_tests_deserializer_json.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/c_sdk/standard/serializer/test/iot_tests_deserializer_json.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/aws/greengrass/test/</GroupName>
+					<Files>
+						<File>
+							<FileName>aws_test_greengrass_discovery.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/aws/greengrass/test/aws_test_greengrass_discovery.c</FilePath>
+						</File>
+						<File>
+							<FileName>aws_test_helper_secure_connect.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/aws/greengrass/test/aws_test_helper_secure_connect.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/standard/crypto/test/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_test_crypto.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/crypto/test/iot_test_crypto.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/freertos_plus/standard/tls/test/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_test_tls.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/freertos_plus/standard/tls/test/iot_test_tls.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/abstractions/pkcs11/test/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_test_pkcs11.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/abstractions/pkcs11/test/iot_test_pkcs11.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/abstractions/platform/test/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_test_platform_clock.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/test/iot_test_platform_clock.c</FilePath>
+						</File>
+						<File>
+							<FileName>iot_test_platform_threads.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/abstractions/platform/test/iot_test_platform_threads.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/abstractions/secure_sockets/test/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_test_tcp.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/abstractions/secure_sockets/test/iot_test_tcp.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/abstractions/wifi/test/</GroupName>
+					<Files>
+						<File>
+							<FileName>iot_test_wifi.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/abstractions/wifi/test/iot_test_wifi.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/</GroupName>
+					<Files>
+						<File>
+							<FileName>FreeRTOSConfig.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/FreeRTOSConfig.h</FilePath>
+						</File>
+						<File>
+							<FileName>FreeRTOSIPConfig.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/FreeRTOSIPConfig.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_bufferpool_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_bufferpool_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_ggd_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_ggd_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_mqtt_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_mqtt_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_secure_sockets_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_secure_sockets_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_shadow_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_shadow_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_test_pkcs11_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_test_pkcs11_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_test_runner_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_test_runner_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_test_tcp_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_test_tcp_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_test_wifi_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_test_wifi_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>aws_wifi_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_wifi_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/iot_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_mqtt_agent_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/iot_mqtt_agent_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_pkcs11_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/iot_pkcs11_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>iot_test_pkcs11_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/iot_test_pkcs11_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>unity_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/unity_config.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/application_code/</GroupName>
+					<Files>
+						<File>
+							<FileName>main.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/application_code/main.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Source/ARM/</GroupName>
+					<Files>
+						<File>
+							<FileName>startup_M480.s</FileName>
+							<FileType>2</FileType>
+							<FilePath>../../../../../vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Source/ARM/startup_M480.s</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Source/</GroupName>
+					<Files>
+						<File>
+							<FileName>system_M480.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../vendors/nuvoton/sdk/Device/Nuvoton/numaker_iot_m487_wifi/Source/system_M480.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/3rdparty/mbedtls/library/</GroupName>
+					<Files>
+						<File>
+							<FileName>aes.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/aes.c</FilePath>
+						</File>
+						<File>
+							<FileName>aesni.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/aesni.c</FilePath>
+						</File>
+						<File>
+							<FileName>arc4.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/arc4.c</FilePath>
+						</File>
+						<File>
+							<FileName>asn1parse.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/asn1parse.c</FilePath>
+						</File>
+						<File>
+							<FileName>asn1write.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/asn1write.c</FilePath>
+						</File>
+						<File>
+							<FileName>base64.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/base64.c</FilePath>
+						</File>
+						<File>
+							<FileName>bignum.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/bignum.c</FilePath>
+						</File>
+						<File>
+							<FileName>blowfish.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/blowfish.c</FilePath>
+						</File>
+						<File>
+							<FileName>camellia.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/camellia.c</FilePath>
+						</File>
+						<File>
+							<FileName>ccm.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ccm.c</FilePath>
+						</File>
+						<File>
+							<FileName>certs.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/certs.c</FilePath>
+						</File>
+						<File>
+							<FileName>cipher.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/cipher.c</FilePath>
+						</File>
+						<File>
+							<FileName>cipher_wrap.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/cipher_wrap.c</FilePath>
+						</File>
+						<File>
+							<FileName>cmac.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/cmac.c</FilePath>
+						</File>
+						<File>
+							<FileName>ctr_drbg.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ctr_drbg.c</FilePath>
+						</File>
+						<File>
+							<FileName>debug.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/debug.c</FilePath>
+						</File>
+						<File>
+							<FileName>des.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/des.c</FilePath>
+						</File>
+						<File>
+							<FileName>dhm.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/dhm.c</FilePath>
+						</File>
+						<File>
+							<FileName>ecdh.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecdh.c</FilePath>
+						</File>
+						<File>
+							<FileName>ecdsa.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecdsa.c</FilePath>
+						</File>
+						<File>
+							<FileName>ecjpake.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecjpake.c</FilePath>
+						</File>
+						<File>
+							<FileName>ecp.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecp.c</FilePath>
+						</File>
+						<File>
+							<FileName>ecp_curves.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ecp_curves.c</FilePath>
+						</File>
+						<File>
+							<FileName>entropy.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/entropy.c</FilePath>
+						</File>
+						<File>
+							<FileName>entropy_poll.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/entropy_poll.c</FilePath>
+						</File>
+						<File>
+							<FileName>error.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/error.c</FilePath>
+						</File>
+						<File>
+							<FileName>gcm.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/gcm.c</FilePath>
+						</File>
+						<File>
+							<FileName>havege.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/havege.c</FilePath>
+						</File>
+						<File>
+							<FileName>hmac_drbg.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/hmac_drbg.c</FilePath>
+						</File>
+						<File>
+							<FileName>md.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/md.c</FilePath>
+						</File>
+						<File>
+							<FileName>md2.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/md2.c</FilePath>
+						</File>
+						<File>
+							<FileName>md4.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/md4.c</FilePath>
+						</File>
+						<File>
+							<FileName>md5.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/md5.c</FilePath>
+						</File>
+						<File>
+							<FileName>md_wrap.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/md_wrap.c</FilePath>
+						</File>
+						<File>
+							<FileName>memory_buffer_alloc.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/memory_buffer_alloc.c</FilePath>
+						</File>
+						<File>
+							<FileName>net_sockets.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/net_sockets.c</FilePath>
+						</File>
+						<File>
+							<FileName>oid.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/oid.c</FilePath>
+						</File>
+						<File>
+							<FileName>padlock.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/padlock.c</FilePath>
+						</File>
+						<File>
+							<FileName>pem.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/pem.c</FilePath>
+						</File>
+						<File>
+							<FileName>pk.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/pk.c</FilePath>
+						</File>
+						<File>
+							<FileName>pk_wrap.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/pk_wrap.c</FilePath>
+						</File>
+						<File>
+							<FileName>pkcs12.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/pkcs12.c</FilePath>
+						</File>
+						<File>
+							<FileName>pkcs5.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/pkcs5.c</FilePath>
+						</File>
+						<File>
+							<FileName>pkparse.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/pkparse.c</FilePath>
+						</File>
+						<File>
+							<FileName>pkwrite.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/pkwrite.c</FilePath>
+						</File>
+						<File>
+							<FileName>platform.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/platform.c</FilePath>
+						</File>
+						<File>
+							<FileName>platform_util.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/platform_util.c</FilePath>
+						</File>
+						<File>
+							<FileName>ripemd160.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ripemd160.c</FilePath>
+						</File>
+						<File>
+							<FileName>rsa.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/rsa.c</FilePath>
+						</File>
+						<File>
+							<FileName>rsa_internal.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/rsa_internal.c</FilePath>
+						</File>
+						<File>
+							<FileName>sha1.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/sha1.c</FilePath>
+						</File>
+						<File>
+							<FileName>sha256.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/sha256.c</FilePath>
+						</File>
+						<File>
+							<FileName>sha512.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/sha512.c</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_cache.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_cache.c</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_ciphersuites.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_ciphersuites.c</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_cli.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_cli.c</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_cookie.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_cookie.c</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_srv.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_srv.c</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_ticket.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_ticket.c</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_tls.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/ssl_tls.c</FilePath>
+						</File>
+						<File>
+							<FileName>threading.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/threading.c</FilePath>
+						</File>
+						<File>
+							<FileName>timing.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/timing.c</FilePath>
+						</File>
+						<File>
+							<FileName>version.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/version.c</FilePath>
+						</File>
+						<File>
+							<FileName>version_features.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/version_features.c</FilePath>
+						</File>
+						<File>
+							<FileName>x509.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509.c</FilePath>
+						</File>
+						<File>
+							<FileName>x509_create.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509_create.c</FilePath>
+						</File>
+						<File>
+							<FileName>x509_crl.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509_crl.c</FilePath>
+						</File>
+						<File>
+							<FileName>x509_crt.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509_crt.c</FilePath>
+						</File>
+						<File>
+							<FileName>x509_csr.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509_csr.c</FilePath>
+						</File>
+						<File>
+							<FileName>x509write_crt.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509write_crt.c</FilePath>
+						</File>
+						<File>
+							<FileName>x509write_csr.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/x509write_csr.c</FilePath>
+						</File>
+						<File>
+							<FileName>xtea.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/library/xtea.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/3rdparty/mbedtls/utils/</GroupName>
+					<Files>
+						<File>
+							<FileName>mbedtls_utils.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/utils/mbedtls_utils.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/3rdparty/mbedtls/include/mbedtls/</GroupName>
+					<Files>
+						<File>
+							<FileName>aes.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/aes.h</FilePath>
+						</File>
+						<File>
+							<FileName>aesni.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/aesni.h</FilePath>
+						</File>
+						<File>
+							<FileName>arc4.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/arc4.h</FilePath>
+						</File>
+						<File>
+							<FileName>asn1.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/asn1.h</FilePath>
+						</File>
+						<File>
+							<FileName>asn1write.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/asn1write.h</FilePath>
+						</File>
+						<File>
+							<FileName>base64.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/base64.h</FilePath>
+						</File>
+						<File>
+							<FileName>bignum.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/bignum.h</FilePath>
+						</File>
+						<File>
+							<FileName>blowfish.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/blowfish.h</FilePath>
+						</File>
+						<File>
+							<FileName>bn_mul.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/bn_mul.h</FilePath>
+						</File>
+						<File>
+							<FileName>camellia.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/camellia.h</FilePath>
+						</File>
+						<File>
+							<FileName>ccm.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ccm.h</FilePath>
+						</File>
+						<File>
+							<FileName>certs.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/certs.h</FilePath>
+						</File>
+						<File>
+							<FileName>check_config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/check_config.h</FilePath>
+						</File>
+						<File>
+							<FileName>cipher.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/cipher.h</FilePath>
+						</File>
+						<File>
+							<FileName>cipher_internal.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/cipher_internal.h</FilePath>
+						</File>
+						<File>
+							<FileName>cmac.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/cmac.h</FilePath>
+						</File>
+						<File>
+							<FileName>compat-1.3.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/compat-1.3.h</FilePath>
+						</File>
+						<File>
+							<FileName>config.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/config.h</FilePath>
+						</File>
+						<File>
+							<FileName>ctr_drbg.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ctr_drbg.h</FilePath>
+						</File>
+						<File>
+							<FileName>debug.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/debug.h</FilePath>
+						</File>
+						<File>
+							<FileName>des.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/des.h</FilePath>
+						</File>
+						<File>
+							<FileName>dhm.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/dhm.h</FilePath>
+						</File>
+						<File>
+							<FileName>ecdh.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecdh.h</FilePath>
+						</File>
+						<File>
+							<FileName>ecdsa.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecdsa.h</FilePath>
+						</File>
+						<File>
+							<FileName>ecjpake.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecjpake.h</FilePath>
+						</File>
+						<File>
+							<FileName>ecp.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecp.h</FilePath>
+						</File>
+						<File>
+							<FileName>ecp_internal.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ecp_internal.h</FilePath>
+						</File>
+						<File>
+							<FileName>entropy.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/entropy.h</FilePath>
+						</File>
+						<File>
+							<FileName>entropy_poll.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/entropy_poll.h</FilePath>
+						</File>
+						<File>
+							<FileName>error.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/error.h</FilePath>
+						</File>
+						<File>
+							<FileName>gcm.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/gcm.h</FilePath>
+						</File>
+						<File>
+							<FileName>havege.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/havege.h</FilePath>
+						</File>
+						<File>
+							<FileName>hmac_drbg.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/hmac_drbg.h</FilePath>
+						</File>
+						<File>
+							<FileName>md.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md.h</FilePath>
+						</File>
+						<File>
+							<FileName>md2.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md2.h</FilePath>
+						</File>
+						<File>
+							<FileName>md4.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md4.h</FilePath>
+						</File>
+						<File>
+							<FileName>md5.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md5.h</FilePath>
+						</File>
+						<File>
+							<FileName>md_internal.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/md_internal.h</FilePath>
+						</File>
+						<File>
+							<FileName>memory_buffer_alloc.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/memory_buffer_alloc.h</FilePath>
+						</File>
+						<File>
+							<FileName>net.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/net.h</FilePath>
+						</File>
+						<File>
+							<FileName>net_sockets.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/net_sockets.h</FilePath>
+						</File>
+						<File>
+							<FileName>oid.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/oid.h</FilePath>
+						</File>
+						<File>
+							<FileName>padlock.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/padlock.h</FilePath>
+						</File>
+						<File>
+							<FileName>pem.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pem.h</FilePath>
+						</File>
+						<File>
+							<FileName>pk.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pk.h</FilePath>
+						</File>
+						<File>
+							<FileName>pk_internal.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pk_internal.h</FilePath>
+						</File>
+						<File>
+							<FileName>pkcs12.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pkcs12.h</FilePath>
+						</File>
+						<File>
+							<FileName>pkcs5.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/pkcs5.h</FilePath>
+						</File>
+						<File>
+							<FileName>platform.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/platform.h</FilePath>
+						</File>
+						<File>
+							<FileName>platform_time.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/platform_time.h</FilePath>
+						</File>
+						<File>
+							<FileName>platform_util.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/platform_util.h</FilePath>
+						</File>
+						<File>
+							<FileName>ripemd160.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ripemd160.h</FilePath>
+						</File>
+						<File>
+							<FileName>rsa.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/rsa.h</FilePath>
+						</File>
+						<File>
+							<FileName>rsa_internal.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/rsa_internal.h</FilePath>
+						</File>
+						<File>
+							<FileName>sha1.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/sha1.h</FilePath>
+						</File>
+						<File>
+							<FileName>sha256.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/sha256.h</FilePath>
+						</File>
+						<File>
+							<FileName>sha512.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/sha512.h</FilePath>
+						</File>
+						<File>
+							<FileName>ssl.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl.h</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_cache.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_cache.h</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_ciphersuites.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_ciphersuites.h</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_cookie.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_cookie.h</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_internal.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_internal.h</FilePath>
+						</File>
+						<File>
+							<FileName>ssl_ticket.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/ssl_ticket.h</FilePath>
+						</File>
+						<File>
+							<FileName>threading.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/threading.h</FilePath>
+						</File>
+						<File>
+							<FileName>timing.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/timing.h</FilePath>
+						</File>
+						<File>
+							<FileName>version.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/version.h</FilePath>
+						</File>
+						<File>
+							<FileName>x509.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509.h</FilePath>
+						</File>
+						<File>
+							<FileName>x509_crl.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509_crl.h</FilePath>
+						</File>
+						<File>
+							<FileName>x509_crt.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509_crt.h</FilePath>
+						</File>
+						<File>
+							<FileName>x509_csr.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/x509_csr.h</FilePath>
+						</File>
+						<File>
+							<FileName>xtea.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/mbedtls/include/mbedtls/xtea.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/3rdparty/pkcs11/</GroupName>
+					<Files>
+						<File>
+							<FileName>pkcs11.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/pkcs11/pkcs11.h</FilePath>
+						</File>
+						<File>
+							<FileName>pkcs11f.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/pkcs11/pkcs11f.h</FilePath>
+						</File>
+						<File>
+							<FileName>pkcs11t.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/pkcs11/pkcs11t.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/3rdparty/unity/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>unity.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/unity/src/unity.c</FilePath>
+						</File>
+						<File>
+							<FileName>unity.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/unity/src/unity.h</FilePath>
+						</File>
+						<File>
+							<FileName>unity_internals.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/unity/src/unity_internals.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/3rdparty/unity/extras/fixture/src/</GroupName>
+					<Files>
+						<File>
+							<FileName>unity_fixture.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/unity/extras/fixture/src/unity_fixture.c</FilePath>
+						</File>
+						<File>
+							<FileName>unity_fixture.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/unity/extras/fixture/src/unity_fixture.h</FilePath>
+						</File>
+						<File>
+							<FileName>unity_fixture_internals.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/unity/extras/fixture/src/unity_fixture_internals.h</FilePath>
+						</File>
+						<File>
+							<FileName>unity_fixture_malloc_overrides.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/unity/extras/fixture/src/unity_fixture_malloc_overrides.h</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/3rdparty/tinycbor/</GroupName>
+					<Files>
+						<File>
+							<FileName>cborpretty.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/tinycbor/cborpretty.c</FilePath>
+						</File>
+						<File>
+							<FileName>cborencoder.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/tinycbor/cborencoder.c</FilePath>
+						</File>
+						<File>
+							<FileName>cborencoder_close_container_checked.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/tinycbor/cborencoder_close_container_checked.c</FilePath>
+						</File>
+						<File>
+							<FileName>cborerrorstrings.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/tinycbor/cborerrorstrings.c</FilePath>
+						</File>
+						<File>
+							<FileName>cborparser.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/tinycbor/cborparser.c</FilePath>
+						</File>
+						<File>
+							<FileName>cborparser_dup_string.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/tinycbor/cborparser_dup_string.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/3rdparty/http-parser/</GroupName>
+					<Files>
+						<File>
+							<FileName>http_parser.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/http-parser/http_parser.h</FilePath>
+						</File>
+						<File>
+							<FileName>http_parser.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/http-parser/http_parser.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+				<Group>
+					<GroupName>libraries/3rdparty/jsmn/</GroupName>
+					<Files>
+						<File>
+							<FileName>jsmn.h</FileName>
+							<FileType>5</FileType>
+							<FilePath>../../../../../libraries/3rdparty/jsmn/jsmn.h</FilePath>
+						</File>
+						<File>
+							<FileName>jsmn.c</FileName>
+							<FileType>1</FileType>
+							<FilePath>../../../../../libraries/3rdparty/jsmn/jsmn.c</FilePath>
+						</File>
+					</Files>
+				</Group>
+			</Groups>
+		</Target>
+	</Targets>
 </Project>
diff --git a/projects/nxp/lpc54018iotmodule/iar/aws_demos/aws_demos.ewp b/projects/nxp/lpc54018iotmodule/iar/aws_demos/aws_demos.ewp
index b65d66162..ebc2c8a3b 100644
--- a/projects/nxp/lpc54018iotmodule/iar/aws_demos/aws_demos.ewp
+++ b/projects/nxp/lpc54018iotmodule/iar/aws_demos/aws_demos.ewp
@@ -396,6 +396,7 @@
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\mqtt\include</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\serializer\include</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\aws\shadow\include</state>
+					<state>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\https\include</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\abstractions\posix\include</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\vendors\nxp\boards\lpc54018iotmodule\ports\posix</state>
@@ -405,6 +406,7 @@
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\pkcs11</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\tinycbor</state>
+					<state>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\http-parser</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\jsmn</state>
 				</option>
 				<option>
@@ -1956,6 +1958,18 @@
 				<name>$PROJ_DIR$\..\..\..\..\..\demos\greengrass_connectivity\aws_greengrass_discovery_demo.c</name>
 			</file>
 		</group>
+		<group>
+			<name>https</name>
+			<file>
+				<name>$PROJ_DIR$\..\..\..\..\..\demos\https\iot_demo_https_s3_download_sync.c</name>
+			</file>
+			<file>
+				<name>$PROJ_DIR$\..\..\..\..\..\demos\https\iot_demo_https_s3_download_async.c</name>
+			</file>
+			<file>
+				<name>$PROJ_DIR$\..\..\..\..\..\demos\https\iot_demo_https_common.c</name>
+			</file>
+		</group>
 		<group>
 			<name>mqtt</name>
 			<file>
@@ -2122,6 +2136,18 @@
 						</file>
 					</group>
 				</group>
+				<group>
+					<name>https</name>
+					<group>
+						<name>src</name>
+						<file>
+							<name>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\https\src\iot_https_client.c</name>
+						</file>
+						<file>
+							<name>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\https\src\iot_https_utils.c</name>
+						</file>
+					</group>
+				</group>
 			</group>
 			<group>
 				<name>aws</name>
@@ -2966,6 +2992,15 @@
 					<name>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\tinycbor\cborparser_dup_string.c</name>
 				</file>
 			</group>
+			<group>
+				<name>http-parser</name>
+				<file>
+					<name>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\http-parser\http_parser.h</name>
+				</file>
+				<file>
+					<name>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\http-parser\http_parser.c</name>
+				</file>
+			</group>
 			<group>
 				<name>jsmn</name>
 				<file>
diff --git a/projects/nxp/lpc54018iotmodule/iar/aws_tests/aws_tests.ewp b/projects/nxp/lpc54018iotmodule/iar/aws_tests/aws_tests.ewp
index 274c1931f..559307aae 100644
--- a/projects/nxp/lpc54018iotmodule/iar/aws_tests/aws_tests.ewp
+++ b/projects/nxp/lpc54018iotmodule/iar/aws_tests/aws_tests.ewp
@@ -399,6 +399,9 @@
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\serializer\include</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\aws\shadow\include</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\aws\shadow\src</state>
+					<state>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\https\test\access</state>
+					<state>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\https\include</state>
+					<state>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\https\src</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\freertos_plus\aws\greengrass\test</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src</state>
@@ -413,6 +416,7 @@
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\unity\src</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\unity\extras\fixture\src</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\tinycbor</state>
+					<state>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\http-parser</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\jsmn</state>
 				</option>
 				<option>
@@ -2124,6 +2128,45 @@
 						</file>
 					</group>
 				</group>
+				<group>
+					<name>https</name>
+					<group>
+						<name>src</name>
+						<file>
+							<name>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\https\src\iot_https_client.c</name>
+						</file>
+						<file>
+							<name>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\https\src\iot_https_utils.c</name>
+						</file>
+					</group>
+					<group>
+						<name>test</name>
+						<group>
+							<name>unit</name>
+							<file>
+								<name>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\https\test\unit\iot_tests_https_client.c</name>
+							</file>
+							<file>
+								<name>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\https\test\unit\iot_tests_https_utils.c</name>
+							</file>
+							<file>
+								<name>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\https\test\unit\iot_tests_https_common.c</name>
+							</file>
+							<file>
+								<name>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\https\test\unit\iot_tests_https_sync.c</name>
+							</file>
+							<file>
+								<name>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\https\test\unit\iot_tests_https_async.c</name>
+							</file>
+						</group>
+						<group>
+							<name>system</name>
+							<file>
+								<name>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\https\test\system\iot_tests_https_system.c</name>
+							</file>
+						</group>
+					</group>
+				</group>
 			</group>
 			<group>
 				<name>aws</name>
@@ -3106,6 +3149,15 @@
 					<name>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\tinycbor\cborparser_dup_string.c</name>
 				</file>
 			</group>
+			<group>
+				<name>http-parser</name>
+				<file>
+					<name>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\http-parser\http_parser.h</name>
+				</file>
+				<file>
+					<name>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\http-parser\http_parser.c</name>
+				</file>
+			</group>
 			<group>
 				<name>jsmn</name>
 				<file>
diff --git a/projects/nxp/lpc54018iotmodule/mcuxpresso/aws_demos/.cproject b/projects/nxp/lpc54018iotmodule/mcuxpresso/aws_demos/.cproject
index 50e230ff1..52a8c3df0 100644
--- a/projects/nxp/lpc54018iotmodule/mcuxpresso/aws_demos/.cproject
+++ b/projects/nxp/lpc54018iotmodule/mcuxpresso/aws_demos/.cproject
@@ -140,12 +140,14 @@
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/mqtt/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/serializer/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/aws/shadow/include"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/mbedtls/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/mbedtls/include/mbedtls"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/abstractions/pkcs11/mbedtls"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/pkcs11"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/tinycbor"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/http-parser"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/jsmn"/>
 								</option>
 								<option id="gnu.c.compiler.option.include.files.831986787" name="Include files (-include)" superClass="gnu.c.compiler.option.include.files" useByScannerDiscovery="false"/>
diff --git a/projects/nxp/lpc54018iotmodule/mcuxpresso/aws_demos/.project b/projects/nxp/lpc54018iotmodule/mcuxpresso/aws_demos/.project
index 5476bf6d9..3e07f911e 100644
--- a/projects/nxp/lpc54018iotmodule/mcuxpresso/aws_demos/.project
+++ b/projects/nxp/lpc54018iotmodule/mcuxpresso/aws_demos/.project
@@ -1337,6 +1337,16 @@
 			<type>1</type>
 			<locationURI>BASE_DIR/libraries/c_sdk/aws/shadow/include/aws_shadow.h</locationURI>
 		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_client.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR/libraries/c_sdk/standard/https/src/iot_https_client.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_utils.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR/libraries/c_sdk/standard/https/src/iot_https_utils.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</name>
 			<type>1</type>
@@ -1372,6 +1382,21 @@
 			<type>1</type>
 			<locationURI>BASE_DIR/demos/greengrass_connectivity/aws_greengrass_discovery_demo.c</locationURI>
 		</link>
+		<link>
+			<name>demos/https/iot_demo_https_s3_download_sync.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR/demos/https/iot_demo_https_s3_download_sync.c</locationURI>
+		</link>
+		<link>
+			<name>demos/https/iot_demo_https_s3_download_async.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR/demos/https/iot_demo_https_s3_download_async.c</locationURI>
+		</link>
+		<link>
+			<name>demos/https/iot_demo_https_common.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR/demos/https/iot_demo_https_common.c</locationURI>
+		</link>
 		<link>
 			<name>demos/mqtt/iot_demo_mqtt.c</name>
 			<type>1</type>
@@ -2272,6 +2297,16 @@
 			<type>1</type>
 			<locationURI>BASE_DIR/libraries/3rdparty/tinycbor/cborparser_dup_string.c</locationURI>
 		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.h</name>
+			<type>1</type>
+			<locationURI>BASE_DIR/libraries/3rdparty/http-parser/http_parser.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR/libraries/3rdparty/http-parser/http_parser.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/3rdparty/jsmn/jsmn.h</name>
 			<type>1</type>
diff --git a/projects/pc/windows/visual_studio/aws_demos/aws_demos.vcxproj b/projects/pc/windows/visual_studio/aws_demos/aws_demos.vcxproj
index 3d864cc8c..fd06a5dc3 100644
--- a/projects/pc/windows/visual_studio/aws_demos/aws_demos.vcxproj
+++ b/projects/pc/windows/visual_studio/aws_demos/aws_demos.vcxproj
@@ -1,512 +1,451 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
 <Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <ItemGroup Label="ProjectConfigurations">
-    <ProjectConfiguration Include="Debug|Win32">
-      <Configuration>Debug</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-  </ItemGroup>
-  <PropertyGroup Label="Globals">
-    <ProjectGuid>{C686325E-3261-42F7-AEB1-DDE5280E1CEB}</ProjectGuid>
-    <ProjectName>aws_demos</ProjectName>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>Unicode</CharacterSet>
-    <PlatformToolset>v141</PlatformToolset>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
-  <ImportGroup Label="ExtensionSettings">
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC60.props" />
-  </ImportGroup>
-  <PropertyGroup Label="UserMacros" />
-  <PropertyGroup>
-    <_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">.\Debug\</OutDir>
-    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">.\Debug\</IntDir>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
-    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
-  </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <Midl>
-      <TypeLibraryName>.\Debug/WIN32.tlb</TypeLibraryName>
-      <HeaderFileName>
-      </HeaderFileName>
-    </Midl>
-    <ClCompile>
-      <Optimization>Disabled</Optimization>
-      <AdditionalIncludeDirectories>..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\include;..\..\..\..\..\demos\dev_mode_key_provisioning\include;..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files;..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code;..\..\..\..\..\vendors\pc\boards\windows\ports\posix;..\..\..\..\..\demos\include;..\..\..\..\..\demos\network_manager;..\..\..\..\..\freertos_kernel\include;..\..\..\..\..\freertos_kernel\portable\MSVC-MingW;..\..\..\..\..\libraries\abstractions\pkcs11\include;..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls;..\..\..\..\..\libraries\abstractions\platform\include;..\..\..\..\..\libraries\abstractions\platform\freertos\include;..\..\..\..\..\libraries\abstractions\posix\include;..\..\..\..\..\libraries\abstractions\secure_sockets\include;..\..\..\..\..\libraries\c_sdk\aws\defender\include;..\..\..\..\..\libraries\c_sdk\aws\shadow\include;..\..\..\..\..\libraries\c_sdk\standard\common\include;..\..\..\..\..\libraries\c_sdk\standard\common\include\private;..\..\..\..\..\libraries\c_sdk\standard\mqtt\include;..\..\..\..\..\libraries\c_sdk\standard\serializer\include;..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include;..\..\..\..\..\libraries\freertos_plus\aws\ota\include;..\..\..\..\..\libraries\freertos_plus\aws\ota\src;..\..\..\..\..\libraries\freertos_plus\standard\crypto\include;..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include;..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include;..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\Compiler\MSVC;..\..\..\..\..\libraries\freertos_plus\standard\provisioning\include;..\..\..\..\..\libraries\freertos_plus\standard\tls\include;..\..\..\..\..\libraries\freertos_plus\standard\utils\include;..\..\..\..\..\libraries\3rdparty\mbedtls\include;..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include;..\..\..\..\..\libraries\3rdparty\jsmn;..\..\..\..\..\libraries\3rdparty\pkcs11;..\..\..\..\..\libraries\3rdparty\tinycbor;..\..\..\..\..\libraries\3rdparty\win_pcap</AdditionalIncludeDirectories>
-      <PreprocessorDefinitions>WIN32;_DEBUG;__free_rtos__;_CONSOLE;_WIN32_WINNT=0x0500;WINVER=0x400;_CRT_SECURE_NO_WARNINGS;__PRETTY_FUNCTION__=__FUNCTION__;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <MinimalRebuild>
-      </MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <PrecompiledHeaderOutputFile>
-      </PrecompiledHeaderOutputFile>
-      <AssemblerListingLocation>.\Debug/</AssemblerListingLocation>
-      <ObjectFileName>.\Debug/</ObjectFileName>
-      <ProgramDataBaseFileName>.\Debug/</ProgramDataBaseFileName>
-      <WarningLevel>Level4</WarningLevel>
-      <SuppressStartupBanner>true</SuppressStartupBanner>
-      <DisableLanguageExtensions>false</DisableLanguageExtensions>
-      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
-      <AdditionalOptions>/wd4127 /wd4200 /wd4204 /wd4210 %(AdditionalOptions)</AdditionalOptions>
-      <BrowseInformation>true</BrowseInformation>
-      <PrecompiledHeader>NotUsing</PrecompiledHeader>
-      <ExceptionHandling>false</ExceptionHandling>
-      <CompileAs>CompileAsC</CompileAs>
-      <SDLCheck>true</SDLCheck>
-      <MultiProcessorCompilation>true</MultiProcessorCompilation>
-    </ClCompile>
-    <ResourceCompile>
-      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <Culture>0x0c09</Culture>
-    </ResourceCompile>
-    <Link>
-      <OutputFile>.\Debug/aws_demos.exe</OutputFile>
-      <SuppressStartupBanner>true</SuppressStartupBanner>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <ProgramDatabaseFile>.\Debug/WIN32.pdb</ProgramDatabaseFile>
-      <SubSystem>Console</SubSystem>
-      <TargetMachine>MachineX86</TargetMachine>
-      <AdditionalDependencies>wpcap.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <AdditionalLibraryDirectories>..\..\..\..\..\libraries\3rdparty\win_pcap</AdditionalLibraryDirectories>
-      <Profile>false</Profile>
-      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
-    </Link>
-    <Bscmake>
-      <SuppressStartupBanner>true</SuppressStartupBanner>
-      <OutputFile>.\Debug/WIN32.bsc</OutputFile>
-    </Bscmake>
-  </ItemDefinitionGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
-  <ImportGroup Label="ExtensionTargets">
-  </ImportGroup>
-  <ItemGroup>
-    <ClInclude Include="..\..\..\..\..\demos\dev_mode_key_provisioning\include\aws_dev_mode_key_provisioning.h" />
-    <ClInclude Include="..\..\..\..\..\demos\include\aws_application_version.h" />
-    <ClInclude Include="..\..\..\..\..\demos\include\aws_clientcredential.h" />
-    <ClInclude Include="..\..\..\..\..\demos\include\aws_clientcredential_keys.h" />
-    <ClInclude Include="..\..\..\..\..\demos\include\aws_demo.h" />
-    <ClInclude Include="..\..\..\..\..\demos\include\aws_iot_demo_network.h" />
-    <ClInclude Include="..\..\..\..\..\demos\include\aws_ota_codesigner_certificate.h" />
-    <ClInclude Include="..\..\..\..\..\demos\include\aws_wifi_connect_task.h" />
-    <ClInclude Include="..\..\..\..\..\demos\include\iot_config_common.h" />
-    <ClInclude Include="..\..\..\..\..\demos\include\iot_demo_logging.h" />
-    <ClInclude Include="..\..\..\..\..\demos\include\iot_demo_runner.h" />
-    <ClInclude Include="..\..\..\..\..\demos\network_manager\iot_network_manager_private.h" />
-    <ClInclude Include="..\..\..\..\..\demos\tcp\aws_tcp_echo_client_single_tasks.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\atomic.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\deprecated_definitions.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\event_groups.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\FreeRTOS.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\list.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\message_buffer.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\mpu_prototypes.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\mpu_wrappers.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\portable.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\projdefs.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\queue.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\semphr.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\stack_macros.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\stream_buffer.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\task.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\timers.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\portable\MSVC-MingW\portmacro.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\jsmn\jsmn.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\aes.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\aesni.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\arc4.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\asn1.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\asn1write.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\base64.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\bignum.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\blowfish.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\bn_mul.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\camellia.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ccm.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\certs.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\check_config.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cipher.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cipher_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cmac.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\compat-1.3.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\config.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ctr_drbg.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\debug.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\des.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\dhm.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecdh.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecdsa.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecjpake.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecp.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecp_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\entropy.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\entropy_poll.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\error.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\gcm.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\havege.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\hmac_drbg.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md2.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md4.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md5.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\memory_buffer_alloc.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\net.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\net_sockets.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\oid.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\padlock.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pem.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pk.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pkcs12.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pkcs5.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pk_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform_time.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform_util.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ripemd160.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\rsa.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\rsa_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha1.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha256.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha512.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_cache.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_ciphersuites.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_cookie.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_ticket.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\threading.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\timing.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\version.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_crl.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_crt.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_csr.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\xtea.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\assert_p.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cbor.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborconstants_p.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\compilersupport_p.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\extract_number_p.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\math_support_p.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include\trcHardwarePort.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include\trcKernelPort.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include\trcPortDefines.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include\trcRecorder.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\pkcs11\include\iot_pkcs11_pal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls\threading_alt.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_network_freertos.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_network_ble.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_platform_types_afr.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_clock.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_metrics.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_network.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_threads.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\types\iot_platform_types.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\errno.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\fcntl.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\mqueue.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\pthread.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\sched.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\semaphore.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\signal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\sys\types.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\time.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\unistd.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\utils.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets_config_defaults.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets_wrapper_metrics.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\include\aws_defender.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\include\aws_iot_defender.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\private\aws_iot_defender_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\aws_iot_shadow.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\aws_shadow.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\types\aws_iot_shadow_types.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_shadow_config_defaults.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\private\aws_iot_shadow_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_appversion32.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_logging_task.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_atomic.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_init.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_linear_containers.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_logging_setup.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_taskpool.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_default_root_certificates.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_doubly_linked_list.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_lib_init.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_error.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_logging.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_static_memory.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_taskpool_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\types\iot_network_types.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\types\iot_taskpool_types.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt_agent.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt_agent_config_defaults.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt_config_defaults.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt_lib.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\types\iot_mqtt_types.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\private\iot_mqtt_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\include\iot_json_utils.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\include\iot_serializer.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include\aws_ggd_config_defaults.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include\aws_greengrass_discovery.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_helper_secure_connect.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\include\aws_iot_ota_agent.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\include\aws_ota_types.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_agent_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_pal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\include\iot_crypto.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_portable_default.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_types.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOSIPConfigDefaults.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_ARP.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_DHCP.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_DNS.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_errno_TCP.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_IP.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_IP_Private.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_Sockets.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_Stream_Buffer.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_TCP_IP.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_TCP_WIN.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_UDP_IP.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\IPTraceMacroDefaults.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\NetworkBufferManagement.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\NetworkInterface.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\Compiler\MSVC\pack_struct_end.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\Compiler\MSVC\pack_struct_start.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\include\iot_pkcs11.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\include\iot_tls.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\include\iot_pki_utils.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\include\iot_system_init.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_demo_logging.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\aws_bufferpool_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\aws_demo_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\aws_ggd_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\aws_iot_network_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\iot_mqtt_agent_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\aws_mqtt_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\aws_ota_agent_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\aws_secure_sockets_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\aws_shadow_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\FreeRTOSConfig.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\FreeRTOSIPConfig.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\iot_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\iot_pkcs11_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\trcConfig.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\trcSnapshotConfig.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\ports\posix\FreeRTOS_POSIX_portable.h" />
-  </ItemGroup>
-  <ItemGroup>
-    <ClCompile Include="..\..\..\..\..\demos\defender\aws_iot_demo_defender.c" />
-    <ClCompile Include="..\..\..\..\..\demos\demo_runner\aws_demo.c" />
-    <ClCompile Include="..\..\..\..\..\demos\demo_runner\aws_demo_network_addr.c" />
-    <ClCompile Include="..\..\..\..\..\demos\demo_runner\aws_demo_version.c" />
-    <ClCompile Include="..\..\..\..\..\demos\demo_runner\iot_demo_freertos.c" />
-    <ClCompile Include="..\..\..\..\..\demos\demo_runner\iot_demo_runner.c" />
-    <ClCompile Include="..\..\..\..\..\demos\dev_mode_key_provisioning\src\aws_dev_mode_key_provisioning.c" />
-    <ClCompile Include="..\..\..\..\..\demos\greengrass_connectivity\aws_greengrass_discovery_demo.c" />
-    <ClCompile Include="..\..\..\..\..\demos\mqtt\iot_demo_mqtt.c" />
-    <ClCompile Include="..\..\..\..\..\demos\network_manager\aws_iot_demo_network.c" />
-    <ClCompile Include="..\..\..\..\..\demos\network_manager\aws_iot_network_manager.c" />
-    <ClCompile Include="..\..\..\..\..\demos\ota\aws_iot_ota_update_demo.c" />
-    <ClCompile Include="..\..\..\..\..\demos\posix\aws_posix_demo.c" />
-    <ClCompile Include="..\..\..\..\..\demos\shadow\aws_iot_demo_shadow.c" />
-    <ClCompile Include="..\..\..\..\..\demos\tcp\aws_tcp_echo_client_single_task.c" />
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\event_groups.c" />
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\list.c" />
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\portable\MemMang\heap_4.c" />
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\portable\MSVC-MingW\port.c" />
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\queue.c" />
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\stream_buffer.c" />
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\tasks.c" />
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\timers.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\jsmn\jsmn.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\aes.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\aesni.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\arc4.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\asn1parse.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\asn1write.c">
-      <WarningLevel Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">TurnOffAllWarnings</WarningLevel>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\base64.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\bignum.c">
-      <WarningLevel Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">TurnOffAllWarnings</WarningLevel>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\blowfish.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\camellia.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ccm.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\certs.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cipher.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cipher_wrap.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cmac.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ctr_drbg.c">
-      <WarningLevel Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">TurnOffAllWarnings</WarningLevel>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\debug.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\des.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\dhm.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecdh.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecdsa.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecjpake.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecp.c">
-      <WarningLevel Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">TurnOffAllWarnings</WarningLevel>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecp_curves.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\entropy.c">
-      <WarningLevel Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">TurnOffAllWarnings</WarningLevel>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\entropy_poll.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\error.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\gcm.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\havege.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\hmac_drbg.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md.c">
-      <WarningLevel Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">TurnOffAllWarnings</WarningLevel>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md2.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md4.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md5.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md_wrap.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\memory_buffer_alloc.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\net_sockets.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\oid.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\padlock.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pem.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pk.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkcs12.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkcs5.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkparse.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkwrite.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pk_wrap.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\platform.c">
-      <WarningLevel Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">TurnOffAllWarnings</WarningLevel>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\platform_util.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ripemd160.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\rsa.c">
-      <WarningLevel Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">TurnOffAllWarnings</WarningLevel>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\rsa_internal.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha1.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha256.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha512.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cache.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_ciphersuites.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cli.c">
-      <WarningLevel Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">TurnOffAllWarnings</WarningLevel>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cookie.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_srv.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_ticket.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_tls.c">
-      <WarningLevel Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">TurnOffAllWarnings</WarningLevel>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\threading.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\timing.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\version.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\version_features.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509write_crt.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509write_csr.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_create.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_crl.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_crt.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_csr.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\xtea.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\utils\mbedtls_utils.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborencoder.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborencoder_close_container_checked.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborerrorstrings.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborparser.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborparser_dup_string.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborpretty.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\trcKernelPort.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\trcSnapshotRecorder.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls\iot_pkcs11_mbedtls.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_clock_freertos.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_metrics.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_network_freertos.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_threads_freertos.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\secure_sockets\freertos_plus_tcp\iot_secure_sockets.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_api.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_collector.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_mqtt.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_api.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_operation.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_parser.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_static_memory.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_subscription.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_shadow.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_device_metrics.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_init.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_static_memory_common.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\logging\iot_logging.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\taskpool\iot_taskpool.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\taskpool\iot_taskpool_static_memory.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_agent.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_api.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_network.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_operation.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_serialize.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_static_memory.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_subscription.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_validate.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\cbor\iot_serializer_tinycbor_decoder.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\cbor\iot_serializer_tinycbor_encoder.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\iot_json_utils.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\iot_serializer_static_memory.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\json\iot_serializer_json_decoder.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\json\iot_serializer_json_encoder.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_greengrass_discovery.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_helper_secure_connect.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_iot_ota_agent.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\src\iot_crypto.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_clock.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_mqueue.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_barrier.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_cond.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_mutex.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_sched.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_semaphore.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_timer.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_unistd.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_utils.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_ARP.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_DHCP.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_DNS.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_IP.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_Sockets.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_Stream_Buffer.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_TCP_IP.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_TCP_WIN.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_UDP_IP.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\BufferManagement\BufferAllocation_2.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\NetworkInterface\WinPCap\NetworkInterface.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\src\iot_pkcs11.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\src\iot_tls.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\src\iot_pki_utils.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\src\iot_system_init.c" />
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_demo_logging.c" />
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_entropy_hardware_poll.c" />
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_run-time-stats-utils.c" />
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\main.c" />
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\ports\ota\aws_ota_pal.c" />
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\ports\pkcs11\iot_pkcs11_pal.c" />
-  </ItemGroup>
-</Project>
\ No newline at end of file
+	<ItemGroup Label="ProjectConfigurations">
+		<ProjectConfiguration Include="Debug|Win32">
+			<Configuration>Debug</Configuration>
+			<Platform>Win32</Platform>
+		</ProjectConfiguration>
+	</ItemGroup>
+	<PropertyGroup Label="Globals">
+		<ProjectGuid>{C686325E-3261-42F7-AEB1-DDE5280E1CEB}</ProjectGuid>
+		<ProjectName>aws_demos</ProjectName>
+	</PropertyGroup>
+	<Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props"/>
+	<PropertyGroup Condition="&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|Win32&apos;" Label="Configuration">
+		<ConfigurationType>Application</ConfigurationType>
+		<UseOfMfc>false</UseOfMfc>
+		<CharacterSet>Unicode</CharacterSet>
+		<PlatformToolset>v141</PlatformToolset>
+	</PropertyGroup>
+	<Import Project="$(VCTargetsPath)\Microsoft.Cpp.props"/>
+	<ImportGroup Label="ExtensionSettings"/>
+	<ImportGroup Condition="&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|Win32&apos;" Label="PropertySheets">
+		<Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists(&apos;$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props&apos;)" Label="LocalAppDataPlatform"/>
+		<Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC60.props"/>
+	</ImportGroup>
+	<PropertyGroup Label="UserMacros"/>
+	<PropertyGroup>
+		<_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
+		<OutDir Condition="&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|Win32&apos;">.\Debug\</OutDir>
+		<IntDir Condition="&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|Win32&apos;">.\Debug\</IntDir>
+		<LinkIncremental Condition="&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|Win32&apos;">true</LinkIncremental>
+		<CodeAnalysisRuleSet Condition="&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|Win32&apos;">AllRules.ruleset</CodeAnalysisRuleSet>
+	</PropertyGroup>
+	<ItemDefinitionGroup Condition="&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|Win32&apos;">
+		<Midl>
+			<TypeLibraryName>.\Debug/WIN32.tlb</TypeLibraryName>
+			<HeaderFileName/>
+		</Midl>
+		<ClCompile>
+			<Optimization>Disabled</Optimization>
+			<AdditionalIncludeDirectories>..\..\..\..\..\freertos_kernel\include;..\..\..\..\..\freertos_kernel\portable\MSVC-MingW;..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files;..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code;..\..\..\..\..\demos\include;..\..\..\..\..\demos\network_manager;..\..\..\..\..\libraries\c_sdk\standard\common\include\private;..\..\..\..\..\libraries\c_sdk\standard\common\include;..\..\..\..\..\libraries\abstractions\platform\include;..\..\..\..\..\libraries\abstractions\platform\freertos\include;..\..\..\..\..\libraries\abstractions\secure_sockets\include;..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\test;..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include;..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\Compiler\MSVC;..\..\..\..\..\libraries\freertos_plus\standard\tls\include;..\..\..\..\..\libraries\freertos_plus\standard\crypto\include;..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\include;..\..\..\..\..\libraries\abstractions\pkcs11\include;..\..\..\..\..\libraries\freertos_plus\standard\utils\include;..\..\..\..\..\demos\dev_mode_key_provisioning\include;..\..\..\..\..\libraries\c_sdk\aws\defender\include;..\..\..\..\..\libraries\c_sdk\standard\mqtt\include;..\..\..\..\..\libraries\c_sdk\standard\serializer\include;..\..\..\..\..\libraries\c_sdk\aws\shadow\include;..\..\..\..\..\libraries\c_sdk\standard\https\include;..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include;..\..\..\..\..\libraries\freertos_plus\aws\ota\src;..\..\..\..\..\libraries\freertos_plus\aws\ota\include;..\..\..\..\..\libraries\3rdparty\mbedtls\include;..\..\..\..\..\libraries\abstractions\posix\include;..\..\..\..\..\vendors\pc\boards\windows\ports\posix;..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include;..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include;..\..\..\..\..\libraries\3rdparty\win_pcap;..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls;..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls;..\..\..\..\..\libraries\3rdparty\pkcs11;..\..\..\..\..\libraries\3rdparty\tinycbor;..\..\..\..\..\libraries\3rdparty\http-parser;..\..\..\..\..\libraries\3rdparty\jsmn;</AdditionalIncludeDirectories>
+			<PreprocessorDefinitions>WIN32;_DEBUG;__free_rtos__;_CONSOLE;_WIN32_WINNT=0x0500;WINVER=0x400;_CRT_SECURE_NO_WARNINGS;__PRETTY_FUNCTION__=__FUNCTION__;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+			<MinimalRebuild/>
+			<BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
+			<RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+			<PrecompiledHeaderOutputFile/>
+			<AssemblerListingLocation>.\Debug/</AssemblerListingLocation>
+			<ObjectFileName>.\Debug/</ObjectFileName>
+			<ProgramDataBaseFileName>.\Debug/</ProgramDataBaseFileName>
+			<WarningLevel>Level4</WarningLevel>
+			<SuppressStartupBanner>true</SuppressStartupBanner>
+			<DisableLanguageExtensions>false</DisableLanguageExtensions>
+			<DebugInformationFormat>EditAndContinue</DebugInformationFormat>
+			<AdditionalOptions>/wd4127 /wd4200 /wd4204 /wd4210 %(AdditionalOptions)</AdditionalOptions>
+			<BrowseInformation>true</BrowseInformation>
+			<PrecompiledHeader>NotUsing</PrecompiledHeader>
+			<ExceptionHandling>false</ExceptionHandling>
+			<CompileAs>CompileAsC</CompileAs>
+			<SDLCheck>true</SDLCheck>
+			<MultiProcessorCompilation>true</MultiProcessorCompilation>
+		</ClCompile>
+		<ResourceCompile>
+			<PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+			<Culture>0x0c09</Culture>
+		</ResourceCompile>
+		<Link>
+			<OutputFile>.\Debug/aws_demos.exe</OutputFile>
+			<SuppressStartupBanner>true</SuppressStartupBanner>
+			<GenerateDebugInformation>true</GenerateDebugInformation>
+			<ProgramDatabaseFile>.\Debug/WIN32.pdb</ProgramDatabaseFile>
+			<SubSystem>Console</SubSystem>
+			<TargetMachine>MachineX86</TargetMachine>
+			<AdditionalDependencies>wpcap.lib;%(AdditionalDependencies)</AdditionalDependencies>
+			<AdditionalLibraryDirectories>..\..\..\..\..\libraries\3rdparty\win_pcap</AdditionalLibraryDirectories>
+			<Profile>false</Profile>
+			<ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
+		</Link>
+		<Bscmake>
+			<SuppressStartupBanner>true</SuppressStartupBanner>
+			<OutputFile>.\Debug/WIN32.bsc</OutputFile>
+		</Bscmake>
+	</ItemDefinitionGroup>
+	<Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets"/>
+	<ImportGroup Label="ExtensionTargets"/>
+	<ItemGroup>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\FreeRTOS.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\atomic.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\deprecated_definitions.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\event_groups.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\list.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\message_buffer.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\mpu_prototypes.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\mpu_wrappers.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\portable.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\projdefs.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\queue.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\semphr.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\stack_macros.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\stream_buffer.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\task.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\timers.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\portable\MSVC-MingW\portmacro.h"/>
+		<ClInclude Include="..\..\..\..\..\demos\network_manager\iot_network_manager_private.h"/>
+		<ClInclude Include="..\..\..\..\..\demos\include\aws_application_version.h"/>
+		<ClInclude Include="..\..\..\..\..\demos\include\aws_clientcredential.h"/>
+		<ClInclude Include="..\..\..\..\..\demos\include\aws_clientcredential_keys.h"/>
+		<ClInclude Include="..\..\..\..\..\demos\include\aws_demo.h"/>
+		<ClInclude Include="..\..\..\..\..\demos\include\aws_iot_demo_network.h"/>
+		<ClInclude Include="..\..\..\..\..\demos\include\aws_ota_codesigner_certificate.h"/>
+		<ClInclude Include="..\..\..\..\..\demos\include\iot_config_common.h"/>
+		<ClInclude Include="..\..\..\..\..\demos\include\iot_demo_logging.h"/>
+		<ClInclude Include="..\..\..\..\..\demos\include\iot_demo_runner.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_appversion32.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_init.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_linear_containers.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_logging.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_logging_task.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_logging_setup.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\types\iot_network_types.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_taskpool.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\types\iot_taskpool_types.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_taskpool_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_clock.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_network.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_threads.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\types\iot_platform_types.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_platform_types_freertos.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_metrics.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_network_freertos.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets_config_defaults.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets_wrapper_metrics.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_ARP.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_DHCP.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_DNS.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_errno_TCP.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOSIPConfigDefaults.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_IP.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_IP_Private.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_Sockets.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_Stream_Buffer.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_TCP_IP.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_TCP_WIN.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_UDP_IP.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\IPTraceMacroDefaults.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\NetworkBufferManagement.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\NetworkInterface.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\include\iot_tls.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\include\iot_crypto.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\include\iot_pkcs11.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls\threading_alt.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\include\iot_system_init.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\include\iot_pki_utils.h"/>
+		<ClInclude Include="..\..\..\..\..\demos\dev_mode_key_provisioning\include\aws_dev_mode_key_provisioning.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\private\aws_iot_defender_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\include\aws_iot_defender.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\include\iot_serializer.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\include\iot_json_utils.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\aws_iot_shadow.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_shadow_config_defaults.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\aws_shadow.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_helper_secure_connect.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include\aws_ggd_config_defaults.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include\aws_greengrass_discovery.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_pal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_agent_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\include\aws_iot_ota_agent.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\include\aws_ota_types.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\errno.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\fcntl.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\mqueue.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\pthread.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\sched.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\semaphore.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\signal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\sys\types.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\time.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\unistd.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\utils.h"/>
+		<ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\ports\posix\FreeRTOS_POSIX_portable.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_types.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_portable_default.h"/>
+		<ClInclude Include="..\..\..\..\..\demos\tcp\aws_tcp_echo_client_single_tasks.h"/>
+		<ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_demo_logging.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\aes.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\aesni.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\arc4.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\asn1.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\asn1write.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\base64.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\bignum.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\blowfish.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\bn_mul.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\camellia.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ccm.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\certs.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\check_config.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cipher.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cipher_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cmac.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\compat-1.3.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\config.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ctr_drbg.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\debug.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\des.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\dhm.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecdh.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecdsa.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecjpake.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecp.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecp_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\entropy.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\entropy_poll.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\error.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\gcm.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\havege.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\hmac_drbg.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md2.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md4.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md5.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\memory_buffer_alloc.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\net.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\net_sockets.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\oid.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\padlock.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pem.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pk.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pk_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pkcs12.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pkcs5.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform_time.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform_util.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ripemd160.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\rsa.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\rsa_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha1.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha256.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha512.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_cache.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_ciphersuites.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_cookie.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_ticket.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\threading.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\timing.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\version.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_crl.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_crt.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_csr.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\xtea.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\pkcs11\pkcs11.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\pkcs11\pkcs11f.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\pkcs11\pkcs11t.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\http-parser\http_parser.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\jsmn\jsmn.h"/>
+	</ItemGroup>
+	<ItemGroup>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\event_groups.c"/>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\list.c"/>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\queue.c"/>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\stream_buffer.c"/>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\tasks.c"/>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\timers.c"/>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\portable\MSVC-MingW\port.c"/>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\portable\MemMang\heap_4.c"/>
+		<ClCompile Include="..\..\..\..\..\demos\demo_runner\aws_demo_network_addr.c"/>
+		<ClCompile Include="..\..\..\..\..\demos\demo_runner\aws_demo_version.c"/>
+		<ClCompile Include="..\..\..\..\..\demos\demo_runner\aws_demo.c"/>
+		<ClCompile Include="..\..\..\..\..\demos\network_manager\aws_iot_network_manager.c"/>
+		<ClCompile Include="..\..\..\..\..\demos\network_manager\aws_iot_demo_network.c"/>
+		<ClCompile Include="..\..\..\..\..\demos\demo_runner\iot_demo_freertos.c"/>
+		<ClCompile Include="..\..\..\..\..\demos\demo_runner\iot_demo_runner.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_init.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\logging\iot_logging.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_static_memory_common.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_device_metrics.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\taskpool\iot_taskpool.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\taskpool\iot_taskpool_static_memory.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_clock_freertos.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_threads_freertos.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_metrics.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_network_freertos.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\secure_sockets\freertos_plus_tcp\iot_secure_sockets.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_ARP.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_DHCP.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_DNS.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_IP.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_Sockets.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_Stream_Buffer.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_TCP_IP.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_TCP_WIN.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_UDP_IP.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\BufferManagement\BufferAllocation_2.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\NetworkInterface\WinPCap\NetworkInterface.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\src\iot_tls.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\src\iot_crypto.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\src\iot_pkcs11.c"/>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\ports\pkcs11\iot_pkcs11_pal.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls\iot_pkcs11_mbedtls.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\src\iot_system_init.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\src\iot_pki_utils.c"/>
+		<ClCompile Include="..\..\..\..\..\demos\dev_mode_key_provisioning\src\aws_dev_mode_key_provisioning.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_api.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_collector.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_mqtt.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_v1.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_api.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_network.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_operation.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_serialize.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_static_memory.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_subscription.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_validate.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_agent.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\cbor\iot_serializer_tinycbor_decoder.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\cbor\iot_serializer_tinycbor_encoder.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\json\iot_serializer_json_decoder.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\json\iot_serializer_json_encoder.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\iot_serializer_static_memory.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\iot_json_utils.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_api.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_operation.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_parser.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_static_memory.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_subscription.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_shadow.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\src\iot_https_client.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\src\iot_https_utils.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_greengrass_discovery.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_helper_secure_connect.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_iot_ota_agent.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\base64.c"/>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\ports\ota\aws_ota_pal.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_clock.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_mqueue.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_barrier.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_cond.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_mutex.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_sched.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_semaphore.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_timer.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_unistd.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_utils.c"/>
+		<ClCompile Include="..\..\..\..\..\demos\defender\aws_iot_demo_defender.c"/>
+		<ClCompile Include="..\..\..\..\..\demos\greengrass_connectivity\aws_greengrass_discovery_demo.c"/>
+		<ClCompile Include="..\..\..\..\..\demos\https\iot_demo_https_s3_download_sync.c"/>
+		<ClCompile Include="..\..\..\..\..\demos\https\iot_demo_https_s3_download_async.c"/>
+		<ClCompile Include="..\..\..\..\..\demos\https\iot_demo_https_common.c"/>
+		<ClCompile Include="..\..\..\..\..\demos\mqtt\iot_demo_mqtt.c"/>
+		<ClCompile Include="..\..\..\..\..\demos\ota\aws_iot_ota_update_demo.c"/>
+		<ClCompile Include="..\..\..\..\..\demos\shadow\aws_iot_demo_shadow.c"/>
+		<ClCompile Include="..\..\..\..\..\demos\tcp\aws_tcp_echo_client_single_task.c"/>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\main.c"/>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_demo_logging.c"/>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_entropy_hardware_poll.c"/>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_run-time-stats-utils.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\trcKernelPort.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\trcSnapshotRecorder.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\aes.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\aesni.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\arc4.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\asn1parse.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\asn1write.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\bignum.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\blowfish.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\camellia.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ccm.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\certs.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cipher.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cipher_wrap.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cmac.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ctr_drbg.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\debug.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\des.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\dhm.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecdh.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecdsa.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecjpake.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecp.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecp_curves.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\entropy.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\entropy_poll.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\error.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\gcm.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\havege.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\hmac_drbg.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md2.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md4.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md5.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md_wrap.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\memory_buffer_alloc.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\net_sockets.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\oid.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\padlock.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pem.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pk.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pk_wrap.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkcs12.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkcs5.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkparse.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkwrite.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\platform.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\platform_util.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ripemd160.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\rsa.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\rsa_internal.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha1.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha256.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha512.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cache.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_ciphersuites.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cli.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cookie.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_srv.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_ticket.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_tls.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\threading.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\timing.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\version.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\version_features.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_create.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_crl.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_crt.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_csr.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509write_crt.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509write_csr.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\xtea.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\utils\mbedtls_utils.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborpretty.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborencoder.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborencoder_close_container_checked.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborerrorstrings.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborparser.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborparser_dup_string.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\http-parser\http_parser.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\jsmn\jsmn.c"/>
+	</ItemGroup>
+</Project>
diff --git a/projects/pc/windows/visual_studio/aws_demos/aws_demos.vcxproj.filters b/projects/pc/windows/visual_studio/aws_demos/aws_demos.vcxproj.filters
index 6c0674cf9..ad91d39fb 100644
--- a/projects/pc/windows/visual_studio/aws_demos/aws_demos.vcxproj.filters
+++ b/projects/pc/windows/visual_studio/aws_demos/aws_demos.vcxproj.filters
@@ -1,1542 +1,1209 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <ItemGroup>
-    <Filter Include="config_files">
-      <UniqueIdentifier>{d4dcf3a2-3b04-421e-a9b4-682eb9c701e3}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="freertos_kernel">
-      <UniqueIdentifier>{a3c324a7-7658-4e12-bb2f-d51abbd075d2}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="freertos_kernel\include">
-      <UniqueIdentifier>{505dc106-4bf4-43ef-8f99-53598dc3da51}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="freertos_kernel\portable">
-      <UniqueIdentifier>{297d5128-635a-4291-a54d-06aff74ea0ca}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="freertos_kernel\portable\MemMang">
-      <UniqueIdentifier>{0a6f227d-9cb7-486d-b5bd-2922704de232}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="freertos_kernel\portable\MSVC-MingW">
-      <UniqueIdentifier>{194636ac-dedf-4e33-bbbb-bbeb1af73237}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="application_code">
-      <UniqueIdentifier>{95399cf8-0b6b-43c9-b087-b5ac0cc14496}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="application_code\src">
-      <UniqueIdentifier>{0b4eca41-2de0-4b15-9c47-272f39143a20}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="demos">
-      <UniqueIdentifier>{c71a539c-0daa-4757-8abc-7f2ad0f15647}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="demos\include">
-      <UniqueIdentifier>{e90a4da0-32d5-452a-83ef-b721d157d12f}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="application_code\include">
-      <UniqueIdentifier>{ff443665-1985-4ead-91ce-a0d2a7c196e9}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="demos\network_manager">
-      <UniqueIdentifier>{34fe36ff-bca7-433e-90c3-d8e4f63a235b}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="demos\demo_runner">
-      <UniqueIdentifier>{da9270a5-b170-44db-a85d-caafe54a78a8}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="demos\mqtt">
-      <UniqueIdentifier>{11fdb31f-2c95-44e1-b156-373c6d005d81}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="demos\shadow">
-      <UniqueIdentifier>{001fbd3d-8261-4d5b-8754-a6689ce48ef1}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="demos\greengrass_connectivity">
-      <UniqueIdentifier>{d9857008-5c5f-4940-bd6c-93a5cab78a8d}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="demos\tcp">
-      <UniqueIdentifier>{e487c29f-c5f8-4a06-a262-ccbe5f3412b0}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="demos\defender">
-      <UniqueIdentifier>{b72d0d4f-01e0-4054-8c58-048a7fd72551}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="demos\ota">
-      <UniqueIdentifier>{384de06a-7a2f-49e9-b68d-4e9405da2e87}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries">
-      <UniqueIdentifier>{9626cb6c-a5ee-4302-973f-d25c30487121}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions">
-      <UniqueIdentifier>{a8e08eaf-a20b-43e7-965b-0f602c5610a8}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\platform">
-      <UniqueIdentifier>{c567decb-a603-4e4e-843f-741ba3157178}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\platform\freertos">
-      <UniqueIdentifier>{106dc680-2922-4974-9851-fca4f6d7e97e}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\platform\include">
-      <UniqueIdentifier>{96f3e42d-7dc4-4621-9dc3-12070a1df3c4}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\platform\include\platform">
-      <UniqueIdentifier>{45bc3557-89c2-48f9-ad73-5ba5694e7b01}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\platform\include\types">
-      <UniqueIdentifier>{691efb6a-d06c-4b1e-88b4-31c03d8e0dde}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\platform\freertos\include">
-      <UniqueIdentifier>{fd88e2a7-d7ff-413a-89a7-1b51e1ffcef3}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\platform\freertos\include\platform">
-      <UniqueIdentifier>{9e6c0b52-cae6-4ee8-9be3-0c7c9698e099}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\pkcs11">
-      <UniqueIdentifier>{01ca8617-880c-43e8-adcc-fd49747260d4}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\pkcs11\include">
-      <UniqueIdentifier>{93746f6c-d2f1-44f5-a206-c7339e64c497}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\pkcs11\mbedtls">
-      <UniqueIdentifier>{08d37924-0dea-4a0a-a238-42daff70b853}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\secure_sockets">
-      <UniqueIdentifier>{846030f0-76e7-4b91-ac65-4141e81eb7b5}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\secure_sockets\include">
-      <UniqueIdentifier>{3b395ac6-9237-43b7-a76a-832d6f06eaee}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\secure_sockets\freertos_plus_tcp">
-      <UniqueIdentifier>{ba8ccebd-82a9-44e7-820c-866f065b994d}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\posix">
-      <UniqueIdentifier>{455a99a0-c267-451d-9af9-7ec7c60ffa0b}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\posix\include">
-      <UniqueIdentifier>{a197a33d-4999-40e8-a004-924f15fc6ee2}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\posix\include\FreeRTOS_POSIX">
-      <UniqueIdentifier>{b4347de2-373d-4ea6-ade3-e28e5c4c103a}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\posix\include\FreeRTOS_POSIX\sys">
-      <UniqueIdentifier>{14497985-370e-4926-a2da-0dce7c4c987a}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty">
-      <UniqueIdentifier>{1010e21d-014f-4208-b171-281a4a3f1959}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\tracealyzer_recorder">
-      <UniqueIdentifier>{7a882284-1777-4564-a019-c78f7c784df8}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\tracealyzer_recorder\Include">
-      <UniqueIdentifier>{849d3ac0-6f1a-47c0-8128-e48a62b3db3e}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus">
-      <UniqueIdentifier>{3c197d4f-d15b-497a-9f75-3f8ad3c8ba37}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard">
-      <UniqueIdentifier>{df891f95-b06b-4cb6-bc98-22cbcb388c46}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\freertos_plus_posix">
-      <UniqueIdentifier>{5c36bed6-9f71-40e3-866b-d2fce36f24c6}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\freertos_plus_posix\include">
-      <UniqueIdentifier>{93d8b4bd-6428-435a-8a95-f9142ffcf11f}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\freertos_plus_posix\source">
-      <UniqueIdentifier>{a17b7f59-e303-4832-9640-8c9f564b4ee5}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp">
-      <UniqueIdentifier>{37b12b9f-fff8-4ba0-abb6-95a0680804b0}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\include">
-      <UniqueIdentifier>{15914cc5-b3d2-4dfe-8e9e-bb907faa8bc5}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\source">
-      <UniqueIdentifier>{b5e05614-13e4-4698-832d-fd47d6f59171}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\source\portable">
-      <UniqueIdentifier>{a9fa1ce1-3d2a-4c04-b27e-6893fe859495}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\MSVC">
-      <UniqueIdentifier>{96116568-1e7e-4e49-92d8-a5b334b29c71}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="ports">
-      <UniqueIdentifier>{59e5c77b-b62b-4a3b-8baf-e877d9418312}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="ports\posix">
-      <UniqueIdentifier>{aabf0a38-8289-48ed-b37f-55d4e2064e11}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="ports\ota">
-      <UniqueIdentifier>{b3d3289e-efd8-447e-869d-6839d475ee87}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="ports\pkcs11">
-      <UniqueIdentifier>{590688f4-ba8c-4fe2-92a6-6cf33cc259dc}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\crypto">
-      <UniqueIdentifier>{2499b276-e558-46dd-baa0-d83e2f701d8c}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\crypto\include">
-      <UniqueIdentifier>{5c3182b6-9ad1-4389-a395-b115d020ed3c}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\crypto\src">
-      <UniqueIdentifier>{fc70a65d-369d-45b9-98e9-3e86eee557b8}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\tls">
-      <UniqueIdentifier>{b201c3b2-cf7a-481b-b754-b05e8d3e03b7}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\tls\include">
-      <UniqueIdentifier>{fb5d7d41-f5d7-45ee-a237-bf9113c23ae5}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\tls\src">
-      <UniqueIdentifier>{55f7c5b6-ecb7-41d8-809e-1bef18986f89}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\utils">
-      <UniqueIdentifier>{7e104c3c-16a9-48fd-a26f-658e733eea66}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\utils\include">
-      <UniqueIdentifier>{ae93a3e2-42cf-45da-8fa6-691549f3a8bc}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\utils\src">
-      <UniqueIdentifier>{f39b2e73-b0c8-4851-a1e8-e7f4533c1eb6}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\aws">
-      <UniqueIdentifier>{bd1d7f09-510d-47f8-9c1e-015d6fd6cb09}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\aws\ota">
-      <UniqueIdentifier>{21ea61fb-c73b-4371-806f-80b1d4c71178}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\aws\ota\include">
-      <UniqueIdentifier>{d7949455-6323-4bc9-a00d-edcbf88e3a48}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\aws\ota\src">
-      <UniqueIdentifier>{07306804-02bc-4234-9b0a-2c156fd0e7cf}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\mbedtls">
-      <UniqueIdentifier>{9e4e652f-7cad-4bc8-9a49-ae024a7ee847}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\mbedtls\library">
-      <UniqueIdentifier>{a199452a-2db3-4448-bee1-31166c858404}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\mbedtls\include">
-      <UniqueIdentifier>{62f1f2f8-84c3-45fd-9956-dc6e8a7a294d}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\mbedtls\include\mbedtls">
-      <UniqueIdentifier>{b7e82a36-b3e7-4d9d-8407-d7d3ad189710}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\tinycbor">
-      <UniqueIdentifier>{e098621a-398e-4bb8-9482-bc5c94c56073}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\jsmn">
-      <UniqueIdentifier>{c2250fa3-2026-4a4f-9cb5-dca3beb97d4f}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk">
-      <UniqueIdentifier>{ac175f1e-dd00-4b71-93c9-93367ee98f37}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard">
-      <UniqueIdentifier>{bd44b2b2-3361-43da-b795-c735240ef819}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\common">
-      <UniqueIdentifier>{e6bbae13-ee66-469e-af6c-b2ff1b6b207e}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\common\include">
-      <UniqueIdentifier>{23d8e0d2-6f40-4197-a127-be570bd24669}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\common\include\private">
-      <UniqueIdentifier>{4b27f679-3c90-4c0e-ac5f-87c361ea03bd}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\common\include\types">
-      <UniqueIdentifier>{e2b35fdb-28be-49de-9c08-45c626dfbd99}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\common\taskpool">
-      <UniqueIdentifier>{9ee4e7cc-b834-47e5-896e-346fcd8394cd}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\common\logging">
-      <UniqueIdentifier>{62c05954-86a2-4c6f-a670-fa7b86dd8d33}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\mqtt">
-      <UniqueIdentifier>{6676746e-6315-40f9-b339-d19ca18058a8}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\mqtt\include">
-      <UniqueIdentifier>{0532cb88-2c22-43f1-8d08-2f33caebf2c3}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\mqtt\include\types">
-      <UniqueIdentifier>{8474c068-37bb-4adb-8a41-922f2fdd1961}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\mqtt\src">
-      <UniqueIdentifier>{cd8b6d68-19c4-44ae-9f15-ecc50cdc671f}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\mqtt\src\private">
-      <UniqueIdentifier>{62f371e2-da72-47ae-b5b5-6b4f86dbf810}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\serializer">
-      <UniqueIdentifier>{433213b3-83f4-4392-8d33-8da607016558}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\serializer\include">
-      <UniqueIdentifier>{c73a4888-eb5d-4deb-bb9f-016404e8354f}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\serializer\src">
-      <UniqueIdentifier>{0ece1d53-dadc-4461-bb2d-9e0b504cef86}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\serializer\src\cbor">
-      <UniqueIdentifier>{47e44a36-2f6a-4c8c-81ed-9d60090dc740}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\serializer\src\json">
-      <UniqueIdentifier>{2549675e-3db2-4891-96e9-601034fa714a}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws">
-      <UniqueIdentifier>{8abc0e3d-c03c-4a65-8ff4-0ad0432edb44}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\defender">
-      <UniqueIdentifier>{3b901803-8f7e-4747-b96c-d4b776356464}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\defender\include">
-      <UniqueIdentifier>{72c5c2ef-3828-4526-8eef-b76fafa63ecf}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\defender\src">
-      <UniqueIdentifier>{2982f29c-d6cd-40f9-86b3-2b826bb01f77}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\defender\src\private">
-      <UniqueIdentifier>{d3f62329-fae2-4e90-b521-4ef430404b77}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\shadow">
-      <UniqueIdentifier>{33248a2b-de65-4c91-9a00-4e2ae0e7d625}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\shadow\include">
-      <UniqueIdentifier>{21e7d564-78ee-431b-b92f-46a5727b191a}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\shadow\src">
-      <UniqueIdentifier>{194e5288-f0db-4b3b-80db-67f59dccc636}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\shadow\include\types">
-      <UniqueIdentifier>{af402a08-8e55-4aa6-9bcc-c2141d9945f7}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\shadow\src\private">
-      <UniqueIdentifier>{0ab778b7-aec6-45c1-b307-48e0cfedb9cf}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="demos\posix">
-      <UniqueIdentifier>{f862289b-b0ef-4f6c-9a32-37175c02616a}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\aws\greengrass">
-      <UniqueIdentifier>{5725afd7-0535-409a-a08b-db27b8300fd3}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\aws\greengrass\include">
-      <UniqueIdentifier>{4b9b7217-58ef-463c-a38f-ecebb7109a04}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\aws\greengrass\src">
-      <UniqueIdentifier>{9475faed-5d1f-4aa1-a26d-2357b1f7088b}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="demos\dev_mode_key_provisioning">
-      <UniqueIdentifier>{932fedc8-dc2c-4c42-a3c3-276bb1f7819c}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="demos\dev_mode_key_provisioning\include">
-      <UniqueIdentifier>{23b4b5bb-afbc-45f2-84ed-175c42d87e61}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="demos\dev_mode_key_provisioning\src">
-      <UniqueIdentifier>{c2a6be1f-d472-4ddb-86e3-1c7049d163d9}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\pkcs11">
-      <UniqueIdentifier>{2176b22e-8752-4871-a937-2f35460cc189}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\pkcs11\src">
-      <UniqueIdentifier>{1ba79f9d-87e0-431f-9a86-94da60b369c9}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\pkcs11\include">
-      <UniqueIdentifier>{495a170b-9563-4ac2-bd39-3e7f55b558a7}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\mbedtls\utils">
-      <UniqueIdentifier>{9e7d0369-8038-4655-bd90-890cdf958f5e}</UniqueIdentifier>
-    </Filter>
-  </ItemGroup>
-  <ItemGroup>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_demo_logging.h">
-      <Filter>application_code\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\aws_bufferpool_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\aws_demo_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\aws_ggd_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\aws_iot_network_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\iot_mqtt_agent_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\aws_mqtt_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\aws_ota_agent_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\aws_secure_sockets_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\aws_shadow_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\FreeRTOSConfig.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\FreeRTOSIPConfig.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\iot_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\trcConfig.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\trcSnapshotConfig.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\demos\include\aws_application_version.h">
-      <Filter>demos\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\demos\include\aws_clientcredential.h">
-      <Filter>demos\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\demos\include\aws_clientcredential_keys.h">
-      <Filter>demos\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\demos\include\aws_demo.h">
-      <Filter>demos\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\demos\include\aws_iot_demo_network.h">
-      <Filter>demos\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\demos\include\aws_ota_codesigner_certificate.h">
-      <Filter>demos\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\demos\include\aws_wifi_connect_task.h">
-      <Filter>demos\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\demos\include\iot_config_common.h">
-      <Filter>demos\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\demos\include\iot_demo_logging.h">
-      <Filter>demos\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\demos\include\iot_demo_runner.h">
-      <Filter>demos\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\demos\network_manager\iot_network_manager_private.h">
-      <Filter>demos\network_manager</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\demos\tcp\aws_tcp_echo_client_single_tasks.h">
-      <Filter>demos\tcp</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\atomic.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\deprecated_definitions.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\event_groups.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\FreeRTOS.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\list.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\message_buffer.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\mpu_prototypes.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\mpu_wrappers.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\portable.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\projdefs.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\queue.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\semphr.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\stack_macros.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\stream_buffer.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\task.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\timers.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\portable\MSVC-MingW\portmacro.h">
-      <Filter>freertos_kernel\portable\MSVC-MingW</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_platform_types_afr.h">
-      <Filter>libraries\abstractions\platform\freertos\include\platform</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_network_ble.h">
-      <Filter>libraries\abstractions\platform\freertos\include\platform</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_network_freertos.h">
-      <Filter>libraries\abstractions\platform\freertos\include\platform</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\types\iot_platform_types.h">
-      <Filter>libraries\abstractions\platform\include\types</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_clock.h">
-      <Filter>libraries\abstractions\platform\include\platform</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_metrics.h">
-      <Filter>libraries\abstractions\platform\include\platform</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_network.h">
-      <Filter>libraries\abstractions\platform\include\platform</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_threads.h">
-      <Filter>libraries\abstractions\platform\include\platform</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls\threading_alt.h">
-      <Filter>libraries\abstractions\pkcs11\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets.h">
-      <Filter>libraries\abstractions\secure_sockets\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets_config_defaults.h">
-      <Filter>libraries\abstractions\secure_sockets\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets_wrapper_metrics.h">
-      <Filter>libraries\abstractions\secure_sockets\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\sys\types.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX\sys</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\errno.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\fcntl.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\mqueue.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\pthread.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\sched.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\semaphore.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\signal.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\time.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\unistd.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\utils.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include\trcHardwarePort.h">
-      <Filter>libraries\3rdparty\tracealyzer_recorder\Include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include\trcKernelPort.h">
-      <Filter>libraries\3rdparty\tracealyzer_recorder\Include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include\trcPortDefines.h">
-      <Filter>libraries\3rdparty\tracealyzer_recorder\Include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include\trcRecorder.h">
-      <Filter>libraries\3rdparty\tracealyzer_recorder\Include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_internal.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_portable_default.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_types.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_ARP.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_DHCP.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_DNS.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_errno_TCP.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_IP.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_IP_Private.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_Sockets.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_Stream_Buffer.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_TCP_IP.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_TCP_WIN.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_UDP_IP.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOSIPConfigDefaults.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\IPTraceMacroDefaults.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\NetworkBufferManagement.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\NetworkInterface.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\Compiler\MSVC\pack_struct_end.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\MSVC</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\Compiler\MSVC\pack_struct_start.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\MSVC</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\ports\posix\FreeRTOS_POSIX_portable.h">
-      <Filter>ports\posix</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\include\iot_crypto.h">
-      <Filter>libraries\freertos_plus\standard\crypto\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\include\iot_tls.h">
-      <Filter>libraries\freertos_plus\standard\tls\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\include\iot_system_init.h">
-      <Filter>libraries\freertos_plus\standard\utils\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\include\aws_iot_ota_agent.h">
-      <Filter>libraries\freertos_plus\aws\ota\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\include\aws_ota_types.h">
-      <Filter>libraries\freertos_plus\aws\ota\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_agent_internal.h">
-      <Filter>libraries\freertos_plus\aws\ota\src</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor.h">
-      <Filter>libraries\freertos_plus\aws\ota\src</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor_internal.h">
-      <Filter>libraries\freertos_plus\aws\ota\src</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_pal.h">
-      <Filter>libraries\freertos_plus\aws\ota\src</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\aes.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\aesni.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\arc4.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\asn1.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\asn1write.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\base64.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\bignum.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\blowfish.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\bn_mul.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\camellia.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ccm.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\certs.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\check_config.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cipher.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cipher_internal.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cmac.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\compat-1.3.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\config.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ctr_drbg.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\debug.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\des.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\dhm.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecdh.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecdsa.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecjpake.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecp.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecp_internal.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\entropy.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\entropy_poll.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\error.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\gcm.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\havege.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\hmac_drbg.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md_internal.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md2.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md4.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md5.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\memory_buffer_alloc.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\net.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\net_sockets.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\oid.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\padlock.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pem.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pk.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pk_internal.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pkcs5.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pkcs12.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform_time.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform_util.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ripemd160.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\rsa.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\rsa_internal.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha1.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha256.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha512.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_cache.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_ciphersuites.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_cookie.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_internal.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_ticket.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\threading.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\timing.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\version.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_crl.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_crt.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_csr.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\xtea.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\assert_p.h">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cbor.h">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborconstants_p.h">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\compilersupport_p.h">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\extract_number_p.h">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\math_support_p.h">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\jsmn\jsmn.h">
-      <Filter>libraries\3rdparty\jsmn</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\types\iot_network_types.h">
-      <Filter>libraries\c_sdk\standard\common\include\types</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\types\iot_taskpool_types.h">
-      <Filter>libraries\c_sdk\standard\common\include\types</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_default_root_certificates.h">
-      <Filter>libraries\c_sdk\standard\common\include\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_doubly_linked_list.h">
-      <Filter>libraries\c_sdk\standard\common\include\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_lib_init.h">
-      <Filter>libraries\c_sdk\standard\common\include\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_error.h">
-      <Filter>libraries\c_sdk\standard\common\include\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_logging.h">
-      <Filter>libraries\c_sdk\standard\common\include\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_static_memory.h">
-      <Filter>libraries\c_sdk\standard\common\include\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_taskpool_internal.h">
-      <Filter>libraries\c_sdk\standard\common\include\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_appversion32.h">
-      <Filter>libraries\c_sdk\standard\common\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_logging_task.h">
-      <Filter>libraries\c_sdk\standard\common\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_atomic.h">
-      <Filter>libraries\c_sdk\standard\common\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_init.h">
-      <Filter>libraries\c_sdk\standard\common\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_linear_containers.h">
-      <Filter>libraries\c_sdk\standard\common\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_logging_setup.h">
-      <Filter>libraries\c_sdk\standard\common\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_taskpool.h">
-      <Filter>libraries\c_sdk\standard\common\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt.h">
-      <Filter>libraries\c_sdk\standard\mqtt\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt_lib.h">
-      <Filter>libraries\c_sdk\standard\mqtt\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt_config_defaults.h">
-      <Filter>libraries\c_sdk\standard\mqtt\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt_agent_config_defaults.h">
-      <Filter>libraries\c_sdk\standard\mqtt\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt_agent.h">
-      <Filter>libraries\c_sdk\standard\mqtt\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\types\iot_mqtt_types.h">
-      <Filter>libraries\c_sdk\standard\mqtt\include\types</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\private\iot_mqtt_internal.h">
-      <Filter>libraries\c_sdk\standard\mqtt\src\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\include\iot_json_utils.h">
-      <Filter>libraries\c_sdk\standard\serializer\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\include\iot_serializer.h">
-      <Filter>libraries\c_sdk\standard\serializer\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\include\aws_defender.h">
-      <Filter>libraries\c_sdk\aws\defender\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\include\aws_iot_defender.h">
-      <Filter>libraries\c_sdk\aws\defender\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\private\aws_iot_defender_internal.h">
-      <Filter>libraries\c_sdk\aws\defender\src\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\aws_iot_shadow.h">
-      <Filter>libraries\c_sdk\aws\shadow\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\aws_shadow.h">
-      <Filter>libraries\c_sdk\aws\shadow\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\types\aws_iot_shadow_types.h">
-      <Filter>libraries\c_sdk\aws\shadow\include\types</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_shadow_config_defaults.h">
-      <Filter>libraries\c_sdk\aws\shadow\src</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\private\aws_iot_shadow_internal.h">
-      <Filter>libraries\c_sdk\aws\shadow\src\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include\aws_ggd_config_defaults.h">
-      <Filter>libraries\freertos_plus\aws\greengrass\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include\aws_greengrass_discovery.h">
-      <Filter>libraries\freertos_plus\aws\greengrass\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_helper_secure_connect.h">
-      <Filter>libraries\freertos_plus\aws\greengrass\src</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\demos\dev_mode_key_provisioning\include\aws_dev_mode_key_provisioning.h">
-      <Filter>demos\dev_mode_key_provisioning\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\pkcs11\include\iot_pkcs11_pal.h">
-      <Filter>libraries\abstractions\pkcs11\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\include\iot_pkcs11.h">
-      <Filter>libraries\freertos_plus\standard\pkcs11\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\include\iot_pki_utils.h">
-      <Filter>libraries\freertos_plus\standard\utils\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\config_files\iot_pkcs11_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-  </ItemGroup>
-  <ItemGroup>
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_demo_logging.c">
-      <Filter>application_code\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_entropy_hardware_poll.c">
-      <Filter>application_code\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_run-time-stats-utils.c">
-      <Filter>application_code\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\main.c">
-      <Filter>application_code\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\demos\defender\aws_iot_demo_defender.c">
-      <Filter>demos\defender</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\demos\demo_runner\aws_demo.c">
-      <Filter>demos\demo_runner</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\demos\demo_runner\aws_demo_network_addr.c">
-      <Filter>demos\demo_runner</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\demos\demo_runner\aws_demo_version.c">
-      <Filter>demos\demo_runner</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\demos\demo_runner\iot_demo_freertos.c">
-      <Filter>demos\demo_runner</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\demos\demo_runner\iot_demo_runner.c">
-      <Filter>demos\demo_runner</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\demos\greengrass_connectivity\aws_greengrass_discovery_demo.c">
-      <Filter>demos\greengrass_connectivity</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\demos\mqtt\iot_demo_mqtt.c">
-      <Filter>demos\mqtt</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\demos\network_manager\aws_iot_demo_network.c">
-      <Filter>demos\network_manager</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\demos\network_manager\aws_iot_network_manager.c">
-      <Filter>demos\network_manager</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\demos\ota\aws_iot_ota_update_demo.c">
-      <Filter>demos\ota</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\demos\shadow\aws_iot_demo_shadow.c">
-      <Filter>demos\shadow</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\demos\tcp\aws_tcp_echo_client_single_task.c">
-      <Filter>demos\tcp</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\event_groups.c">
-      <Filter>freertos_kernel</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\list.c">
-      <Filter>freertos_kernel</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\queue.c">
-      <Filter>freertos_kernel</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\stream_buffer.c">
-      <Filter>freertos_kernel</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\tasks.c">
-      <Filter>freertos_kernel</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\timers.c">
-      <Filter>freertos_kernel</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\portable\MemMang\heap_4.c">
-      <Filter>freertos_kernel\portable\MemMang</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\portable\MSVC-MingW\port.c">
-      <Filter>freertos_kernel\portable\MSVC-MingW</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_clock_freertos.c">
-      <Filter>libraries\abstractions\platform\freertos</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_metrics.c">
-      <Filter>libraries\abstractions\platform\freertos</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_network_freertos.c">
-      <Filter>libraries\abstractions\platform\freertos</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_threads_freertos.c">
-      <Filter>libraries\abstractions\platform\freertos</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls\iot_pkcs11_mbedtls.c">
-      <Filter>libraries\abstractions\pkcs11\mbedtls</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\secure_sockets\freertos_plus_tcp\iot_secure_sockets.c">
-      <Filter>libraries\abstractions\secure_sockets\freertos_plus_tcp</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\trcKernelPort.c">
-      <Filter>libraries\3rdparty\tracealyzer_recorder</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\trcSnapshotRecorder.c">
-      <Filter>libraries\3rdparty\tracealyzer_recorder</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_clock.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_mqueue.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_barrier.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_cond.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_mutex.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_sched.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_semaphore.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_timer.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_unistd.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_utils.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_ARP.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_DHCP.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_DNS.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_IP.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_Sockets.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_Stream_Buffer.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_TCP_IP.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_TCP_WIN.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_UDP_IP.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\BufferManagement\BufferAllocation_2.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source\portable</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\NetworkInterface\WinPCap\NetworkInterface.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source\portable</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\ports\ota\aws_ota_pal.c">
-      <Filter>ports\ota</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\ports\pkcs11\iot_pkcs11_pal.c">
-      <Filter>ports\pkcs11</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\src\iot_crypto.c">
-      <Filter>libraries\freertos_plus\standard\crypto\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\src\iot_tls.c">
-      <Filter>libraries\freertos_plus\standard\tls\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\src\iot_system_init.c">
-      <Filter>libraries\freertos_plus\standard\utils\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_iot_ota_agent.c">
-      <Filter>libraries\freertos_plus\aws\ota\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor.c">
-      <Filter>libraries\freertos_plus\aws\ota\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\aes.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\aesni.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\arc4.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\asn1parse.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\asn1write.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\base64.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\bignum.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\blowfish.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\camellia.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ccm.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\certs.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cipher.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cipher_wrap.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cmac.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ctr_drbg.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\debug.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\des.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\dhm.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecdh.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecdsa.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecjpake.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecp.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecp_curves.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\entropy.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\entropy_poll.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\error.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\gcm.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\havege.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\hmac_drbg.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md_wrap.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md2.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md4.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md5.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\memory_buffer_alloc.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\net_sockets.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\oid.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\padlock.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pem.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pk.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pk_wrap.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkcs5.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkcs12.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkparse.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkwrite.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\platform.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\platform_util.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ripemd160.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\rsa.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\rsa_internal.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha1.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha256.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha512.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cache.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_ciphersuites.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cli.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cookie.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_srv.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_ticket.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_tls.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\threading.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\timing.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\version.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\version_features.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_create.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_crl.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_crt.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_csr.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509write_crt.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509write_csr.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\xtea.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborencoder.c">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborencoder_close_container_checked.c">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborerrorstrings.c">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborparser.c">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborparser_dup_string.c">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborpretty.c">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\jsmn\jsmn.c">
-      <Filter>libraries\3rdparty\jsmn</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\taskpool\iot_taskpool.c">
-      <Filter>libraries\c_sdk\standard\common\taskpool</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\taskpool\iot_taskpool_static_memory.c">
-      <Filter>libraries\c_sdk\standard\common\taskpool</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\logging\iot_logging.c">
-      <Filter>libraries\c_sdk\standard\common\logging</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_init.c">
-      <Filter>libraries\c_sdk\standard\common</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_static_memory_common.c">
-      <Filter>libraries\c_sdk\standard\common</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_agent.c">
-      <Filter>libraries\c_sdk\standard\mqtt\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_api.c">
-      <Filter>libraries\c_sdk\standard\mqtt\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_network.c">
-      <Filter>libraries\c_sdk\standard\mqtt\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_operation.c">
-      <Filter>libraries\c_sdk\standard\mqtt\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_serialize.c">
-      <Filter>libraries\c_sdk\standard\mqtt\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_static_memory.c">
-      <Filter>libraries\c_sdk\standard\mqtt\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_subscription.c">
-      <Filter>libraries\c_sdk\standard\mqtt\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_validate.c">
-      <Filter>libraries\c_sdk\standard\mqtt\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\cbor\iot_serializer_tinycbor_decoder.c">
-      <Filter>libraries\c_sdk\standard\serializer\src\cbor</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\cbor\iot_serializer_tinycbor_encoder.c">
-      <Filter>libraries\c_sdk\standard\serializer\src\cbor</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\json\iot_serializer_json_decoder.c">
-      <Filter>libraries\c_sdk\standard\serializer\src\json</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\json\iot_serializer_json_encoder.c">
-      <Filter>libraries\c_sdk\standard\serializer\src\json</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\iot_json_utils.c">
-      <Filter>libraries\c_sdk\standard\serializer\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\iot_serializer_static_memory.c">
-      <Filter>libraries\c_sdk\standard\serializer\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_api.c">
-      <Filter>libraries\c_sdk\aws\defender\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_collector.c">
-      <Filter>libraries\c_sdk\aws\defender\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_mqtt.c">
-      <Filter>libraries\c_sdk\aws\defender\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_api.c">
-      <Filter>libraries\c_sdk\aws\shadow\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_operation.c">
-      <Filter>libraries\c_sdk\aws\shadow\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_parser.c">
-      <Filter>libraries\c_sdk\aws\shadow\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_static_memory.c">
-      <Filter>libraries\c_sdk\aws\shadow\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_subscription.c">
-      <Filter>libraries\c_sdk\aws\shadow\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_shadow.c">
-      <Filter>libraries\c_sdk\aws\shadow\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\demos\posix\aws_posix_demo.c">
-      <Filter>demos\posix</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_greengrass_discovery.c">
-      <Filter>libraries\freertos_plus\aws\greengrass\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_helper_secure_connect.c">
-      <Filter>libraries\freertos_plus\aws\greengrass\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\demos\dev_mode_key_provisioning\src\aws_dev_mode_key_provisioning.c">
-      <Filter>demos\dev_mode_key_provisioning\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_device_metrics.c">
-      <Filter>libraries\c_sdk\standard\common</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\src\iot_pkcs11.c">
-      <Filter>libraries\freertos_plus\standard\pkcs11\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\src\iot_pki_utils.c">
-      <Filter>libraries\freertos_plus\standard\utils\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\utils\mbedtls_utils.c">
-      <Filter>libraries\3rdparty\mbedtls\utils</Filter>
-    </ClCompile>
-  </ItemGroup>
-</Project>
\ No newline at end of file
+	<ItemGroup>
+		<Filter Include="freertos_kernel"/>
+		<Filter Include="freertos_kernel\include"/>
+		<Filter Include="freertos_kernel\portable\MSVC-MingW"/>
+		<Filter Include="freertos_kernel\portable"/>
+		<Filter Include="freertos_kernel\portable\MemMang"/>
+		<Filter Include="demos\demo_runner"/>
+		<Filter Include="demos"/>
+		<Filter Include="demos\network_manager"/>
+		<Filter Include="demos\include"/>
+		<Filter Include="libraries\c_sdk\standard\common"/>
+		<Filter Include="libraries\c_sdk\standard"/>
+		<Filter Include="libraries\c_sdk"/>
+		<Filter Include="libraries"/>
+		<Filter Include="libraries\c_sdk\standard\common\include"/>
+		<Filter Include="libraries\c_sdk\standard\common\logging"/>
+		<Filter Include="libraries\c_sdk\standard\common\include\private"/>
+		<Filter Include="libraries\c_sdk\standard\common\include\types"/>
+		<Filter Include="libraries\c_sdk\standard\common\taskpool"/>
+		<Filter Include="libraries\abstractions\platform\include\platform"/>
+		<Filter Include="libraries\abstractions\platform\include"/>
+		<Filter Include="libraries\abstractions\platform"/>
+		<Filter Include="libraries\abstractions"/>
+		<Filter Include="libraries\abstractions\platform\include\types"/>
+		<Filter Include="libraries\abstractions\platform\freertos"/>
+		<Filter Include="libraries\abstractions\platform\freertos\include\platform"/>
+		<Filter Include="libraries\abstractions\platform\freertos\include"/>
+		<Filter Include="libraries\abstractions\secure_sockets\include"/>
+		<Filter Include="libraries\abstractions\secure_sockets"/>
+		<Filter Include="libraries\abstractions\secure_sockets\freertos_plus_tcp"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\source"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp"/>
+		<Filter Include="libraries\freertos_plus\standard"/>
+		<Filter Include="libraries\freertos_plus"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\include"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\BufferManagement"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\source\portable"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\NetworkInterface\WinPCap"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\NetworkInterface"/>
+		<Filter Include="libraries\freertos_plus\standard\tls\src"/>
+		<Filter Include="libraries\freertos_plus\standard\tls"/>
+		<Filter Include="libraries\freertos_plus\standard\tls\include"/>
+		<Filter Include="libraries\freertos_plus\standard\crypto\src"/>
+		<Filter Include="libraries\freertos_plus\standard\crypto"/>
+		<Filter Include="libraries\freertos_plus\standard\crypto\include"/>
+		<Filter Include="libraries\freertos_plus\standard\pkcs11\include"/>
+		<Filter Include="libraries\freertos_plus\standard\pkcs11"/>
+		<Filter Include="libraries\freertos_plus\standard\pkcs11\src"/>
+		<Filter Include="vendors\pc\boards\windows\ports\pkcs11"/>
+		<Filter Include="vendors\pc\boards\windows\ports"/>
+		<Filter Include="vendors\pc\boards\windows"/>
+		<Filter Include="vendors\pc\boards"/>
+		<Filter Include="vendors\pc"/>
+		<Filter Include="vendors"/>
+		<Filter Include="libraries\abstractions\pkcs11\mbedtls"/>
+		<Filter Include="libraries\abstractions\pkcs11"/>
+		<Filter Include="libraries\freertos_plus\standard\utils\src"/>
+		<Filter Include="libraries\freertos_plus\standard\utils"/>
+		<Filter Include="libraries\freertos_plus\standard\utils\include"/>
+		<Filter Include="demos\dev_mode_key_provisioning\src"/>
+		<Filter Include="demos\dev_mode_key_provisioning"/>
+		<Filter Include="demos\dev_mode_key_provisioning\include"/>
+		<Filter Include="libraries\c_sdk\aws\defender\src"/>
+		<Filter Include="libraries\c_sdk\aws\defender"/>
+		<Filter Include="libraries\c_sdk\aws"/>
+		<Filter Include="libraries\c_sdk\aws\defender\src\private"/>
+		<Filter Include="libraries\c_sdk\aws\defender\include"/>
+		<Filter Include="libraries\c_sdk\standard\mqtt\src"/>
+		<Filter Include="libraries\c_sdk\standard\mqtt"/>
+		<Filter Include="libraries\c_sdk\standard\serializer\src\cbor"/>
+		<Filter Include="libraries\c_sdk\standard\serializer\src"/>
+		<Filter Include="libraries\c_sdk\standard\serializer"/>
+		<Filter Include="libraries\c_sdk\standard\serializer\src\json"/>
+		<Filter Include="libraries\c_sdk\standard\serializer\include"/>
+		<Filter Include="libraries\c_sdk\aws\shadow\src"/>
+		<Filter Include="libraries\c_sdk\aws\shadow"/>
+		<Filter Include="libraries\c_sdk\aws\shadow\include"/>
+		<Filter Include="libraries\c_sdk\standard\https\src"/>
+		<Filter Include="libraries\c_sdk\standard\https"/>
+		<Filter Include="libraries\freertos_plus\aws\greengrass\src"/>
+		<Filter Include="libraries\freertos_plus\aws\greengrass"/>
+		<Filter Include="libraries\freertos_plus\aws"/>
+		<Filter Include="libraries\freertos_plus\aws\greengrass\include"/>
+		<Filter Include="libraries\freertos_plus\aws\ota\src"/>
+		<Filter Include="libraries\freertos_plus\aws\ota"/>
+		<Filter Include="libraries\freertos_plus\aws\ota\include"/>
+		<Filter Include="libraries\3rdparty\mbedtls\library"/>
+		<Filter Include="libraries\3rdparty\mbedtls"/>
+		<Filter Include="libraries\3rdparty"/>
+		<Filter Include="vendors\pc\boards\windows\ports\ota"/>
+		<Filter Include="libraries\abstractions\posix\include\FreeRTOS_POSIX"/>
+		<Filter Include="libraries\abstractions\posix\include"/>
+		<Filter Include="libraries\abstractions\posix"/>
+		<Filter Include="libraries\abstractions\posix\include\FreeRTOS_POSIX\sys"/>
+		<Filter Include="vendors\pc\boards\windows\ports\posix"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_posix\source"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_posix"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_posix\include"/>
+		<Filter Include="demos\defender"/>
+		<Filter Include="demos\greengrass_connectivity"/>
+		<Filter Include="demos\https"/>
+		<Filter Include="demos\mqtt"/>
+		<Filter Include="demos\ota"/>
+		<Filter Include="demos\shadow"/>
+		<Filter Include="demos\tcp"/>
+		<Filter Include="vendors\pc\boards\windows\aws_demos\application_code"/>
+		<Filter Include="vendors\pc\boards\windows\aws_demos"/>
+		<Filter Include="libraries\3rdparty\tracealyzer_recorder"/>
+		<Filter Include="libraries\3rdparty\mbedtls\utils"/>
+		<Filter Include="libraries\3rdparty\mbedtls\include\mbedtls"/>
+		<Filter Include="libraries\3rdparty\mbedtls\include"/>
+		<Filter Include="libraries\3rdparty\pkcs11"/>
+		<Filter Include="libraries\3rdparty\tinycbor"/>
+		<Filter Include="libraries\3rdparty\http-parser"/>
+		<Filter Include="libraries\3rdparty\jsmn"/>
+	</ItemGroup>
+	<ItemGroup>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\FreeRTOS.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\atomic.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\deprecated_definitions.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\event_groups.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\list.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\message_buffer.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\mpu_prototypes.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\mpu_wrappers.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\portable.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\projdefs.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\queue.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\semphr.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\stack_macros.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\stream_buffer.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\task.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\timers.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\portable\MSVC-MingW\portmacro.h">
+			<Filter>freertos_kernel\portable\MSVC-MingW</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\demos\network_manager\iot_network_manager_private.h">
+			<Filter>demos\network_manager</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\demos\include\aws_application_version.h">
+			<Filter>demos\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\demos\include\aws_clientcredential.h">
+			<Filter>demos\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\demos\include\aws_clientcredential_keys.h">
+			<Filter>demos\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\demos\include\aws_demo.h">
+			<Filter>demos\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\demos\include\aws_iot_demo_network.h">
+			<Filter>demos\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\demos\include\aws_ota_codesigner_certificate.h">
+			<Filter>demos\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\demos\include\iot_config_common.h">
+			<Filter>demos\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\demos\include\iot_demo_logging.h">
+			<Filter>demos\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\demos\include\iot_demo_runner.h">
+			<Filter>demos\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_appversion32.h">
+			<Filter>libraries\c_sdk\standard\common\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_init.h">
+			<Filter>libraries\c_sdk\standard\common\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_linear_containers.h">
+			<Filter>libraries\c_sdk\standard\common\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_logging.h">
+			<Filter>libraries\c_sdk\standard\common\include\private</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_logging_task.h">
+			<Filter>libraries\c_sdk\standard\common\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_logging_setup.h">
+			<Filter>libraries\c_sdk\standard\common\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\types\iot_network_types.h">
+			<Filter>libraries\c_sdk\standard\common\include\types</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_taskpool.h">
+			<Filter>libraries\c_sdk\standard\common\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\types\iot_taskpool_types.h">
+			<Filter>libraries\c_sdk\standard\common\include\types</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_taskpool_internal.h">
+			<Filter>libraries\c_sdk\standard\common\include\private</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_clock.h">
+			<Filter>libraries\abstractions\platform\include\platform</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_network.h">
+			<Filter>libraries\abstractions\platform\include\platform</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_threads.h">
+			<Filter>libraries\abstractions\platform\include\platform</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\types\iot_platform_types.h">
+			<Filter>libraries\abstractions\platform\include\types</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_platform_types_freertos.h">
+			<Filter>libraries\abstractions\platform\freertos\include\platform</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_metrics.h">
+			<Filter>libraries\abstractions\platform\include\platform</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_network_freertos.h">
+			<Filter>libraries\abstractions\platform\freertos\include\platform</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets.h">
+			<Filter>libraries\abstractions\secure_sockets\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets_config_defaults.h">
+			<Filter>libraries\abstractions\secure_sockets\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets_wrapper_metrics.h">
+			<Filter>libraries\abstractions\secure_sockets\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_ARP.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_DHCP.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_DNS.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_errno_TCP.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOSIPConfigDefaults.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_IP.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_IP_Private.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_Sockets.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_Stream_Buffer.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_TCP_IP.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_TCP_WIN.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_UDP_IP.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\IPTraceMacroDefaults.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\NetworkBufferManagement.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\NetworkInterface.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\include\iot_tls.h">
+			<Filter>libraries\freertos_plus\standard\tls\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\include\iot_crypto.h">
+			<Filter>libraries\freertos_plus\standard\crypto\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\include\iot_pkcs11.h">
+			<Filter>libraries\freertos_plus\standard\pkcs11\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls\threading_alt.h">
+			<Filter>libraries\abstractions\pkcs11\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\include\iot_system_init.h">
+			<Filter>libraries\freertos_plus\standard\utils\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\include\iot_pki_utils.h">
+			<Filter>libraries\freertos_plus\standard\utils\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\demos\dev_mode_key_provisioning\include\aws_dev_mode_key_provisioning.h">
+			<Filter>demos\dev_mode_key_provisioning\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\private\aws_iot_defender_internal.h">
+			<Filter>libraries\c_sdk\aws\defender\src\private</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\include\aws_iot_defender.h">
+			<Filter>libraries\c_sdk\aws\defender\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\include\iot_serializer.h">
+			<Filter>libraries\c_sdk\standard\serializer\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\include\iot_json_utils.h">
+			<Filter>libraries\c_sdk\standard\serializer\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\aws_iot_shadow.h">
+			<Filter>libraries\c_sdk\aws\shadow\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_shadow_config_defaults.h">
+			<Filter>libraries\c_sdk\aws\shadow\src</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\aws_shadow.h">
+			<Filter>libraries\c_sdk\aws\shadow\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_helper_secure_connect.h">
+			<Filter>libraries\freertos_plus\aws\greengrass\src</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include\aws_ggd_config_defaults.h">
+			<Filter>libraries\freertos_plus\aws\greengrass\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include\aws_greengrass_discovery.h">
+			<Filter>libraries\freertos_plus\aws\greengrass\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor.h">
+			<Filter>libraries\freertos_plus\aws\ota\src</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_pal.h">
+			<Filter>libraries\freertos_plus\aws\ota\src</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_agent_internal.h">
+			<Filter>libraries\freertos_plus\aws\ota\src</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor_internal.h">
+			<Filter>libraries\freertos_plus\aws\ota\src</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\include\aws_iot_ota_agent.h">
+			<Filter>libraries\freertos_plus\aws\ota\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\include\aws_ota_types.h">
+			<Filter>libraries\freertos_plus\aws\ota\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\errno.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\fcntl.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\mqueue.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\pthread.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\sched.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\semaphore.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\signal.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\sys\types.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX\sys</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\time.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\unistd.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\utils.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\ports\posix\FreeRTOS_POSIX_portable.h">
+			<Filter>vendors\pc\boards\windows\ports\posix</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_types.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_internal.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_portable_default.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\demos\tcp\aws_tcp_echo_client_single_tasks.h">
+			<Filter>demos\tcp</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_demo_logging.h">
+			<Filter>vendors\pc\boards\windows\aws_demos\application_code</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\aes.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\aesni.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\arc4.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\asn1.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\asn1write.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\base64.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\bignum.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\blowfish.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\bn_mul.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\camellia.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ccm.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\certs.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\check_config.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cipher.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cipher_internal.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cmac.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\compat-1.3.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\config.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ctr_drbg.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\debug.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\des.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\dhm.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecdh.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecdsa.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecjpake.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecp.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecp_internal.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\entropy.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\entropy_poll.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\error.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\gcm.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\havege.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\hmac_drbg.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md2.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md4.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md5.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md_internal.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\memory_buffer_alloc.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\net.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\net_sockets.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\oid.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\padlock.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pem.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pk.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pk_internal.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pkcs12.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pkcs5.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform_time.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform_util.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ripemd160.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\rsa.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\rsa_internal.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha1.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha256.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha512.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_cache.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_ciphersuites.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_cookie.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_internal.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_ticket.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\threading.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\timing.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\version.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_crl.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_crt.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_csr.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\xtea.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\pkcs11\pkcs11.h">
+			<Filter>libraries\3rdparty\pkcs11</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\pkcs11\pkcs11f.h">
+			<Filter>libraries\3rdparty\pkcs11</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\pkcs11\pkcs11t.h">
+			<Filter>libraries\3rdparty\pkcs11</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\http-parser\http_parser.h">
+			<Filter>libraries\3rdparty\http-parser</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\jsmn\jsmn.h">
+			<Filter>libraries\3rdparty\jsmn</Filter>
+		</ClInclude>
+	</ItemGroup>
+	<ItemGroup>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\event_groups.c">
+			<Filter>freertos_kernel</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\list.c">
+			<Filter>freertos_kernel</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\queue.c">
+			<Filter>freertos_kernel</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\stream_buffer.c">
+			<Filter>freertos_kernel</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\tasks.c">
+			<Filter>freertos_kernel</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\timers.c">
+			<Filter>freertos_kernel</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\portable\MSVC-MingW\port.c">
+			<Filter>freertos_kernel\portable\MSVC-MingW</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\portable\MemMang\heap_4.c">
+			<Filter>freertos_kernel\portable\MemMang</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\demos\demo_runner\aws_demo_network_addr.c">
+			<Filter>demos\demo_runner</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\demos\demo_runner\aws_demo_version.c">
+			<Filter>demos\demo_runner</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\demos\demo_runner\aws_demo.c">
+			<Filter>demos\demo_runner</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\demos\network_manager\aws_iot_network_manager.c">
+			<Filter>demos\network_manager</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\demos\network_manager\aws_iot_demo_network.c">
+			<Filter>demos\network_manager</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\demos\demo_runner\iot_demo_freertos.c">
+			<Filter>demos\demo_runner</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\demos\demo_runner\iot_demo_runner.c">
+			<Filter>demos\demo_runner</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_init.c">
+			<Filter>libraries\c_sdk\standard\common</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\logging\iot_logging.c">
+			<Filter>libraries\c_sdk\standard\common\logging</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_static_memory_common.c">
+			<Filter>libraries\c_sdk\standard\common</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_device_metrics.c">
+			<Filter>libraries\c_sdk\standard\common</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\taskpool\iot_taskpool.c">
+			<Filter>libraries\c_sdk\standard\common\taskpool</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\taskpool\iot_taskpool_static_memory.c">
+			<Filter>libraries\c_sdk\standard\common\taskpool</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_clock_freertos.c">
+			<Filter>libraries\abstractions\platform\freertos</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_threads_freertos.c">
+			<Filter>libraries\abstractions\platform\freertos</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_metrics.c">
+			<Filter>libraries\abstractions\platform\freertos</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_network_freertos.c">
+			<Filter>libraries\abstractions\platform\freertos</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\secure_sockets\freertos_plus_tcp\iot_secure_sockets.c">
+			<Filter>libraries\abstractions\secure_sockets\freertos_plus_tcp</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_ARP.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_DHCP.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_DNS.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_IP.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_Sockets.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_Stream_Buffer.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_TCP_IP.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_TCP_WIN.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_UDP_IP.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\BufferManagement\BufferAllocation_2.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\BufferManagement</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\NetworkInterface\WinPCap\NetworkInterface.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\NetworkInterface\WinPCap</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\src\iot_tls.c">
+			<Filter>libraries\freertos_plus\standard\tls\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\src\iot_crypto.c">
+			<Filter>libraries\freertos_plus\standard\crypto\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\src\iot_pkcs11.c">
+			<Filter>libraries\freertos_plus\standard\pkcs11\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\ports\pkcs11\iot_pkcs11_pal.c">
+			<Filter>vendors\pc\boards\windows\ports\pkcs11</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls\iot_pkcs11_mbedtls.c">
+			<Filter>libraries\abstractions\pkcs11\mbedtls</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\src\iot_system_init.c">
+			<Filter>libraries\freertos_plus\standard\utils\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\src\iot_pki_utils.c">
+			<Filter>libraries\freertos_plus\standard\utils\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\demos\dev_mode_key_provisioning\src\aws_dev_mode_key_provisioning.c">
+			<Filter>demos\dev_mode_key_provisioning\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_api.c">
+			<Filter>libraries\c_sdk\aws\defender\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_collector.c">
+			<Filter>libraries\c_sdk\aws\defender\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_mqtt.c">
+			<Filter>libraries\c_sdk\aws\defender\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_v1.c">
+			<Filter>libraries\c_sdk\aws\defender\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_api.c">
+			<Filter>libraries\c_sdk\standard\mqtt\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_network.c">
+			<Filter>libraries\c_sdk\standard\mqtt\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_operation.c">
+			<Filter>libraries\c_sdk\standard\mqtt\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_serialize.c">
+			<Filter>libraries\c_sdk\standard\mqtt\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_static_memory.c">
+			<Filter>libraries\c_sdk\standard\mqtt\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_subscription.c">
+			<Filter>libraries\c_sdk\standard\mqtt\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_validate.c">
+			<Filter>libraries\c_sdk\standard\mqtt\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_agent.c">
+			<Filter>libraries\c_sdk\standard\mqtt\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\cbor\iot_serializer_tinycbor_decoder.c">
+			<Filter>libraries\c_sdk\standard\serializer\src\cbor</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\cbor\iot_serializer_tinycbor_encoder.c">
+			<Filter>libraries\c_sdk\standard\serializer\src\cbor</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\json\iot_serializer_json_decoder.c">
+			<Filter>libraries\c_sdk\standard\serializer\src\json</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\json\iot_serializer_json_encoder.c">
+			<Filter>libraries\c_sdk\standard\serializer\src\json</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\iot_serializer_static_memory.c">
+			<Filter>libraries\c_sdk\standard\serializer\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\iot_json_utils.c">
+			<Filter>libraries\c_sdk\standard\serializer\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_api.c">
+			<Filter>libraries\c_sdk\aws\shadow\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_operation.c">
+			<Filter>libraries\c_sdk\aws\shadow\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_parser.c">
+			<Filter>libraries\c_sdk\aws\shadow\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_static_memory.c">
+			<Filter>libraries\c_sdk\aws\shadow\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_subscription.c">
+			<Filter>libraries\c_sdk\aws\shadow\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_shadow.c">
+			<Filter>libraries\c_sdk\aws\shadow\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\src\iot_https_client.c">
+			<Filter>libraries\c_sdk\standard\https\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\src\iot_https_utils.c">
+			<Filter>libraries\c_sdk\standard\https\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_greengrass_discovery.c">
+			<Filter>libraries\freertos_plus\aws\greengrass\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_helper_secure_connect.c">
+			<Filter>libraries\freertos_plus\aws\greengrass\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_iot_ota_agent.c">
+			<Filter>libraries\freertos_plus\aws\ota\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor.c">
+			<Filter>libraries\freertos_plus\aws\ota\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\base64.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\ports\ota\aws_ota_pal.c">
+			<Filter>vendors\pc\boards\windows\ports\ota</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_clock.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_mqueue.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_barrier.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_cond.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_mutex.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_sched.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_semaphore.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_timer.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_unistd.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_utils.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\demos\defender\aws_iot_demo_defender.c">
+			<Filter>demos\defender</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\demos\greengrass_connectivity\aws_greengrass_discovery_demo.c">
+			<Filter>demos\greengrass_connectivity</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\demos\https\iot_demo_https_s3_download_sync.c">
+			<Filter>demos\https</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\demos\https\iot_demo_https_s3_download_async.c">
+			<Filter>demos\https</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\demos\https\iot_demo_https_common.c">
+			<Filter>demos\https</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\demos\mqtt\iot_demo_mqtt.c">
+			<Filter>demos\mqtt</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\demos\ota\aws_iot_ota_update_demo.c">
+			<Filter>demos\ota</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\demos\shadow\aws_iot_demo_shadow.c">
+			<Filter>demos\shadow</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\demos\tcp\aws_tcp_echo_client_single_task.c">
+			<Filter>demos\tcp</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\main.c">
+			<Filter>vendors\pc\boards\windows\aws_demos\application_code</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_demo_logging.c">
+			<Filter>vendors\pc\boards\windows\aws_demos\application_code</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_entropy_hardware_poll.c">
+			<Filter>vendors\pc\boards\windows\aws_demos\application_code</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_run-time-stats-utils.c">
+			<Filter>vendors\pc\boards\windows\aws_demos\application_code</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\trcKernelPort.c">
+			<Filter>libraries\3rdparty\tracealyzer_recorder</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\trcSnapshotRecorder.c">
+			<Filter>libraries\3rdparty\tracealyzer_recorder</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\aes.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\aesni.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\arc4.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\asn1parse.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\asn1write.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\bignum.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\blowfish.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\camellia.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ccm.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\certs.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cipher.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cipher_wrap.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cmac.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ctr_drbg.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\debug.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\des.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\dhm.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecdh.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecdsa.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecjpake.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecp.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecp_curves.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\entropy.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\entropy_poll.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\error.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\gcm.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\havege.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\hmac_drbg.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md2.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md4.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md5.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md_wrap.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\memory_buffer_alloc.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\net_sockets.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\oid.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\padlock.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pem.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pk.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pk_wrap.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkcs12.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkcs5.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkparse.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkwrite.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\platform.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\platform_util.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ripemd160.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\rsa.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\rsa_internal.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha1.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha256.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha512.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cache.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_ciphersuites.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cli.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cookie.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_srv.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_ticket.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_tls.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\threading.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\timing.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\version.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\version_features.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_create.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_crl.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_crt.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_csr.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509write_crt.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509write_csr.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\xtea.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\utils\mbedtls_utils.c">
+			<Filter>libraries\3rdparty\mbedtls\utils</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborpretty.c">
+			<Filter>libraries\3rdparty\tinycbor</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborencoder.c">
+			<Filter>libraries\3rdparty\tinycbor</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborencoder_close_container_checked.c">
+			<Filter>libraries\3rdparty\tinycbor</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborerrorstrings.c">
+			<Filter>libraries\3rdparty\tinycbor</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborparser.c">
+			<Filter>libraries\3rdparty\tinycbor</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborparser_dup_string.c">
+			<Filter>libraries\3rdparty\tinycbor</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\http-parser\http_parser.c">
+			<Filter>libraries\3rdparty\http-parser</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\jsmn\jsmn.c">
+			<Filter>libraries\3rdparty\jsmn</Filter>
+		</ClCompile>
+	</ItemGroup>
+</Project>
diff --git a/projects/pc/windows/visual_studio/aws_tests/aws_tests.vcxproj b/projects/pc/windows/visual_studio/aws_tests/aws_tests.vcxproj
index 1201a530f..a97619b32 100644
--- a/projects/pc/windows/visual_studio/aws_tests/aws_tests.vcxproj
+++ b/projects/pc/windows/visual_studio/aws_tests/aws_tests.vcxproj
@@ -1,540 +1,489 @@
 <?xml version="1.0" encoding="utf-8"?>
 <Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <ItemGroup Label="ProjectConfigurations">
-    <ProjectConfiguration Include="Debug|Win32">
-      <Configuration>Debug</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Debug|x64">
-      <Configuration>Debug</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
-  </ItemGroup>
-  <PropertyGroup Label="Globals">
-    <VCProjectVersion>15.0</VCProjectVersion>
-    <ProjectGuid>{D2737FCB-E8AB-49CA-86AD-D6AB594D428E}</ProjectGuid>
-    <Keyword>Win32Proj</Keyword>
-    <RootNamespace>aws_IoT_MCU_Full_Tests</RootNamespace>
-    <ProjectName>aws_tests</ProjectName>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <UseDebuglib>true</UseDebuglib>
-    <PlatformToolset>v141</PlatformToolset>
-    <CharacterSet>Unicode</CharacterSet>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
-    <ConfigurationType>Application</ConfigurationType>
-    <UseDebuglib>true</UseDebuglib>
-    <PlatformToolset>v141</PlatformToolset>
-    <CharacterSet>Unicode</CharacterSet>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
-  <ImportGroup Label="ExtensionSettings">
-  </ImportGroup>
-  <ImportGroup Label="Shared">
-  </ImportGroup>
-  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <PropertyGroup Label="UserMacros" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <LinkIncremental>true</LinkIncremental>
-    <LibraryPath>$(VC_LibraryPath_x86);$(WindowsSDK_LibraryPath_x86);$(NETFXKitsDir)Lib\um\x86;</LibraryPath>
-    <IncludePath>$(VC_IncludePath);$(WindowsSDK_IncludePath)</IncludePath>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <LinkIncremental>true</LinkIncremental>
-  </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <PrecompiledHeader>NotUsing</PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <Optimization>Disabled</Optimization>
-      <PreprocessorDefinitions>WIN32;UNIT_TESTS;_CRT_SECURE_NO_WARNINGS;_DEBUG;_CONSOLE;UNITY_INCLUDE_CONFIG_H;AMAZON_FREERTOS_ENABLE_UNIT_TESTS;__free_rtos__;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <AdditionalUsingDirectories>
-      </AdditionalUsingDirectories>
-      <AdditionalIncludeDirectories>..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\include;..\..\..\..\..\demos\dev_mode_key_provisioning\include;..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files;..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code;..\..\..\..\..\vendors\pc\boards\windows\ports\posix;..\..\..\..\..\tests\include;..\..\..\..\..\freertos_kernel\include;..\..\..\..\..\freertos_kernel\portable\MSVC-MingW;..\..\..\..\..\libraries\abstractions\pkcs11\include;..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls;..\..\..\..\..\libraries\abstractions\platform\include;..\..\..\..\..\libraries\abstractions\platform\freertos\include;..\..\..\..\..\libraries\abstractions\posix\include;..\..\..\..\..\libraries\abstractions\secure_sockets\include;..\..\..\..\..\libraries\c_sdk\aws\defender\include;..\..\..\..\..\libraries\c_sdk\aws\defender\src\private;..\..\..\..\..\libraries\c_sdk\aws\shadow\include;..\..\..\..\..\libraries\c_sdk\aws\shadow\src;..\..\..\..\..\libraries\c_sdk\standard\common\include;..\..\..\..\..\libraries\c_sdk\standard\common\include\private;..\..\..\..\..\libraries\c_sdk\standard\mqtt\include;..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\access;..\..\..\..\..\libraries\c_sdk\standard\mqtt\src;..\..\..\..\..\libraries\c_sdk\standard\serializer\include;..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include;..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src;..\..\..\..\..\libraries\freertos_plus\aws\greengrass\test;..\..\..\..\..\libraries\freertos_plus\aws\ota\include;..\..\..\..\..\libraries\freertos_plus\aws\ota\src;..\..\..\..\..\libraries\freertos_plus\aws\ota\test;..\..\..\..\..\libraries\freertos_plus\standard\crypto\include;..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include;..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include;..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\Compiler\MSVC;..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\test;..\..\..\..\..\libraries\freertos_plus\standard\provisioning\include;..\..\..\..\..\libraries\freertos_plus\standard\tls\include;..\..\..\..\..\libraries\freertos_plus\standard\utils\include;..\..\..\..\..\libraries\3rdparty\jsmn;..\..\..\..\..\libraries\3rdparty\mbedtls\include;..\..\..\..\..\libraries\3rdparty\pkcs11;..\..\..\..\..\libraries\3rdparty\tinycbor;..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include;..\..\..\..\..\libraries\3rdparty\unity\extras\fixture\src;..\..\..\..\..\libraries\3rdparty\unity\src;..\..\..\..\..\libraries\3rdparty\win_pcap;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <UndefinePreprocessorDefinitions>
-      </UndefinePreprocessorDefinitions>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <MultiProcessorCompilation>true</MultiProcessorCompilation>
-      <CompileAs>CompileAsC</CompileAs>
-    </ClCompile>
-    <Link>
-      <SubSystem>Console</SubSystem>
-      <AdditionalDependencies>wpcap.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <AdditionalLibraryDirectories>..\..\..\..\..\libraries\3rdparty\win_pcap</AdditionalLibraryDirectories>
-    </Link>
-    <PostBuildEvent>
-      <Command>copy $(SolutionDir)..\..\..\..\..\libraries\freertos_plus\aws\ota\test\test_files\*.* $(TEMP)</Command>
-    </PostBuildEvent>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <ClCompile>
-      <PrecompiledHeader>Use</PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <Optimization>Disabled</Optimization>
-      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-    </ClCompile>
-    <Link>
-      <SubSystem>Console</SubSystem>
-    </Link>
-  </ItemDefinitionGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
-  <ImportGroup Label="ExtensionTargets">
-  </ImportGroup>
-  <ItemGroup>
-    <ClInclude Include="..\..\..\..\..\demos\dev_mode_key_provisioning\include\aws_dev_mode_key_provisioning.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\atomic.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\deprecated_definitions.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\event_groups.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\FreeRTOS.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\list.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\message_buffer.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\mpu_prototypes.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\mpu_wrappers.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\portable.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\projdefs.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\queue.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\semphr.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\stack_macros.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\stream_buffer.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\task.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\timers.h" />
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\portable\MSVC-MingW\portmacro.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\jsmn\jsmn.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\aes.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\aesni.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\arc4.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\asn1.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\asn1write.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\base64.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\bignum.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\blowfish.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\bn_mul.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\camellia.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ccm.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\certs.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\check_config.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cipher.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cipher_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cmac.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\compat-1.3.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\config.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ctr_drbg.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\debug.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\des.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\dhm.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecdh.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecdsa.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecjpake.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecp.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecp_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\entropy.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\entropy_poll.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\error.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\gcm.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\havege.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\hmac_drbg.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md2.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md4.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md5.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\memory_buffer_alloc.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\net.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\net_sockets.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\oid.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\padlock.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pem.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pk.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pkcs12.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pkcs5.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pk_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform_time.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform_util.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ripemd160.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\rsa.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\rsa_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha1.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha256.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha512.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_cache.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_ciphersuites.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_cookie.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_ticket.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\threading.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\timing.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\version.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_crl.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_crt.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_csr.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\xtea.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\pkcs11\pkcs11.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\pkcs11\pkcs11f.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\pkcs11\pkcs11t.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\assert_p.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cbor.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborconstants_p.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\compilersupport_p.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\extract_number_p.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\math_support_p.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include\trcHardwarePort.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include\trcKernelPort.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include\trcPortDefines.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include\trcRecorder.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\extras\fixture\src\unity_fixture.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\extras\fixture\src\unity_fixture_internals.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\extras\fixture\src\unity_fixture_malloc_overrides.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\src\unity.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\src\unity_internals.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\pkcs11\include\iot_pkcs11_pal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls\threading_alt.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_network_freertos.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_network_ble.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_platform_types_afr.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_clock.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_metrics.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_network.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_threads.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\types\iot_platform_types.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\errno.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\fcntl.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\mqueue.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\pthread.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\sched.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\semaphore.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\signal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\sys\types.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\time.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\unistd.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\utils.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets_config_defaults.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets_wrapper_metrics.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\include\aws_defender.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\include\aws_iot_defender.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\private\aws_iot_defender_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\aws_iot_shadow.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\aws_shadow.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\types\aws_iot_shadow_types.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_shadow_config_defaults.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\private\aws_iot_shadow_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_appversion32.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_logging_task.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_atomic.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_init.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_linear_containers.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_logging_setup.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_taskpool.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_default_root_certificates.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_doubly_linked_list.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_lib_init.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_error.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_logging.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_static_memory.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_taskpool_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\types\iot_network_types.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\types\iot_taskpool_types.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt_agent.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt_agent_config_defaults.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt_config_defaults.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt_lib.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\types\iot_mqtt_types.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\private\iot_mqtt_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\access\iot_test_access_mqtt.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\include\iot_json_utils.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\include\iot_serializer.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include\aws_ggd_config_defaults.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include\aws_greengrass_discovery.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_helper_secure_connect.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\test\aws_greengrass_discovery_test_access_declare.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\test\aws_greengrass_discovery_test_access_define.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\include\aws_iot_ota_agent.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\include\aws_ota_types.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_agent_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_pal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_ota_agent_test_access_declare.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_ota_agent_test_access_define.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_ota_codesigner_certificate.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_ota_pal_test_access_declare.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_ota_pal_test_access_define.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_pal_ecdsa_sha256_signature.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_pal_rsa_sha1_signature.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_pal_rsa_sha256_signature.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_signature_methods.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\include\iot_crypto.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_internal.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_portable_default.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_types.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\Compiler\MSVC\pack_struct_end.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\Compiler\MSVC\pack_struct_start.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\test\iot_freertos_tcp_test_access_declare.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\test\iot_freertos_tcp_test_access_dns_define.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\test\iot_freertos_tcp_test_access_tcp_define.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\include\iot_pkcs11.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\include\iot_tls.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\test\iot_test_tls.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\include\iot_pki_utils.h" />
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\include\iot_system_init.h" />
-    <ClInclude Include="..\..\..\..\..\tests\include\aws_application_version.h" />
-    <ClInclude Include="..\..\..\..\..\tests\include\aws_clientcredential.h" />
-    <ClInclude Include="..\..\..\..\..\tests\include\aws_clientcredential_keys.h" />
-    <ClInclude Include="..\..\..\..\..\tests\include\aws_test_framework.h" />
-    <ClInclude Include="..\..\..\..\..\tests\include\aws_test_runner.h" />
-    <ClInclude Include="..\..\..\..\..\tests\include\aws_test_tcp.h" />
-    <ClInclude Include="..\..\..\..\..\tests\include\aws_test_utils.h" />
-    <ClInclude Include="..\..\..\..\..\tests\include\aws_unity_config.h" />
-    <ClInclude Include="..\..\..\..\..\tests\include\iot_config_common.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_demo_logging.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_bufferpool_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_demo_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_ggd_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\iot_mqtt_agent_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_mqtt_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_ota_agent_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_pkcs11_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_secure_sockets_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_shadow_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_test_ota_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_test_pkcs11_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_test_runner_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_test_tcp_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\FreeRTOSConfig.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\FreeRTOSIPConfig.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\iot_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\trcConfig.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\trcSnapshotConfig.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\unity_config.h" />
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\ports\posix\FreeRTOS_POSIX_portable.h" />
-  </ItemGroup>
-  <ItemGroup>
-    <ClCompile Include="..\..\..\..\..\demos\dev_mode_key_provisioning\src\aws_dev_mode_key_provisioning.c" />
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\event_groups.c" />
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\list.c" />
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\portable\MemMang\heap_4.c" />
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\portable\MSVC-MingW\port.c" />
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\queue.c" />
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\stream_buffer.c" />
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\tasks.c" />
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\timers.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\jsmn\jsmn.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\aes.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\aesni.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\arc4.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\asn1parse.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\asn1write.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\base64.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\bignum.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\blowfish.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\camellia.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ccm.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\certs.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cipher.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cipher_wrap.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cmac.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ctr_drbg.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\debug.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\des.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\dhm.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecdh.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecdsa.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecjpake.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecp.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecp_curves.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\entropy.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\entropy_poll.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\error.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\gcm.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\havege.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\hmac_drbg.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md2.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md4.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md5.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md_wrap.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\memory_buffer_alloc.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\net_sockets.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\oid.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\padlock.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pem.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pk.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkcs12.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkcs5.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkparse.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkwrite.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pk_wrap.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\platform.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\platform_util.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ripemd160.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\rsa.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\rsa_internal.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha1.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha256.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha512.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cache.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_ciphersuites.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cli.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cookie.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_srv.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_ticket.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_tls.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\threading.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\timing.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\version.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\version_features.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509write_crt.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509write_csr.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_create.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_crl.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_crt.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_csr.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\xtea.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\utils\mbedtls_utils.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborencoder.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborencoder_close_container_checked.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborerrorstrings.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborparser.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborparser_dup_string.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborpretty.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\trcKernelPort.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\trcSnapshotRecorder.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\unity\extras\fixture\src\unity_fixture.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\unity\src\unity.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls\iot_pkcs11_mbedtls.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\pkcs11\test\iot_test_pkcs11.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_clock_freertos.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_metrics.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_network_freertos.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_threads_freertos.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\test\iot_test_platform_clock.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\test\iot_test_platform_threads.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\secure_sockets\freertos_plus_tcp\iot_secure_sockets.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\secure_sockets\test\iot_test_tcp.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_api.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_collector.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_mqtt.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\test\aws_iot_tests_defender_api.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_api.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_operation.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_parser.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_static_memory.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_subscription.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_shadow.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\test\aws_test_shadow.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\test\system\aws_iot_tests_shadow_system.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\test\unit\aws_iot_tests_shadow_api.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\test\unit\aws_iot_tests_shadow_parser.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_device_metrics.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_init.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_static_memory_common.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\logging\iot_logging.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\taskpool\iot_taskpool.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\taskpool\iot_taskpool_static_memory.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\test\iot_memory_leak.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\test\iot_tests_taskpool.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_agent.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_api.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_network.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_operation.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_serialize.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_static_memory.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_subscription.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_validate.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\access\iot_test_access_mqtt_api.c">
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\access\iot_test_access_mqtt_subscription.c">
-      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\iot_test_mqtt_agent.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\system\iot_tests_mqtt_system.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_api.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_metrics.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_receive.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_subscription.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_validate.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\cbor\iot_serializer_tinycbor_decoder.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\cbor\iot_serializer_tinycbor_encoder.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\iot_json_utils.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\iot_serializer_static_memory.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\json\iot_serializer_json_decoder.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\json\iot_serializer_json_encoder.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\test\iot_tests_deserializer_json.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\test\iot_tests_serializer_cbor.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\test\iot_tests_serializer_json.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_greengrass_discovery.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_helper_secure_connect.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\test\aws_test_greengrass_discovery.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\test\aws_test_helper_secure_connect.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_iot_ota_agent.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_agent.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_cbor.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_end_to_end.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_pal.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\src\iot_crypto.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\test\iot_test_crypto.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_clock.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_mqueue.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_barrier.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_cond.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_mutex.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_sched.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_semaphore.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_timer.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_unistd.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_utils.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_clock.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_mqueue.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_pthread.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_semaphore.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_stress.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_timer.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_unistd.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_utils.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_ARP.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_DHCP.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_DNS.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_IP.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_Sockets.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_Stream_Buffer.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_TCP_IP.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_TCP_WIN.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_UDP_IP.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\BufferManagement\BufferAllocation_2.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\NetworkInterface\WinPCap\NetworkInterface.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\test\iot_test_freertos_tcp.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\src\iot_pkcs11.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\src\iot_tls.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\test\iot_test_tls.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\src\iot_pki_utils.c" />
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\src\iot_system_init.c" />
-    <ClCompile Include="..\..\..\..\..\tests\common\aws_test.c" />
-    <ClCompile Include="..\..\..\..\..\tests\common\aws_test_framework.c" />
-    <ClCompile Include="..\..\..\..\..\tests\common\aws_test_runner.c" />
-    <ClCompile Include="..\..\..\..\..\tests\common\iot_tests_network.c" />
-    <ClCompile Include="..\..\..\..\..\tests\common\iot_test_freertos.c" />
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_demo_logging.c" />
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_entropy_hardware_poll.c" />
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\application_code\aws_run-time-stats-utils.c" />
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\application_code\main.c" />
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\ports\ota\aws_ota_pal.c" />
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\ports\pkcs11\iot_pkcs11_pal.c" />
-  </ItemGroup>
+	<ItemGroup Label="ProjectConfigurations">
+		<ProjectConfiguration Include="Debug|Win32">
+			<Configuration>Debug</Configuration>
+			<Platform>Win32</Platform>
+		</ProjectConfiguration>
+		<ProjectConfiguration Include="Debug|x64">
+			<Configuration>Debug</Configuration>
+			<Platform>x64</Platform>
+		</ProjectConfiguration>
+	</ItemGroup>
+	<PropertyGroup Label="Globals">
+		<VCProjectVersion>15.0</VCProjectVersion>
+		<ProjectGuid>{D2737FCB-E8AB-49CA-86AD-D6AB594D428E}</ProjectGuid>
+		<Keyword>Win32Proj</Keyword>
+		<RootNamespace>aws_IoT_MCU_Full_Tests</RootNamespace>
+		<ProjectName>aws_tests</ProjectName>
+	</PropertyGroup>
+	<Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props"/>
+	<PropertyGroup Condition="&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|Win32&apos;" Label="Configuration">
+		<ConfigurationType>Application</ConfigurationType>
+		<UseDebuglib>true</UseDebuglib>
+		<PlatformToolset>v141</PlatformToolset>
+		<CharacterSet>Unicode</CharacterSet>
+	</PropertyGroup>
+	<PropertyGroup Condition="&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|x64&apos;" Label="Configuration">
+		<ConfigurationType>Application</ConfigurationType>
+		<UseDebuglib>true</UseDebuglib>
+		<PlatformToolset>v141</PlatformToolset>
+		<CharacterSet>Unicode</CharacterSet>
+	</PropertyGroup>
+	<Import Project="$(VCTargetsPath)\Microsoft.Cpp.props"/>
+	<ImportGroup Label="ExtensionSettings"/>
+	<ImportGroup Label="Shared"/>
+	<ImportGroup Label="PropertySheets" Condition="&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|Win32&apos;">
+		<Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists(&apos;$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props&apos;)" Label="LocalAppDataPlatform"/>
+	</ImportGroup>
+	<ImportGroup Label="PropertySheets" Condition="&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|x64&apos;">
+		<Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists(&apos;$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props&apos;)" Label="LocalAppDataPlatform"/>
+	</ImportGroup>
+	<PropertyGroup Label="UserMacros"/>
+	<PropertyGroup Condition="&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|Win32&apos;">
+		<LinkIncremental>true</LinkIncremental>
+		<LibraryPath>$(VC_LibraryPath_x86);$(WindowsSDK_LibraryPath_x86);$(NETFXKitsDir)Lib\um\x86;</LibraryPath>
+		<IncludePath>$(VC_IncludePath);$(WindowsSDK_IncludePath)</IncludePath>
+	</PropertyGroup>
+	<PropertyGroup Condition="&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|x64&apos;">
+		<LinkIncremental>true</LinkIncremental>
+	</PropertyGroup>
+	<ItemDefinitionGroup Condition="&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|Win32&apos;">
+		<ClCompile>
+			<PrecompiledHeader>NotUsing</PrecompiledHeader>
+			<WarningLevel>Level3</WarningLevel>
+			<Optimization>Disabled</Optimization>
+			<PreprocessorDefinitions>WIN32;UNIT_TESTS;_CRT_SECURE_NO_WARNINGS;_DEBUG;_CONSOLE;UNITY_INCLUDE_CONFIG_H;AMAZON_FREERTOS_ENABLE_UNIT_TESTS;__free_rtos__;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+			<AdditionalUsingDirectories/>
+			<AdditionalIncludeDirectories>..\..\..\..\..\freertos_kernel\include;..\..\..\..\..\freertos_kernel\portable\MSVC-MingW;..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files;..\..\..\..\..\vendors\pc\boards\windows\aws_tests\application_code;..\..\..\..\..\tests\include;..\..\..\..\..\libraries\c_sdk\standard\common\include\private;..\..\..\..\..\libraries\c_sdk\standard\common\include;..\..\..\..\..\libraries\abstractions\platform\include;..\..\..\..\..\libraries\abstractions\platform\freertos\include;..\..\..\..\..\libraries\abstractions\secure_sockets\include;..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\test;..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include;..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\Compiler\MSVC;..\..\..\..\..\libraries\freertos_plus\standard\tls\include;..\..\..\..\..\libraries\freertos_plus\standard\crypto\include;..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\include;..\..\..\..\..\libraries\freertos_plus\aws\ota\test;..\..\..\..\..\libraries\abstractions\pkcs11\include;..\..\..\..\..\libraries\freertos_plus\standard\utils\include;..\..\..\..\..\demos\dev_mode_key_provisioning\include;..\..\..\..\..\libraries\c_sdk\aws\defender\include;..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\access;..\..\..\..\..\libraries\c_sdk\standard\mqtt\include;..\..\..\..\..\libraries\c_sdk\standard\mqtt\src;..\..\..\..\..\libraries\c_sdk\standard\serializer\include;..\..\..\..\..\libraries\c_sdk\aws\shadow\include;..\..\..\..\..\libraries\c_sdk\aws\shadow\src;..\..\..\..\..\libraries\c_sdk\standard\https\test\access;..\..\..\..\..\libraries\c_sdk\standard\https\include;..\..\..\..\..\libraries\c_sdk\standard\https\src;..\..\..\..\..\libraries\freertos_plus\aws\greengrass\test;..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include;..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src;..\..\..\..\..\libraries\freertos_plus\aws\ota\src;..\..\..\..\..\libraries\freertos_plus\aws\ota\include;..\..\..\..\..\libraries\3rdparty\mbedtls\include;..\..\..\..\..\libraries\abstractions\posix\include;..\..\..\..\..\vendors\pc\boards\windows\ports\posix;..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include;..\..\..\..\..\libraries\c_sdk\aws\defender\src\private;..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code;..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include;..\..\..\..\..\libraries\3rdparty\win_pcap;..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls;..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls;..\..\..\..\..\libraries\3rdparty\pkcs11;..\..\..\..\..\libraries\3rdparty\unity\src;..\..\..\..\..\libraries\3rdparty\unity\extras\fixture\src;..\..\..\..\..\libraries\3rdparty\tinycbor;..\..\..\..\..\libraries\3rdparty\http-parser;..\..\..\..\..\libraries\3rdparty\jsmn;</AdditionalIncludeDirectories>
+			<UndefinePreprocessorDefinitions/>
+			<RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+			<MultiProcessorCompilation>true</MultiProcessorCompilation>
+			<CompileAs>CompileAsC</CompileAs>
+		</ClCompile>
+		<Link>
+			<SubSystem>Console</SubSystem>
+			<AdditionalDependencies>wpcap.lib;%(AdditionalDependencies)</AdditionalDependencies>
+			<AdditionalLibraryDirectories>..\..\..\..\..\libraries\3rdparty\win_pcap</AdditionalLibraryDirectories>
+		</Link>
+		<PostBuildEvent>
+			<Command>copy $(SolutionDir)..\..\..\..\..\libraries\freertos_plus\aws\ota\test\test_files\*.* $(TEMP)</Command>
+		</PostBuildEvent>
+	</ItemDefinitionGroup>
+	<ItemDefinitionGroup Condition="&apos;$(Configuration)|$(Platform)&apos;==&apos;Debug|x64&apos;">
+		<ClCompile>
+			<PrecompiledHeader>Use</PrecompiledHeader>
+			<WarningLevel>Level3</WarningLevel>
+			<Optimization>Disabled</Optimization>
+			<PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+		</ClCompile>
+		<Link>
+			<SubSystem>Console</SubSystem>
+		</Link>
+	</ItemDefinitionGroup>
+	<Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets"/>
+	<ImportGroup Label="ExtensionTargets"/>
+	<ItemGroup>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\FreeRTOS.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\atomic.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\deprecated_definitions.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\event_groups.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\list.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\message_buffer.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\mpu_prototypes.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\mpu_wrappers.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\portable.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\projdefs.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\queue.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\semphr.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\stack_macros.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\stream_buffer.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\task.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\timers.h"/>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\portable\MSVC-MingW\portmacro.h"/>
+		<ClInclude Include="..\..\..\..\..\tests\include\aws_application_version.h"/>
+		<ClInclude Include="..\..\..\..\..\tests\include\aws_clientcredential.h"/>
+		<ClInclude Include="..\..\..\..\..\tests\include\aws_clientcredential_keys.h"/>
+		<ClInclude Include="..\..\..\..\..\tests\include\aws_test_runner.h"/>
+		<ClInclude Include="..\..\..\..\..\tests\include\aws_test_framework.h"/>
+		<ClInclude Include="..\..\..\..\..\tests\include\aws_test_tcp.h"/>
+		<ClInclude Include="..\..\..\..\..\tests\include\aws_test_utils.h"/>
+		<ClInclude Include="..\..\..\..\..\tests\include\aws_unity_config.h"/>
+		<ClInclude Include="..\..\..\..\..\tests\include\iot_config_common.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_appversion32.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_init.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_linear_containers.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_logging.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_logging_task.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_logging_setup.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\types\iot_network_types.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_taskpool.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\types\iot_taskpool_types.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_taskpool_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_clock.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_network.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_threads.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\types\iot_platform_types.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_platform_types_freertos.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_metrics.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_network_freertos.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets_config_defaults.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets_wrapper_metrics.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_ARP.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_DHCP.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_DNS.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_errno_TCP.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOSIPConfigDefaults.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_IP.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_IP_Private.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_Sockets.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_Stream_Buffer.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_TCP_IP.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_TCP_WIN.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_UDP_IP.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\IPTraceMacroDefaults.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\NetworkBufferManagement.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\NetworkInterface.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\include\iot_tls.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\include\iot_crypto.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\include\iot_pkcs11.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls\threading_alt.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\include\iot_system_init.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\include\iot_pki_utils.h"/>
+		<ClInclude Include="..\..\..\..\..\demos\dev_mode_key_provisioning\include\aws_dev_mode_key_provisioning.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\private\aws_iot_defender_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\include\aws_iot_defender.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\include\iot_serializer.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\include\iot_json_utils.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\aws_iot_shadow.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_shadow_config_defaults.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\aws_shadow.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_helper_secure_connect.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include\aws_ggd_config_defaults.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include\aws_greengrass_discovery.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_pal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_agent_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\include\aws_iot_ota_agent.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\include\aws_ota_types.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\errno.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\fcntl.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\mqueue.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\pthread.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\sched.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\semaphore.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\signal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\sys\types.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\time.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\unistd.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\utils.h"/>
+		<ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\ports\posix\FreeRTOS_POSIX_portable.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_types.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_portable_default.h"/>
+		<ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_demo_logging.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\aes.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\aesni.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\arc4.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\asn1.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\asn1write.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\base64.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\bignum.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\blowfish.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\bn_mul.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\camellia.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ccm.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\certs.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\check_config.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cipher.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cipher_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cmac.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\compat-1.3.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\config.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ctr_drbg.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\debug.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\des.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\dhm.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecdh.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecdsa.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecjpake.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecp.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecp_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\entropy.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\entropy_poll.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\error.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\gcm.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\havege.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\hmac_drbg.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md2.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md4.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md5.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\memory_buffer_alloc.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\net.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\net_sockets.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\oid.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\padlock.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pem.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pk.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pk_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pkcs12.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pkcs5.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform_time.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform_util.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ripemd160.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\rsa.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\rsa_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha1.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha256.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha512.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_cache.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_ciphersuites.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_cookie.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_internal.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_ticket.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\threading.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\timing.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\version.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_crl.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_crt.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_csr.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\xtea.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\pkcs11\pkcs11.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\pkcs11\pkcs11f.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\pkcs11\pkcs11t.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\src\unity.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\src\unity_internals.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\extras\fixture\src\unity_fixture.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\extras\fixture\src\unity_fixture_internals.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\extras\fixture\src\unity_fixture_malloc_overrides.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\http-parser\http_parser.h"/>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\jsmn\jsmn.h"/>
+	</ItemGroup>
+	<ItemGroup>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\event_groups.c"/>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\list.c"/>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\queue.c"/>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\stream_buffer.c"/>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\tasks.c"/>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\timers.c"/>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\portable\MSVC-MingW\port.c"/>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\portable\MemMang\heap_4.c"/>
+		<ClCompile Include="..\..\..\..\..\tests\common\aws_test_framework.c"/>
+		<ClCompile Include="..\..\..\..\..\tests\common\aws_test_runner.c"/>
+		<ClCompile Include="..\..\..\..\..\tests\common\aws_test.c"/>
+		<ClCompile Include="..\..\..\..\..\tests\common\iot_test_freertos.c"/>
+		<ClCompile Include="..\..\..\..\..\tests\common\iot_tests_network.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_init.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\logging\iot_logging.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_static_memory_common.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_device_metrics.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\taskpool\iot_taskpool.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\taskpool\iot_taskpool_static_memory.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_clock_freertos.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_threads_freertos.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_metrics.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_network_freertos.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\secure_sockets\freertos_plus_tcp\iot_secure_sockets.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_ARP.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_DHCP.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_DNS.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_IP.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_Sockets.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_Stream_Buffer.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_TCP_IP.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_TCP_WIN.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_UDP_IP.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\BufferManagement\BufferAllocation_2.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\NetworkInterface\WinPCap\NetworkInterface.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\src\iot_tls.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\src\iot_crypto.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\src\iot_pkcs11.c"/>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\ports\pkcs11\iot_pkcs11_pal.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls\iot_pkcs11_mbedtls.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\src\iot_system_init.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\src\iot_pki_utils.c"/>
+		<ClCompile Include="..\..\..\..\..\demos\dev_mode_key_provisioning\src\aws_dev_mode_key_provisioning.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_api.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_collector.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_mqtt.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_v1.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_api.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_network.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_operation.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_serialize.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_static_memory.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_subscription.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_validate.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_agent.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\cbor\iot_serializer_tinycbor_decoder.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\cbor\iot_serializer_tinycbor_encoder.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\json\iot_serializer_json_decoder.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\json\iot_serializer_json_encoder.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\iot_serializer_static_memory.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\iot_json_utils.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_api.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_operation.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_parser.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_static_memory.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_subscription.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_shadow.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\src\iot_https_client.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\src\iot_https_utils.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_greengrass_discovery.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_helper_secure_connect.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_iot_ota_agent.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\base64.c"/>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\ports\ota\aws_ota_pal.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_clock.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_mqueue.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_barrier.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_cond.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_mutex.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_sched.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_semaphore.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_timer.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_unistd.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_utils.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\test\aws_iot_tests_defender_api.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\test\unit\aws_iot_tests_shadow_api.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\test\unit\aws_iot_tests_shadow_parser.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\test\system\aws_iot_tests_shadow_system.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\test\aws_test_shadow.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\test\iot_memory_leak.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\test\iot_tests_taskpool.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\test\unit\iot_tests_https_client.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\test\unit\iot_tests_https_utils.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\test\unit\iot_tests_https_common.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\test\unit\iot_tests_https_sync.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\test\unit\iot_tests_https_async.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\test\system\iot_tests_https_system.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_api.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_receive.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_subscription.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_validate.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_metrics.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\system\iot_tests_mqtt_system.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\iot_test_mqtt_agent.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\test\iot_tests_serializer_cbor.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\test\iot_tests_serializer_json.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\test\iot_tests_deserializer_json.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\test\aws_test_greengrass_discovery.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\test\aws_test_helper_secure_connect.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_cbor.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_agent.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_pal.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\test\iot_test_crypto.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_clock.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_mqueue.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_pthread.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_semaphore.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_stress.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_timer.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_unistd.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_utils.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\test\iot_test_freertos_tcp.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\test\iot_test_tls.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\pkcs11\test\iot_test_pkcs11.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\test\iot_test_platform_clock.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\test\iot_test_platform_threads.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\secure_sockets\test\iot_test_tcp.c"/>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\application_code\main.c"/>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_demo_logging.c"/>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_entropy_hardware_poll.c"/>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_run-time-stats-utils.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\trcKernelPort.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\trcSnapshotRecorder.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\aes.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\aesni.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\arc4.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\asn1parse.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\asn1write.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\bignum.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\blowfish.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\camellia.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ccm.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\certs.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cipher.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cipher_wrap.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cmac.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ctr_drbg.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\debug.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\des.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\dhm.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecdh.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecdsa.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecjpake.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecp.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecp_curves.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\entropy.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\entropy_poll.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\error.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\gcm.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\havege.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\hmac_drbg.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md2.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md4.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md5.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md_wrap.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\memory_buffer_alloc.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\net_sockets.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\oid.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\padlock.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pem.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pk.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pk_wrap.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkcs12.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkcs5.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkparse.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkwrite.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\platform.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\platform_util.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ripemd160.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\rsa.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\rsa_internal.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha1.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha256.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha512.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cache.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_ciphersuites.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cli.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cookie.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_srv.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_ticket.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_tls.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\threading.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\timing.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\version.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\version_features.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_create.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_crl.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_crt.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_csr.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509write_crt.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509write_csr.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\xtea.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\utils\mbedtls_utils.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\unity\src\unity.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\unity\extras\fixture\src\unity_fixture.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborpretty.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborencoder.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborencoder_close_container_checked.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborerrorstrings.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborparser.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborparser_dup_string.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\http-parser\http_parser.c"/>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\jsmn\jsmn.c"/>
+	</ItemGroup>
 </Project>
diff --git a/projects/pc/windows/visual_studio/aws_tests/aws_tests.vcxproj.filters b/projects/pc/windows/visual_studio/aws_tests/aws_tests.vcxproj.filters
index d78dfe60d..9f9b6250d 100644
--- a/projects/pc/windows/visual_studio/aws_tests/aws_tests.vcxproj.filters
+++ b/projects/pc/windows/visual_studio/aws_tests/aws_tests.vcxproj.filters
@@ -1,1716 +1,1341 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
 <Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <ItemGroup>
-    <Filter Include="config_files">
-      <UniqueIdentifier>{d4dcf3a2-3b04-421e-a9b4-682eb9c701e3}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="freertos_kernel">
-      <UniqueIdentifier>{a3c324a7-7658-4e12-bb2f-d51abbd075d2}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="freertos_kernel\include">
-      <UniqueIdentifier>{505dc106-4bf4-43ef-8f99-53598dc3da51}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="freertos_kernel\portable">
-      <UniqueIdentifier>{297d5128-635a-4291-a54d-06aff74ea0ca}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="freertos_kernel\portable\MemMang">
-      <UniqueIdentifier>{0a6f227d-9cb7-486d-b5bd-2922704de232}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="freertos_kernel\portable\MSVC-MingW">
-      <UniqueIdentifier>{194636ac-dedf-4e33-bbbb-bbeb1af73237}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="application_code">
-      <UniqueIdentifier>{95399cf8-0b6b-43c9-b087-b5ac0cc14496}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="application_code\include">
-      <UniqueIdentifier>{75622433-02ff-47cd-9735-a20a98248ddb}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="application_code\src">
-      <UniqueIdentifier>{9aecdfce-ca24-4cea-878a-90114f3e6f3b}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries">
-      <UniqueIdentifier>{00daf790-0605-4c8e-bff2-ee88eedb65c1}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions">
-      <UniqueIdentifier>{f7fb3c21-4b85-4661-8de2-692d9bad8f78}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\pkcs11">
-      <UniqueIdentifier>{7d168a09-ff6a-41ec-8ad3-8c999e02fbbe}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\pkcs11\include">
-      <UniqueIdentifier>{16f0337b-bb61-43c6-b424-6baba881854f}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\pkcs11\mbedtls">
-      <UniqueIdentifier>{749f5dac-06d4-47f7-86f4-2b51d0561ff6}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\pkcs11\test">
-      <UniqueIdentifier>{4d279131-c507-40f1-946d-25ddc837f65a}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\platform">
-      <UniqueIdentifier>{fac6df4a-5094-4607-951c-c0fec903632e}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\platform\freertos">
-      <UniqueIdentifier>{ea7afb99-e709-4d6e-812a-b8784951549e}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\platform\include">
-      <UniqueIdentifier>{e16fd589-51d9-4d15-aba6-758248d5db5e}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\platform\test">
-      <UniqueIdentifier>{9c345759-d32b-430a-883b-fdbce179b8c3}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\platform\freertos\include">
-      <UniqueIdentifier>{5da43eb9-e9a8-4b88-b0bc-6dd5f47201d6}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\platform\freertos\include\platform">
-      <UniqueIdentifier>{a382663e-b650-45d9-ac17-1249a79e2bb4}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\platform\include\platform">
-      <UniqueIdentifier>{4b897267-287f-4e9c-9097-725e454dd448}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\platform\include\types">
-      <UniqueIdentifier>{397ed3b3-5b9d-4a73-b807-7c685bf919ef}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\posix">
-      <UniqueIdentifier>{cf0346bc-71a5-4a26-80b7-bea1adcc667d}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\posix\include">
-      <UniqueIdentifier>{f02106c4-5941-48fa-920c-0aed997d670c}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\posix\include\FreeRTOS_POSIX">
-      <UniqueIdentifier>{79717e03-0df1-44fb-9a7b-4bc2f59443c5}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\posix\include\FreeRTOS_POSIX\sys">
-      <UniqueIdentifier>{1a0d36fe-5ec5-497d-bb66-a00e3a8d22a5}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\secure_sockets">
-      <UniqueIdentifier>{ea4b00c9-95c3-4132-8382-6ddd75ae0bf2}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\secure_sockets\include">
-      <UniqueIdentifier>{4d4de92f-4f39-48c9-b63c-350feabd5d4d}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\secure_sockets\freertos_plus_tcp">
-      <UniqueIdentifier>{47a55852-653f-4705-929a-8a731aa1624f}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\abstractions\secure_sockets\test">
-      <UniqueIdentifier>{25a6b446-148a-470b-9f87-041c470920fd}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus">
-      <UniqueIdentifier>{c0048c22-7781-494d-b082-c5f15f0630ff}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard">
-      <UniqueIdentifier>{d305e976-aefd-4465-8169-b19ebf13466e}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp">
-      <UniqueIdentifier>{1cefda93-6204-48e9-b99a-1703c368b3a5}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\include">
-      <UniqueIdentifier>{3128d0e4-c873-492d-9d82-acd9fdf63aab}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\source">
-      <UniqueIdentifier>{152701ae-c1f5-404a-9267-fbb213f0a1e0}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\test">
-      <UniqueIdentifier>{633382d2-a68d-402b-98e0-ade45226013c}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="tests">
-      <UniqueIdentifier>{1dee881c-0de9-4692-b845-7583d67ba016}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="tests\include">
-      <UniqueIdentifier>{37f1f9d9-9bce-4f97-8884-ea28da4825fd}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="tests\common">
-      <UniqueIdentifier>{7b070ae9-729c-43da-b65b-ff060e37afbc}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\source\portable">
-      <UniqueIdentifier>{73294552-ce2f-4041-aa53-2a96824432f8}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\MSVC">
-      <UniqueIdentifier>{5dc37c7d-bf57-4f4d-ac64-168decf82b79}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty">
-      <UniqueIdentifier>{87146bfd-2d3f-4434-a3fb-140acb241cf7}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\unity">
-      <UniqueIdentifier>{4f6a5e64-da9a-4986-ad00-852b018e2e5f}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\unity\fixture">
-      <UniqueIdentifier>{f127b0ee-decd-4a6e-9abc-2aaf2af0429d}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\unity\src">
-      <UniqueIdentifier>{b1519ceb-f626-4d96-a23f-cff9158d804a}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\tracealyzer_recorder">
-      <UniqueIdentifier>{4c7600cf-ba6d-4b31-9c54-7220d6ed6b60}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\tracealyzer_recorder\Include">
-      <UniqueIdentifier>{163d58cf-cfcb-4161-aae5-a7143dc95ad5}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\utils">
-      <UniqueIdentifier>{63245c05-be57-4088-a565-34598881b601}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\utils\include">
-      <UniqueIdentifier>{0ebaea64-484b-4f8c-a805-83546a83a9af}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\utils\src">
-      <UniqueIdentifier>{79c5ad78-6092-4801-b25e-54d0026a7753}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\pkcs11">
-      <UniqueIdentifier>{5edb7d7f-375f-439a-a3a8-17a64913e6ab}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk">
-      <UniqueIdentifier>{09c4e202-f54a-4944-9754-9c465c248966}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard">
-      <UniqueIdentifier>{9ab01728-e308-4946-9b7f-48ac1f22df22}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\common">
-      <UniqueIdentifier>{e245a776-fa65-41d0-bd53-5332007e2be2}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\common\include">
-      <UniqueIdentifier>{7ab05cd5-9772-4df3-8ca8-9026e36ecd76}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\common\include\private">
-      <UniqueIdentifier>{acaf5625-dfc8-4295-b853-55ce153b52a6}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\common\include\types">
-      <UniqueIdentifier>{c2ce4fa4-1761-48e8-88f7-e81e15467a3a}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\common\logging">
-      <UniqueIdentifier>{bb6bcb41-380a-4e8a-afc9-5797461eccdc}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\common\taskpool">
-      <UniqueIdentifier>{aeee0779-ce1e-4f90-bc7b-3a8cf3a88d53}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\common\test">
-      <UniqueIdentifier>{38a91521-33cc-4b70-ae40-35fe15d4f4b2}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\mqtt">
-      <UniqueIdentifier>{3db99560-0aea-4cd5-8f8d-dc5cd64b6d5e}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\mqtt\include">
-      <UniqueIdentifier>{306bdd6d-1227-4496-b2dc-6a925e2dfd70}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\mqtt\include\types">
-      <UniqueIdentifier>{156cd6f8-3af4-4f65-9e31-c936c8d33474}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\mqtt\src">
-      <UniqueIdentifier>{f7028860-9ae4-4613-a7ad-ea84dbf80c69}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\mqtt\src\private">
-      <UniqueIdentifier>{bfd06b96-e8c4-4782-8c8a-0b6ee308b88b}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\mqtt\test">
-      <UniqueIdentifier>{cf72bee2-4c02-4462-9a42-b6bc700d2b60}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\mqtt\test\unit">
-      <UniqueIdentifier>{dd085ec7-1ce2-4e00-a8de-e84c25da78a2}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\mqtt\test\system">
-      <UniqueIdentifier>{bb744fcc-aeee-46bc-9b04-5706ac39a04d}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\mqtt\test\access">
-      <UniqueIdentifier>{16f41e64-933a-458c-ad02-051fe390193d}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\crypto">
-      <UniqueIdentifier>{8f8a5e46-4e97-4856-b5ea-d4eb5dd64120}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\crypto\include">
-      <UniqueIdentifier>{aca864c3-537b-4c44-8dca-5b7e958adc70}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\crypto\src">
-      <UniqueIdentifier>{531a1d85-4298-4f60-a21d-864464d3ff64}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\crypto\test">
-      <UniqueIdentifier>{18e3b8d4-e7c9-4bab-99ab-8f738c3eb8b0}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\mbedtls">
-      <UniqueIdentifier>{077151f2-dce7-4a40-aa17-250ddbb414ac}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\mbedtls\include">
-      <UniqueIdentifier>{ec1cf955-4e34-4866-b134-4401f03c37be}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\mbedtls\include\mbedtls">
-      <UniqueIdentifier>{ee581326-4e8d-486a-bef0-bb16896b52a4}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\mbedtls\library">
-      <UniqueIdentifier>{d964a528-feef-470e-973d-05cb2f04eeaa}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\tls">
-      <UniqueIdentifier>{dc17e8d0-ead1-4865-bf5a-64d247ec64da}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\tls\include">
-      <UniqueIdentifier>{c32b7065-e944-43f9-8e83-9bbbbe7fefd5}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\tls\src">
-      <UniqueIdentifier>{2c1f7579-7f93-4811-b310-bda460ea22a1}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\tls\test">
-      <UniqueIdentifier>{9ccba9ce-bc6d-4fa7-9a30-e90d8a08fe3d}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\freertos_plus_posix">
-      <UniqueIdentifier>{08b6911a-4db2-462c-8c13-84db9ce7d46b}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\freertos_plus_posix\source">
-      <UniqueIdentifier>{8db841b4-ef14-4c3b-9d2d-125cceacb021}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\freertos_plus_posix\test">
-      <UniqueIdentifier>{29257ae6-5c13-41f0-86c7-dd1a0d2f8481}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="ports">
-      <UniqueIdentifier>{4477fbf8-d6e2-4fd8-97d3-561f171a817c}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="ports\pkcs11">
-      <UniqueIdentifier>{0ae0553e-51b5-45ec-9952-5e956ded5e40}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="ports\posix">
-      <UniqueIdentifier>{bc51b1da-13a6-42c7-af8b-8900008030e8}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws">
-      <UniqueIdentifier>{68bce2c5-7e40-4977-b4ae-9af2a7d5b57a}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\defender">
-      <UniqueIdentifier>{67931c5a-98d7-4043-92d6-cd990163db65}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\defender\include">
-      <UniqueIdentifier>{0f5fd775-83e5-4125-9171-164160d49b1a}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\defender\src">
-      <UniqueIdentifier>{32468a14-46bc-4ad2-bf98-5b4f7c26726c}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\defender\test">
-      <UniqueIdentifier>{1e75f51b-e7f4-4f17-b905-a28a4bf276bf}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\serializer">
-      <UniqueIdentifier>{f23ca064-429b-41d6-805c-5bc26543cd88}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\serializer\include">
-      <UniqueIdentifier>{a937db35-1311-4676-a9ec-2b8a43f65254}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\serializer\src">
-      <UniqueIdentifier>{9abd65c3-2c4b-4418-9e12-cbebd0d0fbf4}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\serializer\test">
-      <UniqueIdentifier>{bc00d567-7bf1-496e-b4f0-f58190a7a6fe}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\serializer\src\json">
-      <UniqueIdentifier>{360c3e52-aae1-4b52-af84-f0e380f57ce1}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\standard\serializer\src\cbor">
-      <UniqueIdentifier>{f1ebea3f-a5c6-4165-b30f-97b109e01485}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\defender\src\private">
-      <UniqueIdentifier>{77d57672-b318-4c78-8e42-0a5f82b55f8f}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\tinycbor">
-      <UniqueIdentifier>{19a6dfce-3018-4e0c-b5a8-603ec020c2ba}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\jsmn">
-      <UniqueIdentifier>{82886353-decc-41d2-853d-ddaf1b547259}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\shadow">
-      <UniqueIdentifier>{f61feabb-8f49-4503-b37f-efb471e15468}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\shadow\include">
-      <UniqueIdentifier>{7a559fe5-fa0a-4aa5-bd52-51343f83525d}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\shadow\src">
-      <UniqueIdentifier>{a9130c9c-3ada-4b20-bc9b-d857e501a03c}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\shadow\test">
-      <UniqueIdentifier>{f7f3e7cb-aece-4f07-9ec2-f2caeb7f0f87}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\shadow\include\types">
-      <UniqueIdentifier>{775ae959-9cd5-485f-a769-59ec8ace14d3}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\shadow\src\private">
-      <UniqueIdentifier>{bedcb4fa-91cd-4dc3-b84e-1f5f178416f7}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\shadow\test\system">
-      <UniqueIdentifier>{584540b2-4478-429b-8562-c7c1f5dfbd01}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\c_sdk\aws\shadow\test\unit">
-      <UniqueIdentifier>{9ae607cc-0674-436a-b7d1-4faeb0a21057}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\aws">
-      <UniqueIdentifier>{df6e2c5f-a43f-4cbd-8b7d-0b5e87864240}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\aws\ota">
-      <UniqueIdentifier>{edc444dc-f638-44fe-a4fb-20e2ed9e0407}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\aws\ota\include">
-      <UniqueIdentifier>{182b032c-a8ac-4191-8742-48414da97879}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\aws\ota\src">
-      <UniqueIdentifier>{5faa93ac-7369-4381-8074-64abb30432b0}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\aws\ota\test">
-      <UniqueIdentifier>{14b75531-0acf-465e-8ad7-22d4586723ae}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="ports\ota">
-      <UniqueIdentifier>{5f1cd4f3-04e5-468d-ba77-28d67ce8d389}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\aws\greengrass">
-      <UniqueIdentifier>{41f76170-f738-43e7-a27b-ebc4ffe9e6f1}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\aws\greengrass\include">
-      <UniqueIdentifier>{987419d8-80f6-49f6-bd7a-dfcbe50d5e9f}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\aws\greengrass\src">
-      <UniqueIdentifier>{2307d945-719f-4fc8-9b61-731c52dff28b}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\aws\greengrass\test">
-      <UniqueIdentifier>{6e83f83b-174b-4c75-94b9-3ed0bad9f4bd}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="demos">
-      <UniqueIdentifier>{326a9251-1f6b-4d75-97a6-69bf4290637d}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="demos\dev_mode_key_provisioning">
-      <UniqueIdentifier>{deb0addc-2474-4ebb-ab79-181bd8c65893}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="demos\dev_mode_key_provisioning\include">
-      <UniqueIdentifier>{0400162b-dab4-4fb5-94fc-957862ec1304}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="demos\dev_mode_key_provisioning\src">
-      <UniqueIdentifier>{5c36bd0a-8610-4245-aa01-7fb882491560}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\pkcs11">
-      <UniqueIdentifier>{fb054d33-b506-4b23-a428-def0b78ac28a}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\pkcs11\src">
-      <UniqueIdentifier>{c0d308cf-3ea7-4c5d-a4e6-76e262782e75}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\freertos_plus\standard\pkcs11\include">
-      <UniqueIdentifier>{7c3d6811-1d05-4db0-986d-1da6a27827dc}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="libraries\3rdparty\mbedtls\utils">
-      <UniqueIdentifier>{cac78ffd-874d-44be-a02d-5471b7a0dfad}</UniqueIdentifier>
-    </Filter>
-  </ItemGroup>
-  <ItemGroup>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_bufferpool_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_demo_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_ggd_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\iot_mqtt_agent_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_mqtt_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_ota_agent_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_pkcs11_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_secure_sockets_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_shadow_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_test_ota_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_test_pkcs11_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_test_runner_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\aws_test_tcp_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\FreeRTOSConfig.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\FreeRTOSIPConfig.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\iot_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\trcConfig.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\trcSnapshotConfig.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\config_files\unity_config.h">
-      <Filter>config_files</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\atomic.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\deprecated_definitions.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\event_groups.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\FreeRTOS.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\list.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\message_buffer.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\mpu_prototypes.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\mpu_wrappers.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\portable.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\projdefs.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\queue.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\semphr.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\stack_macros.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\stream_buffer.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\task.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\include\timers.h">
-      <Filter>freertos_kernel\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\freertos_kernel\portable\MSVC-MingW\portmacro.h">
-      <Filter>freertos_kernel\portable\MSVC-MingW</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\tests\include\aws_application_version.h">
-      <Filter>tests\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\tests\include\aws_clientcredential.h">
-      <Filter>tests\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\tests\include\aws_clientcredential_keys.h">
-      <Filter>tests\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\tests\include\aws_test_framework.h">
-      <Filter>tests\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\tests\include\aws_test_runner.h">
-      <Filter>tests\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\tests\include\aws_test_tcp.h">
-      <Filter>tests\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\tests\include\aws_test_utils.h">
-      <Filter>tests\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\tests\include\aws_unity_config.h">
-      <Filter>tests\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\tests\include\iot_config_common.h">
-      <Filter>tests\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls\threading_alt.h">
-      <Filter>libraries\abstractions\pkcs11\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_platform_types_afr.h">
-      <Filter>libraries\abstractions\platform\freertos\include\platform</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_network_ble.h">
-      <Filter>libraries\abstractions\platform\freertos\include\platform</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_network_freertos.h">
-      <Filter>libraries\abstractions\platform\freertos\include\platform</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\types\iot_platform_types.h">
-      <Filter>libraries\abstractions\platform\include\types</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_clock.h">
-      <Filter>libraries\abstractions\platform\include\platform</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_metrics.h">
-      <Filter>libraries\abstractions\platform\include\platform</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_network.h">
-      <Filter>libraries\abstractions\platform\include\platform</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_threads.h">
-      <Filter>libraries\abstractions\platform\include\platform</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\sys\types.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX\sys</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\errno.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\fcntl.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\mqueue.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\pthread.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\sched.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\semaphore.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\signal.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\time.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\unistd.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\utils.h">
-      <Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets.h">
-      <Filter>libraries\abstractions\secure_sockets\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets_config_defaults.h">
-      <Filter>libraries\abstractions\secure_sockets\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets_wrapper_metrics.h">
-      <Filter>libraries\abstractions\secure_sockets\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_internal.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_portable_default.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_types.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\test\iot_freertos_tcp_test_access_declare.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\test</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\test\iot_freertos_tcp_test_access_dns_define.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\test</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\test\iot_freertos_tcp_test_access_tcp_define.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\test</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\Compiler\MSVC\pack_struct_end.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\MSVC</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\Compiler\MSVC\pack_struct_start.h">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\MSVC</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\extras\fixture\src\unity_fixture.h">
-      <Filter>libraries\3rdparty\unity\fixture</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\extras\fixture\src\unity_fixture_internals.h">
-      <Filter>libraries\3rdparty\unity\fixture</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\extras\fixture\src\unity_fixture_malloc_overrides.h">
-      <Filter>libraries\3rdparty\unity\fixture</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\src\unity.h">
-      <Filter>libraries\3rdparty\unity\src</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\src\unity_internals.h">
-      <Filter>libraries\3rdparty\unity\src</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include\trcHardwarePort.h">
-      <Filter>libraries\3rdparty\tracealyzer_recorder\Include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include\trcKernelPort.h">
-      <Filter>libraries\3rdparty\tracealyzer_recorder\Include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include\trcPortDefines.h">
-      <Filter>libraries\3rdparty\tracealyzer_recorder\Include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\Include\trcRecorder.h">
-      <Filter>libraries\3rdparty\tracealyzer_recorder\Include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\include\iot_system_init.h">
-      <Filter>libraries\freertos_plus\standard\utils\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_demo_logging.h">
-      <Filter>application_code\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\pkcs11\pkcs11.h">
-      <Filter>libraries\3rdparty\pkcs11</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\pkcs11\pkcs11f.h">
-      <Filter>libraries\3rdparty\pkcs11</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\pkcs11\pkcs11t.h">
-      <Filter>libraries\3rdparty\pkcs11</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_default_root_certificates.h">
-      <Filter>libraries\c_sdk\standard\common\include\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_doubly_linked_list.h">
-      <Filter>libraries\c_sdk\standard\common\include\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_lib_init.h">
-      <Filter>libraries\c_sdk\standard\common\include\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_error.h">
-      <Filter>libraries\c_sdk\standard\common\include\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_logging.h">
-      <Filter>libraries\c_sdk\standard\common\include\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_static_memory.h">
-      <Filter>libraries\c_sdk\standard\common\include\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_taskpool_internal.h">
-      <Filter>libraries\c_sdk\standard\common\include\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_appversion32.h">
-      <Filter>libraries\c_sdk\standard\common\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_logging_task.h">
-      <Filter>libraries\c_sdk\standard\common\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_atomic.h">
-      <Filter>libraries\c_sdk\standard\common\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_init.h">
-      <Filter>libraries\c_sdk\standard\common\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_linear_containers.h">
-      <Filter>libraries\c_sdk\standard\common\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_logging_setup.h">
-      <Filter>libraries\c_sdk\standard\common\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_taskpool.h">
-      <Filter>libraries\c_sdk\standard\common\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\types\iot_network_types.h">
-      <Filter>libraries\c_sdk\standard\common\include\types</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\types\iot_taskpool_types.h">
-      <Filter>libraries\c_sdk\standard\common\include\types</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt_agent.h">
-      <Filter>libraries\c_sdk\standard\mqtt\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt_agent_config_defaults.h">
-      <Filter>libraries\c_sdk\standard\mqtt\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt_config_defaults.h">
-      <Filter>libraries\c_sdk\standard\mqtt\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt_lib.h">
-      <Filter>libraries\c_sdk\standard\mqtt\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\iot_mqtt.h">
-      <Filter>libraries\c_sdk\standard\mqtt\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\include\types\iot_mqtt_types.h">
-      <Filter>libraries\c_sdk\standard\mqtt\include\types</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\private\iot_mqtt_internal.h">
-      <Filter>libraries\c_sdk\standard\mqtt\src\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\access\iot_test_access_mqtt.h">
-      <Filter>libraries\c_sdk\standard\mqtt\test\access</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\include\iot_crypto.h">
-      <Filter>libraries\freertos_plus\standard\crypto\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\aes.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\aesni.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\arc4.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\asn1.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\asn1write.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\base64.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\bignum.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\blowfish.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\bn_mul.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\camellia.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ccm.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\certs.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\check_config.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cipher.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cipher_internal.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cmac.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\compat-1.3.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\config.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ctr_drbg.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\debug.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\des.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\dhm.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecdh.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecdsa.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecjpake.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecp.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecp_internal.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\entropy.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\entropy_poll.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\error.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\gcm.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\havege.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\hmac_drbg.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md_internal.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md2.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md4.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md5.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\memory_buffer_alloc.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\net.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\net_sockets.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\oid.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\padlock.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pem.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pk.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pk_internal.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pkcs5.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pkcs12.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform_time.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform_util.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ripemd160.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\rsa.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\rsa_internal.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha1.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha256.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha512.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_cache.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_ciphersuites.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_cookie.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_internal.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_ticket.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\threading.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\timing.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\version.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_crl.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_crt.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_csr.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\xtea.h">
-      <Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\include\iot_tls.h">
-      <Filter>libraries\freertos_plus\standard\tls\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\test\iot_test_tls.h">
-      <Filter>libraries\freertos_plus\standard\tls\test</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\ports\posix\FreeRTOS_POSIX_portable.h">
-      <Filter>ports\posix</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\include\aws_defender.h">
-      <Filter>libraries\c_sdk\aws\defender\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\include\aws_iot_defender.h">
-      <Filter>libraries\c_sdk\aws\defender\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\include\iot_json_utils.h">
-      <Filter>libraries\c_sdk\standard\serializer\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\include\iot_serializer.h">
-      <Filter>libraries\c_sdk\standard\serializer\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\private\aws_iot_defender_internal.h">
-      <Filter>libraries\c_sdk\aws\defender\src\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\assert_p.h">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cbor.h">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborconstants_p.h">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\compilersupport_p.h">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\extract_number_p.h">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\tinycbor\math_support_p.h">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\3rdparty\jsmn\jsmn.h">
-      <Filter>libraries\3rdparty\jsmn</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\aws_iot_shadow.h">
-      <Filter>libraries\c_sdk\aws\shadow\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\aws_shadow.h">
-      <Filter>libraries\c_sdk\aws\shadow\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\types\aws_iot_shadow_types.h">
-      <Filter>libraries\c_sdk\aws\shadow\include\types</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\private\aws_iot_shadow_internal.h">
-      <Filter>libraries\c_sdk\aws\shadow\src\private</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_shadow_config_defaults.h">
-      <Filter>libraries\c_sdk\aws\shadow\src</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\include\aws_iot_ota_agent.h">
-      <Filter>libraries\freertos_plus\aws\ota\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\include\aws_ota_types.h">
-      <Filter>libraries\freertos_plus\aws\ota\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_ota_agent_test_access_declare.h">
-      <Filter>libraries\freertos_plus\aws\ota\test</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_ota_agent_test_access_define.h">
-      <Filter>libraries\freertos_plus\aws\ota\test</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_ota_codesigner_certificate.h">
-      <Filter>libraries\freertos_plus\aws\ota\test</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_ota_pal_test_access_declare.h">
-      <Filter>libraries\freertos_plus\aws\ota\test</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_ota_pal_test_access_define.h">
-      <Filter>libraries\freertos_plus\aws\ota\test</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_pal_ecdsa_sha256_signature.h">
-      <Filter>libraries\freertos_plus\aws\ota\test</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_pal_rsa_sha1_signature.h">
-      <Filter>libraries\freertos_plus\aws\ota\test</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_pal_rsa_sha256_signature.h">
-      <Filter>libraries\freertos_plus\aws\ota\test</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_signature_methods.h">
-      <Filter>libraries\freertos_plus\aws\ota\test</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_agent_internal.h">
-      <Filter>libraries\freertos_plus\aws\ota\src</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor.h">
-      <Filter>libraries\freertos_plus\aws\ota\src</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor_internal.h">
-      <Filter>libraries\freertos_plus\aws\ota\src</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_pal.h">
-      <Filter>libraries\freertos_plus\aws\ota\src</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include\aws_ggd_config_defaults.h">
-      <Filter>libraries\freertos_plus\aws\greengrass\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include\aws_greengrass_discovery.h">
-      <Filter>libraries\freertos_plus\aws\greengrass\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\test\aws_greengrass_discovery_test_access_declare.h">
-      <Filter>libraries\freertos_plus\aws\greengrass\test</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\test\aws_greengrass_discovery_test_access_define.h">
-      <Filter>libraries\freertos_plus\aws\greengrass\test</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_helper_secure_connect.h">
-      <Filter>libraries\freertos_plus\aws\greengrass\src</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\demos\dev_mode_key_provisioning\include\aws_dev_mode_key_provisioning.h">
-      <Filter>demos\dev_mode_key_provisioning\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\abstractions\pkcs11\include\iot_pkcs11_pal.h">
-      <Filter>libraries\abstractions\pkcs11\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\include\iot_pkcs11.h">
-      <Filter>libraries\freertos_plus\standard\pkcs11\include</Filter>
-    </ClInclude>
-    <ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\include\iot_pki_utils.h">
-      <Filter>libraries\freertos_plus\standard\utils\include</Filter>
-    </ClInclude>
-  </ItemGroup>
-  <ItemGroup>
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\application_code\aws_run-time-stats-utils.c">
-      <Filter>application_code\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\application_code\main.c">
-      <Filter>application_code\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\portable\MemMang\heap_4.c">
-      <Filter>freertos_kernel\portable\MemMang</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\portable\MSVC-MingW\port.c">
-      <Filter>freertos_kernel\portable\MSVC-MingW</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\event_groups.c">
-      <Filter>freertos_kernel\portable</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\list.c">
-      <Filter>freertos_kernel\portable</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\queue.c">
-      <Filter>freertos_kernel\portable</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\stream_buffer.c">
-      <Filter>freertos_kernel\portable</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\tasks.c">
-      <Filter>freertos_kernel\portable</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\freertos_kernel\timers.c">
-      <Filter>freertos_kernel\portable</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\tests\common\aws_test.c">
-      <Filter>tests\common</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\tests\common\aws_test_framework.c">
-      <Filter>tests\common</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\tests\common\aws_test_runner.c">
-      <Filter>tests\common</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\tests\common\iot_test_freertos.c">
-      <Filter>tests\common</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\tests\common\iot_tests_network.c">
-      <Filter>tests\common</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls\iot_pkcs11_mbedtls.c">
-      <Filter>libraries\abstractions\pkcs11\mbedtls</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\pkcs11\test\iot_test_pkcs11.c">
-      <Filter>libraries\abstractions\pkcs11\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_clock_freertos.c">
-      <Filter>libraries\abstractions\platform\freertos</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_metrics.c">
-      <Filter>libraries\abstractions\platform\freertos</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_network_freertos.c">
-      <Filter>libraries\abstractions\platform\freertos</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_threads_freertos.c">
-      <Filter>libraries\abstractions\platform\freertos</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\test\iot_test_platform_clock.c">
-      <Filter>libraries\abstractions\platform\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\test\iot_test_platform_threads.c">
-      <Filter>libraries\abstractions\platform\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\secure_sockets\freertos_plus_tcp\iot_secure_sockets.c">
-      <Filter>libraries\abstractions\secure_sockets\freertos_plus_tcp</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\abstractions\secure_sockets\test\iot_test_tcp.c">
-      <Filter>libraries\abstractions\secure_sockets\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_ARP.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_DHCP.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_DNS.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_IP.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_Sockets.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_Stream_Buffer.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_TCP_IP.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_TCP_WIN.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_UDP_IP.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\test\iot_test_freertos_tcp.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\BufferManagement\BufferAllocation_2.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source\portable</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\NetworkInterface\WinPCap\NetworkInterface.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source\portable</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\unity\extras\fixture\src\unity_fixture.c">
-      <Filter>libraries\3rdparty\unity\fixture</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\unity\src\unity.c">
-      <Filter>libraries\3rdparty\unity\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\trcKernelPort.c">
-      <Filter>libraries\3rdparty\tracealyzer_recorder</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\trcSnapshotRecorder.c">
-      <Filter>libraries\3rdparty\tracealyzer_recorder</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\src\iot_system_init.c">
-      <Filter>libraries\freertos_plus\standard\utils\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_init.c">
-      <Filter>libraries\c_sdk\standard\common</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_static_memory_common.c">
-      <Filter>libraries\c_sdk\standard\common</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\logging\iot_logging.c">
-      <Filter>libraries\c_sdk\standard\common\logging</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\taskpool\iot_taskpool.c">
-      <Filter>libraries\c_sdk\standard\common\taskpool</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\taskpool\iot_taskpool_static_memory.c">
-      <Filter>libraries\c_sdk\standard\common\taskpool</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\test\iot_memory_leak.c">
-      <Filter>libraries\c_sdk\standard\common\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\test\iot_tests_taskpool.c">
-      <Filter>libraries\c_sdk\standard\common\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_agent.c">
-      <Filter>libraries\c_sdk\standard\mqtt\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_api.c">
-      <Filter>libraries\c_sdk\standard\mqtt\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_network.c">
-      <Filter>libraries\c_sdk\standard\mqtt\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_operation.c">
-      <Filter>libraries\c_sdk\standard\mqtt\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_serialize.c">
-      <Filter>libraries\c_sdk\standard\mqtt\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_static_memory.c">
-      <Filter>libraries\c_sdk\standard\mqtt\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_subscription.c">
-      <Filter>libraries\c_sdk\standard\mqtt\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_validate.c">
-      <Filter>libraries\c_sdk\standard\mqtt\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\iot_test_mqtt_agent.c">
-      <Filter>libraries\c_sdk\standard\mqtt\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\system\iot_tests_mqtt_system.c">
-      <Filter>libraries\c_sdk\standard\mqtt\test\system</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_api.c">
-      <Filter>libraries\c_sdk\standard\mqtt\test\unit</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_receive.c">
-      <Filter>libraries\c_sdk\standard\mqtt\test\unit</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_subscription.c">
-      <Filter>libraries\c_sdk\standard\mqtt\test\unit</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_validate.c">
-      <Filter>libraries\c_sdk\standard\mqtt\test\unit</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\access\iot_test_access_mqtt_api.c">
-      <Filter>libraries\c_sdk\standard\mqtt\test\access</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\access\iot_test_access_mqtt_subscription.c">
-      <Filter>libraries\c_sdk\standard\mqtt\test\access</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\src\iot_crypto.c">
-      <Filter>libraries\freertos_plus\standard\crypto\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\test\iot_test_crypto.c">
-      <Filter>libraries\freertos_plus\standard\crypto\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\aes.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\aesni.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\arc4.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\asn1parse.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\asn1write.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\base64.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\bignum.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\blowfish.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\camellia.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ccm.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\certs.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cipher.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cipher_wrap.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cmac.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ctr_drbg.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\debug.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\des.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\dhm.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecdh.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecdsa.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecjpake.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecp.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecp_curves.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\entropy.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\entropy_poll.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\error.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\gcm.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\havege.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\hmac_drbg.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md_wrap.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md2.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md4.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md5.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\memory_buffer_alloc.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\net_sockets.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\oid.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\padlock.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pem.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pk.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pk_wrap.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkcs5.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkcs12.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkparse.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkwrite.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\platform.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\platform_util.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ripemd160.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\rsa.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\rsa_internal.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha1.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha256.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha512.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cache.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_ciphersuites.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cli.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cookie.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_srv.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_ticket.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_tls.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\threading.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\timing.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\version.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\version_features.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_create.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_crl.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_crt.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_csr.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509write_crt.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509write_csr.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\xtea.c">
-      <Filter>libraries\3rdparty\mbedtls\library</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\test\iot_test_tls.c">
-      <Filter>libraries\freertos_plus\standard\tls\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\src\iot_tls.c">
-      <Filter>libraries\freertos_plus\standard\tls\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_demo_logging.c">
-      <Filter>application_code\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_entropy_hardware_poll.c">
-      <Filter>application_code\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_clock.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_mqueue.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_pthread.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_semaphore.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_stress.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_timer.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_unistd.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_utils.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_clock.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_mqueue.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_barrier.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_cond.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_mutex.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_sched.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_semaphore.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_timer.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_unistd.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_utils.c">
-      <Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\ports\pkcs11\iot_pkcs11_pal.c">
-      <Filter>ports\pkcs11</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\test\aws_iot_tests_defender_api.c">
-      <Filter>libraries\c_sdk\aws\defender\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_mqtt.c">
-      <Filter>libraries\c_sdk\aws\defender\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_collector.c">
-      <Filter>libraries\c_sdk\aws\defender\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_api.c">
-      <Filter>libraries\c_sdk\aws\defender\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\test\iot_tests_deserializer_json.c">
-      <Filter>libraries\c_sdk\standard\serializer\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\test\iot_tests_serializer_cbor.c">
-      <Filter>libraries\c_sdk\standard\serializer\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\test\iot_tests_serializer_json.c">
-      <Filter>libraries\c_sdk\standard\serializer\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\json\iot_serializer_json_decoder.c">
-      <Filter>libraries\c_sdk\standard\serializer\src\json</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\json\iot_serializer_json_encoder.c">
-      <Filter>libraries\c_sdk\standard\serializer\src\json</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\cbor\iot_serializer_tinycbor_decoder.c">
-      <Filter>libraries\c_sdk\standard\serializer\src\cbor</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\cbor\iot_serializer_tinycbor_encoder.c">
-      <Filter>libraries\c_sdk\standard\serializer\src\cbor</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\iot_json_utils.c">
-      <Filter>libraries\c_sdk\standard\serializer\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\iot_serializer_static_memory.c">
-      <Filter>libraries\c_sdk\standard\serializer\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborencoder.c">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborencoder_close_container_checked.c">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborerrorstrings.c">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborparser.c">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborparser_dup_string.c">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborpretty.c">
-      <Filter>libraries\3rdparty\tinycbor</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\jsmn\jsmn.c">
-      <Filter>libraries\3rdparty\jsmn</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_api.c">
-      <Filter>libraries\c_sdk\aws\shadow\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_parser.c">
-      <Filter>libraries\c_sdk\aws\shadow\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_operation.c">
-      <Filter>libraries\c_sdk\aws\shadow\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_static_memory.c">
-      <Filter>libraries\c_sdk\aws\shadow\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_subscription.c">
-      <Filter>libraries\c_sdk\aws\shadow\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_shadow.c">
-      <Filter>libraries\c_sdk\aws\shadow\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\test\aws_test_shadow.c">
-      <Filter>libraries\c_sdk\aws\shadow\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\test\unit\aws_iot_tests_shadow_api.c">
-      <Filter>libraries\c_sdk\aws\shadow\test\unit</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\test\unit\aws_iot_tests_shadow_parser.c">
-      <Filter>libraries\c_sdk\aws\shadow\test\unit</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\test\system\aws_iot_tests_shadow_system.c">
-      <Filter>libraries\c_sdk\aws\shadow\test\system</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_agent.c">
-      <Filter>libraries\freertos_plus\aws\ota\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_cbor.c">
-      <Filter>libraries\freertos_plus\aws\ota\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_end_to_end.c">
-      <Filter>libraries\freertos_plus\aws\ota\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_pal.c">
-      <Filter>libraries\freertos_plus\aws\ota\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_iot_ota_agent.c">
-      <Filter>libraries\freertos_plus\aws\ota\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor.c">
-      <Filter>libraries\freertos_plus\aws\ota\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\ports\ota\aws_ota_pal.c">
-      <Filter>ports\ota</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\test\aws_test_greengrass_discovery.c">
-      <Filter>libraries\freertos_plus\aws\greengrass\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\test\aws_test_helper_secure_connect.c">
-      <Filter>libraries\freertos_plus\aws\greengrass\test</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_greengrass_discovery.c">
-      <Filter>libraries\freertos_plus\aws\greengrass\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_helper_secure_connect.c">
-      <Filter>libraries\freertos_plus\aws\greengrass\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\demos\dev_mode_key_provisioning\src\aws_dev_mode_key_provisioning.c">
-      <Filter>demos\dev_mode_key_provisioning\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_metrics.c">
-      <Filter>libraries\c_sdk\standard\mqtt\test\unit</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_device_metrics.c">
-      <Filter>libraries\c_sdk\standard\common</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\src\iot_pkcs11.c">
-      <Filter>libraries\freertos_plus\standard\pkcs11\src</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\utils\mbedtls_utils.c">
-      <Filter>libraries\3rdparty\mbedtls\utils</Filter>
-    </ClCompile>
-    <ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\src\iot_pki_utils.c">
-      <Filter>libraries\freertos_plus\standard\utils\src</Filter>
-    </ClCompile>
-  </ItemGroup>
+	<ItemGroup>
+		<Filter Include="freertos_kernel"/>
+		<Filter Include="freertos_kernel\include"/>
+		<Filter Include="freertos_kernel\portable\MSVC-MingW"/>
+		<Filter Include="freertos_kernel\portable"/>
+		<Filter Include="freertos_kernel\portable\MemMang"/>
+		<Filter Include="tests\common"/>
+		<Filter Include="tests"/>
+		<Filter Include="tests\include"/>
+		<Filter Include="libraries\c_sdk\standard\common"/>
+		<Filter Include="libraries\c_sdk\standard"/>
+		<Filter Include="libraries\c_sdk"/>
+		<Filter Include="libraries"/>
+		<Filter Include="libraries\c_sdk\standard\common\include"/>
+		<Filter Include="libraries\c_sdk\standard\common\logging"/>
+		<Filter Include="libraries\c_sdk\standard\common\include\private"/>
+		<Filter Include="libraries\c_sdk\standard\common\include\types"/>
+		<Filter Include="libraries\c_sdk\standard\common\taskpool"/>
+		<Filter Include="libraries\abstractions\platform\include\platform"/>
+		<Filter Include="libraries\abstractions\platform\include"/>
+		<Filter Include="libraries\abstractions\platform"/>
+		<Filter Include="libraries\abstractions"/>
+		<Filter Include="libraries\abstractions\platform\include\types"/>
+		<Filter Include="libraries\abstractions\platform\freertos"/>
+		<Filter Include="libraries\abstractions\platform\freertos\include\platform"/>
+		<Filter Include="libraries\abstractions\platform\freertos\include"/>
+		<Filter Include="libraries\abstractions\secure_sockets\include"/>
+		<Filter Include="libraries\abstractions\secure_sockets"/>
+		<Filter Include="libraries\abstractions\secure_sockets\freertos_plus_tcp"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\source"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp"/>
+		<Filter Include="libraries\freertos_plus\standard"/>
+		<Filter Include="libraries\freertos_plus"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\include"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\BufferManagement"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\source\portable"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\NetworkInterface\WinPCap"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\NetworkInterface"/>
+		<Filter Include="libraries\freertos_plus\standard\tls\src"/>
+		<Filter Include="libraries\freertos_plus\standard\tls"/>
+		<Filter Include="libraries\freertos_plus\standard\tls\include"/>
+		<Filter Include="libraries\freertos_plus\standard\crypto\src"/>
+		<Filter Include="libraries\freertos_plus\standard\crypto"/>
+		<Filter Include="libraries\freertos_plus\standard\crypto\include"/>
+		<Filter Include="libraries\freertos_plus\standard\pkcs11\include"/>
+		<Filter Include="libraries\freertos_plus\standard\pkcs11"/>
+		<Filter Include="libraries\freertos_plus\standard\pkcs11\src"/>
+		<Filter Include="vendors\pc\boards\windows\ports\pkcs11"/>
+		<Filter Include="vendors\pc\boards\windows\ports"/>
+		<Filter Include="vendors\pc\boards\windows"/>
+		<Filter Include="vendors\pc\boards"/>
+		<Filter Include="vendors\pc"/>
+		<Filter Include="vendors"/>
+		<Filter Include="libraries\abstractions\pkcs11\mbedtls"/>
+		<Filter Include="libraries\abstractions\pkcs11"/>
+		<Filter Include="libraries\freertos_plus\standard\utils\src"/>
+		<Filter Include="libraries\freertos_plus\standard\utils"/>
+		<Filter Include="libraries\freertos_plus\standard\utils\include"/>
+		<Filter Include="demos\dev_mode_key_provisioning\src"/>
+		<Filter Include="demos\dev_mode_key_provisioning"/>
+		<Filter Include="demos"/>
+		<Filter Include="demos\dev_mode_key_provisioning\include"/>
+		<Filter Include="libraries\c_sdk\aws\defender\src"/>
+		<Filter Include="libraries\c_sdk\aws\defender"/>
+		<Filter Include="libraries\c_sdk\aws"/>
+		<Filter Include="libraries\c_sdk\aws\defender\src\private"/>
+		<Filter Include="libraries\c_sdk\aws\defender\include"/>
+		<Filter Include="libraries\c_sdk\standard\mqtt\src"/>
+		<Filter Include="libraries\c_sdk\standard\mqtt"/>
+		<Filter Include="libraries\c_sdk\standard\serializer\src\cbor"/>
+		<Filter Include="libraries\c_sdk\standard\serializer\src"/>
+		<Filter Include="libraries\c_sdk\standard\serializer"/>
+		<Filter Include="libraries\c_sdk\standard\serializer\src\json"/>
+		<Filter Include="libraries\c_sdk\standard\serializer\include"/>
+		<Filter Include="libraries\c_sdk\aws\shadow\src"/>
+		<Filter Include="libraries\c_sdk\aws\shadow"/>
+		<Filter Include="libraries\c_sdk\aws\shadow\include"/>
+		<Filter Include="libraries\c_sdk\standard\https\src"/>
+		<Filter Include="libraries\c_sdk\standard\https"/>
+		<Filter Include="libraries\freertos_plus\aws\greengrass\src"/>
+		<Filter Include="libraries\freertos_plus\aws\greengrass"/>
+		<Filter Include="libraries\freertos_plus\aws"/>
+		<Filter Include="libraries\freertos_plus\aws\greengrass\include"/>
+		<Filter Include="libraries\freertos_plus\aws\ota\src"/>
+		<Filter Include="libraries\freertos_plus\aws\ota"/>
+		<Filter Include="libraries\freertos_plus\aws\ota\include"/>
+		<Filter Include="libraries\3rdparty\mbedtls\library"/>
+		<Filter Include="libraries\3rdparty\mbedtls"/>
+		<Filter Include="libraries\3rdparty"/>
+		<Filter Include="vendors\pc\boards\windows\ports\ota"/>
+		<Filter Include="libraries\abstractions\posix\include\FreeRTOS_POSIX"/>
+		<Filter Include="libraries\abstractions\posix\include"/>
+		<Filter Include="libraries\abstractions\posix"/>
+		<Filter Include="libraries\abstractions\posix\include\FreeRTOS_POSIX\sys"/>
+		<Filter Include="vendors\pc\boards\windows\ports\posix"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_posix\source"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_posix"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_posix\include"/>
+		<Filter Include="libraries\c_sdk\aws\defender\test"/>
+		<Filter Include="libraries\c_sdk\aws\shadow\test\unit"/>
+		<Filter Include="libraries\c_sdk\aws\shadow\test"/>
+		<Filter Include="libraries\c_sdk\aws\shadow\test\system"/>
+		<Filter Include="libraries\c_sdk\standard\common\test"/>
+		<Filter Include="libraries\c_sdk\standard\https\test\unit"/>
+		<Filter Include="libraries\c_sdk\standard\https\test"/>
+		<Filter Include="libraries\c_sdk\standard\https\test\system"/>
+		<Filter Include="libraries\c_sdk\standard\mqtt\test\unit"/>
+		<Filter Include="libraries\c_sdk\standard\mqtt\test"/>
+		<Filter Include="libraries\c_sdk\standard\mqtt\test\system"/>
+		<Filter Include="libraries\c_sdk\standard\serializer\test"/>
+		<Filter Include="libraries\freertos_plus\aws\greengrass\test"/>
+		<Filter Include="libraries\freertos_plus\aws\ota\test"/>
+		<Filter Include="libraries\freertos_plus\standard\crypto\test"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_posix\test"/>
+		<Filter Include="libraries\freertos_plus\standard\freertos_plus_tcp\test"/>
+		<Filter Include="libraries\freertos_plus\standard\tls\test"/>
+		<Filter Include="libraries\abstractions\pkcs11\test"/>
+		<Filter Include="libraries\abstractions\platform\test"/>
+		<Filter Include="libraries\abstractions\secure_sockets\test"/>
+		<Filter Include="vendors\pc\boards\windows\aws_tests\application_code"/>
+		<Filter Include="vendors\pc\boards\windows\aws_tests"/>
+		<Filter Include="vendors\pc\boards\windows\aws_demos\application_code"/>
+		<Filter Include="vendors\pc\boards\windows\aws_demos"/>
+		<Filter Include="libraries\3rdparty\tracealyzer_recorder"/>
+		<Filter Include="libraries\3rdparty\mbedtls\utils"/>
+		<Filter Include="libraries\3rdparty\mbedtls\include\mbedtls"/>
+		<Filter Include="libraries\3rdparty\mbedtls\include"/>
+		<Filter Include="libraries\3rdparty\pkcs11"/>
+		<Filter Include="libraries\3rdparty\unity\src"/>
+		<Filter Include="libraries\3rdparty\unity"/>
+		<Filter Include="libraries\3rdparty\unity\extras\fixture\src"/>
+		<Filter Include="libraries\3rdparty\unity\extras\fixture"/>
+		<Filter Include="libraries\3rdparty\unity\extras"/>
+		<Filter Include="libraries\3rdparty\tinycbor"/>
+		<Filter Include="libraries\3rdparty\http-parser"/>
+		<Filter Include="libraries\3rdparty\jsmn"/>
+	</ItemGroup>
+	<ItemGroup>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\FreeRTOS.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\atomic.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\deprecated_definitions.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\event_groups.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\list.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\message_buffer.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\mpu_prototypes.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\mpu_wrappers.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\portable.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\projdefs.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\queue.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\semphr.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\stack_macros.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\stream_buffer.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\task.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\include\timers.h">
+			<Filter>freertos_kernel\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\freertos_kernel\portable\MSVC-MingW\portmacro.h">
+			<Filter>freertos_kernel\portable\MSVC-MingW</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\tests\include\aws_application_version.h">
+			<Filter>tests\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\tests\include\aws_clientcredential.h">
+			<Filter>tests\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\tests\include\aws_clientcredential_keys.h">
+			<Filter>tests\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\tests\include\aws_test_runner.h">
+			<Filter>tests\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\tests\include\aws_test_framework.h">
+			<Filter>tests\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\tests\include\aws_test_tcp.h">
+			<Filter>tests\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\tests\include\aws_test_utils.h">
+			<Filter>tests\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\tests\include\aws_unity_config.h">
+			<Filter>tests\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\tests\include\iot_config_common.h">
+			<Filter>tests\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_appversion32.h">
+			<Filter>libraries\c_sdk\standard\common\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_init.h">
+			<Filter>libraries\c_sdk\standard\common\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_linear_containers.h">
+			<Filter>libraries\c_sdk\standard\common\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_logging.h">
+			<Filter>libraries\c_sdk\standard\common\include\private</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_logging_task.h">
+			<Filter>libraries\c_sdk\standard\common\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_logging_setup.h">
+			<Filter>libraries\c_sdk\standard\common\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\types\iot_network_types.h">
+			<Filter>libraries\c_sdk\standard\common\include\types</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\iot_taskpool.h">
+			<Filter>libraries\c_sdk\standard\common\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\types\iot_taskpool_types.h">
+			<Filter>libraries\c_sdk\standard\common\include\types</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\common\include\private\iot_taskpool_internal.h">
+			<Filter>libraries\c_sdk\standard\common\include\private</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_clock.h">
+			<Filter>libraries\abstractions\platform\include\platform</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_network.h">
+			<Filter>libraries\abstractions\platform\include\platform</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_threads.h">
+			<Filter>libraries\abstractions\platform\include\platform</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\types\iot_platform_types.h">
+			<Filter>libraries\abstractions\platform\include\types</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_platform_types_freertos.h">
+			<Filter>libraries\abstractions\platform\freertos\include\platform</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\include\platform\iot_metrics.h">
+			<Filter>libraries\abstractions\platform\include\platform</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\platform\freertos\include\platform\iot_network_freertos.h">
+			<Filter>libraries\abstractions\platform\freertos\include\platform</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets.h">
+			<Filter>libraries\abstractions\secure_sockets\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets_config_defaults.h">
+			<Filter>libraries\abstractions\secure_sockets\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\secure_sockets\include\iot_secure_sockets_wrapper_metrics.h">
+			<Filter>libraries\abstractions\secure_sockets\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_ARP.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_DHCP.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_DNS.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_errno_TCP.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOSIPConfigDefaults.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_IP.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_IP_Private.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_Sockets.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_Stream_Buffer.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_TCP_IP.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_TCP_WIN.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\FreeRTOS_UDP_IP.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\IPTraceMacroDefaults.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\NetworkBufferManagement.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\include\NetworkInterface.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\include\iot_tls.h">
+			<Filter>libraries\freertos_plus\standard\tls\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\include\iot_crypto.h">
+			<Filter>libraries\freertos_plus\standard\crypto\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\include\iot_pkcs11.h">
+			<Filter>libraries\freertos_plus\standard\pkcs11\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls\threading_alt.h">
+			<Filter>libraries\abstractions\pkcs11\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\include\iot_system_init.h">
+			<Filter>libraries\freertos_plus\standard\utils\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\include\iot_pki_utils.h">
+			<Filter>libraries\freertos_plus\standard\utils\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\demos\dev_mode_key_provisioning\include\aws_dev_mode_key_provisioning.h">
+			<Filter>demos\dev_mode_key_provisioning\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\private\aws_iot_defender_internal.h">
+			<Filter>libraries\c_sdk\aws\defender\src\private</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\defender\include\aws_iot_defender.h">
+			<Filter>libraries\c_sdk\aws\defender\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\include\iot_serializer.h">
+			<Filter>libraries\c_sdk\standard\serializer\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\include\iot_json_utils.h">
+			<Filter>libraries\c_sdk\standard\serializer\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\aws_iot_shadow.h">
+			<Filter>libraries\c_sdk\aws\shadow\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_shadow_config_defaults.h">
+			<Filter>libraries\c_sdk\aws\shadow\src</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\include\aws_shadow.h">
+			<Filter>libraries\c_sdk\aws\shadow\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_helper_secure_connect.h">
+			<Filter>libraries\freertos_plus\aws\greengrass\src</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include\aws_ggd_config_defaults.h">
+			<Filter>libraries\freertos_plus\aws\greengrass\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include\aws_greengrass_discovery.h">
+			<Filter>libraries\freertos_plus\aws\greengrass\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor.h">
+			<Filter>libraries\freertos_plus\aws\ota\src</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_pal.h">
+			<Filter>libraries\freertos_plus\aws\ota\src</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_agent_internal.h">
+			<Filter>libraries\freertos_plus\aws\ota\src</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor_internal.h">
+			<Filter>libraries\freertos_plus\aws\ota\src</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\include\aws_iot_ota_agent.h">
+			<Filter>libraries\freertos_plus\aws\ota\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\include\aws_ota_types.h">
+			<Filter>libraries\freertos_plus\aws\ota\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\errno.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\fcntl.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\mqueue.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\pthread.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\sched.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\semaphore.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\signal.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\sys\types.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX\sys</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\time.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\unistd.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\abstractions\posix\include\FreeRTOS_POSIX\utils.h">
+			<Filter>libraries\abstractions\posix\include\FreeRTOS_POSIX</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\ports\posix\FreeRTOS_POSIX_portable.h">
+			<Filter>vendors\pc\boards\windows\ports\posix</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_types.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_internal.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\include\FreeRTOS_POSIX_portable_default.h">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\include</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_demo_logging.h">
+			<Filter>vendors\pc\boards\windows\aws_demos\application_code</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\aes.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\aesni.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\arc4.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\asn1.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\asn1write.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\base64.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\bignum.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\blowfish.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\bn_mul.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\camellia.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ccm.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\certs.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\check_config.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cipher.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cipher_internal.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\cmac.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\compat-1.3.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\config.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ctr_drbg.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\debug.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\des.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\dhm.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecdh.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecdsa.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecjpake.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecp.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ecp_internal.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\entropy.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\entropy_poll.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\error.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\gcm.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\havege.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\hmac_drbg.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md2.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md4.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md5.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\md_internal.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\memory_buffer_alloc.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\net.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\net_sockets.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\oid.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\padlock.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pem.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pk.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pk_internal.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pkcs12.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\pkcs5.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform_time.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\platform_util.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ripemd160.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\rsa.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\rsa_internal.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha1.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha256.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\sha512.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_cache.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_ciphersuites.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_cookie.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_internal.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\ssl_ticket.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\threading.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\timing.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\version.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_crl.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_crt.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\x509_csr.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls\xtea.h">
+			<Filter>libraries\3rdparty\mbedtls\include\mbedtls</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\pkcs11\pkcs11.h">
+			<Filter>libraries\3rdparty\pkcs11</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\pkcs11\pkcs11f.h">
+			<Filter>libraries\3rdparty\pkcs11</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\pkcs11\pkcs11t.h">
+			<Filter>libraries\3rdparty\pkcs11</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\src\unity.h">
+			<Filter>libraries\3rdparty\unity\src</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\src\unity_internals.h">
+			<Filter>libraries\3rdparty\unity\src</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\extras\fixture\src\unity_fixture.h">
+			<Filter>libraries\3rdparty\unity\extras\fixture\src</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\extras\fixture\src\unity_fixture_internals.h">
+			<Filter>libraries\3rdparty\unity\extras\fixture\src</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\unity\extras\fixture\src\unity_fixture_malloc_overrides.h">
+			<Filter>libraries\3rdparty\unity\extras\fixture\src</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\http-parser\http_parser.h">
+			<Filter>libraries\3rdparty\http-parser</Filter>
+		</ClInclude>
+		<ClInclude Include="..\..\..\..\..\libraries\3rdparty\jsmn\jsmn.h">
+			<Filter>libraries\3rdparty\jsmn</Filter>
+		</ClInclude>
+	</ItemGroup>
+	<ItemGroup>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\event_groups.c">
+			<Filter>freertos_kernel</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\list.c">
+			<Filter>freertos_kernel</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\queue.c">
+			<Filter>freertos_kernel</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\stream_buffer.c">
+			<Filter>freertos_kernel</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\tasks.c">
+			<Filter>freertos_kernel</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\timers.c">
+			<Filter>freertos_kernel</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\portable\MSVC-MingW\port.c">
+			<Filter>freertos_kernel\portable\MSVC-MingW</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\freertos_kernel\portable\MemMang\heap_4.c">
+			<Filter>freertos_kernel\portable\MemMang</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\tests\common\aws_test_framework.c">
+			<Filter>tests\common</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\tests\common\aws_test_runner.c">
+			<Filter>tests\common</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\tests\common\aws_test.c">
+			<Filter>tests\common</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\tests\common\iot_test_freertos.c">
+			<Filter>tests\common</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\tests\common\iot_tests_network.c">
+			<Filter>tests\common</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_init.c">
+			<Filter>libraries\c_sdk\standard\common</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\logging\iot_logging.c">
+			<Filter>libraries\c_sdk\standard\common\logging</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_static_memory_common.c">
+			<Filter>libraries\c_sdk\standard\common</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\iot_device_metrics.c">
+			<Filter>libraries\c_sdk\standard\common</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\taskpool\iot_taskpool.c">
+			<Filter>libraries\c_sdk\standard\common\taskpool</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\taskpool\iot_taskpool_static_memory.c">
+			<Filter>libraries\c_sdk\standard\common\taskpool</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_clock_freertos.c">
+			<Filter>libraries\abstractions\platform\freertos</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_threads_freertos.c">
+			<Filter>libraries\abstractions\platform\freertos</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_metrics.c">
+			<Filter>libraries\abstractions\platform\freertos</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\freertos\iot_network_freertos.c">
+			<Filter>libraries\abstractions\platform\freertos</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\secure_sockets\freertos_plus_tcp\iot_secure_sockets.c">
+			<Filter>libraries\abstractions\secure_sockets\freertos_plus_tcp</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_ARP.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_DHCP.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_DNS.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_IP.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_Sockets.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_Stream_Buffer.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_TCP_IP.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_TCP_WIN.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\FreeRTOS_UDP_IP.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\BufferManagement\BufferAllocation_2.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\BufferManagement</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\NetworkInterface\WinPCap\NetworkInterface.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\source\portable\NetworkInterface\WinPCap</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\src\iot_tls.c">
+			<Filter>libraries\freertos_plus\standard\tls\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\src\iot_crypto.c">
+			<Filter>libraries\freertos_plus\standard\crypto\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\pkcs11\src\iot_pkcs11.c">
+			<Filter>libraries\freertos_plus\standard\pkcs11\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\ports\pkcs11\iot_pkcs11_pal.c">
+			<Filter>vendors\pc\boards\windows\ports\pkcs11</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls\iot_pkcs11_mbedtls.c">
+			<Filter>libraries\abstractions\pkcs11\mbedtls</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\src\iot_system_init.c">
+			<Filter>libraries\freertos_plus\standard\utils\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\utils\src\iot_pki_utils.c">
+			<Filter>libraries\freertos_plus\standard\utils\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\demos\dev_mode_key_provisioning\src\aws_dev_mode_key_provisioning.c">
+			<Filter>demos\dev_mode_key_provisioning\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_api.c">
+			<Filter>libraries\c_sdk\aws\defender\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_collector.c">
+			<Filter>libraries\c_sdk\aws\defender\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_mqtt.c">
+			<Filter>libraries\c_sdk\aws\defender\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\src\aws_iot_defender_v1.c">
+			<Filter>libraries\c_sdk\aws\defender\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_api.c">
+			<Filter>libraries\c_sdk\standard\mqtt\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_network.c">
+			<Filter>libraries\c_sdk\standard\mqtt\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_operation.c">
+			<Filter>libraries\c_sdk\standard\mqtt\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_serialize.c">
+			<Filter>libraries\c_sdk\standard\mqtt\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_static_memory.c">
+			<Filter>libraries\c_sdk\standard\mqtt\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_subscription.c">
+			<Filter>libraries\c_sdk\standard\mqtt\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_validate.c">
+			<Filter>libraries\c_sdk\standard\mqtt\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\src\iot_mqtt_agent.c">
+			<Filter>libraries\c_sdk\standard\mqtt\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\cbor\iot_serializer_tinycbor_decoder.c">
+			<Filter>libraries\c_sdk\standard\serializer\src\cbor</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\cbor\iot_serializer_tinycbor_encoder.c">
+			<Filter>libraries\c_sdk\standard\serializer\src\cbor</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\json\iot_serializer_json_decoder.c">
+			<Filter>libraries\c_sdk\standard\serializer\src\json</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\json\iot_serializer_json_encoder.c">
+			<Filter>libraries\c_sdk\standard\serializer\src\json</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\iot_serializer_static_memory.c">
+			<Filter>libraries\c_sdk\standard\serializer\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\src\iot_json_utils.c">
+			<Filter>libraries\c_sdk\standard\serializer\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_api.c">
+			<Filter>libraries\c_sdk\aws\shadow\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_operation.c">
+			<Filter>libraries\c_sdk\aws\shadow\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_parser.c">
+			<Filter>libraries\c_sdk\aws\shadow\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_static_memory.c">
+			<Filter>libraries\c_sdk\aws\shadow\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_iot_shadow_subscription.c">
+			<Filter>libraries\c_sdk\aws\shadow\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\src\aws_shadow.c">
+			<Filter>libraries\c_sdk\aws\shadow\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\src\iot_https_client.c">
+			<Filter>libraries\c_sdk\standard\https\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\src\iot_https_utils.c">
+			<Filter>libraries\c_sdk\standard\https\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_greengrass_discovery.c">
+			<Filter>libraries\freertos_plus\aws\greengrass\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\src\aws_helper_secure_connect.c">
+			<Filter>libraries\freertos_plus\aws\greengrass\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_iot_ota_agent.c">
+			<Filter>libraries\freertos_plus\aws\ota\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\src\aws_ota_cbor.c">
+			<Filter>libraries\freertos_plus\aws\ota\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\base64.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\ports\ota\aws_ota_pal.c">
+			<Filter>vendors\pc\boards\windows\ports\ota</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_clock.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_mqueue.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_barrier.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_cond.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_pthread_mutex.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_sched.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_semaphore.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_timer.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_unistd.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\source\FreeRTOS_POSIX_utils.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\source</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\defender\test\aws_iot_tests_defender_api.c">
+			<Filter>libraries\c_sdk\aws\defender\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\test\unit\aws_iot_tests_shadow_api.c">
+			<Filter>libraries\c_sdk\aws\shadow\test\unit</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\test\unit\aws_iot_tests_shadow_parser.c">
+			<Filter>libraries\c_sdk\aws\shadow\test\unit</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\test\system\aws_iot_tests_shadow_system.c">
+			<Filter>libraries\c_sdk\aws\shadow\test\system</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\aws\shadow\test\aws_test_shadow.c">
+			<Filter>libraries\c_sdk\aws\shadow\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\test\iot_memory_leak.c">
+			<Filter>libraries\c_sdk\standard\common\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\common\test\iot_tests_taskpool.c">
+			<Filter>libraries\c_sdk\standard\common\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\test\unit\iot_tests_https_client.c">
+			<Filter>libraries\c_sdk\standard\https\test\unit</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\test\unit\iot_tests_https_utils.c">
+			<Filter>libraries\c_sdk\standard\https\test\unit</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\test\unit\iot_tests_https_common.c">
+			<Filter>libraries\c_sdk\standard\https\test\unit</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\test\unit\iot_tests_https_sync.c">
+			<Filter>libraries\c_sdk\standard\https\test\unit</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\test\unit\iot_tests_https_async.c">
+			<Filter>libraries\c_sdk\standard\https\test\unit</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\https\test\system\iot_tests_https_system.c">
+			<Filter>libraries\c_sdk\standard\https\test\system</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_api.c">
+			<Filter>libraries\c_sdk\standard\mqtt\test\unit</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_receive.c">
+			<Filter>libraries\c_sdk\standard\mqtt\test\unit</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_subscription.c">
+			<Filter>libraries\c_sdk\standard\mqtt\test\unit</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_validate.c">
+			<Filter>libraries\c_sdk\standard\mqtt\test\unit</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\unit\iot_tests_mqtt_metrics.c">
+			<Filter>libraries\c_sdk\standard\mqtt\test\unit</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\system\iot_tests_mqtt_system.c">
+			<Filter>libraries\c_sdk\standard\mqtt\test\system</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\mqtt\test\iot_test_mqtt_agent.c">
+			<Filter>libraries\c_sdk\standard\mqtt\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\test\iot_tests_serializer_cbor.c">
+			<Filter>libraries\c_sdk\standard\serializer\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\test\iot_tests_serializer_json.c">
+			<Filter>libraries\c_sdk\standard\serializer\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\c_sdk\standard\serializer\test\iot_tests_deserializer_json.c">
+			<Filter>libraries\c_sdk\standard\serializer\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\test\aws_test_greengrass_discovery.c">
+			<Filter>libraries\freertos_plus\aws\greengrass\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\greengrass\test\aws_test_helper_secure_connect.c">
+			<Filter>libraries\freertos_plus\aws\greengrass\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_cbor.c">
+			<Filter>libraries\freertos_plus\aws\ota\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_agent.c">
+			<Filter>libraries\freertos_plus\aws\ota\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\aws\ota\test\aws_test_ota_pal.c">
+			<Filter>libraries\freertos_plus\aws\ota\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\crypto\test\iot_test_crypto.c">
+			<Filter>libraries\freertos_plus\standard\crypto\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_clock.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_mqueue.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_pthread.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_semaphore.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_stress.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_timer.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_unistd.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_posix\test\iot_test_posix_utils.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_posix\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\freertos_plus_tcp\test\iot_test_freertos_tcp.c">
+			<Filter>libraries\freertos_plus\standard\freertos_plus_tcp\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\freertos_plus\standard\tls\test\iot_test_tls.c">
+			<Filter>libraries\freertos_plus\standard\tls\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\pkcs11\test\iot_test_pkcs11.c">
+			<Filter>libraries\abstractions\pkcs11\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\test\iot_test_platform_clock.c">
+			<Filter>libraries\abstractions\platform\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\platform\test\iot_test_platform_threads.c">
+			<Filter>libraries\abstractions\platform\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\abstractions\secure_sockets\test\iot_test_tcp.c">
+			<Filter>libraries\abstractions\secure_sockets\test</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_tests\application_code\main.c">
+			<Filter>vendors\pc\boards\windows\aws_tests\application_code</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_demo_logging.c">
+			<Filter>vendors\pc\boards\windows\aws_demos\application_code</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_entropy_hardware_poll.c">
+			<Filter>vendors\pc\boards\windows\aws_demos\application_code</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\vendors\pc\boards\windows\aws_demos\application_code\aws_run-time-stats-utils.c">
+			<Filter>vendors\pc\boards\windows\aws_demos\application_code</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\trcKernelPort.c">
+			<Filter>libraries\3rdparty\tracealyzer_recorder</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tracealyzer_recorder\trcSnapshotRecorder.c">
+			<Filter>libraries\3rdparty\tracealyzer_recorder</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\aes.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\aesni.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\arc4.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\asn1parse.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\asn1write.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\bignum.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\blowfish.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\camellia.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ccm.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\certs.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cipher.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cipher_wrap.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\cmac.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ctr_drbg.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\debug.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\des.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\dhm.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecdh.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecdsa.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecjpake.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecp.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ecp_curves.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\entropy.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\entropy_poll.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\error.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\gcm.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\havege.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\hmac_drbg.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md2.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md4.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md5.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\md_wrap.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\memory_buffer_alloc.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\net_sockets.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\oid.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\padlock.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pem.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pk.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pk_wrap.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkcs12.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkcs5.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkparse.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\pkwrite.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\platform.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\platform_util.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ripemd160.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\rsa.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\rsa_internal.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha1.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha256.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\sha512.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cache.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_ciphersuites.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cli.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_cookie.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_srv.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_ticket.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\ssl_tls.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\threading.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\timing.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\version.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\version_features.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_create.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_crl.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_crt.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509_csr.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509write_crt.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\x509write_csr.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\library\xtea.c">
+			<Filter>libraries\3rdparty\mbedtls\library</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\mbedtls\utils\mbedtls_utils.c">
+			<Filter>libraries\3rdparty\mbedtls\utils</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\unity\src\unity.c">
+			<Filter>libraries\3rdparty\unity\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\unity\extras\fixture\src\unity_fixture.c">
+			<Filter>libraries\3rdparty\unity\extras\fixture\src</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborpretty.c">
+			<Filter>libraries\3rdparty\tinycbor</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborencoder.c">
+			<Filter>libraries\3rdparty\tinycbor</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborencoder_close_container_checked.c">
+			<Filter>libraries\3rdparty\tinycbor</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborerrorstrings.c">
+			<Filter>libraries\3rdparty\tinycbor</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborparser.c">
+			<Filter>libraries\3rdparty\tinycbor</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\tinycbor\cborparser_dup_string.c">
+			<Filter>libraries\3rdparty\tinycbor</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\http-parser\http_parser.c">
+			<Filter>libraries\3rdparty\http-parser</Filter>
+		</ClCompile>
+		<ClCompile Include="..\..\..\..\..\libraries\3rdparty\jsmn\jsmn.c">
+			<Filter>libraries\3rdparty\jsmn</Filter>
+		</ClCompile>
+	</ItemGroup>
 </Project>
diff --git a/projects/renesas/rx65n-rsk/e2studio/aws_demos/.cproject b/projects/renesas/rx65n-rsk/e2studio/aws_demos/.cproject
index da214c294..f86a68bfa 100644
--- a/projects/renesas/rx65n-rsk/e2studio/aws_demos/.cproject
+++ b/projects/renesas/rx65n-rsk/e2studio/aws_demos/.cproject
@@ -91,12 +91,14 @@
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/mqtt/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/serializer/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/aws/shadow/include"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/mbedtls/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/mbedtls/include/mbedtls"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/abstractions/pkcs11/mbedtls"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/pkcs11"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/tinycbor"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/http-parser"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/jsmn"/>
 								</option>
 								<option id="com.renesas.cdt.managedbuild.renesas.ccrx.compiler.option.langFileC.416754408" name="Cソース" superClass="com.renesas.cdt.managedbuild.renesas.ccrx.compiler.option.langFileC" useByScannerDiscovery="false" value="com.renesas.cdt.managedbuild.renesas.ccrx.compiler.option.langFileC.c99" valueType="enumerated"/>
diff --git a/projects/renesas/rx65n-rsk/e2studio/aws_demos/.project b/projects/renesas/rx65n-rsk/e2studio/aws_demos/.project
index 932909a02..2eeca181a 100644
--- a/projects/renesas/rx65n-rsk/e2studio/aws_demos/.project
+++ b/projects/renesas/rx65n-rsk/e2studio/aws_demos/.project
@@ -1276,6 +1276,11 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c</locationURI>
 		</link>
+		<link>
+			<name>vendors/renesas/boards/rx65n-rsk/ports/pkcs11/iot_pkcs11_pal.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/vendors/renesas/boards/rx65n-rsk/ports/pkcs11/iot_pkcs11_pal.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c</name>
 			<type>1</type>
@@ -1286,11 +1291,6 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/libraries/abstractions/pkcs11/mbedtls/threading_alt.h</locationURI>
 		</link>
-		<link>
-			<name>vendors/renesas/boards/rx65n-rsk/ports/pkcs11/iot_pkcs11_pal.c</name>
-			<type>1</type>
-			<locationURI>AWS_IOT_MCU_ROOT/vendors/renesas/boards/rx65n-rsk/ports/pkcs11/iot_pkcs11_pal.c</locationURI>
-		</link>
 		<link>
 			<name>libraries/freertos_plus/standard/utils/src/iot_system_init.c</name>
 			<type>1</type>
@@ -1476,6 +1476,16 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/aws/shadow/include/aws_shadow.h</locationURI>
 		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_client.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/src/iot_https_client.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_utils.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/src/iot_https_utils.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</name>
 			<type>1</type>
@@ -1511,6 +1521,21 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/demos/greengrass_connectivity/aws_greengrass_discovery_demo.c</locationURI>
 		</link>
+		<link>
+			<name>demos/https/iot_demo_https_s3_download_sync.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/demos/https/iot_demo_https_s3_download_sync.c</locationURI>
+		</link>
+		<link>
+			<name>demos/https/iot_demo_https_s3_download_async.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/demos/https/iot_demo_https_s3_download_async.c</locationURI>
+		</link>
+		<link>
+			<name>demos/https/iot_demo_https_common.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/demos/https/iot_demo_https_common.c</locationURI>
+		</link>
 		<link>
 			<name>demos/mqtt/iot_demo_mqtt.c</name>
 			<type>1</type>
@@ -2376,6 +2401,16 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/libraries/3rdparty/tinycbor/cborparser_dup_string.c</locationURI>
 		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.h</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/3rdparty/http-parser/http_parser.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/3rdparty/http-parser/http_parser.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/3rdparty/jsmn/jsmn.h</name>
 			<type>1</type>
diff --git a/projects/renesas/rx65n-rsk/e2studio/aws_tests/.cproject b/projects/renesas/rx65n-rsk/e2studio/aws_tests/.cproject
index b1d3e5aaa..c16865890 100644
--- a/projects/renesas/rx65n-rsk/e2studio/aws_tests/.cproject
+++ b/projects/renesas/rx65n-rsk/e2studio/aws_tests/.cproject
@@ -97,6 +97,9 @@
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/serializer/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/aws/shadow/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/aws/shadow/src"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/test/access"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/include"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/src"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/test"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/src"/>
@@ -108,6 +111,7 @@
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/unity/src"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/unity/extras/fixture/src"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/tinycbor"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/http-parser"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/jsmn"/>
 								</option>
 								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="com.renesas.cdt.managedbuild.renesas.ccrx.compiler.option.define.1968064697" name="Macro definition" superClass="com.renesas.cdt.managedbuild.renesas.ccrx.compiler.option.define" useByScannerDiscovery="false" valueType="definedSymbols">
diff --git a/projects/renesas/rx65n-rsk/e2studio/aws_tests/.project b/projects/renesas/rx65n-rsk/e2studio/aws_tests/.project
index 3019b7334..778925436 100644
--- a/projects/renesas/rx65n-rsk/e2studio/aws_tests/.project
+++ b/projects/renesas/rx65n-rsk/e2studio/aws_tests/.project
@@ -1261,6 +1261,11 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c</locationURI>
 		</link>
+		<link>
+			<name>vendors/renesas/boards/rx65n-rsk/ports/pkcs11/iot_pkcs11_pal.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/vendors/renesas/boards/rx65n-rsk/ports/pkcs11/iot_pkcs11_pal.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c</name>
 			<type>1</type>
@@ -1271,11 +1276,6 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/libraries/abstractions/pkcs11/mbedtls/threading_alt.h</locationURI>
 		</link>
-		<link>
-			<name>vendors/renesas/boards/rx65n-rsk/ports/pkcs11/iot_pkcs11_pal.c</name>
-			<type>1</type>
-			<locationURI>AWS_IOT_MCU_ROOT/vendors/renesas/boards/rx65n-rsk/ports/pkcs11/iot_pkcs11_pal.c</locationURI>
-		</link>
 		<link>
 			<name>libraries/freertos_plus/standard/utils/src/iot_system_init.c</name>
 			<type>1</type>
@@ -1461,6 +1461,16 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/aws/shadow/include/aws_shadow.h</locationURI>
 		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_client.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/src/iot_https_client.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_utils.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/src/iot_https_utils.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</name>
 			<type>1</type>
@@ -1521,6 +1531,36 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/common/test/iot_tests_taskpool.c</locationURI>
 		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_client.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_client.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_utils.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_utils.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_sync.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_sync.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_async.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_async.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/system/iot_tests_https_system.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/test/system/iot_tests_https_system.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_api.c</name>
 			<type>1</type>
@@ -2521,6 +2561,16 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/libraries/3rdparty/tinycbor/cborparser_dup_string.c</locationURI>
 		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.h</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/3rdparty/http-parser/http_parser.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/3rdparty/http-parser/http_parser.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/3rdparty/jsmn/jsmn.h</name>
 			<type>1</type>
diff --git a/projects/st/stm32l475_discovery/ac6/aws_demos/.cproject b/projects/st/stm32l475_discovery/ac6/aws_demos/.cproject
index 73ae331f9..763d8bf26 100644
--- a/projects/st/stm32l475_discovery/ac6/aws_demos/.cproject
+++ b/projects/st/stm32l475_discovery/ac6/aws_demos/.cproject
@@ -70,12 +70,14 @@
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/mqtt/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/serializer/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/aws/shadow/include"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/mbedtls/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/mbedtls/include/mbedtls"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/abstractions/pkcs11/mbedtls"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/pkcs11"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/tinycbor"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/http-parser"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/jsmn"/>
 								</option>
 								<option id="gnu.c.compiler.option.preprocessor.def.symbols.1779062689" name="Defined symbols (-D)" superClass="gnu.c.compiler.option.preprocessor.def.symbols" useByScannerDiscovery="false" valueType="definedSymbols">
diff --git a/projects/st/stm32l475_discovery/ac6/aws_demos/.project b/projects/st/stm32l475_discovery/ac6/aws_demos/.project
index f371a19c8..5ffb62c7a 100644
--- a/projects/st/stm32l475_discovery/ac6/aws_demos/.project
+++ b/projects/st/stm32l475_discovery/ac6/aws_demos/.project
@@ -1407,6 +1407,11 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c</locationURI>
 		</link>
+		<link>
+			<name>vendors/st/boards/stm32l475_discovery/ports/pkcs11/iot_pkcs11_pal.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/vendors/st/boards/stm32l475_discovery/ports/pkcs11/iot_pkcs11_pal.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c</name>
 			<type>1</type>
@@ -1417,11 +1422,6 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/libraries/abstractions/pkcs11/mbedtls/threading_alt.h</locationURI>
 		</link>
-		<link>
-			<name>vendors/st/boards/stm32l475_discovery/ports/pkcs11/iot_pkcs11_pal.c</name>
-			<type>1</type>
-			<locationURI>AWS_IOT_MCU_ROOT/vendors/st/boards/stm32l475_discovery/ports/pkcs11/iot_pkcs11_pal.c</locationURI>
-		</link>
 		<link>
 			<name>libraries/abstractions/wifi/include/iot_wifi.h</name>
 			<type>1</type>
@@ -1617,6 +1617,16 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/aws/shadow/include/aws_shadow.h</locationURI>
 		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_client.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/src/iot_https_client.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_utils.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/src/iot_https_utils.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</name>
 			<type>1</type>
@@ -1652,6 +1662,21 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/demos/greengrass_connectivity/aws_greengrass_discovery_demo.c</locationURI>
 		</link>
+		<link>
+			<name>demos/https/iot_demo_https_s3_download_sync.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/demos/https/iot_demo_https_s3_download_sync.c</locationURI>
+		</link>
+		<link>
+			<name>demos/https/iot_demo_https_s3_download_async.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/demos/https/iot_demo_https_s3_download_async.c</locationURI>
+		</link>
+		<link>
+			<name>demos/https/iot_demo_https_common.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/demos/https/iot_demo_https_common.c</locationURI>
+		</link>
 		<link>
 			<name>demos/mqtt/iot_demo_mqtt.c</name>
 			<type>1</type>
@@ -1677,11 +1702,6 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/vendors/st/boards/stm32l475_discovery/aws_demos/application_code/st_code/cmsis_os.c</locationURI>
 		</link>
-		<link>
-			<name>application_code/st_code/cmsis_os.h</name>
-			<type>1</type>
-			<locationURI>AWS_IOT_MCU_ROOT/vendors/st/boards/stm32l475_discovery/aws_demos/application_code/st_code/cmsis_os.h</locationURI>
-		</link>
 		<link>
 			<name>application_code/st_code/entropy_hardware_poll.c</name>
 			<type>1</type>
@@ -1727,6 +1747,11 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/vendors/st/boards/stm32l475_discovery/aws_demos/application_code/st_code/vl53l0x_proximity.c</locationURI>
 		</link>
+		<link>
+			<name>application_code/st_code/cmsis_os.h</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/vendors/st/boards/stm32l475_discovery/aws_demos/application_code/st_code/cmsis_os.h</locationURI>
+		</link>
 		<link>
 			<name>application_code/st_code/es_wifi_conf.h</name>
 			<type>1</type>
@@ -2607,6 +2632,16 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/libraries/3rdparty/tinycbor/cborparser_dup_string.c</locationURI>
 		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.h</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/3rdparty/http-parser/http_parser.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/3rdparty/http-parser/http_parser.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/3rdparty/jsmn/jsmn.h</name>
 			<type>1</type>
diff --git a/projects/st/stm32l475_discovery/ac6/aws_tests/.cproject b/projects/st/stm32l475_discovery/ac6/aws_tests/.cproject
index 3bb6d3733..9b03c468e 100644
--- a/projects/st/stm32l475_discovery/ac6/aws_tests/.cproject
+++ b/projects/st/stm32l475_discovery/ac6/aws_tests/.cproject
@@ -73,6 +73,9 @@
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/serializer/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/aws/shadow/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/aws/shadow/src"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/test/access"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/include"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/src"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/test"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/src"/>
@@ -84,6 +87,7 @@
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/unity/src"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/unity/extras/fixture/src"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/tinycbor"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/http-parser"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/jsmn"/>
 								</option>
 								<option id="gnu.c.compiler.option.preprocessor.def.symbols.1779062689" name="Defined symbols (-D)" superClass="gnu.c.compiler.option.preprocessor.def.symbols" useByScannerDiscovery="false" valueType="definedSymbols">
diff --git a/projects/st/stm32l475_discovery/ac6/aws_tests/.project b/projects/st/stm32l475_discovery/ac6/aws_tests/.project
index c737ee145..a178a8c12 100644
--- a/projects/st/stm32l475_discovery/ac6/aws_tests/.project
+++ b/projects/st/stm32l475_discovery/ac6/aws_tests/.project
@@ -1397,6 +1397,11 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c</locationURI>
 		</link>
+		<link>
+			<name>vendors/st/boards/stm32l475_discovery/ports/pkcs11/iot_pkcs11_pal.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/vendors/st/boards/stm32l475_discovery/ports/pkcs11/iot_pkcs11_pal.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c</name>
 			<type>1</type>
@@ -1407,11 +1412,6 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/libraries/abstractions/pkcs11/mbedtls/threading_alt.h</locationURI>
 		</link>
-		<link>
-			<name>vendors/st/boards/stm32l475_discovery/ports/pkcs11/iot_pkcs11_pal.c</name>
-			<type>1</type>
-			<locationURI>AWS_IOT_MCU_ROOT/vendors/st/boards/stm32l475_discovery/ports/pkcs11/iot_pkcs11_pal.c</locationURI>
-		</link>
 		<link>
 			<name>libraries/abstractions/wifi/include/iot_wifi.h</name>
 			<type>1</type>
@@ -1607,6 +1607,16 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/aws/shadow/include/aws_shadow.h</locationURI>
 		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_client.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/src/iot_https_client.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_utils.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/src/iot_https_utils.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</name>
 			<type>1</type>
@@ -1667,6 +1677,36 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/common/test/iot_tests_taskpool.c</locationURI>
 		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_client.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_client.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_utils.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_utils.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_sync.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_sync.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_async.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_async.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/system/iot_tests_https_system.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/c_sdk/standard/https/test/system/iot_tests_https_system.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_api.c</name>
 			<type>1</type>
@@ -1765,12 +1805,7 @@
 		<link>
 			<name>application_code/st_code/cmsis_os.c</name>
 			<type>1</type>
-			<locationURI>AWS_IOT_MCU_ROOT/vendors/st/boards/stm32l475_discovery/aws_demos/application_code/st_code/cmsis_os.c</locationURI>
-		</link>
-		<link>
-			<name>application_code/st_code/cmsis_os.h</name>
-			<type>1</type>
-			<locationURI>AWS_IOT_MCU_ROOT/vendors/st/boards/stm32l475_discovery/aws_demos/application_code/st_code/cmsis_os.h</locationURI>
+			<locationURI>AWS_IOT_MCU_ROOT/vendors/st/boards/stm32l475_discovery/aws_tests/application_code/st_code/cmsis_os.c</locationURI>
 		</link>
 		<link>
 			<name>application_code/st_code/entropy_hardware_poll.c</name>
@@ -1817,6 +1852,11 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/vendors/st/boards/stm32l475_discovery/aws_tests/application_code/st_code/vl53l0x_proximity.c</locationURI>
 		</link>
+		<link>
+			<name>application_code/st_code/cmsis_os.h</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/vendors/st/boards/stm32l475_discovery/aws_tests/application_code/st_code/cmsis_os.h</locationURI>
+		</link>
 		<link>
 			<name>application_code/st_code/es_wifi_conf.h</name>
 			<type>1</type>
@@ -2747,6 +2787,16 @@
 			<type>1</type>
 			<locationURI>AWS_IOT_MCU_ROOT/libraries/3rdparty/tinycbor/cborparser_dup_string.c</locationURI>
 		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.h</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/3rdparty/http-parser/http_parser.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.c</name>
+			<type>1</type>
+			<locationURI>AWS_IOT_MCU_ROOT/libraries/3rdparty/http-parser/http_parser.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/3rdparty/jsmn/jsmn.h</name>
 			<type>1</type>
diff --git a/projects/ti/cc3220_launchpad/ccs/aws_demos/.cproject b/projects/ti/cc3220_launchpad/ccs/aws_demos/.cproject
index 53d57c5a0..d3f66b4be 100644
--- a/projects/ti/cc3220_launchpad/ccs/aws_demos/.cproject
+++ b/projects/ti/cc3220_launchpad/ccs/aws_demos/.cproject
@@ -69,6 +69,7 @@
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/mqtt/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/serializer/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/aws/shadow/include"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/ota/src"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/ota/include"/>
@@ -77,6 +78,7 @@
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/mbedtls/include/mbedtls"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/abstractions/pkcs11/mbedtls"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/tinycbor"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/http-parser"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/jsmn"/>
 								</option>
 								<option id="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.DEBUGGING_MODEL.902230565" name="Debugging model" superClass="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.DEBUGGING_MODEL" useByScannerDiscovery="false" value="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.DEBUGGING_MODEL.SYMDEBUG__DWARF" valueType="enumerated"/>
diff --git a/projects/ti/cc3220_launchpad/ccs/aws_demos/.project b/projects/ti/cc3220_launchpad/ccs/aws_demos/.project
index 987c2b89d..939e37406 100644
--- a/projects/ti/cc3220_launchpad/ccs/aws_demos/.project
+++ b/projects/ti/cc3220_launchpad/ccs/aws_demos/.project
@@ -797,6 +797,16 @@
 			<type>1</type>
 			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/include/aws_shadow.h</locationURI>
 		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_client.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/https/src/iot_https_client.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_utils.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/https/src/iot_https_utils.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</name>
 			<type>1</type>
@@ -882,6 +892,21 @@
 			<type>1</type>
 			<locationURI>BASE_DIR_ROOT/demos/greengrass_connectivity/aws_greengrass_discovery_demo.c</locationURI>
 		</link>
+		<link>
+			<name>demos/https/iot_demo_https_s3_download_sync.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/demos/https/iot_demo_https_s3_download_sync.c</locationURI>
+		</link>
+		<link>
+			<name>demos/https/iot_demo_https_s3_download_async.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/demos/https/iot_demo_https_s3_download_async.c</locationURI>
+		</link>
+		<link>
+			<name>demos/https/iot_demo_https_common.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/demos/https/iot_demo_https_common.c</locationURI>
+		</link>
 		<link>
 			<name>demos/mqtt/iot_demo_mqtt.c</name>
 			<type>1</type>
@@ -1782,6 +1807,16 @@
 			<type>1</type>
 			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/tinycbor/cborparser_dup_string.c</locationURI>
 		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.h</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/http-parser/http_parser.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/http-parser/http_parser.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/3rdparty/jsmn/jsmn.h</name>
 			<type>1</type>
diff --git a/projects/ti/cc3220_launchpad/ccs/aws_tests/.cproject b/projects/ti/cc3220_launchpad/ccs/aws_tests/.cproject
index 6b22053a5..9f15e11c8 100644
--- a/projects/ti/cc3220_launchpad/ccs/aws_tests/.cproject
+++ b/projects/ti/cc3220_launchpad/ccs/aws_tests/.cproject
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
+<?fileVersion 4.0.0?>
+<cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
 	<storageModule configRelations="2" moduleId="org.eclipse.cdt.core.settings">
 		<cconfiguration id="com.ti.ccstudio.buildDefinitions.TMS470.Debug.362742304">
 			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.ti.ccstudio.buildDefinitions.TMS470.Debug.362742304" moduleId="org.eclipse.cdt.core.settings" name="Debug">
@@ -40,7 +41,7 @@
 								<option id="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.CODE_STATE.1251104812" name="Designate code state, 16-bit (thumb) or 32-bit (--code_state)" superClass="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.CODE_STATE" value="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.CODE_STATE.16" valueType="enumerated"/>
 								<option id="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.ABI.2071140859" name="Application binary interface. (--abi)" superClass="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.ABI" value="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.ABI.eabi" valueType="enumerated"/>
 								<option id="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.FLOAT_SUPPORT.339681752" name="Specify floating point support (--float_support)" superClass="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.FLOAT_SUPPORT" value="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.FLOAT_SUPPORT.vfplib" valueType="enumerated"/>
-								<option id="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.LITTLE_ENDIAN.700088682" name="Little endian code [See 'General' page to edit] (--little_endian, -me)" superClass="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.LITTLE_ENDIAN" value="true" valueType="boolean"/>
+								<option id="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.LITTLE_ENDIAN.700088682" name="Little endian code [See &apos;General&apos; page to edit] (--little_endian, -me)" superClass="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.LITTLE_ENDIAN" value="true" valueType="boolean"/>
 								<option id="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.INCLUDE_PATH.588385244" name="Add dir to #include search path (--include_path, -I)" superClass="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.INCLUDE_PATH" valueType="includePath">
 									<listOptionValue builtIn="false" value="${CG_TOOL_ROOT}/include"/>
 									<listOptionValue builtIn="false" value="${PROJECT_ROOT}"/>
@@ -49,6 +50,7 @@
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../vendors/ti/boards/cc3220_launchpad/aws_tests/config_files"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../vendors/ti/boards/cc3220_launchpad/aws_tests/application_code/ti_code"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../tests/include"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../freertos_kernel/portable/CCS/ARM_CM3"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/abstractions/posix/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../vendors/ti/boards/cc3220_launchpad/ports/posix"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/standard/freertos_plus_posix/include"/>
@@ -72,6 +74,9 @@
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/serializer/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/aws/shadow/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/aws/shadow/src"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/test/access"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/include"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/src"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/test"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/src"/>
@@ -85,8 +90,8 @@
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/mbedtls/include/mbedtls"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/abstractions/pkcs11/mbedtls"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/tinycbor"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/http-parser"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/jsmn"/>
-									<listOptionValue builtIn="false" value="&quot;${BASE_DIR_ROOT}/freertos_kernel/portable/CCS/ARM_CM3&quot;"/>
 								</option>
 								<option id="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.DEBUGGING_MODEL.1257131903" name="Debugging model" superClass="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.DEBUGGING_MODEL" value="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.DEBUGGING_MODEL.SYMDEBUG__DWARF" valueType="enumerated"/>
 								<option id="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.PRINTF_SUPPORT.1620303454" name="Level of printf/scanf support required (--printf_support)" superClass="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.PRINTF_SUPPORT" value="com.ti.ccstudio.buildDefinitions.TMS470_16.9.compilerID.PRINTF_SUPPORT.full" valueType="enumerated"/>
diff --git a/projects/ti/cc3220_launchpad/ccs/aws_tests/.project b/projects/ti/cc3220_launchpad/ccs/aws_tests/.project
index 668520e5f..9b5194d29 100644
--- a/projects/ti/cc3220_launchpad/ccs/aws_tests/.project
+++ b/projects/ti/cc3220_launchpad/ccs/aws_tests/.project
@@ -1,20 +1,17 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <projectDescription>
 	<name>aws_tests</name>
-	<comment></comment>
-	<projects>
-	</projects>
+	<comment/>
+	<projects/>
 	<buildSpec>
 		<buildCommand>
 			<name>org.eclipse.cdt.managedbuilder.core.genmakebuilder</name>
-			<arguments>
-			</arguments>
+			<arguments/>
 		</buildCommand>
 		<buildCommand>
 			<name>org.eclipse.cdt.managedbuilder.core.ScannerConfigBuilder</name>
 			<triggers>full,incremental,</triggers>
-			<arguments>
-			</arguments>
+			<arguments/>
 		</buildCommand>
 	</buildSpec>
 	<natures>
@@ -26,109 +23,9 @@
 	</natures>
 	<linkedResources>
 		<link>
-			<name>application_code/main.c</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/application_code/main.c</locationURI>
-		</link>
-		<link>
-			<name>config_files/FreeRTOSConfig.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/FreeRTOSConfig.h</locationURI>
-		</link>
-		<link>
-			<name>config_files/FreeRTOSIPConfig.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/FreeRTOSIPConfig.h</locationURI>
-		</link>
-		<link>
-			<name>config_files/aws_bufferpool_config.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_bufferpool_config.h</locationURI>
-		</link>
-		<link>
-			<name>config_files/aws_demo_config.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_demo_config.h</locationURI>
-		</link>
-		<link>
-			<name>config_files/aws_ggd_config.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_ggd_config.h</locationURI>
-		</link>
-		<link>
-			<name>config_files/aws_iot_network_config.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_iot_network_config.h</locationURI>
-		</link>
-		<link>
-			<name>config_files/aws_mqtt_config.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_mqtt_config.h</locationURI>
-		</link>
-		<link>
-			<name>config_files/aws_ota_agent_config.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_ota_agent_config.h</locationURI>
-		</link>
-		<link>
-			<name>config_files/aws_secure_sockets_config.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_secure_sockets_config.h</locationURI>
-		</link>
-		<link>
-			<name>config_files/aws_shadow_config.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_shadow_config.h</locationURI>
-		</link>
-		<link>
-			<name>config_files/aws_test_ota_config.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_test_ota_config.h</locationURI>
-		</link>
-		<link>
-			<name>config_files/aws_test_runner_config.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_test_runner_config.h</locationURI>
-		</link>
-		<link>
-			<name>config_files/aws_test_tcp_config.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_test_tcp_config.h</locationURI>
-		</link>
-		<link>
-			<name>config_files/aws_test_wifi_config.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_test_wifi_config.h</locationURI>
-		</link>
-		<link>
-			<name>config_files/aws_wifi_config.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_wifi_config.h</locationURI>
-		</link>
-		<link>
-			<name>config_files/iot_config.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/iot_config.h</locationURI>
-		</link>
-		<link>
-			<name>config_files/iot_mqtt_agent_config.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/iot_mqtt_agent_config.h</locationURI>
-		</link>
-		<link>
-			<name>config_files/iot_pkcs11_config.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/iot_pkcs11_config.h</locationURI>
-		</link>
-		<link>
-			<name>config_files/iot_test_pkcs11_config.h</name>
+			<name>CC3220SF.ccxml</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/iot_test_pkcs11_config.h</locationURI>
-		</link>
-		<link>
-			<name>config_files/unity_config.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/unity_config.h</locationURI>
+			<locationURI>PARENT-5-PROJECT_LOC/vendors/ti/boards/cc3220_launchpad/CC3220SF.ccxml</locationURI>
 		</link>
 		<link>
 			<name>freertos_kernel/event_groups.c</name>
@@ -160,46 +57,6 @@
 			<type>1</type>
 			<locationURI>BASE_DIR_ROOT/freertos_kernel/timers.c</locationURI>
 		</link>
-		<link>
-			<name>application_code/ti_code/Board.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/application_code/ti_code/Board.h</locationURI>
-		</link>
-		<link>
-			<name>application_code/ti_code/CC3220SF_LAUNCHXL.c</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/application_code/ti_code/CC3220SF_LAUNCHXL.c</locationURI>
-		</link>
-		<link>
-			<name>application_code/ti_code/CC3220SF_LAUNCHXL.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/application_code/ti_code/CC3220SF_LAUNCHXL.h</locationURI>
-		</link>
-		<link>
-			<name>application_code/ti_code/CC3220SF_LAUNCHXL_FREERTOS.cmd</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/application_code/ti_code/CC3220SF_LAUNCHXL_FREERTOS.cmd</locationURI>
-		</link>
-		<link>
-			<name>application_code/ti_code/network_if.c</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/application_code/ti_code/network_if.c</locationURI>
-		</link>
-		<link>
-			<name>application_code/ti_code/network_if.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/application_code/ti_code/network_if.h</locationURI>
-		</link>
-		<link>
-			<name>application_code/ti_code/uart_term.c</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/application_code/ti_code/uart_term.c</locationURI>
-		</link>
-		<link>
-			<name>application_code/ti_code/uart_term.h</name>
-			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/application_code/ti_code/uart_term.h</locationURI>
-		</link>
 		<link>
 			<name>freertos_kernel/include/FreeRTOS.h</name>
 			<type>1</type>
@@ -281,1314 +138,1509 @@
 			<locationURI>BASE_DIR_ROOT/freertos_kernel/include/timers.h</locationURI>
 		</link>
 		<link>
-			<name>tests/common/aws_test.c</name>
+			<name>vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/ClockP_freertos.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/tests/common/aws_test.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/ClockP_freertos.c</locationURI>
 		</link>
 		<link>
-			<name>tests/common/aws_test_framework.c</name>
+			<name>vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/DebugP_freertos.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/tests/common/aws_test_framework.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/DebugP_freertos.c</locationURI>
 		</link>
 		<link>
-			<name>tests/common/aws_test_runner.c</name>
+			<name>vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/HwiPCC32XX_freertos.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/tests/common/aws_test_runner.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/HwiPCC32XX_freertos.c</locationURI>
 		</link>
 		<link>
-			<name>tests/common/iot_test_freertos.c</name>
+			<name>vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/MutexP_freertos.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/tests/common/iot_test_freertos.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/MutexP_freertos.c</locationURI>
 		</link>
 		<link>
-			<name>tests/common/iot_tests_network.c</name>
+			<name>vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/PowerCC32XX_freertos.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/tests/common/iot_tests_network.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/PowerCC32XX_freertos.c</locationURI>
 		</link>
 		<link>
-			<name>tests/include/aws_application_version.h</name>
+			<name>vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/SemaphoreP_freertos.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/tests/include/aws_application_version.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/SemaphoreP_freertos.c</locationURI>
 		</link>
 		<link>
-			<name>tests/include/aws_clientcredential.h</name>
+			<name>vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/SystemP_freertos.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/tests/include/aws_clientcredential.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/SystemP_freertos.c</locationURI>
 		</link>
 		<link>
-			<name>tests/include/aws_clientcredential_keys.h</name>
+			<name>freertos_kernel/portable/MemMang/heap_4.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/tests/include/aws_clientcredential_keys.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/freertos_kernel/portable/MemMang/heap_4.c</locationURI>
 		</link>
 		<link>
-			<name>tests/include/aws_test_framework.h</name>
+			<name>vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/startup/startup_cc32xx_ccs.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/tests/include/aws_test_framework.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/startup/startup_cc32xx_ccs.c</locationURI>
 		</link>
 		<link>
-			<name>tests/include/aws_test_runner.h</name>
+			<name>freertos_kernel/portable/CCS/ARM_CM3/port.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/tests/include/aws_test_runner.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/freertos_kernel/portable/CCS/ARM_CM3/port.c</locationURI>
 		</link>
 		<link>
-			<name>tests/include/aws_test_tcp.h</name>
+			<name>freertos_kernel/portable/CCS/ARM_CM3/portasm.asm</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/tests/include/aws_test_tcp.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/freertos_kernel/portable/CCS/ARM_CM3/portasm.asm</locationURI>
 		</link>
 		<link>
-			<name>tests/include/aws_test_utils.h</name>
+			<name>freertos_kernel/portable/CCS/ARM_CM3/portmacro.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/tests/include/aws_test_utils.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/freertos_kernel/portable/CCS/ARM_CM3/portmacro.h</locationURI>
 		</link>
 		<link>
-			<name>tests/include/aws_unity_config.h</name>
+			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/errno.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/tests/include/aws_unity_config.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/errno.h</locationURI>
 		</link>
 		<link>
-			<name>tests/include/iot_config_common.h</name>
+			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/fcntl.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/tests/include/iot_config_common.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/fcntl.h</locationURI>
 		</link>
 		<link>
-			<name>demos/dev_mode_key_provisioning/include/aws_dev_mode_key_provisioning.h</name>
+			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/mqueue.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/demos/dev_mode_key_provisioning/include/aws_dev_mode_key_provisioning.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/mqueue.h</locationURI>
 		</link>
 		<link>
-			<name>demos/dev_mode_key_provisioning/src/aws_dev_mode_key_provisioning.c</name>
+			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/pthread.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/demos/dev_mode_key_provisioning/src/aws_dev_mode_key_provisioning.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/pthread.h</locationURI>
 		</link>
 		<link>
-			<name>freertos_kernel/portable/MemMang/heap_4.c</name>
+			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/sched.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/freertos_kernel/portable/MemMang/heap_4.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/sched.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/jsmn/jsmn.c</name>
+			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/semaphore.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/jsmn/jsmn.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/semaphore.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/jsmn/jsmn.h</name>
+			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/signal.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/jsmn/jsmn.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/signal.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/pkcs11/pkcs11.h</name>
+			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/sys/types.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/pkcs11/pkcs11.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/sys/types.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/pkcs11/pkcs11f.h</name>
+			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/time.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/pkcs11/pkcs11f.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/time.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/pkcs11/pkcs11t.h</name>
+			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/unistd.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/pkcs11/pkcs11t.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/unistd.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/tinycbor/cborencoder.c</name>
+			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/utils.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/tinycbor/cborencoder.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/utils.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/tinycbor/cborencoder_close_container_checked.c</name>
+			<name>vendors/ti/boards/cc3220_launchpad/ports/posix/FreeRTOS_POSIX_portable.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/tinycbor/cborencoder_close_container_checked.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/ports/posix/FreeRTOS_POSIX_portable.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/tinycbor/cborerrorstrings.c</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_clock.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/tinycbor/cborerrorstrings.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_clock.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/tinycbor/cborparser.c</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_mqueue.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/tinycbor/cborparser.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_mqueue.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/tinycbor/cborparser_dup_string.c</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_barrier.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/tinycbor/cborparser_dup_string.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_barrier.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/tinycbor/cborpretty.c</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/tinycbor/cborpretty.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread.c</locationURI>
 		</link>
 		<link>
-			<name>freertos_kernel/portable/CCS/ARM_CM3/port.c</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_cond.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/freertos_kernel/portable/CCS/ARM_CM3/port.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_cond.c</locationURI>
 		</link>
 		<link>
-			<name>freertos_kernel/portable/CCS/ARM_CM3/portasm.asm</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_mutex.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/freertos_kernel/portable/CCS/ARM_CM3/portasm.asm</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_mutex.c</locationURI>
 		</link>
 		<link>
-			<name>freertos_kernel/portable/CCS/ARM_CM3/portmacro.h</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_sched.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/freertos_kernel/portable/CCS/ARM_CM3/portmacro.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_sched.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/aes.c</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_semaphore.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/aes.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_semaphore.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/aesni.c</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_timer.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/aesni.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_timer.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/arc4.c</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_unistd.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/arc4.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_unistd.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/asn1parse.c</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_utils.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/asn1parse.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_utils.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/asn1write.c</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/asn1write.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/base64.c</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_types.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/base64.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_types.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/bignum.c</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_internal.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/bignum.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_internal.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/blowfish.c</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_portable_default.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/blowfish.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_portable_default.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/camellia.c</name>
+			<name>tests/common/aws_test_framework.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/camellia.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/tests/common/aws_test_framework.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/ccm.c</name>
+			<name>tests/common/aws_test_runner.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ccm.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/tests/common/aws_test_runner.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/certs.c</name>
+			<name>tests/common/aws_test.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/certs.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/tests/common/aws_test.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/cipher.c</name>
+			<name>tests/common/iot_test_freertos.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/cipher.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/tests/common/iot_test_freertos.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/cipher_wrap.c</name>
+			<name>tests/common/iot_tests_network.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/cipher_wrap.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/tests/common/iot_tests_network.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/cmac.c</name>
+			<name>tests/include/aws_application_version.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/cmac.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/tests/include/aws_application_version.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/ctr_drbg.c</name>
+			<name>tests/include/aws_clientcredential.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ctr_drbg.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/tests/include/aws_clientcredential.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/debug.c</name>
+			<name>tests/include/aws_clientcredential_keys.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/debug.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/tests/include/aws_clientcredential_keys.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/des.c</name>
+			<name>tests/include/aws_test_runner.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/des.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/tests/include/aws_test_runner.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/dhm.c</name>
+			<name>tests/include/aws_test_framework.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/dhm.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/tests/include/aws_test_framework.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/ecdh.c</name>
+			<name>tests/include/aws_test_tcp.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ecdh.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/tests/include/aws_test_tcp.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/ecdsa.c</name>
+			<name>tests/include/aws_test_utils.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ecdsa.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/tests/include/aws_test_utils.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/ecjpake.c</name>
+			<name>tests/include/aws_unity_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ecjpake.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/tests/include/aws_unity_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/ecp.c</name>
+			<name>tests/include/iot_config_common.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ecp.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/tests/include/iot_config_common.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/ecp_curves.c</name>
+			<name>libraries/c_sdk/standard/common/iot_init.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ecp_curves.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/iot_init.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/entropy.c</name>
+			<name>libraries/c_sdk/standard/common/include/iot_appversion32.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/entropy.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/iot_appversion32.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/entropy_poll.c</name>
+			<name>libraries/c_sdk/standard/common/include/iot_init.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/entropy_poll.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/iot_init.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/error.c</name>
+			<name>libraries/c_sdk/standard/common/include/iot_linear_containers.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/error.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/iot_linear_containers.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/gcm.c</name>
+			<name>libraries/c_sdk/standard/common/logging/iot_logging_task_dynamic_buffers.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/gcm.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/logging/iot_logging_task_dynamic_buffers.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/havege.c</name>
+			<name>libraries/c_sdk/standard/common/logging/iot_logging.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/havege.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/logging/iot_logging.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/hmac_drbg.c</name>
+			<name>libraries/c_sdk/standard/common/include/private/iot_logging.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/hmac_drbg.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/private/iot_logging.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/md.c</name>
+			<name>libraries/c_sdk/standard/common/include/iot_logging_task.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/md.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/iot_logging_task.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/md2.c</name>
+			<name>libraries/c_sdk/standard/common/include/iot_logging_setup.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/md2.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/iot_logging_setup.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/md4.c</name>
+			<name>libraries/c_sdk/standard/common/include/types/iot_network_types.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/md4.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/types/iot_network_types.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/md5.c</name>
+			<name>libraries/c_sdk/standard/common/iot_static_memory_common.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/md5.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/iot_static_memory_common.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/md_wrap.c</name>
+			<name>libraries/c_sdk/standard/common/iot_device_metrics.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/md_wrap.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/iot_device_metrics.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/memory_buffer_alloc.c</name>
+			<name>libraries/c_sdk/standard/common/taskpool/iot_taskpool.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/memory_buffer_alloc.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/taskpool/iot_taskpool.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/net_sockets.c</name>
+			<name>libraries/c_sdk/standard/common/taskpool/iot_taskpool_static_memory.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/net_sockets.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/taskpool/iot_taskpool_static_memory.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/oid.c</name>
+			<name>libraries/c_sdk/standard/common/include/iot_taskpool.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/oid.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/iot_taskpool.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/padlock.c</name>
+			<name>libraries/c_sdk/standard/common/include/types/iot_taskpool_types.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/padlock.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/types/iot_taskpool_types.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/pem.c</name>
+			<name>libraries/c_sdk/standard/common/include/private/iot_taskpool_internal.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/pem.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/private/iot_taskpool_internal.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/pk.c</name>
+			<name>libraries/abstractions/platform/include/platform/iot_clock.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/pk.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/include/platform/iot_clock.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/pk_wrap.c</name>
+			<name>libraries/abstractions/platform/include/platform/iot_network.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/pk_wrap.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/include/platform/iot_network.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/pkcs12.c</name>
+			<name>libraries/abstractions/platform/include/platform/iot_threads.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/pkcs12.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/include/platform/iot_threads.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/pkcs5.c</name>
+			<name>libraries/abstractions/platform/include/types/iot_platform_types.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/pkcs5.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/include/types/iot_platform_types.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/pkparse.c</name>
+			<name>libraries/abstractions/platform/freertos/iot_clock_freertos.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/pkparse.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/freertos/iot_clock_freertos.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/pkwrite.c</name>
+			<name>libraries/abstractions/platform/freertos/iot_threads_freertos.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/pkwrite.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/freertos/iot_threads_freertos.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/platform.c</name>
+			<name>libraries/abstractions/platform/freertos/include/platform/iot_platform_types_freertos.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/platform.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/freertos/include/platform/iot_platform_types_freertos.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/platform_util.c</name>
+			<name>libraries/abstractions/platform/include/platform/iot_metrics.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/platform_util.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/include/platform/iot_metrics.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/ripemd160.c</name>
+			<name>libraries/abstractions/platform/freertos/iot_metrics.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ripemd160.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/freertos/iot_metrics.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/rsa.c</name>
+			<name>libraries/abstractions/platform/freertos/iot_network_freertos.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/rsa.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/freertos/iot_network_freertos.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/rsa_internal.c</name>
+			<name>libraries/abstractions/platform/freertos/include/platform/iot_network_freertos.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/rsa_internal.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/freertos/include/platform/iot_network_freertos.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/sha1.c</name>
+			<name>libraries/abstractions/secure_sockets/include/iot_secure_sockets.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/sha1.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/secure_sockets/include/iot_secure_sockets.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/abstractions/secure_sockets/include/iot_secure_sockets_config_defaults.h</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/secure_sockets/include/iot_secure_sockets_config_defaults.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/abstractions/secure_sockets/include/iot_secure_sockets_wrapper_metrics.h</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/secure_sockets/include/iot_secure_sockets_wrapper_metrics.h</locationURI>
+		</link>
+		<link>
+			<name>vendors/ti/boards/cc3220_launchpad/ports/secure_sockets/iot_secure_sockets.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/ports/secure_sockets/iot_secure_sockets.c</locationURI>
+		</link>
+		<link>
+			<name>demos/dev_mode_key_provisioning/src/aws_dev_mode_key_provisioning.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/demos/dev_mode_key_provisioning/src/aws_dev_mode_key_provisioning.c</locationURI>
+		</link>
+		<link>
+			<name>demos/dev_mode_key_provisioning/include/aws_dev_mode_key_provisioning.h</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/demos/dev_mode_key_provisioning/include/aws_dev_mode_key_provisioning.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/freertos_plus/standard/pkcs11/include/iot_pkcs11.h</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/pkcs11/include/iot_pkcs11.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c</locationURI>
+		</link>
+		<link>
+			<name>vendors/ti/boards/cc3220_launchpad/ports/pkcs11/iot_pkcs11_pal.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/ports/pkcs11/iot_pkcs11_pal.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/abstractions/pkcs11/mbedtls/threading_alt.h</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/pkcs11/mbedtls/threading_alt.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/freertos_plus/standard/crypto/src/iot_crypto.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/crypto/src/iot_crypto.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/freertos_plus/standard/crypto/include/iot_crypto.h</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/crypto/include/iot_crypto.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/freertos_plus/standard/utils/src/iot_system_init.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/utils/src/iot_system_init.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/freertos_plus/standard/utils/include/iot_system_init.h</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/utils/include/iot_system_init.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/freertos_plus/standard/utils/src/iot_pki_utils.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/utils/src/iot_pki_utils.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/freertos_plus/standard/utils/include/iot_pki_utils.h</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/utils/include/iot_pki_utils.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/abstractions/wifi/include/iot_wifi.h</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/wifi/include/iot_wifi.h</locationURI>
+		</link>
+		<link>
+			<name>vendors/ti/boards/cc3220_launchpad/ports/wifi/iot_wifi.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/ports/wifi/iot_wifi.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/aws/defender/src/aws_iot_defender_api.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/defender/src/aws_iot_defender_api.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/aws/defender/src/aws_iot_defender_collector.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/defender/src/aws_iot_defender_collector.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/aws/defender/src/aws_iot_defender_mqtt.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/defender/src/aws_iot_defender_mqtt.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/aws/defender/src/aws_iot_defender_v1.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/defender/src/aws_iot_defender_v1.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/aws/defender/src/private/aws_iot_defender_internal.h</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/defender/src/private/aws_iot_defender_internal.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/aws/defender/include/aws_iot_defender.h</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/defender/include/aws_iot_defender.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/mqtt/src/iot_mqtt_api.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/src/iot_mqtt_api.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/mqtt/src/iot_mqtt_network.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/src/iot_mqtt_network.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/mqtt/src/iot_mqtt_operation.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/src/iot_mqtt_operation.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/mqtt/src/iot_mqtt_serialize.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/src/iot_mqtt_serialize.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/mqtt/src/iot_mqtt_static_memory.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/src/iot_mqtt_static_memory.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/mqtt/src/iot_mqtt_subscription.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/src/iot_mqtt_subscription.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/mqtt/src/iot_mqtt_validate.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/src/iot_mqtt_validate.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/mqtt/src/iot_mqtt_agent.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/src/iot_mqtt_agent.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_decoder.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_decoder.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_encoder.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_encoder.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_decoder.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_decoder.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_encoder.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_encoder.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/serializer/src/iot_serializer_static_memory.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/src/iot_serializer_static_memory.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/serializer/include/iot_serializer.h</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/include/iot_serializer.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/serializer/src/iot_json_utils.c</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/src/iot_json_utils.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/sha256.c</name>
+			<name>libraries/c_sdk/standard/serializer/include/iot_json_utils.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/sha256.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/include/iot_json_utils.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/sha512.c</name>
+			<name>libraries/c_sdk/aws/shadow/src/aws_iot_shadow_api.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/sha512.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_api.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/ssl_cache.c</name>
+			<name>libraries/c_sdk/aws/shadow/src/aws_iot_shadow_operation.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ssl_cache.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_operation.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/ssl_ciphersuites.c</name>
+			<name>libraries/c_sdk/aws/shadow/src/aws_iot_shadow_parser.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ssl_ciphersuites.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_parser.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/ssl_cli.c</name>
+			<name>libraries/c_sdk/aws/shadow/src/aws_iot_shadow_static_memory.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ssl_cli.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_static_memory.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/ssl_cookie.c</name>
+			<name>libraries/c_sdk/aws/shadow/src/aws_iot_shadow_subscription.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ssl_cookie.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_subscription.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/ssl_srv.c</name>
+			<name>libraries/c_sdk/aws/shadow/include/aws_iot_shadow.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ssl_srv.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/include/aws_iot_shadow.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/ssl_ticket.c</name>
+			<name>libraries/c_sdk/aws/shadow/src/aws_shadow.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ssl_ticket.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/src/aws_shadow.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/ssl_tls.c</name>
+			<name>libraries/c_sdk/aws/shadow/src/aws_shadow_config_defaults.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ssl_tls.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/src/aws_shadow_config_defaults.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/threading.c</name>
+			<name>libraries/c_sdk/aws/shadow/include/aws_shadow.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/threading.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/include/aws_shadow.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/timing.c</name>
+			<name>libraries/c_sdk/standard/https/src/iot_https_client.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/timing.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/https/src/iot_https_client.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/version.c</name>
+			<name>libraries/c_sdk/standard/https/src/iot_https_utils.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/version.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/https/src/iot_https_utils.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/version_features.c</name>
+			<name>libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/version_features.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/x509.c</name>
+			<name>libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/x509.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/x509_create.c</name>
+			<name>libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/x509_create.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/x509_crl.c</name>
+			<name>libraries/freertos_plus/aws/greengrass/include/aws_ggd_config_defaults.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/x509_crl.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/greengrass/include/aws_ggd_config_defaults.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/x509_crt.c</name>
+			<name>libraries/freertos_plus/aws/greengrass/include/aws_greengrass_discovery.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/x509_crt.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/greengrass/include/aws_greengrass_discovery.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/x509_csr.c</name>
+			<name>libraries/freertos_plus/aws/ota/src/aws_iot_ota_agent.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/x509_csr.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/src/aws_iot_ota_agent.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/x509write_crt.c</name>
+			<name>libraries/freertos_plus/aws/ota/src/aws_ota_cbor.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/x509write_crt.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/src/aws_ota_cbor.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/x509write_csr.c</name>
+			<name>libraries/freertos_plus/aws/ota/src/aws_ota_cbor.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/x509write_csr.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/src/aws_ota_cbor.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/library/xtea.c</name>
+			<name>libraries/freertos_plus/aws/ota/src/aws_ota_pal.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/xtea.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/src/aws_ota_pal.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/utils/mbedtls_utils.c</name>
+			<name>libraries/freertos_plus/aws/ota/src/aws_ota_agent_internal.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/utils/mbedtls_utils.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/src/aws_ota_agent_internal.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/unity/src/unity.c</name>
+			<name>libraries/freertos_plus/aws/ota/src/aws_ota_cbor_internal.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/unity/src/unity.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/src/aws_ota_cbor_internal.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/unity/src/unity.h</name>
+			<name>libraries/freertos_plus/aws/ota/include/aws_ota_agent.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/unity/src/unity.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/include/aws_ota_agent.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/unity/src/unity_internals.h</name>
+			<name>libraries/freertos_plus/aws/ota/include/aws_ota_types.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/unity/src/unity_internals.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/include/aws_ota_types.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c</name>
+			<name>libraries/3rdparty/mbedtls/library/base64.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/base64.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/pkcs11/mbedtls/threading_alt.h</name>
+			<name>vendors/ti/boards/cc3220_launchpad/ports/ota/aws_ota_pal.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/pkcs11/mbedtls/threading_alt.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/ports/ota/aws_ota_pal.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/pkcs11/test/iot_test_pkcs11.c</name>
+			<name>libraries/c_sdk/aws/defender/test/aws_iot_tests_defender_api.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/pkcs11/test/iot_test_pkcs11.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/defender/test/aws_iot_tests_defender_api.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/platform/freertos/iot_clock_freertos.c</name>
+			<name>libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_api.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/freertos/iot_clock_freertos.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_api.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/platform/freertos/iot_metrics.c</name>
+			<name>libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_parser.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/freertos/iot_metrics.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_parser.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/platform/freertos/iot_network_freertos.c</name>
+			<name>libraries/c_sdk/aws/shadow/test/system/aws_iot_tests_shadow_system.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/freertos/iot_network_freertos.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/test/system/aws_iot_tests_shadow_system.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/platform/freertos/iot_threads_freertos.c</name>
+			<name>libraries/c_sdk/aws/shadow/test/aws_test_shadow.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/freertos/iot_threads_freertos.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/test/aws_test_shadow.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/platform/test/iot_test_platform_clock.c</name>
+			<name>libraries/c_sdk/standard/common/test/iot_memory_leak.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/test/iot_test_platform_clock.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/test/iot_memory_leak.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/platform/test/iot_test_platform_threads.c</name>
+			<name>libraries/c_sdk/standard/common/test/iot_tests_taskpool.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/test/iot_test_platform_threads.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/test/iot_tests_taskpool.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/secure_sockets/include/iot_secure_sockets.h</name>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_client.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/secure_sockets/include/iot_secure_sockets.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_client.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/secure_sockets/include/iot_secure_sockets_config_defaults.h</name>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_utils.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/secure_sockets/include/iot_secure_sockets_config_defaults.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_utils.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/secure_sockets/include/iot_secure_sockets_wrapper_metrics.h</name>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/secure_sockets/include/iot_secure_sockets_wrapper_metrics.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/secure_sockets/test/iot_test_tcp.c</name>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_sync.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/secure_sockets/test/iot_test_tcp.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_sync.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/wifi/include/iot_wifi.h</name>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_async.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/wifi/include/iot_wifi.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_async.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/wifi/test/iot_test_wifi.c</name>
+			<name>libraries/c_sdk/standard/https/test/system/iot_tests_https_system.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/wifi/test/iot_test_wifi.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/https/test/system/iot_tests_https_system.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/common/iot_device_metrics.c</name>
+			<name>libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_api.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/iot_device_metrics.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_api.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/common/iot_init.c</name>
+			<name>libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_receive.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/iot_init.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_receive.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/common/iot_static_memory_common.c</name>
+			<name>libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_subscription.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/iot_static_memory_common.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_subscription.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/aes.h</name>
+			<name>libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_validate.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/aes.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_validate.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/aesni.h</name>
+			<name>libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_metrics.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/aesni.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_metrics.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/arc4.h</name>
+			<name>libraries/c_sdk/standard/mqtt/test/system/iot_tests_mqtt_system.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/arc4.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/test/system/iot_tests_mqtt_system.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/asn1.h</name>
+			<name>libraries/c_sdk/standard/mqtt/test/iot_test_mqtt_agent.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/asn1.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/test/iot_test_mqtt_agent.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/asn1write.h</name>
+			<name>libraries/c_sdk/standard/serializer/test/iot_tests_serializer_cbor.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/asn1write.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/test/iot_tests_serializer_cbor.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/base64.h</name>
+			<name>libraries/c_sdk/standard/serializer/test/iot_tests_serializer_json.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/base64.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/test/iot_tests_serializer_json.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/bignum.h</name>
+			<name>libraries/c_sdk/standard/serializer/test/iot_tests_deserializer_json.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/bignum.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/test/iot_tests_deserializer_json.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/blowfish.h</name>
+			<name>libraries/freertos_plus/aws/greengrass/test/aws_test_greengrass_discovery.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/blowfish.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/greengrass/test/aws_test_greengrass_discovery.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/bn_mul.h</name>
+			<name>libraries/freertos_plus/aws/greengrass/test/aws_test_helper_secure_connect.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/bn_mul.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/greengrass/test/aws_test_helper_secure_connect.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/camellia.h</name>
+			<name>libraries/freertos_plus/aws/ota/test/aws_test_ota_agent.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/camellia.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/test/aws_test_ota_agent.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/ccm.h</name>
+			<name>libraries/freertos_plus/aws/ota/test/aws_test_ota_pal.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ccm.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/test/aws_test_ota_pal.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/certs.h</name>
+			<name>libraries/freertos_plus/standard/crypto/test/iot_test_crypto.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/certs.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/crypto/test/iot_test_crypto.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/check_config.h</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_clock.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/check_config.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_clock.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/cipher.h</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_mqueue.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/cipher.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_mqueue.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/cipher_internal.h</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_pthread.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/cipher_internal.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_pthread.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/cmac.h</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_semaphore.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/cmac.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_semaphore.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/compat-1.3.h</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_stress.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/compat-1.3.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_stress.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/config.h</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_timer.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/config.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_timer.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/ctr_drbg.h</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_unistd.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ctr_drbg.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_unistd.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/debug.h</name>
+			<name>libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_utils.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/debug.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_utils.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/des.h</name>
+			<name>libraries/freertos_plus/standard/tls/test/iot_test_tls.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/des.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/tls/test/iot_test_tls.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/dhm.h</name>
+			<name>libraries/abstractions/pkcs11/test/iot_test_pkcs11.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/dhm.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/pkcs11/test/iot_test_pkcs11.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/ecdh.h</name>
+			<name>libraries/abstractions/platform/test/iot_test_platform_clock.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ecdh.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/test/iot_test_platform_clock.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/ecdsa.h</name>
+			<name>libraries/abstractions/platform/test/iot_test_platform_threads.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ecdsa.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/test/iot_test_platform_threads.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/ecjpake.h</name>
+			<name>libraries/abstractions/secure_sockets/test/iot_test_tcp.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ecjpake.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/secure_sockets/test/iot_test_tcp.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/ecp.h</name>
+			<name>libraries/abstractions/wifi/test/iot_test_wifi.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ecp.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/abstractions/wifi/test/iot_test_wifi.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/ecp_internal.h</name>
+			<name>application_code/ti_code/CC3220SF_LAUNCHXL.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ecp_internal.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/application_code/ti_code/CC3220SF_LAUNCHXL.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/entropy.h</name>
+			<name>application_code/ti_code/network_if.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/entropy.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/application_code/ti_code/network_if.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/entropy_poll.h</name>
+			<name>application_code/ti_code/uart_term.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/entropy_poll.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/application_code/ti_code/uart_term.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/error.h</name>
+			<name>application_code/ti_code/Board.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/error.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/application_code/ti_code/Board.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/gcm.h</name>
+			<name>application_code/ti_code/CC3220SF_LAUNCHXL.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/gcm.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/application_code/ti_code/CC3220SF_LAUNCHXL.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/havege.h</name>
+			<name>application_code/ti_code/network_if.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/havege.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/application_code/ti_code/network_if.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/hmac_drbg.h</name>
+			<name>application_code/ti_code/uart_term.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/hmac_drbg.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/application_code/ti_code/uart_term.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/md.h</name>
+			<name>config_files/FreeRTOSConfig.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/md.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/FreeRTOSConfig.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/md2.h</name>
+			<name>config_files/FreeRTOSIPConfig.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/md2.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/FreeRTOSIPConfig.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/md4.h</name>
+			<name>config_files/aws_bufferpool_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/md4.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_bufferpool_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/md5.h</name>
+			<name>config_files/aws_demo_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/md5.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_demo_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/md_internal.h</name>
+			<name>config_files/aws_ggd_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/md_internal.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_ggd_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/memory_buffer_alloc.h</name>
+			<name>config_files/aws_iot_network_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/memory_buffer_alloc.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_iot_network_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/net.h</name>
+			<name>config_files/aws_mqtt_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/net.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_mqtt_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/net_sockets.h</name>
+			<name>config_files/aws_ota_agent_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/net_sockets.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_ota_agent_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/oid.h</name>
+			<name>config_files/aws_secure_sockets_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/oid.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_secure_sockets_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/padlock.h</name>
+			<name>config_files/aws_shadow_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/padlock.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_shadow_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/pem.h</name>
+			<name>config_files/aws_test_ota_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/pem.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_test_ota_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/pk.h</name>
+			<name>config_files/aws_test_runner_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/pk.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_test_runner_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/pk_internal.h</name>
+			<name>config_files/aws_test_tcp_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/pk_internal.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_test_tcp_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/pkcs12.h</name>
+			<name>config_files/aws_test_wifi_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/pkcs12.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_test_wifi_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/pkcs5.h</name>
+			<name>config_files/aws_wifi_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/pkcs5.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_wifi_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/platform.h</name>
+			<name>config_files/iot_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/platform.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/iot_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/platform_time.h</name>
+			<name>config_files/iot_mqtt_agent_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/platform_time.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/iot_mqtt_agent_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/platform_util.h</name>
+			<name>config_files/iot_pkcs11_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/platform_util.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/iot_pkcs11_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/ripemd160.h</name>
+			<name>config_files/iot_test_pkcs11_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ripemd160.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/iot_test_pkcs11_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/rsa.h</name>
+			<name>config_files/unity_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/rsa.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/unity_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/rsa_internal.h</name>
+			<name>application_code/main.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/rsa_internal.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/application_code/main.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/sha1.h</name>
+			<name>application_code/ti_code/CC3220SF_LAUNCHXL_FREERTOS.cmd</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/sha1.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/aws_tests/application_code/ti_code/CC3220SF_LAUNCHXL_FREERTOS.cmd</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/sha256.h</name>
+			<name>libraries/3rdparty/unity/src/unity.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/sha256.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/unity/src/unity.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/sha512.h</name>
+			<name>libraries/3rdparty/unity/src/unity.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/sha512.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/unity/src/unity.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/ssl.h</name>
+			<name>libraries/3rdparty/unity/src/unity_internals.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ssl.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/unity/src/unity_internals.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/ssl_cache.h</name>
+			<name>libraries/3rdparty/unity/extras/fixture/src/unity_fixture.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ssl_cache.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/unity/extras/fixture/src/unity_fixture.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/ssl_ciphersuites.h</name>
+			<name>libraries/3rdparty/unity/extras/fixture/src/unity_fixture.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ssl_ciphersuites.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/unity/extras/fixture/src/unity_fixture.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/ssl_cookie.h</name>
+			<name>libraries/3rdparty/unity/extras/fixture/src/unity_fixture_internals.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ssl_cookie.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/unity/extras/fixture/src/unity_fixture_internals.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/ssl_internal.h</name>
+			<name>libraries/3rdparty/unity/extras/fixture/src/unity_fixture_malloc_overrides.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ssl_internal.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/unity/extras/fixture/src/unity_fixture_malloc_overrides.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/ssl_ticket.h</name>
+			<name>libraries/3rdparty/pkcs11/pkcs11.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ssl_ticket.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/pkcs11/pkcs11.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/threading.h</name>
+			<name>libraries/3rdparty/pkcs11/pkcs11f.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/threading.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/pkcs11/pkcs11f.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/timing.h</name>
+			<name>libraries/3rdparty/pkcs11/pkcs11t.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/timing.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/pkcs11/pkcs11t.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/version.h</name>
+			<name>libraries/3rdparty/mbedtls/library/aes.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/version.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/aes.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/x509.h</name>
+			<name>libraries/3rdparty/mbedtls/library/aesni.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/x509.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/aesni.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/x509_crl.h</name>
+			<name>libraries/3rdparty/mbedtls/library/arc4.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/x509_crl.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/arc4.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/x509_crt.h</name>
+			<name>libraries/3rdparty/mbedtls/library/asn1parse.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/x509_crt.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/asn1parse.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/x509_csr.h</name>
+			<name>libraries/3rdparty/mbedtls/library/asn1write.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/x509_csr.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/asn1write.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/mbedtls/include/mbedtls/xtea.h</name>
+			<name>libraries/3rdparty/mbedtls/library/bignum.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/xtea.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/bignum.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/platform/include/platform/iot_clock.h</name>
+			<name>libraries/3rdparty/mbedtls/library/blowfish.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/include/platform/iot_clock.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/blowfish.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/platform/include/platform/iot_metrics.h</name>
+			<name>libraries/3rdparty/mbedtls/library/camellia.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/include/platform/iot_metrics.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/camellia.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/platform/include/platform/iot_network.h</name>
+			<name>libraries/3rdparty/mbedtls/library/ccm.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/include/platform/iot_network.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ccm.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/platform/include/platform/iot_threads.h</name>
+			<name>libraries/3rdparty/mbedtls/library/certs.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/include/platform/iot_threads.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/certs.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/platform/include/types/iot_platform_types.h</name>
+			<name>libraries/3rdparty/mbedtls/library/cipher.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/include/types/iot_platform_types.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/cipher.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/errno.h</name>
+			<name>libraries/3rdparty/mbedtls/library/cipher_wrap.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/errno.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/cipher_wrap.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/fcntl.h</name>
+			<name>libraries/3rdparty/mbedtls/library/cmac.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/fcntl.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/cmac.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/mqueue.h</name>
+			<name>libraries/3rdparty/mbedtls/library/ctr_drbg.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/mqueue.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ctr_drbg.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/pthread.h</name>
+			<name>libraries/3rdparty/mbedtls/library/debug.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/pthread.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/debug.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/sched.h</name>
+			<name>libraries/3rdparty/mbedtls/library/des.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/sched.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/des.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/semaphore.h</name>
+			<name>libraries/3rdparty/mbedtls/library/dhm.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/semaphore.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/dhm.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/signal.h</name>
+			<name>libraries/3rdparty/mbedtls/library/ecdh.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/signal.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ecdh.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/time.h</name>
+			<name>libraries/3rdparty/mbedtls/library/ecdsa.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/time.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ecdsa.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/unistd.h</name>
+			<name>libraries/3rdparty/mbedtls/library/ecjpake.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/unistd.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ecjpake.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/utils.h</name>
+			<name>libraries/3rdparty/mbedtls/library/ecp.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/utils.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ecp.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/defender/include/aws_iot_defender.h</name>
+			<name>libraries/3rdparty/mbedtls/library/ecp_curves.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/defender/include/aws_iot_defender.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ecp_curves.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/defender/src/aws_iot_defender_api.c</name>
+			<name>libraries/3rdparty/mbedtls/library/entropy.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/defender/src/aws_iot_defender_api.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/entropy.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/defender/src/aws_iot_defender_collector.c</name>
+			<name>libraries/3rdparty/mbedtls/library/entropy_poll.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/defender/src/aws_iot_defender_collector.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/entropy_poll.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/defender/src/aws_iot_defender_mqtt.c</name>
+			<name>libraries/3rdparty/mbedtls/library/error.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/defender/src/aws_iot_defender_mqtt.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/error.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/defender/src/aws_iot_defender_v1.c</name>
+			<name>libraries/3rdparty/mbedtls/library/gcm.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/defender/src/aws_iot_defender_v1.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/gcm.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/defender/test/aws_iot_tests_defender_api.c</name>
+			<name>libraries/3rdparty/mbedtls/library/havege.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/defender/test/aws_iot_tests_defender_api.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/havege.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/shadow/include/aws_iot_shadow.h</name>
+			<name>libraries/3rdparty/mbedtls/library/hmac_drbg.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/include/aws_iot_shadow.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/hmac_drbg.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/shadow/include/aws_shadow.h</name>
+			<name>libraries/3rdparty/mbedtls/library/md.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/include/aws_shadow.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/md.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/shadow/src/aws_iot_shadow_api.c</name>
+			<name>libraries/3rdparty/mbedtls/library/md2.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_api.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/md2.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/shadow/src/aws_iot_shadow_operation.c</name>
+			<name>libraries/3rdparty/mbedtls/library/md4.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_operation.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/md4.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/shadow/src/aws_iot_shadow_parser.c</name>
+			<name>libraries/3rdparty/mbedtls/library/md5.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_parser.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/md5.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/shadow/src/aws_iot_shadow_static_memory.c</name>
+			<name>libraries/3rdparty/mbedtls/library/md_wrap.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_static_memory.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/md_wrap.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/shadow/src/aws_iot_shadow_subscription.c</name>
+			<name>libraries/3rdparty/mbedtls/library/memory_buffer_alloc.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/src/aws_iot_shadow_subscription.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/memory_buffer_alloc.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/shadow/src/aws_shadow.c</name>
+			<name>libraries/3rdparty/mbedtls/library/net_sockets.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/src/aws_shadow.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/net_sockets.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/shadow/src/aws_shadow_config_defaults.h</name>
+			<name>libraries/3rdparty/mbedtls/library/oid.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/src/aws_shadow_config_defaults.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/oid.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/shadow/test/aws_test_shadow.c</name>
+			<name>libraries/3rdparty/mbedtls/library/padlock.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/test/aws_test_shadow.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/padlock.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/common/include/iot_appversion32.h</name>
+			<name>libraries/3rdparty/mbedtls/library/pem.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/iot_appversion32.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/pem.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/common/include/iot_init.h</name>
+			<name>libraries/3rdparty/mbedtls/library/pk.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/iot_init.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/pk.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/common/include/iot_linear_containers.h</name>
+			<name>libraries/3rdparty/mbedtls/library/pk_wrap.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/iot_linear_containers.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/pk_wrap.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/common/include/iot_logging_setup.h</name>
+			<name>libraries/3rdparty/mbedtls/library/pkcs12.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/iot_logging_setup.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/pkcs12.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/common/include/iot_logging_task.h</name>
+			<name>libraries/3rdparty/mbedtls/library/pkcs5.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/iot_logging_task.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/pkcs5.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/common/include/iot_taskpool.h</name>
+			<name>libraries/3rdparty/mbedtls/library/pkparse.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/iot_taskpool.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/pkparse.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/common/logging/iot_logging.c</name>
+			<name>libraries/3rdparty/mbedtls/library/pkwrite.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/logging/iot_logging.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/pkwrite.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/common/logging/iot_logging_task_dynamic_buffers.c</name>
+			<name>libraries/3rdparty/mbedtls/library/platform.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/logging/iot_logging_task_dynamic_buffers.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/platform.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/common/taskpool/iot_taskpool.c</name>
+			<name>libraries/3rdparty/mbedtls/library/platform_util.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/taskpool/iot_taskpool.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/platform_util.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/common/taskpool/iot_taskpool_static_memory.c</name>
+			<name>libraries/3rdparty/mbedtls/library/ripemd160.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/taskpool/iot_taskpool_static_memory.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ripemd160.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/common/test/iot_memory_leak.c</name>
+			<name>libraries/3rdparty/mbedtls/library/rsa.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/test/iot_memory_leak.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/rsa.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/common/test/iot_tests_taskpool.c</name>
+			<name>libraries/3rdparty/mbedtls/library/rsa_internal.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/test/iot_tests_taskpool.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/rsa_internal.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/mqtt/src/iot_mqtt_agent.c</name>
+			<name>libraries/3rdparty/mbedtls/library/sha1.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/src/iot_mqtt_agent.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/sha1.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/mqtt/src/iot_mqtt_api.c</name>
+			<name>libraries/3rdparty/mbedtls/library/sha256.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/src/iot_mqtt_api.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/sha256.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/mqtt/src/iot_mqtt_network.c</name>
+			<name>libraries/3rdparty/mbedtls/library/sha512.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/src/iot_mqtt_network.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/sha512.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/mqtt/src/iot_mqtt_operation.c</name>
+			<name>libraries/3rdparty/mbedtls/library/ssl_cache.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/src/iot_mqtt_operation.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ssl_cache.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/mqtt/src/iot_mqtt_serialize.c</name>
+			<name>libraries/3rdparty/mbedtls/library/ssl_ciphersuites.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/src/iot_mqtt_serialize.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ssl_ciphersuites.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/mqtt/src/iot_mqtt_static_memory.c</name>
+			<name>libraries/3rdparty/mbedtls/library/ssl_cli.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/src/iot_mqtt_static_memory.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ssl_cli.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/mqtt/src/iot_mqtt_subscription.c</name>
+			<name>libraries/3rdparty/mbedtls/library/ssl_cookie.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/src/iot_mqtt_subscription.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ssl_cookie.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/mqtt/src/iot_mqtt_validate.c</name>
+			<name>libraries/3rdparty/mbedtls/library/ssl_srv.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/src/iot_mqtt_validate.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ssl_srv.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/mqtt/test/iot_test_mqtt_agent.c</name>
+			<name>libraries/3rdparty/mbedtls/library/ssl_ticket.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/test/iot_test_mqtt_agent.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ssl_ticket.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/serializer/include/iot_json_utils.h</name>
+			<name>libraries/3rdparty/mbedtls/library/ssl_tls.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/include/iot_json_utils.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/ssl_tls.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/serializer/include/iot_serializer.h</name>
+			<name>libraries/3rdparty/mbedtls/library/threading.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/include/iot_serializer.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/threading.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/serializer/src/iot_json_utils.c</name>
+			<name>libraries/3rdparty/mbedtls/library/timing.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/src/iot_json_utils.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/timing.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/serializer/src/iot_serializer_static_memory.c</name>
+			<name>libraries/3rdparty/mbedtls/library/version.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/src/iot_serializer_static_memory.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/version.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/serializer/test/iot_tests_deserializer_json.c</name>
+			<name>libraries/3rdparty/mbedtls/library/version_features.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/test/iot_tests_deserializer_json.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/version_features.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/serializer/test/iot_tests_serializer_cbor.c</name>
+			<name>libraries/3rdparty/mbedtls/library/x509.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/test/iot_tests_serializer_cbor.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/x509.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/serializer/test/iot_tests_serializer_json.c</name>
+			<name>libraries/3rdparty/mbedtls/library/x509_create.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/test/iot_tests_serializer_json.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/x509_create.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/aws/greengrass/include/aws_ggd_config_defaults.h</name>
+			<name>libraries/3rdparty/mbedtls/library/x509_crl.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/greengrass/include/aws_ggd_config_defaults.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/x509_crl.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/aws/greengrass/include/aws_greengrass_discovery.h</name>
+			<name>libraries/3rdparty/mbedtls/library/x509_crt.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/greengrass/include/aws_greengrass_discovery.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/x509_crt.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</name>
+			<name>libraries/3rdparty/mbedtls/library/x509_csr.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/x509_csr.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.c</name>
+			<name>libraries/3rdparty/mbedtls/library/x509write_crt.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/x509write_crt.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.h</name>
+			<name>libraries/3rdparty/mbedtls/library/x509write_csr.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/greengrass/src/aws_helper_secure_connect.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/x509write_csr.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/aws/greengrass/test/aws_test_greengrass_discovery.c</name>
+			<name>libraries/3rdparty/mbedtls/library/xtea.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/greengrass/test/aws_test_greengrass_discovery.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/library/xtea.c</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/aws/greengrass/test/aws_test_helper_secure_connect.c</name>
+			<name>libraries/3rdparty/mbedtls/utils/mbedtls_utils.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/greengrass/test/aws_test_helper_secure_connect.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/utils/mbedtls_utils.c</locationURI>
 		</link>
 		<link>
 			<name>libraries/freertos_plus/aws/ota/include/aws_iot_ota_agent.h</name>
@@ -1596,404 +1648,409 @@
 			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/includeaws_iot_ota_agent.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/aws/ota/include/aws_ota_types.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/aes.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/include/aws_ota_types.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/aes.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/aws/ota/src/aws_iot_ota_agent.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/aesni.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/src/aws_iot_ota_agent.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/aesni.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/aws/ota/src/aws_ota_agent_internal.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/arc4.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/src/aws_ota_agent_internal.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/arc4.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/aws/ota/src/aws_ota_cbor.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/asn1.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/src/aws_ota_cbor.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/asn1.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/aws/ota/src/aws_ota_cbor.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/asn1write.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/src/aws_ota_cbor.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/asn1write.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/aws/ota/src/aws_ota_cbor_internal.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/base64.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/src/aws_ota_cbor_internal.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/base64.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/aws/ota/src/aws_ota_pal.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/bignum.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/src/aws_ota_pal.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/bignum.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/aws/ota/test/aws_test_ota_agent.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/blowfish.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/test/aws_test_ota_agent.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/blowfish.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/aws/ota/test/aws_test_ota_pal.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/bn_mul.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/aws/ota/test/aws_test_ota_pal.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/bn_mul.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/crypto/include/iot_crypto.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/camellia.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/crypto/include/iot_crypto.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/camellia.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/crypto/src/iot_crypto.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/ccm.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/crypto/src/iot_crypto.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ccm.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/crypto/test/iot_test_crypto.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/certs.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/crypto/test/iot_test_crypto.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/certs.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/check_config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/check_config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_internal.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/cipher.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_internal.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/cipher.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_portable_default.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/cipher_internal.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_portable_default.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/cipher_internal.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/cmac.h</name>
+			<type>1</type>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/cmac.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_types.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/compat-1.3.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/include/FreeRTOS_POSIX_types.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/compat-1.3.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_clock.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/config.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_clock.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/config.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_mqueue.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/ctr_drbg.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_mqueue.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ctr_drbg.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/debug.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/debug.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_barrier.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/des.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_barrier.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/des.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_cond.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/dhm.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_cond.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/dhm.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_mutex.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/ecdh.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_pthread_mutex.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ecdh.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_sched.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/ecdsa.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_sched.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ecdsa.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_semaphore.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/ecjpake.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_semaphore.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ecjpake.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_timer.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/ecp.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_timer.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ecp.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_unistd.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/ecp_internal.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_unistd.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ecp_internal.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_utils.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/entropy.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/source/FreeRTOS_POSIX_utils.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/entropy.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_clock.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/entropy_poll.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_clock.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/entropy_poll.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_mqueue.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/error.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_mqueue.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/error.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_pthread.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/gcm.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_pthread.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/gcm.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_semaphore.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/havege.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_semaphore.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/havege.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_stress.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/hmac_drbg.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_stress.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/hmac_drbg.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_timer.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/md.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_timer.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/md.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_unistd.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/md2.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_unistd.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/md2.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_utils.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/md4.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/freertos_plus_posix/test/iot_test_posix_utils.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/md4.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/pkcs11/include/iot_pkcs11.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/md5.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/pkcs11/include/iot_pkcs11.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/md5.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/md_internal.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/md_internal.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/tls/test/iot_test_tls.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/memory_buffer_alloc.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/tls/test/iot_test_tls.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/memory_buffer_alloc.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/utils/include/iot_pki_utils.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/net.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/utils/include/iot_pki_utils.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/net.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/utils/include/iot_system_init.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/net_sockets.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/utils/include/iot_system_init.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/net_sockets.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/utils/src/iot_pki_utils.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/oid.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/utils/src/iot_pki_utils.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/oid.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/freertos_plus/standard/utils/src/iot_system_init.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/padlock.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/freertos_plus/standard/utils/src/iot_system_init.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/padlock.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/unity/extras/fixture/src/unity_fixture.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/pem.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/unity/extras/fixture/src/unity_fixture.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/pem.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/unity/extras/fixture/src/unity_fixture.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/pk.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/unity/extras/fixture/src/unity_fixture.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/pk.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/unity/extras/fixture/src/unity_fixture_internals.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/pk_internal.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/unity/extras/fixture/src/unity_fixture_internals.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/pk_internal.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/3rdparty/unity/extras/fixture/src/unity_fixture_malloc_overrides.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/pkcs12.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/unity/extras/fixture/src/unity_fixture_malloc_overrides.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/pkcs12.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/platform/freertos/include/platform/iot_network_freertos.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/pkcs5.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/freertos/include/platform/iot_network_freertos.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/pkcs5.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/platform/freertos/include/platform/iot_platform_types_freertos.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/platform.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/platform/freertos/include/platform/iot_platform_types_freertos.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/platform.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/abstractions/posix/include/FreeRTOS_POSIX/sys/types.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/platform_time.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/abstractions/posix/include/FreeRTOS_POSIX/sys/types.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/platform_time.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/defender/src/private/aws_iot_defender_internal.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/platform_util.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/defender/src/private/aws_iot_defender_internal.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/platform_util.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/shadow/test/system/aws_iot_tests_shadow_system.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/ripemd160.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/test/system/aws_iot_tests_shadow_system.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ripemd160.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_api.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/rsa.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_api.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/rsa.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_parser.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/rsa_internal.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/aws/shadow/test/unit/aws_iot_tests_shadow_parser.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/rsa_internal.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/common/include/private/iot_logging.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/sha1.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/private/iot_logging.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/sha1.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/common/include/private/iot_taskpool_internal.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/sha256.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/private/iot_taskpool_internal.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/sha256.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/common/include/types/iot_network_types.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/sha512.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/types/iot_network_types.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/sha512.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/common/include/types/iot_taskpool_types.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/ssl.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/common/include/types/iot_taskpool_types.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ssl.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/mqtt/test/system/iot_tests_mqtt_system.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/ssl_cache.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/test/system/iot_tests_mqtt_system.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ssl_cache.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_api.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/ssl_ciphersuites.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_api.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ssl_ciphersuites.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_metrics.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/ssl_cookie.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_metrics.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ssl_cookie.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_receive.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/ssl_internal.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_receive.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ssl_internal.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_subscription.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/ssl_ticket.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_subscription.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/ssl_ticket.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_validate.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/threading.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_validate.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/threading.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_decoder.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/timing.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_decoder.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/timing.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_encoder.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/version.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/src/cbor/iot_serializer_tinycbor_encoder.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/version.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_decoder.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/x509.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_decoder.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/x509.h</locationURI>
 		</link>
 		<link>
-			<name>libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_encoder.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/x509_crl.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/libraries/c_sdk/standard/serializer/src/json/iot_serializer_json_encoder.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/x509_crl.h</locationURI>
 		</link>
 		<link>
-			<name>vendors/ti/boards/cc3220_launchpad/ports/ota/aws_ota_pal.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/x509_crt.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/ports/ota/aws_ota_pal.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/x509_crt.h</locationURI>
 		</link>
 		<link>
-			<name>vendors/ti/boards/cc3220_launchpad/ports/pkcs11/iot_pkcs11_pal.c</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/x509_csr.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/ports/pkcs11/iot_pkcs11_pal.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/x509_csr.h</locationURI>
 		</link>
 		<link>
-			<name>vendors/ti/boards/cc3220_launchpad/ports/posix/FreeRTOS_POSIX_portable.h</name>
+			<name>libraries/3rdparty/mbedtls/include/mbedtls/xtea.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/ports/posix/FreeRTOS_POSIX_portable.h</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/mbedtls/include/mbedtls/xtea.h</locationURI>
 		</link>
 		<link>
-			<name>vendors/ti/boards/cc3220_launchpad/ports/secure_sockets/iot_secure_sockets.c</name>
+			<name>libraries/3rdparty/tinycbor/cborpretty.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/ports/secure_sockets/iot_secure_sockets.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/tinycbor/cborpretty.c</locationURI>
 		</link>
 		<link>
-			<name>vendors/ti/boards/cc3220_launchpad/ports/wifi/iot_wifi.c</name>
+			<name>libraries/3rdparty/tinycbor/cborencoder.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/boards/cc3220_launchpad/ports/wifi/iot_wifi.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/tinycbor/cborencoder.c</locationURI>
 		</link>
 		<link>
-			<name>vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/ClockP_freertos.c</name>
+			<name>libraries/3rdparty/tinycbor/cborencoder_close_container_checked.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/ClockP_freertos.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/tinycbor/cborencoder_close_container_checked.c</locationURI>
 		</link>
 		<link>
-			<name>vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/DebugP_freertos.c</name>
+			<name>libraries/3rdparty/tinycbor/cborerrorstrings.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/DebugP_freertos.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/tinycbor/cborerrorstrings.c</locationURI>
 		</link>
 		<link>
-			<name>vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/HwiPCC32XX_freertos.c</name>
+			<name>libraries/3rdparty/tinycbor/cborparser.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/HwiPCC32XX_freertos.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/tinycbor/cborparser.c</locationURI>
 		</link>
 		<link>
-			<name>vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/MutexP_freertos.c</name>
+			<name>libraries/3rdparty/tinycbor/cborparser_dup_string.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/MutexP_freertos.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/tinycbor/cborparser_dup_string.c</locationURI>
 		</link>
 		<link>
-			<name>vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/PowerCC32XX_freertos.c</name>
+			<name>libraries/3rdparty/http-parser/http_parser.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/PowerCC32XX_freertos.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/http-parser/http_parser.h</locationURI>
 		</link>
 		<link>
-			<name>vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/SemaphoreP_freertos.c</name>
+			<name>libraries/3rdparty/http-parser/http_parser.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/SemaphoreP_freertos.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/http-parser/http_parser.c</locationURI>
 		</link>
 		<link>
-			<name>vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/SystemP_freertos.c</name>
+			<name>libraries/3rdparty/jsmn/jsmn.h</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/dpl/SystemP_freertos.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/jsmn/jsmn.h</locationURI>
 		</link>
 		<link>
-			<name>vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/startup/startup_cc32xx_ccs.c</name>
+			<name>libraries/3rdparty/jsmn/jsmn.c</name>
 			<type>1</type>
-			<locationURI>BASE_DIR_ROOT/vendors/ti/SimpleLink_CC32xx/v2_10_00_04/kernel/freertos/startup/startup_cc32xx_ccs.c</locationURI>
+			<locationURI>BASE_DIR_ROOT/libraries/3rdparty/jsmn/jsmn.c</locationURI>
 		</link>
 	</linkedResources>
 	<variableList>
diff --git a/projects/ti/cc3220_launchpad/iar/aws_demos/aws_demos.ewp b/projects/ti/cc3220_launchpad/iar/aws_demos/aws_demos.ewp
index 03a344afa..ee0406324 100644
--- a/projects/ti/cc3220_launchpad/iar/aws_demos/aws_demos.ewp
+++ b/projects/ti/cc3220_launchpad/iar/aws_demos/aws_demos.ewp
@@ -377,6 +377,7 @@
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\mqtt\include</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\serializer\include</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\aws\shadow\include</state>
+					<state>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\https\include</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\freertos_plus\aws\greengrass\include</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\freertos_plus\aws\ota\src</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\freertos_plus\aws\ota\include</state>
@@ -385,6 +386,7 @@
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\mbedtls\include\mbedtls</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\abstractions\pkcs11\mbedtls</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\tinycbor</state>
+					<state>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\http-parser</state>
 					<state>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\jsmn</state>
 				</option>
 				<option>
@@ -1795,6 +1797,18 @@
 						</file>
 					</group>
 				</group>
+				<group>
+					<name>https</name>
+					<group>
+						<name>src</name>
+						<file>
+							<name>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\https\src\iot_https_client.c</name>
+						</file>
+						<file>
+							<name>$PROJ_DIR$\..\..\..\..\..\libraries\c_sdk\standard\https\src\iot_https_utils.c</name>
+						</file>
+					</group>
+				</group>
 			</group>
 			<group>
 				<name>aws</name>
@@ -2348,6 +2362,15 @@
 					<name>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\tinycbor\cborparser_dup_string.c</name>
 				</file>
 			</group>
+			<group>
+				<name>http-parser</name>
+				<file>
+					<name>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\http-parser\http_parser.h</name>
+				</file>
+				<file>
+					<name>$PROJ_DIR$\..\..\..\..\..\libraries\3rdparty\http-parser\http_parser.c</name>
+				</file>
+			</group>
 			<group>
 				<name>jsmn</name>
 				<file>
@@ -2445,6 +2468,18 @@
 				<name>$PROJ_DIR$\..\..\..\..\..\demos\greengrass_connectivity\aws_greengrass_discovery_demo.c</name>
 			</file>
 		</group>
+		<group>
+			<name>https</name>
+			<file>
+				<name>$PROJ_DIR$\..\..\..\..\..\demos\https\iot_demo_https_s3_download_sync.c</name>
+			</file>
+			<file>
+				<name>$PROJ_DIR$\..\..\..\..\..\demos\https\iot_demo_https_s3_download_async.c</name>
+			</file>
+			<file>
+				<name>$PROJ_DIR$\..\..\..\..\..\demos\https\iot_demo_https_common.c</name>
+			</file>
+		</group>
 		<group>
 			<name>mqtt</name>
 			<file>
diff --git a/projects/xilinx/microzed/xsdk/aws_demos/.cproject b/projects/xilinx/microzed/xsdk/aws_demos/.cproject
index 5448f5cb1..af8ce11f7 100644
--- a/projects/xilinx/microzed/xsdk/aws_demos/.cproject
+++ b/projects/xilinx/microzed/xsdk/aws_demos/.cproject
@@ -60,11 +60,13 @@
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/mqtt/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/serializer/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/aws/shadow/include"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/mbedtls/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/mbedtls/include/mbedtls"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/abstractions/pkcs11/mbedtls"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/tinycbor"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/http-parser"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/jsmn"/>
 								</option>
 								<inputType id="xilinx.gnu.armv7.c.compiler.input.180551414" name="C source files" superClass="xilinx.gnu.armv7.c.compiler.input"/>
diff --git a/projects/xilinx/microzed/xsdk/aws_demos/.project b/projects/xilinx/microzed/xsdk/aws_demos/.project
index 98c48ddd2..f32b04100 100644
--- a/projects/xilinx/microzed/xsdk/aws_demos/.project
+++ b/projects/xilinx/microzed/xsdk/aws_demos/.project
@@ -567,6 +567,11 @@
 			<type>1</type>
 			<locationURI>AFR_ROOT/libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c</locationURI>
 		</link>
+		<link>
+			<name>vendors/xilinx/boards/microzed/ports/pkcs11/iot_pkcs11_pal.c</name>
+			<type>1</type>
+			<locationURI>AFR_ROOT/vendors/xilinx/boards/microzed/ports/pkcs11/iot_pkcs11_pal.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c</name>
 			<type>1</type>
@@ -577,11 +582,6 @@
 			<type>1</type>
 			<locationURI>AFR_ROOT/libraries/abstractions/pkcs11/mbedtls/threading_alt.h</locationURI>
 		</link>
-		<link>
-			<name>vendors/xilinx/boards/microzed/ports/pkcs11/iot_pkcs11_pal.c</name>
-			<type>1</type>
-			<locationURI>AFR_ROOT/vendors/xilinx/boards/microzed/ports/pkcs11/iot_pkcs11_pal.c</locationURI>
-		</link>
 		<link>
 			<name>libraries/freertos_plus/standard/utils/src/iot_system_init.c</name>
 			<type>1</type>
@@ -767,6 +767,16 @@
 			<type>1</type>
 			<locationURI>AFR_ROOT/libraries/c_sdk/aws/shadow/include/aws_shadow.h</locationURI>
 		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_client.c</name>
+			<type>1</type>
+			<locationURI>AFR_ROOT/libraries/c_sdk/standard/https/src/iot_https_client.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_utils.c</name>
+			<type>1</type>
+			<locationURI>AFR_ROOT/libraries/c_sdk/standard/https/src/iot_https_utils.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</name>
 			<type>1</type>
@@ -802,6 +812,21 @@
 			<type>1</type>
 			<locationURI>AFR_ROOT/demos/greengrass_connectivity/aws_greengrass_discovery_demo.c</locationURI>
 		</link>
+		<link>
+			<name>demos/https/iot_demo_https_s3_download_sync.c</name>
+			<type>1</type>
+			<locationURI>AFR_ROOT/demos/https/iot_demo_https_s3_download_sync.c</locationURI>
+		</link>
+		<link>
+			<name>demos/https/iot_demo_https_s3_download_async.c</name>
+			<type>1</type>
+			<locationURI>AFR_ROOT/demos/https/iot_demo_https_s3_download_async.c</locationURI>
+		</link>
+		<link>
+			<name>demos/https/iot_demo_https_common.c</name>
+			<type>1</type>
+			<locationURI>AFR_ROOT/demos/https/iot_demo_https_common.c</locationURI>
+		</link>
 		<link>
 			<name>demos/mqtt/iot_demo_mqtt.c</name>
 			<type>1</type>
@@ -1697,6 +1722,16 @@
 			<type>1</type>
 			<locationURI>AFR_ROOT/libraries/3rdparty/tinycbor/cborparser_dup_string.c</locationURI>
 		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.h</name>
+			<type>1</type>
+			<locationURI>AFR_ROOT/libraries/3rdparty/http-parser/http_parser.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.c</name>
+			<type>1</type>
+			<locationURI>AFR_ROOT/libraries/3rdparty/http-parser/http_parser.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/3rdparty/jsmn/jsmn.h</name>
 			<type>1</type>
diff --git a/projects/xilinx/microzed/xsdk/aws_tests/.cproject b/projects/xilinx/microzed/xsdk/aws_tests/.cproject
index bb57aaa5e..05d4110e1 100644
--- a/projects/xilinx/microzed/xsdk/aws_tests/.cproject
+++ b/projects/xilinx/microzed/xsdk/aws_tests/.cproject
@@ -63,6 +63,9 @@
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/serializer/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/aws/shadow/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/aws/shadow/src"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/test/access"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/include"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/c_sdk/standard/https/src"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/test"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/include"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/freertos_plus/aws/greengrass/src"/>
@@ -73,6 +76,7 @@
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/unity/src"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/unity/extras/fixture/src"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/tinycbor"/>
+									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/http-parser"/>
 									<listOptionValue builtIn="false" value="${ProjDirPath}/../../../../../libraries/3rdparty/jsmn"/>
 								</option>
 								<option id="xilinx.gnu.compiler.symbols.defined.421923162" name="Defined symbols (-D)" superClass="xilinx.gnu.compiler.symbols.defined" valueType="definedSymbols">
diff --git a/projects/xilinx/microzed/xsdk/aws_tests/.project b/projects/xilinx/microzed/xsdk/aws_tests/.project
index 8f26b8e90..0eb3ba33f 100644
--- a/projects/xilinx/microzed/xsdk/aws_tests/.project
+++ b/projects/xilinx/microzed/xsdk/aws_tests/.project
@@ -552,6 +552,11 @@
 			<type>1</type>
 			<locationURI>AFR_ROOT/libraries/freertos_plus/standard/pkcs11/src/iot_pkcs11.c</locationURI>
 		</link>
+		<link>
+			<name>vendors/xilinx/boards/microzed/ports/pkcs11/iot_pkcs11_pal.c</name>
+			<type>1</type>
+			<locationURI>AFR_ROOT/vendors/xilinx/boards/microzed/ports/pkcs11/iot_pkcs11_pal.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/abstractions/pkcs11/mbedtls/iot_pkcs11_mbedtls.c</name>
 			<type>1</type>
@@ -562,11 +567,6 @@
 			<type>1</type>
 			<locationURI>AFR_ROOT/libraries/abstractions/pkcs11/mbedtls/threading_alt.h</locationURI>
 		</link>
-		<link>
-			<name>vendors/xilinx/boards/microzed/ports/pkcs11/iot_pkcs11_pal.c</name>
-			<type>1</type>
-			<locationURI>AFR_ROOT/vendors/xilinx/boards/microzed/ports/pkcs11/iot_pkcs11_pal.c</locationURI>
-		</link>
 		<link>
 			<name>libraries/freertos_plus/standard/utils/src/iot_system_init.c</name>
 			<type>1</type>
@@ -752,6 +752,16 @@
 			<type>1</type>
 			<locationURI>AFR_ROOT/libraries/c_sdk/aws/shadow/include/aws_shadow.h</locationURI>
 		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_client.c</name>
+			<type>1</type>
+			<locationURI>AFR_ROOT/libraries/c_sdk/standard/https/src/iot_https_client.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/src/iot_https_utils.c</name>
+			<type>1</type>
+			<locationURI>AFR_ROOT/libraries/c_sdk/standard/https/src/iot_https_utils.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/freertos_plus/aws/greengrass/src/aws_greengrass_discovery.c</name>
 			<type>1</type>
@@ -812,6 +822,36 @@
 			<type>1</type>
 			<locationURI>AFR_ROOT/libraries/c_sdk/standard/common/test/iot_tests_taskpool.c</locationURI>
 		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_client.c</name>
+			<type>1</type>
+			<locationURI>AFR_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_client.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_utils.c</name>
+			<type>1</type>
+			<locationURI>AFR_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_utils.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.c</name>
+			<type>1</type>
+			<locationURI>AFR_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_common.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_sync.c</name>
+			<type>1</type>
+			<locationURI>AFR_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_sync.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/unit/iot_tests_https_async.c</name>
+			<type>1</type>
+			<locationURI>AFR_ROOT/libraries/c_sdk/standard/https/test/unit/iot_tests_https_async.c</locationURI>
+		</link>
+		<link>
+			<name>libraries/c_sdk/standard/https/test/system/iot_tests_https_system.c</name>
+			<type>1</type>
+			<locationURI>AFR_ROOT/libraries/c_sdk/standard/https/test/system/iot_tests_https_system.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/c_sdk/standard/mqtt/test/unit/iot_tests_mqtt_api.c</name>
 			<type>1</type>
@@ -1832,6 +1872,16 @@
 			<type>1</type>
 			<locationURI>AFR_ROOT/libraries/3rdparty/tinycbor/cborparser_dup_string.c</locationURI>
 		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.h</name>
+			<type>1</type>
+			<locationURI>AFR_ROOT/libraries/3rdparty/http-parser/http_parser.h</locationURI>
+		</link>
+		<link>
+			<name>libraries/3rdparty/http-parser/http_parser.c</name>
+			<type>1</type>
+			<locationURI>AFR_ROOT/libraries/3rdparty/http-parser/http_parser.c</locationURI>
+		</link>
 		<link>
 			<name>libraries/3rdparty/jsmn/jsmn.h</name>
 			<type>1</type>
diff --git a/tests/common/aws_test.c b/tests/common/aws_test.c
index 407abdb5e..f35c1168d 100644
--- a/tests/common/aws_test.c
+++ b/tests/common/aws_test.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/tests/common/aws_test_framework.c b/tests/common/aws_test_framework.c
index e86153d5e..a1b8161b7 100644
--- a/tests/common/aws_test_framework.c
+++ b/tests/common/aws_test_framework.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/tests/common/aws_test_runner.c b/tests/common/aws_test_runner.c
index 930edb4a1..4b97778ab 100644
--- a/tests/common/aws_test_runner.c
+++ b/tests/common/aws_test_runner.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
@@ -203,6 +203,14 @@ static void RunTests( void )
         RUN_TEST_GROUP( Full_Serializer_JSON );
         RUN_TEST_GROUP( Full_Serializer_JSON_deserialize );
     #endif
+
+    #if ( testrunnerFULL_HTTPS_CLIENT_ENABLED == 1 )
+        RUN_TEST_GROUP( HTTPS_Client_Unit_API );
+        RUN_TEST_GROUP( HTTPS_Utils_Unit_API );
+        RUN_TEST_GROUP( HTTPS_Client_Unit_Sync );
+        RUN_TEST_GROUP( HTTPS_Client_Unit_Async );
+        RUN_TEST_GROUP( HTTPS_Client_System );
+    #endif
 }
 /*-----------------------------------------------------------*/
 
diff --git a/tests/common/iot_test_freertos.c b/tests/common/iot_test_freertos.c
index ec9047507..7fd512c1b 100644
--- a/tests/common/iot_test_freertos.c
+++ b/tests/common/iot_test_freertos.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
@@ -43,6 +43,7 @@
  */
 void vApplicationMallocFailedHook()
 {
+    configPRINTF( ( "ERROR: Malloc failed to allocate memory\r\n" ) );
     taskDISABLE_INTERRUPTS();
 
     /* Loop forever */
diff --git a/tests/common/iot_tests_network.c b/tests/common/iot_tests_network.c
index 9dc4ab5e2..782f02bbe 100644
--- a/tests/common/iot_tests_network.c
+++ b/tests/common/iot_tests_network.c
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/tests/include/aws_application_version.h b/tests/include/aws_application_version.h
index c4b29d885..ae61c2a12 100644
--- a/tests/include/aws_application_version.h
+++ b/tests/include/aws_application_version.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/tests/include/aws_clientcredential.h b/tests/include/aws_clientcredential.h
index c08eeca43..7a226ef62 100644
--- a/tests/include/aws_clientcredential.h
+++ b/tests/include/aws_clientcredential.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/tests/include/aws_clientcredential_keys.h b/tests/include/aws_clientcredential_keys.h
index 680c7521a..ba8f3c1e6 100644
--- a/tests/include/aws_clientcredential_keys.h
+++ b/tests/include/aws_clientcredential_keys.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/tests/include/aws_test_framework.h b/tests/include/aws_test_framework.h
index b55ae224f..4906b17fd 100644
--- a/tests/include/aws_test_framework.h
+++ b/tests/include/aws_test_framework.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/tests/include/aws_test_runner.h b/tests/include/aws_test_runner.h
index 2113761dd..baf8db731 100644
--- a/tests/include/aws_test_runner.h
+++ b/tests/include/aws_test_runner.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/tests/include/aws_test_tcp.h b/tests/include/aws_test_tcp.h
index d8a4ea79d..e7de0f940 100644
--- a/tests/include/aws_test_tcp.h
+++ b/tests/include/aws_test_tcp.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/tests/include/aws_test_utils.h b/tests/include/aws_test_utils.h
index d90e3a122..06efe8a38 100644
--- a/tests/include/aws_test_utils.h
+++ b/tests/include/aws_test_utils.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/tests/include/aws_unity_config.h b/tests/include/aws_unity_config.h
index 22be49dba..f57847393 100644
--- a/tests/include/aws_unity_config.h
+++ b/tests/include/aws_unity_config.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/tests/include/iot_config_common.h b/tests/include/iot_config_common.h
index 2b2d2d457..c5263b2c0 100644
--- a/tests/include/iot_config_common.h
+++ b/tests/include/iot_config_common.h
@@ -1,5 +1,5 @@
 /*
- * Amazon FreeRTOS V201906.00 Major
+ * Amazon FreeRTOS V201908.00
  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
  *
  * Permission is hereby granted, free of charge, to any person obtaining a copy of
diff --git a/tools/cbmc/proofs/HTTP/IotHttpsClient_AddHeader/IotHttpsClient_AddHeader_harness.c b/tools/cbmc/proofs/HTTP/IotHttpsClient_AddHeader/IotHttpsClient_AddHeader_harness.c
new file mode 100644
index 000000000..8e962576e
--- /dev/null
+++ b/tools/cbmc/proofs/HTTP/IotHttpsClient_AddHeader/IotHttpsClient_AddHeader_harness.c
@@ -0,0 +1,59 @@
+/* FreeRTOS includes. */
+#include "FreeRTOS.h"
+#include "queue.h"
+#include "FreeRTOS_Sockets.h"
+
+/* FreeRTOS+TCP includes. */
+#include "iot_https_client.h"
+#include "iot_https_internal.h"
+
+#include "../global_state_HTTP.c"
+
+/****************************************************************
+* Stub out memcpy so that it copies nothing but simply checks that the
+* arguments are readable and writeable.
+*
+* A sequence of memcpy's in _addHeader causes cbmc to generate an
+* enormous formula with 229M+ clauses.  The values copies are never
+* used.
+*
+* MacOS header file /usr/include/secure/_string.h defines memcpy to
+* use a builtin function supported by CBMC, so we stub out the builtin
+* memcpy instead of the standard memcpy.
+****************************************************************/
+
+/* This is a clang macro not available on linux */
+#ifndef __has_builtin
+#define __has_builtin(x) 0
+#endif
+
+#if __has_builtin(__builtin___memcpy_chk)
+void *__builtin___memcpy_chk(void *dest, const void *src, size_t n, size_t m) {
+  __CPROVER_assert(__CPROVER_w_ok(dest, n), "write");
+  __CPROVER_assert(__CPROVER_r_ok(src, n), "read");
+  return dest;
+}
+#else
+void *memcpy(void *dest, const void *src, size_t n) {
+  __CPROVER_assert(__CPROVER_w_ok(dest, n), "write");
+  __CPROVER_assert(__CPROVER_r_ok(src, n), "read");
+  return dest;
+}
+#endif
+
+void harness() {
+  IotHttpsRequestHandle_t reqHandle = allocate_IotRequestHandle();
+  if (reqHandle)
+    __CPROVER_assume(is_valid_IotRequestHandle(reqHandle));
+  uint32_t nameLen;
+  uint32_t valueLen;
+  __CPROVER_assume(nameLen < UINT32_MAX-1);
+  __CPROVER_assume(valueLen < UINT32_MAX-1);
+  char * pName = safeMalloc(nameLen+1);
+  char * pValue = safeMalloc(valueLen+1);
+  if (pName)
+    pName[nameLen] = 0;
+  if (pValue)
+    pValue[valueLen] = 0;
+  IotHttpsClient_AddHeader(reqHandle, pName, nameLen, pValue, valueLen);
+}
diff --git a/tools/cbmc/proofs/HTTP/IotHttpsClient_AddHeader/Makefile.json b/tools/cbmc/proofs/HTTP/IotHttpsClient_AddHeader/Makefile.json
new file mode 100644
index 000000000..2fb6e8b9e
--- /dev/null
+++ b/tools/cbmc/proofs/HTTP/IotHttpsClient_AddHeader/Makefile.json
@@ -0,0 +1,48 @@
+{
+  "ENTRY": "IotHttpsClient_AddHeader",
+
+  # This is the length of the user data after the header in a buffer.
+  # This can be set to any size.
+  "USER_DATA_SIZE": "1000",
+
+  "CBMCFLAGS":
+  [
+    "--unwind 1",
+    "--unwindset strlen.0:5,strncmp.0:20",
+
+    # uninitialized global variables have arbitrary values
+    "--nondet-static",
+
+    # interesting checks in addtion to memory safety
+    "--div-by-zero-check",
+    "--float-overflow-check",
+    "--nan-check",
+    "--pointer-overflow-check",
+    "--undefined-shift-check",
+    "--signed-overflow-check",
+    "--unsigned-overflow-check"
+  ],
+  "OBJS":
+  [
+    "$(ENTRY)_harness.goto",
+    "$(FREERTOS)/libraries/c_sdk/standard/https/src/iot_https_client.goto"
+  ],
+  "INSTFLAGS":
+  [
+    "--remove-function-body IotLogError"
+  ],
+  "INC":
+  [
+    "$(FREERTOS)/libraries/c_sdk/standard/https/include",
+    "$(FREERTOS)/libraries/c_sdk/standard/https/src/private",
+    "$(FREERTOS)/libraries/3rdparty/http-parser",
+    "$(FREERTOS)/libraries/c_sdk/standard/common/include/",
+    "$(FREERTOS)/libraries/abstractions/platform/include/",
+    "$(FREERTOS)/libraries/abstractions/platform/freertos/include/",
+    "../../include"
+  ],
+  "DEF":
+  [
+    "USER_DATA_SIZE={USER_DATA_SIZE}"
+  ]
+}
diff --git a/tools/cbmc/proofs/HTTP/IotHttpsClient_Connect/IotHttpsClient_Connect_harness.c b/tools/cbmc/proofs/HTTP/IotHttpsClient_Connect/IotHttpsClient_Connect_harness.c
new file mode 100644
index 000000000..e9a47f193
--- /dev/null
+++ b/tools/cbmc/proofs/HTTP/IotHttpsClient_Connect/IotHttpsClient_Connect_harness.c
@@ -0,0 +1,29 @@
+/* FreeRTOS includes. */
+#include "FreeRTOS.h"
+#include "queue.h"
+#include "FreeRTOS_Sockets.h"
+
+/* FreeRTOS+TCP includes. */
+#include "iot_https_client.h"
+#include "iot_https_internal.h"
+
+#include "../global_state_HTTP.c"
+
+/* We prove memory safety of IotHttpsClient_Disconnect separately. */
+IotHttpsReturnCode_t IotHttpsClient_Disconnect(IotHttpsConnectionHandle_t connHandle) {}
+
+
+void harness() {
+  IotHttpsConnectionHandle_t pConnHandle = allocate_IotConnectionHandle();
+  IotHttpsConnectionInfo_t *pConnConfig = allocate_IotConnectionInfo();
+  initialize_IotConnectionHandle(pConnHandle);
+  if(pConnHandle) {
+    __CPROVER_assume(is_valid_IotConnectionHandle(pConnHandle));
+    __CPROVER_assume(is_stubbed_NetworkInterface(pConnHandle->pNetworkInterface));
+  }
+  if (pConnConfig) {
+    __CPROVER_assume(is_valid_IotConnectionInfo(pConnConfig));
+    __CPROVER_assume(is_stubbed_NetworkInterface(pConnConfig->pNetworkInterface));
+  }
+  IotHttpsClient_Connect(&pConnHandle, pConnConfig);
+}
diff --git a/tools/cbmc/proofs/HTTP/IotHttpsClient_Connect/Makefile.json b/tools/cbmc/proofs/HTTP/IotHttpsClient_Connect/Makefile.json
new file mode 100644
index 000000000..a79dcffd1
--- /dev/null
+++ b/tools/cbmc/proofs/HTTP/IotHttpsClient_Connect/Makefile.json
@@ -0,0 +1,51 @@
+{
+  "ENTRY": "IotHttpsClient_Connect",
+
+  # This is the length of the user data after the header in a buffer.
+  # This can be set to any size.
+  "USER_DATA_SIZE": "1000",
+
+  "CBMCFLAGS":
+  [
+    "--unwind 1",
+    "--unwindset strlen.0:5",
+
+    # uninitialized global variables have arbitrary values
+    "--nondet-static",
+
+    # interesting checks in addtion to memory safety
+    "--div-by-zero-check",
+    "--float-overflow-check",
+    "--nan-check",
+    "--pointer-overflow-check",
+    "--undefined-shift-check",
+    "--signed-overflow-check",
+    "--unsigned-overflow-check"
+  ],
+  "OBJS":
+  [
+    "$(ENTRY)_harness.goto",
+    "$(FREERTOS)/libraries/c_sdk/standard/https/src/iot_https_client.goto"
+  ],
+  "INSTFLAGS":
+  [
+    "--remove-function-body _httpParserOnHeadersCompleteCallback",
+    "--remove-function-body _httpParserOnMessageBeginCallback",
+    "--remove-function-body _httpParserOnMessageCompleteCallback",
+    "--remove-function-body IotNetworkInterfaceDestroy"
+  ],
+  "INC":
+  [
+    "$(FREERTOS)/libraries/c_sdk/standard/https/include",
+    "$(FREERTOS)/libraries/c_sdk/standard/https/src/private",
+    "$(FREERTOS)/libraries/3rdparty/http-parser",
+    "$(FREERTOS)/libraries/c_sdk/standard/common/include/",
+    "$(FREERTOS)/libraries/abstractions/platform/include/",
+    "$(FREERTOS)/libraries/abstractions/platform/freertos/include/",
+    "../../include"
+  ],
+  "DEF":
+  [
+    "USER_DATA_SIZE={USER_DATA_SIZE}"
+  ]
+}
diff --git a/tools/cbmc/proofs/HTTP/IotHttpsClient_Disconnect/IotHttpsClient_Disconnect_harness.c b/tools/cbmc/proofs/HTTP/IotHttpsClient_Disconnect/IotHttpsClient_Disconnect_harness.c
new file mode 100644
index 000000000..9ed1e5ad6
--- /dev/null
+++ b/tools/cbmc/proofs/HTTP/IotHttpsClient_Disconnect/IotHttpsClient_Disconnect_harness.c
@@ -0,0 +1,20 @@
+/* FreeRTOS includes. */
+#include "FreeRTOS.h"
+#include "queue.h"
+#include "FreeRTOS_Sockets.h"
+
+/* FreeRTOS+TCP includes. */
+#include "iot_https_client.h"
+#include "iot_https_internal.h"
+
+#include "../global_state_HTTP.c"
+
+void harness() {
+  IotHttpsConnectionHandle_t connHandle = allocate_IotConnectionHandle();
+  initialize_IotConnectionHandle(connHandle);
+  if(connHandle) {
+    __CPROVER_assume(is_valid_IotConnectionHandle(connHandle));
+    __CPROVER_assume(is_stubbed_NetworkInterface(connHandle->pNetworkInterface));
+  }
+  IotHttpsClient_Disconnect(connHandle);
+}
diff --git a/tools/cbmc/proofs/HTTP/IotHttpsClient_Disconnect/Makefile.json b/tools/cbmc/proofs/HTTP/IotHttpsClient_Disconnect/Makefile.json
new file mode 100644
index 000000000..e1ec255f1
--- /dev/null
+++ b/tools/cbmc/proofs/HTTP/IotHttpsClient_Disconnect/Makefile.json
@@ -0,0 +1,51 @@
+{
+  "ENTRY": "IotHttpsClient_Disconnect",
+
+  # This is the length of the user data after the header in a buffer.
+  # This can be set to any size.
+  "USER_DATA_SIZE": "1000",
+
+  "CBMCFLAGS":
+  [
+    "--unwind 1",
+    "--unwindset strlen.0:5,IotListDouble_RemoveAll.0:2",
+
+    # uninitialized global variables have arbitrary values
+    "--nondet-static",
+
+    # interesting checks in addtion to memory safety
+    "--div-by-zero-check",
+    "--float-overflow-check",
+    "--nan-check",
+    "--pointer-overflow-check",
+    "--undefined-shift-check",
+    "--signed-overflow-check",
+    "--unsigned-overflow-check"
+  ],
+  "OBJS":
+  [
+    "$(ENTRY)_harness.goto",
+    "$(FREERTOS)/libraries/c_sdk/standard/https/src/iot_https_client.goto"
+  ],
+  "INSTFLAGS":
+  [
+    "--remove-function-body _httpParserOnHeadersCompleteCallback",
+    "--remove-function-body _httpParserOnMessageBeginCallback",
+    "--remove-function-body _httpParserOnMessageCompleteCallback",
+    "--remove-function-body IotNetworkInterfaceDestroy"
+  ],
+  "INC":
+  [
+    "$(FREERTOS)/libraries/c_sdk/standard/https/include",
+    "$(FREERTOS)/libraries/c_sdk/standard/https/src/private",
+    "$(FREERTOS)/libraries/3rdparty/http-parser",
+    "$(FREERTOS)/libraries/c_sdk/standard/common/include/",
+    "$(FREERTOS)/libraries/abstractions/platform/include/",
+    "$(FREERTOS)/libraries/abstractions/platform/freertos/include/",
+    "../../include"
+  ],
+  "DEF":
+  [
+    "USER_DATA_SIZE={USER_DATA_SIZE}"
+  ]
+}
diff --git a/tools/cbmc/proofs/HTTP/IotHttpsClient_ReadContentLength/IotHttpsClient_ReadContentLength_harness.c b/tools/cbmc/proofs/HTTP/IotHttpsClient_ReadContentLength/IotHttpsClient_ReadContentLength_harness.c
new file mode 100644
index 000000000..87f4fa20d
--- /dev/null
+++ b/tools/cbmc/proofs/HTTP/IotHttpsClient_ReadContentLength/IotHttpsClient_ReadContentLength_harness.c
@@ -0,0 +1,24 @@
+/* FreeRTOS includes. */
+#include "FreeRTOS.h"
+#include "queue.h"
+#include "FreeRTOS_Sockets.h"
+
+/* FreeRTOS+TCP includes. */
+#include "iot_https_client.h"
+#include "iot_https_internal.h"
+
+#include "../global_state_HTTP.c"
+
+void harness() {
+  IotHttpsResponseHandle_t respHandle = allocate_IotResponseHandle();
+  initialize_IotResponseHandle(respHandle);
+  if (respHandle) {
+    __CPROVER_assume(is_valid_IotResponseHandle(respHandle));
+    // Until a CBMC issue is addressed
+    // https://github.com/diffblue/cbmc/issues/5004
+    // copy an assumption from is_valid above as a simple assignment below.
+    respHandle->httpParserInfo.readHeaderParser.data = respHandle;
+  }
+  uint32_t pContentLength;
+  IotHttpsClient_ReadContentLength(respHandle, &pContentLength);
+}
diff --git a/tools/cbmc/proofs/HTTP/IotHttpsClient_ReadContentLength/Makefile.json b/tools/cbmc/proofs/HTTP/IotHttpsClient_ReadContentLength/Makefile.json
new file mode 100644
index 000000000..05cd5d299
--- /dev/null
+++ b/tools/cbmc/proofs/HTTP/IotHttpsClient_ReadContentLength/Makefile.json
@@ -0,0 +1,43 @@
+{
+  "ENTRY": "IotHttpsClient_ReadContentLength",
+
+  # This is the length of the user data after the header in a buffer.
+  # This can be set to any size.
+  "USER_DATA_SIZE": "1000",
+
+  "CBMCFLAGS":
+  [
+    "--unwind 1",
+
+    # uninitialized global variables have arbitrary values
+    "--nondet-static",
+
+    # interesting checks in addtion to memory safety
+    "--div-by-zero-check",
+    "--float-overflow-check",
+    "--nan-check",
+    "--pointer-overflow-check",
+    "--undefined-shift-check",
+    "--signed-overflow-check",
+    "--unsigned-overflow-check"
+  ],
+  "OBJS":
+  [
+    "$(ENTRY)_harness.goto",
+    "$(FREERTOS)/libraries/c_sdk/standard/https/src/iot_https_client.goto"
+  ],
+  "INC":
+  [
+    "$(FREERTOS)/libraries/c_sdk/standard/https/include",
+    "$(FREERTOS)/libraries/c_sdk/standard/https/src/private",
+    "$(FREERTOS)/libraries/3rdparty/http-parser",
+    "$(FREERTOS)/libraries/c_sdk/standard/common/include/",
+    "$(FREERTOS)/libraries/abstractions/platform/include/",
+    "$(FREERTOS)/libraries/abstractions/platform/freertos/include/",
+    "../../include"
+  ],
+  "DEF":
+  [
+    "USER_DATA_SIZE={USER_DATA_SIZE}"
+  ]
+}
diff --git a/tools/cbmc/proofs/HTTP/IotHttpsClient_ReadHeader/IotHttpsClient_ReadHeader_harness.c b/tools/cbmc/proofs/HTTP/IotHttpsClient_ReadHeader/IotHttpsClient_ReadHeader_harness.c
new file mode 100644
index 000000000..3114f43a7
--- /dev/null
+++ b/tools/cbmc/proofs/HTTP/IotHttpsClient_ReadHeader/IotHttpsClient_ReadHeader_harness.c
@@ -0,0 +1,28 @@
+/* FreeRTOS includes. */
+#include "FreeRTOS.h"
+#include "queue.h"
+#include "FreeRTOS_Sockets.h"
+
+/* FreeRTOS+TCP includes. */
+#include "iot_https_client.h"
+#include "iot_https_internal.h"
+
+#include "../global_state_HTTP.c"
+
+void harness() {
+  IotHttpsResponseHandle_t respHandle = allocate_IotResponseHandle();
+  size_t nameLen;
+  size_t valueLen;
+  char *pName = safeMalloc(nameLen);
+  char  *pValue = safeMalloc(valueLen);
+  initialize_IotResponseHandle(respHandle);
+  if (respHandle) {
+    __CPROVER_assume(is_valid_IotResponseHandle(respHandle));
+    // Until a CBMC issue is addressed
+    // https://github.com/diffblue/cbmc/issues/5004
+    // copy an assumption from is_valid above as a simple assignment below.
+    respHandle->httpParserInfo.readHeaderParser.data = respHandle;
+  }
+  __CPROVER_assume(0 < valueLen && valueLen < UINT32_MAX);
+  IotHttpsClient_ReadHeader(respHandle, pName, nameLen, pValue, valueLen);
+}
diff --git a/tools/cbmc/proofs/HTTP/IotHttpsClient_ReadHeader/Makefile.json b/tools/cbmc/proofs/HTTP/IotHttpsClient_ReadHeader/Makefile.json
new file mode 100644
index 000000000..f16303cec
--- /dev/null
+++ b/tools/cbmc/proofs/HTTP/IotHttpsClient_ReadHeader/Makefile.json
@@ -0,0 +1,51 @@
+{
+  "ENTRY": "IotHttpsClient_ReadHeader",
+
+  ################################################################
+  # This configuration sets MAX_ACCEPTED_SIZE to 20.
+  "MAX_ACCEPTED_SIZE": 20,
+  "STRNCPY_UNWIND": "__eval {MAX_ACCEPTED_SIZE} + 1",
+
+  # This is the length of the user data after the header in a buffer.
+  # This can be set to any size.
+  "USER_DATA_SIZE": "1000",
+
+  "CBMCFLAGS":
+  [
+    "--unwind 1",
+    "--unwindset __builtin___strncpy_chk.0:{STRNCPY_UNWIND},strncpy.0:{STRNCPY_UNWIND}",
+
+    # uninitialized global variables have arbitrary values
+    "--nondet-static",
+
+    # interesting checks in addtion to memory safety
+    "--div-by-zero-check",
+    "--float-overflow-check",
+    "--nan-check",
+    "--pointer-overflow-check",
+    "--undefined-shift-check",
+    "--signed-overflow-check",
+    "--unsigned-overflow-check"
+  ],
+  "OBJS":
+  [
+    "$(ENTRY)_harness.goto",
+    "$(FREERTOS)/libraries/c_sdk/standard/https/src/iot_https_client.goto"
+  ],
+  "INC":
+  [
+    "$(FREERTOS)/libraries/c_sdk/standard/https/include",
+    "$(FREERTOS)/libraries/c_sdk/standard/https/src/private",
+    "$(FREERTOS)/libraries/3rdparty/http-parser",
+    "$(FREERTOS)/libraries/c_sdk/standard/common/include/",
+    "$(FREERTOS)/libraries/abstractions/platform/include/",
+    "$(FREERTOS)/libraries/abstractions/platform/freertos/include/",
+    "../../include"
+  ],
+  "DEF":
+  [
+    "USER_DATA_SIZE={USER_DATA_SIZE}",
+    "MAX_ACCEPTED_SIZE={MAX_ACCEPTED_SIZE}"
+  ]
+}
+
diff --git a/tools/cbmc/proofs/HTTP/IotHttpsClient_ReadResponseStatus/IotHttpsClient_ReadResponseStatus_harness.c b/tools/cbmc/proofs/HTTP/IotHttpsClient_ReadResponseStatus/IotHttpsClient_ReadResponseStatus_harness.c
new file mode 100644
index 000000000..75949b1c3
--- /dev/null
+++ b/tools/cbmc/proofs/HTTP/IotHttpsClient_ReadResponseStatus/IotHttpsClient_ReadResponseStatus_harness.c
@@ -0,0 +1,17 @@
+/* FreeRTOS includes. */
+#include "FreeRTOS.h"
+#include "queue.h"
+#include "FreeRTOS_Sockets.h"
+
+/* FreeRTOS+TCP includes. */
+#include "iot_https_client.h"
+#include "iot_https_internal.h"
+
+#include "../global_state_HTTP.c"
+
+void harness() {
+  IotHttpsResponseHandle_t respHandle = allocate_IotResponseHandle();
+  uint16_t pStatus;
+  initialize_IotResponseHandle(respHandle);
+  IotHttpsClient_ReadResponseStatus(respHandle, &pStatus);
+}
diff --git a/tools/cbmc/proofs/HTTP/IotHttpsClient_ReadResponseStatus/Makefile.json b/tools/cbmc/proofs/HTTP/IotHttpsClient_ReadResponseStatus/Makefile.json
new file mode 100644
index 000000000..93a014309
--- /dev/null
+++ b/tools/cbmc/proofs/HTTP/IotHttpsClient_ReadResponseStatus/Makefile.json
@@ -0,0 +1,43 @@
+{
+  "ENTRY": "IotHttpsClient_ReadResponseStatus",
+  
+  # This is the length of the user data after the header in a buffer.
+  # This can be set to any size.
+  "USER_DATA_SIZE": "1000",
+
+  "CBMCFLAGS":
+  [
+    "--unwind 1",
+
+    # uninitialized global variables have arbitrary values
+    "--nondet-static",
+
+    # interesting checks in addtion to memory safety
+    "--div-by-zero-check",
+    "--float-overflow-check",
+    "--nan-check",
+    "--pointer-overflow-check",
+    "--undefined-shift-check",
+    "--signed-overflow-check",
+    "--unsigned-overflow-check"
+  ],
+  "OBJS":
+  [
+    "$(ENTRY)_harness.goto",
+    "$(FREERTOS)/libraries/c_sdk/standard/https/src/iot_https_client.goto"
+  ],
+  "INC":
+  [
+    "$(FREERTOS)/libraries/c_sdk/standard/https/include",
+    "$(FREERTOS)/libraries/c_sdk/standard/https/src/private",
+    "$(FREERTOS)/libraries/3rdparty/http-parser",
+    "$(FREERTOS)/libraries/c_sdk/standard/common/include/",
+    "$(FREERTOS)/libraries/abstractions/platform/include/",
+    "$(FREERTOS)/libraries/abstractions/platform/freertos/include/",
+    "../../include"
+  ],
+  "DEF":
+  [
+    "USER_DATA_SIZE={USER_DATA_SIZE}"
+  ]
+}
diff --git a/tools/cbmc/proofs/HTTP/IotHttpsClient_SendSync/HttpsClient_SendSync_harness.c b/tools/cbmc/proofs/HTTP/IotHttpsClient_SendSync/HttpsClient_SendSync_harness.c
new file mode 100644
index 000000000..b724b1423
--- /dev/null
+++ b/tools/cbmc/proofs/HTTP/IotHttpsClient_SendSync/HttpsClient_SendSync_harness.c
@@ -0,0 +1,66 @@
+/* FreeRTOS includes. */
+#include "FreeRTOS.h"
+#include "queue.h"
+#include "FreeRTOS_Sockets.h"
+
+/* FreeRTOS+TCP includes. */
+#include "iot_https_client.h"
+#include "iot_https_internal.h"
+
+#include "../global_state_HTTP.c"
+
+/****************************************************************
+* Stub out snprintf so that it writes nothing but simply checks that
+* the arguments are readable and writeable, and returns a length.
+*
+* The snprintf function is used by SendSync only to build a header
+* whose length is bounded by HTTPS_MAX_CONTENT_LENGTH_LINE_LENGTH,
+* so snprintf returns an unconstrained length between 0 and this
+* bound.  This value is defined in iot_https_internal.h.
+*
+* MacOS header file /usr/include/secure/_stdio.h defines snprintf to
+* use a builtin function supported by CBMC, so when this builtin is
+* available, we stub out the builtin snprintf instead of the standard
+* snprintf.
+****************************************************************/
+
+/* This is a clang macro not available on linux */
+#ifndef __has_builtin
+#define __has_builtin(x) 0
+#endif
+
+#if __has_builtin(__builtin___sprintf_chk)
+int __builtin___snprintf_chk (char *buf, size_t size, int flag, size_t os,
+			      const char *fmt, ...)
+{
+  int ret;
+  __CPROVER_assert(__CPROVER_w_ok(buf, size), "sprintf output writeable");
+  __CPROVER_assert(fmt, "sprintf format nonnull");
+  __CPROVER_assume(ret >= 0 && ret <= HTTPS_MAX_CONTENT_LENGTH_LINE_LENGTH);
+  return ret;
+}
+
+#else
+int snprintf(char *buf, size_t size, const char *fmt, ...)
+{
+  int ret;
+  __CPROVER_assert(__CPROVER_w_ok(buf, size), "sprintf output writeable");
+  __CPROVER_assert(fmt, "sprintf format nonnull");
+  __CPROVER_assume(ret >= 0 && ret <= HTTPS_MAX_CONTENT_LENGTH_LINE_LENGTH);
+  return ret;
+}
+#endif
+
+void harness() {
+  IotHttpsConnectionHandle_t pConnHandle = allocate_IotConnectionHandle();
+  IotHttpsRequestHandle_t reqHandle = allocate_IotRequestHandle();
+  IotHttpsResponseHandle_t pRespHandle = allocate_IotResponseHandle();
+  IotHttpsResponseInfo_t *pRespInfo = allocate_IotResponseInfo();
+  uint32_t timeoutMs;
+
+  initialize_IotConnectionHandle(pConnHandle);
+  initialize_IotResponseHandle(pRespHandle);
+  if (pRespInfo)
+    __CPROVER_assume(is_valid_IotResponseInfo(pRespInfo));
+  IotHttpsClient_SendSync(pConnHandle, reqHandle, &pRespHandle, pRespInfo, timeoutMs);
+}
diff --git a/tools/cbmc/proofs/HTTP/IotHttpsClient_SendSync/Makefile.json b/tools/cbmc/proofs/HTTP/IotHttpsClient_SendSync/Makefile.json
new file mode 100644
index 000000000..8b2b97546
--- /dev/null
+++ b/tools/cbmc/proofs/HTTP/IotHttpsClient_SendSync/Makefile.json
@@ -0,0 +1,50 @@
+{
+  "ENTRY": "HttpsClient_SendSync",
+
+  # This is the length of the user data after the header in a buffer.
+  # This can be set to any size.
+  "USER_DATA_SIZE": "1000",
+
+  "CBMCFLAGS":
+  [
+    "--unwind 1",
+    "--unwindset strlen.0:25,_flushHttpsNetworkData.0:5,_receiveHttpsMessage.0:2",
+
+    # uninitialized global variables have arbitrary values
+    "--nondet-static",
+
+    # interesting checks in addtion to memory safety
+    "--div-by-zero-check",
+    "--float-overflow-check",
+    "--nan-check",
+    "--pointer-overflow-check",
+    "--undefined-shift-check",
+    "--signed-overflow-check",
+    "--unsigned-overflow-check"
+  ],
+  "OBJS":
+  [
+    "$(ENTRY)_harness.goto",
+    "$(FREERTOS)/libraries/c_sdk/standard/https/src/iot_https_client.goto"
+  ],
+  "INSTFLAGS":
+  [
+    "--remove-function-body _httpParserOnHeadersCompleteCallback",
+    "--remove-function-body _httpParserOnMessageBeginCallback",
+    "--remove-function-body _httpParserOnMessageCompleteCallback"
+  ],
+  "INC":
+  [
+    "$(FREERTOS)/libraries/c_sdk/standard/https/include",
+    "$(FREERTOS)/libraries/c_sdk/standard/https/src/private",
+    "$(FREERTOS)/libraries/3rdparty/http-parser",
+    "$(FREERTOS)/libraries/c_sdk/standard/common/include/",
+    "$(FREERTOS)/libraries/abstractions/platform/include/",
+    "$(FREERTOS)/libraries/abstractions/platform/freertos/include/",
+    "../../include"
+  ],
+  "DEF":
+  [
+    "USER_DATA_SIZE={USER_DATA_SIZE}"
+  ]
+}
diff --git a/tools/cbmc/proofs/HTTP/global_state_HTTP.c b/tools/cbmc/proofs/HTTP/global_state_HTTP.c
new file mode 100644
index 000000000..0b01415f5
--- /dev/null
+++ b/tools/cbmc/proofs/HTTP/global_state_HTTP.c
@@ -0,0 +1,411 @@
+/****************************************************************/
+
+// TODO: Generate a header file for function declarations
+IotHttpsResponseHandle_t allocate_IotResponseHandle();
+IotHttpsRequestHandle_t allocate_IotRequestHandle();
+
+/****************************************************************/
+
+/* Implementation of safe malloc which returns NULL if the requested
+ * size is 0.  Warning: The behavior of malloc(0) is platform
+ * dependent.  It is possible for malloc(0) to return an address
+ * without allocating memory.
+ */
+void *safeMalloc(size_t xWantedSize) {
+  if(xWantedSize == 0) {
+    return NULL;
+  }
+  return nondet_bool() ? malloc(xWantedSize) : NULL;
+}
+
+/****************************************************************/
+
+/* It is common for a buffer to contain a header struct followed by
+ * user data.  We optimize CBMC performance by allocating space for
+ * the buffer using a struct with two members: the first member is the
+ * header struct and the second member is the user data. This is
+ * faster than just allocating a sequence of bytes large enough to
+ * hold the header struct and the user data.  We modeled
+ * responseHandle, requestHandle and connectionHandle similarly.
+ */
+
+// TODO: Replace this model of buffers with a model allowing
+// unconstrained sizes for the user data member, or at least
+// allowing a small set of differing sizes.
+
+typedef struct _responseHandle
+{
+  struct _httpsResponse RespHandle;
+  char data[USER_DATA_SIZE];
+} _resHandle_t;
+
+typedef struct _requestHandle
+{
+  struct _httpsRequest ReqHandle;
+  char data[USER_DATA_SIZE];
+} _reqHandle_t;
+
+typedef struct _connectionHandle
+{
+  struct _httpsConnection pConnHandle;
+  char data[USER_DATA_SIZE];
+} _connHandle_t;
+
+/****************************************************************
+ * HTTP parser stubs
+ ****************************************************************/
+
+/* Model the third party HTTP Parser. */
+size_t http_parser_execute (http_parser *parser,
+                            const http_parser_settings *settings,
+                            const char *data,
+                            size_t len) {
+  __CPROVER_assert(parser, "http_parser_execute parser nonnull");
+  __CPROVER_assert(settings, "http_parser_execute settings nonnull");
+  __CPROVER_assert(data, "http_parser_execute data nonnull");
+
+  _httpsResponse_t *_httpsResponse = (_httpsResponse_t *)(parser->data);
+  // Choose whether the parser found the header
+  _httpsResponse->foundHeaderField = nondet_bool();
+  _httpsResponse->parserState = PARSER_STATE_BODY_COMPLETE;
+
+  // Generate the header value found
+  size_t valueLength;
+  if (_httpsResponse->foundHeaderField) {
+    __CPROVER_assume(valueLength <= len);
+    _httpsResponse->pReadHeaderValue = malloc(valueLength+1);
+    _httpsResponse->pReadHeaderValue[valueLength] = 0;
+    _httpsResponse->readHeaderValueLength = valueLength;
+  }
+
+  // Return the number of characters in ReadHeaderValue
+  return _httpsResponse->foundHeaderField ? valueLength : 0;
+}
+
+/****************************************************************
+ * IotNetworkInterface constructor
+ ****************************************************************/
+
+IotNetworkError_t IotNetworkInterfaceCreate( void * pConnectionInfo,
+					     void * pCredentialInfo,
+					     void * pConnection ) {
+  __CPROVER_assert(pConnectionInfo,
+		   "IotNetworkInterfaceCreate pConnectionInfo");
+  /* create accepts NULL credentials when there is no TLS configuration. */
+  __CPROVER_assert(pConnection, "IotNetworkInterfaceCreate pConnection");
+
+  /* The network connection created by this function is an opaque type
+   * that is simply passed to the other network functions we are
+   * stubbing out, so we just ensure that it points to a memory
+   * object. */
+  *(char **)pConnection = malloc(1); /* network connection is opaque.  */
+
+  IotNetworkError_t error;
+  return error;
+}
+
+size_t IotNetworkInterfaceSend( void * pConnection,
+				const uint8_t * pMessage,
+				size_t messageLength ) {
+  __CPROVER_assert(pConnection, "IotNetworkInterfaceSend pConnection");
+  __CPROVER_assert(pMessage, "IotNetworkInterfaceSend pMessage");
+
+  size_t size;
+  __CPROVER_assume(size <= messageLength);
+  return size;
+}
+
+IotNetworkError_t IotNetworkInterfaceClose( void * pConnection ) {
+  __CPROVER_assert(pConnection, "IotNetworkInterfaceClose pConnection");
+
+  IotNetworkError_t error;
+  return error;
+}
+
+size_t IotNetworkInterfaceReceive( void * pConnection,
+				   uint8_t * pBuffer,
+				   size_t bytesRequested ) {
+  __CPROVER_assert(pConnection, "IotNetworkInterfaceReceive pConnection");
+  __CPROVER_assert(pBuffer, "IotNetworkInterfaceReceive pBuffer");
+
+  /* Fill the entire memory object pointed to by pBuffer with
+   * unconstrained data.  This use of __CPROVER_array_copy with a
+   * single byte is a common CBMC idiom. */
+  uint8_t byte;
+  __CPROVER_array_copy(pBuffer,&byte);
+
+  size_t size;
+  __CPROVER_assume(size <= bytesRequested);
+  return size;
+}
+
+IotNetworkError_t IotNetworkInterfaceCallback( void * pConnection,
+					       IotNetworkReceiveCallback_t
+					         receiveCallback,
+					       void * pContext ) {
+  __CPROVER_assert(pConnection,
+		   "IotNetworkInterfaceCallback pConnection");
+  __CPROVER_assert(receiveCallback,
+		   "IotNetworkInterfaceCallback receiveCallback");
+  __CPROVER_assert(pContext,
+		   "IotNetworkInterfaceCallback pContext");
+
+  IotNetworkError_t error;
+  return error;
+}
+
+IotNetworkError_t IotNetworkInterfaceDestroy( void * pConnection ) {
+  __CPROVER_assert(pConnection, "IotNetworkInterfaceDestroy pConnection");
+
+  IotNetworkError_t error;
+  return error;
+}
+
+IotNetworkInterface_t IOTNI = {
+  .create = IotNetworkInterfaceCreate,
+  .close = IotNetworkInterfaceClose,
+  .send = IotNetworkInterfaceSend,
+  .receive = IotNetworkInterfaceReceive,
+  .setReceiveCallback = IotNetworkInterfaceCallback,
+  .destroy = IotNetworkInterfaceDestroy
+};
+
+/* Models the Network Interface. */
+IotNetworkInterface_t *allocate_NetworkInterface() {
+  return nondet_bool() ? &IOTNI : NULL;
+}
+
+int is_valid_NetworkInterface(IotNetworkInterface_t *netif) {
+  return
+    netif->create &&
+    netif->close &&
+    netif->send &&
+    netif->receive &&
+    netif->setReceiveCallback &&
+    netif->destroy;
+}
+
+/* Use
+ *   __CPROVER_assume(is_stubbed_NetworkInterface(netif));
+ * to ensure the stubbed out functions are used.  The initializer for
+ * IOTNI appears to be ignored when CBMC is run with
+ * --nondet-static. */
+
+int is_stubbed_NetworkInterface(IotNetworkInterface_t *netif) {
+  return
+    netif->create == IotNetworkInterfaceCreate &&
+    netif->close == IotNetworkInterfaceClose &&
+    netif->send == IotNetworkInterfaceSend &&
+    netif->receive == IotNetworkInterfaceReceive &&
+    netif->setReceiveCallback == IotNetworkInterfaceCallback &&
+    netif->destroy == IotNetworkInterfaceDestroy;
+}
+
+/****************************************************************
+ * IotHttpsConnectionInfo constructor
+ ****************************************************************/
+
+/* Creates a Connection Info and assigns memory accordingly. */
+IotHttpsConnectionInfo_t * allocate_IotConnectionInfo() {
+  IotHttpsConnectionInfo_t * pConnInfo =
+    safeMalloc(sizeof(IotHttpsConnectionInfo_t));
+  if(pConnInfo) {
+    pConnInfo->pNetworkInterface = allocate_NetworkInterface();
+    pConnInfo->pAddress = safeMalloc(pConnInfo->addressLen);
+    pConnInfo->pAlpnProtocols = safeMalloc(pConnInfo->alpnProtocolsLen);
+    pConnInfo->pCaCert = safeMalloc(sizeof(uint32_t));
+    pConnInfo->pClientCert = safeMalloc(sizeof(uint32_t));
+    pConnInfo->pPrivateKey = safeMalloc(sizeof(uint32_t));
+    pConnInfo->userBuffer.pBuffer = safeMalloc(sizeof(_connHandle_t));
+  }
+  return pConnInfo;
+}
+
+int is_valid_IotConnectionInfo(IotHttpsConnectionInfo_t *pConnInfo) {
+  return
+    pConnInfo->pCaCert &&
+    pConnInfo->pClientCert &&
+    pConnInfo->pPrivateKey &&
+    pConnInfo->userBuffer.pBuffer &&
+    pConnInfo->pNetworkInterface &&
+    is_valid_NetworkInterface(pConnInfo->pNetworkInterface);
+}
+
+/****************************************************************
+ * IotHttpsConnectionHandle constructor
+ ****************************************************************/
+
+/* Creates a Connection Handle and assigns memory accordingly. */
+IotHttpsConnectionHandle_t allocate_IotConnectionHandle () {
+  IotHttpsConnectionHandle_t pConnectionHandle =
+    safeMalloc(sizeof(_connHandle_t));
+  if(pConnectionHandle) {
+    // network connection just points to an allocated memory object
+    pConnectionHandle->pNetworkConnection = safeMalloc(1);
+    pConnectionHandle->pNetworkInterface = allocate_NetworkInterface();
+  }
+  return pConnectionHandle;
+}
+
+IotHttpsConnectionHandle_t
+initialize_IotConnectionHandle (IotHttpsConnectionHandle_t
+				pConnectionHandle) {
+  if(pConnectionHandle) {
+    IotListDouble_Create(&pConnectionHandle->reqQ);
+    IotListDouble_Create(&pConnectionHandle->respQ);
+    // Add zero or one element to response queue
+    if (nondet_bool()) {
+      IotHttpsResponseHandle_t resp = allocate_IotResponseHandle();
+      __CPROVER_assume(resp);
+      IotListDouble_InsertHead(&pConnectionHandle->respQ, &resp->link);
+    }
+    // Add zero or one element to request queue
+    if (nondet_bool()) {
+      IotHttpsRequestHandle_t req = allocate_IotRequestHandle();
+      __CPROVER_assume(req);
+      IotListDouble_InsertHead(&pConnectionHandle->reqQ, &req->link);
+    }
+ }
+  return pConnectionHandle;
+}
+
+int is_valid_IotConnectionHandle(IotHttpsConnectionHandle_t handle) {
+  return
+    handle->pNetworkConnection &&
+    handle->pNetworkInterface &&
+    is_valid_NetworkInterface(handle->pNetworkInterface);
+}
+
+/****************************************************************
+ * IotHttpsResponseHandle constructor
+ ****************************************************************/
+
+/* Creates a Response Handle and assigns memory accordingly. */
+IotHttpsResponseHandle_t allocate_IotResponseHandle() {
+  IotHttpsResponseHandle_t pResponseHandle = safeMalloc(sizeof(_resHandle_t));
+  if(pResponseHandle) {
+    uint32_t len;
+    pResponseHandle->pBody = safeMalloc(len);
+    pResponseHandle->pHttpsConnection = allocate_IotConnectionHandle();
+    pResponseHandle->pReadHeaderField =
+      safeMalloc(pResponseHandle->readHeaderFieldLength);
+    pResponseHandle->pReadHeaderValue =
+      safeMalloc(pResponseHandle->readHeaderValueLength);
+  }
+  return pResponseHandle;
+}
+
+IotHttpsResponseHandle_t
+initialize_IotResponseHandle(IotHttpsResponseHandle_t pResponseHandle) {
+  if(pResponseHandle) {
+    pResponseHandle->httpParserInfo.parseFunc = http_parser_execute;
+  }
+  return pResponseHandle;
+}
+
+int is_valid_IotResponseHandle(IotHttpsResponseHandle_t pResponseHandle) {
+  int required =
+    __CPROVER_same_object(pResponseHandle->pHeaders,
+			  pResponseHandle->pHeadersCur) &&
+    __CPROVER_same_object(pResponseHandle->pHeaders,
+			  pResponseHandle->pHeadersEnd);
+  if (!required) return 0;
+
+  int valid_headers =
+    pResponseHandle->pHeaders == ((_resHandle_t*)pResponseHandle)->data;
+  int valid_order =
+    pResponseHandle->pHeaders <= pResponseHandle->pHeadersCur &&
+    pResponseHandle->pHeadersCur <=  pResponseHandle->pHeadersEnd;
+  int valid_parserdata =
+    pResponseHandle->httpParserInfo.readHeaderParser.data == pResponseHandle;
+  return
+    valid_headers &&
+    valid_order &&
+    valid_parserdata &&
+    // valid_order and short circuit evaluation prevents integer overflow
+    pResponseHandle->pHeadersEnd - pResponseHandle->pHeaders <= USER_DATA_SIZE;
+}
+
+/****************************************************************
+ * IotHttpsRequestHandle constructor
+ ****************************************************************/
+
+/* Creates a Request Handle and assigns memory accordingly. */
+IotHttpsRequestHandle_t allocate_IotRequestHandle() {
+  IotHttpsRequestHandle_t pRequestHandle = safeMalloc(sizeof(_reqHandle_t));
+  if (pRequestHandle) {
+    uint32_t len;
+    pRequestHandle->pHttpsResponse = allocate_IotResponseHandle();
+    pRequestHandle->pHttpsConnection = allocate_IotConnectionHandle();
+    pRequestHandle->pBody = safeMalloc(len);
+    pRequestHandle->pConnInfo = allocate_IotConnectionInfo();
+  }
+  return pRequestHandle;
+}
+
+int is_valid_IotRequestHandle(IotHttpsRequestHandle_t pRequestHandle) {
+  int required =
+    __CPROVER_same_object(pRequestHandle->pHeaders,
+			  pRequestHandle->pHeadersCur) &&
+    __CPROVER_same_object(pRequestHandle->pHeaders,
+			  pRequestHandle->pHeadersEnd);
+  if (!required) return 0;
+
+  int valid_headers =
+    pRequestHandle->pHeaders == ((_reqHandle_t*)pRequestHandle)->data;
+  int valid_order =
+    pRequestHandle->pHeaders <= pRequestHandle->pHeadersCur &&
+    pRequestHandle->pHeadersCur <=  pRequestHandle->pHeadersEnd;
+  int valid_body =
+    pRequestHandle->pBody != NULL;
+  return
+    valid_headers &&
+    valid_order &&
+    valid_body &&
+    // valid_order and short circuit evaluation prevents integer overflow
+    pRequestHandle->pHeadersEnd - pRequestHandle->pHeaders <= USER_DATA_SIZE;
+}
+
+/****************************************************************
+ * IotHttpsRequestInfo constructor
+ * This is currently unusued and untested.
+ ****************************************************************/
+
+/* Creates a Request Info and assigns memory accordingly. */
+IotHttpsRequestInfo_t * allocate_IotRequestInfo() {
+  IotHttpsRequestInfo_t * pReqInfo
+    = safeMalloc(sizeof(IotHttpsRequestInfo_t));
+  if(pReqInfo) {
+    pReqInfo->userBuffer.pBuffer = safeMalloc(pReqInfo->userBuffer.bufferLen);
+    pReqInfo->pHost = safeMalloc(pReqInfo->hostLen);
+  }
+  return pReqInfo;
+}
+
+int is_valid_IotRequestInfo(IotHttpsRequestInfo_t * pReqInfo) {
+  return
+    pReqInfo->hostLen <= IOT_HTTPS_MAX_HOST_NAME_LENGTH + 1;
+}
+
+/****************************************************************
+ * IotHttpsResponseInfo constructor
+ ****************************************************************/
+
+/* Creates a Response Info and assigns memory accordingly. */
+IotHttpsResponseInfo_t * allocate_IotResponseInfo() {
+  IotHttpsResponseInfo_t * pRespInfo =
+    safeMalloc(sizeof(IotHttpsResponseInfo_t));
+  if(pRespInfo) {
+    pRespInfo->userBuffer.pBuffer = safeMalloc(pRespInfo->userBuffer.bufferLen);
+    pRespInfo->pSyncInfo = safeMalloc(sizeof(IotHttpsSyncInfo_t));
+    if (pRespInfo->pSyncInfo)
+      pRespInfo->pSyncInfo->pBody = safeMalloc(pRespInfo->pSyncInfo->bodyLen);
+  }
+  return pRespInfo;
+}
+
+int is_valid_IotResponseInfo(IotHttpsResponseInfo_t * pRespInfo){
+  return
+    pRespInfo->pSyncInfo &&
+    pRespInfo->pSyncInfo->pBody;
+}
diff --git a/tools/cmake/afr_module.cmake b/tools/cmake/afr_module.cmake
index 6864d0f53..a325cd4ee 100644
--- a/tools/cmake/afr_module.cmake
+++ b/tools/cmake/afr_module.cmake
@@ -12,16 +12,17 @@ foreach(module IN LISTS AFR_MODULES)
 endforeach()
 
 # Global variables.
-set(AFR_MODULES               "" CACHE INTERNAL "List of Amazon FreeRTOS modules.")
-set(AFR_MODULES_PORT          "" CACHE INTERNAL "List of porting layer targets defined from vendors.")
-set(AFR_MODULES_PUBLIC        "" CACHE INTERNAL "List of public Amazon FreeRTOS modules.")
-set(AFR_MODULES_BUILD         "" CACHE INTERNAL "List of Amazon FreeRTOS modules to build.")
-set(AFR_MODULES_ENABLED       "" CACHE INTERNAL "List of enabled Amazon FreeRTOS modules.")
-set(AFR_MODULES_ENABLED_USER  "" CACHE INTERNAL "List of Amazon FreeRTOS modules enabled by user.")
-set(AFR_MODULES_ENABLED_DEPS  "" CACHE INTERNAL "List of Amazon FreeRTOS modules enabled due to dependencies.")
-set(AFR_DEMOS_ENABLED         "" CACHE INTERNAL "List of supported demos for Amazon FreeRTOS.")
-set(AFR_TESTS_ENABLED         "" CACHE INTERNAL "List of supported tests for Amazon FreeRTOS.")
-set(3RDPARTY_MODULES_ENABLED  "" CACHE INTERNAL "List of 3rdparty libraries enabled due to dependencies.")
+set(AFR_MODULES                 "" CACHE INTERNAL "List of Amazon FreeRTOS modules.")
+set(AFR_MODULES_PORT            "" CACHE INTERNAL "List of porting layer targets defined from vendors.")
+set(AFR_MODULES_PUBLIC          "" CACHE INTERNAL "List of public Amazon FreeRTOS modules.")
+set(AFR_MODULES_PUBLIC_DISABLED "" CACHE INTERNAL "List of public Amazon FreeRTOS modules explicitly disabled for a board.")
+set(AFR_MODULES_BUILD           "" CACHE INTERNAL "List of Amazon FreeRTOS modules to build.")
+set(AFR_MODULES_ENABLED         "" CACHE INTERNAL "List of enabled Amazon FreeRTOS modules.")
+set(AFR_MODULES_ENABLED_USER    "" CACHE INTERNAL "List of Amazon FreeRTOS modules enabled by user.")
+set(AFR_MODULES_ENABLED_DEPS    "" CACHE INTERNAL "List of Amazon FreeRTOS modules enabled due to dependencies.")
+set(AFR_DEMOS_ENABLED           "" CACHE INTERNAL "List of supported demos for Amazon FreeRTOS.")
+set(AFR_TESTS_ENABLED           "" CACHE INTERNAL "List of supported tests for Amazon FreeRTOS.")
+set(3RDPARTY_MODULES_ENABLED    "" CACHE INTERNAL "List of 3rdparty libraries enabled due to dependencies.")
 
 # Global setting for whether enable all modules by default or not.
 if(NOT AFR_ENABLE_ALL_MODULES)
@@ -57,7 +58,10 @@ function(afr_module)
     endif()
 
     if(NOT (ARG_INTERNAL OR ARG_INTERFACE))
-        afr_cache_append(AFR_MODULES_PUBLIC ${module_name})
+        # Do not append if the module is explicitly disabled for the board.
+        if(NOT ${module_name} IN_LIST AFR_MODULES_PUBLIC_DISABLED)
+            afr_cache_append(AFR_MODULES_PUBLIC ${module_name})
+        endif()
     endif()
 
     # All modules implicitly depends on kernel unless INTERFACE or KERNEL is provided.
@@ -135,6 +139,12 @@ function(afr_3rdparty_module arg_name)
     add_library(3rdparty::${arg_name} INTERFACE IMPORTED GLOBAL)
 endfunction()
 
+# Disable a list of public modules. This can be used to disable public modules
+# for a specific board.
+function(afr_disable_public_modules)
+    afr_cache_append(AFR_MODULES_PUBLIC_DISABLED ${ARGN})
+endfunction()
+
 # Add properties to a module, will set these global variables accordingly:
 # AFR_MODULE_${arg_module}_${arg_prop_type}_PRIVATE
 # AFR_MODULE_${arg_module}_${arg_prop_type}_PUBLIC
diff --git a/vendors/cypress/WICED_SDK/apps/demo/aws_demo/aws_demo.mk b/vendors/cypress/WICED_SDK/apps/demo/aws_demo/aws_demo.mk
index 27ceebb08..94d9b7999 100644
--- a/vendors/cypress/WICED_SDK/apps/demo/aws_demo/aws_demo.mk
+++ b/vendors/cypress/WICED_SDK/apps/demo/aws_demo/aws_demo.mk
@@ -81,6 +81,9 @@ GLOBAL_INCLUDES +=  $(AMAZON_FREERTOS_PATH)demos/include \
                     $(AFR_C_SDK_AWS_PATH)defender/src/private \
                     $(AFR_C_SDK_STANDARD_PATH)serializer/include \
                     $(AFR_THIRDPARTY_PATH)tinycbor \
+                    $(AFR_C_SDK_STANDARD_PATH)https/include \
+                    $(AFR_C_SDK_STANDARD_PATH)https/include/types \
+                    $(AFR_THIRDPARTY_PATH)http-parser \
 
 #$(info $(AMAZON_FREERTOS_PATH))
 $(NAME)_SOURCES    := $(AMAZON_FREERTOS_PATH)vendors/cypress/boards/$(PLATFORM)/aws_demos/application_code/main.c \
@@ -99,6 +102,9 @@ $(NAME)_SOURCES    := $(AMAZON_FREERTOS_PATH)vendors/cypress/boards/$(PLATFORM)/
                       $(AMAZON_FREERTOS_PATH)demos/greengrass_connectivity/aws_greengrass_discovery_demo.c \
                       $(AMAZON_FREERTOS_PATH)demos/network_manager/aws_iot_demo_network.c \
                       $(AMAZON_FREERTOS_PATH)demos/network_manager/aws_iot_network_manager.c \
+                      $(AMAZON_FREERTOS_PATH)demos/https/iot_demo_https_common.c \
+                      $(AMAZON_FREERTOS_PATH)demos/https/iot_demo_https_s3_download_async.c \
+                      $(AMAZON_FREERTOS_PATH)demos/https/iot_demo_https_s3_download_sync.c \
                       $(AFR_C_SDK_STANDARD_PATH)common/taskpool/iot_taskpool.c \
                       $(AFR_ABSTRACTIONS_PATH)platform/freertos/iot_clock_freertos.c \
                       $(AFR_ABSTRACTIONS_PATH)platform/freertos/iot_network_freertos.c \
@@ -121,6 +127,9 @@ $(NAME)_SOURCES    := $(AMAZON_FREERTOS_PATH)vendors/cypress/boards/$(PLATFORM)/
                       $(AFR_C_SDK_STANDARD_PATH)serializer/src/cbor/iot_serializer_tinycbor_encoder.c \
                       $(AFR_C_SDK_STANDARD_PATH)serializer/src/json/iot_serializer_json_decoder.c \
                       $(AFR_C_SDK_STANDARD_PATH)serializer/src/json/iot_serializer_json_encoder.c \
+                      $(AFR_C_SDK_STANDARD_PATH)https/src/iot_https_client.c \
+                      $(AFR_C_SDK_STANDARD_PATH)https/src/iot_https_utils.c \
+                      $(AFR_THIRDPARTY_PATH)http-parser/http_parser.c \
 
 $(NAME)_COMPONENTS += utilities/wifi
 $(NAME)_COMPONENTS += aws
diff --git a/vendors/cypress/WICED_SDK/apps/test/aws_test/aws_test.mk b/vendors/cypress/WICED_SDK/apps/test/aws_test/aws_test.mk
index fa7095800..028df4409 100644
--- a/vendors/cypress/WICED_SDK/apps/test/aws_test/aws_test.mk
+++ b/vendors/cypress/WICED_SDK/apps/test/aws_test/aws_test.mk
@@ -104,6 +104,12 @@ GLOBAL_INCLUDES +=  $(AMAZON_FREERTOS_PATH)tests/include \
                     $(AFR_THIRDPARTY_PATH)lwip/src/portable/cypress/$(PLATFORM) \
                     $(AFR_THIRDPARTY_PATH)lwip/src/portable/arch \
                     $(AMAZON_FREERTOS_PATH)vendors/cypress/boards/$(PLATFORM)/aws_tests/application_code/cypress_code/include \
+                    $(AFR_C_SDK_STANDARD_PATH)https/include \
+                    $(AFR_C_SDK_STANDARD_PATH)https/include/types \
+                    $(AFR_C_SDK_STANDARD_PATH)https/src \
+                    $(AFR_C_SDK_STANDARD_PATH)https/test/access \
+                    $(AFR_C_SDK_STANDARD_PATH)https/test/unit \
+                    $(AFR_THIRDPARTY_PATH)http-parser \
 
 #$(info $(AMAZON_FREERTOS_PATH))
 $(NAME)_SOURCES    := $(AMAZON_FREERTOS_PATH)vendors/cypress/boards/$(PLATFORM)/aws_tests/application_code/main.c \
@@ -178,8 +184,17 @@ $(NAME)_SOURCES    := $(AMAZON_FREERTOS_PATH)vendors/cypress/boards/$(PLATFORM)/
                       $(AFR_FREERTOS_PLUS_STANDARD_PATH)freertos_plus_tcp/source/FreeRTOS_IP.c \
                       $(AFR_FREERTOS_PLUS_STANDARD_PATH)freertos_plus_tcp/source/FreeRTOS_TCP_IP.c \
                       $(AFR_FREERTOS_PLUS_STANDARD_PATH)freertos_plus_tcp/source/FreeRTOS_TCP_WIN.c \
-                      
-                    
+                      $(AFR_C_SDK_STANDARD_PATH)https/test/unit/iot_tests_https_async.c \
+                      $(AFR_C_SDK_STANDARD_PATH)https/test/unit/iot_tests_https_client.c \
+                      $(AFR_C_SDK_STANDARD_PATH)https/test/unit/iot_tests_https_common.c \
+                      $(AFR_C_SDK_STANDARD_PATH)https/test/unit/iot_tests_https_sync.c \
+                      $(AFR_C_SDK_STANDARD_PATH)https/test/unit/iot_tests_https_utils.c \
+                      $(AFR_C_SDK_STANDARD_PATH)https/test/system/iot_tests_https_system.c \
+                      $(AFR_C_SDK_STANDARD_PATH)https/src/iot_https_client.c \
+                      $(AFR_C_SDK_STANDARD_PATH)https/src/iot_https_utils.c \
+                      $(AFR_THIRDPARTY_PATH)http-parser/http_parser.c \
+
+
 $(NAME)_COMPONENTS += utilities/wifi
 $(NAME)_COMPONENTS += aws
 
diff --git a/vendors/cypress/boards/CYW943907AEVAL1F/aws_demos/config_files/aws_demo_config.h b/vendors/cypress/boards/CYW943907AEVAL1F/aws_demos/config_files/aws_demo_config.h
index ece0c8ce3..847016ff2 100644
--- a/vendors/cypress/boards/CYW943907AEVAL1F/aws_demos/config_files/aws_demo_config.h
+++ b/vendors/cypress/boards/CYW943907AEVAL1F/aws_demos/config_files/aws_demo_config.h
@@ -36,6 +36,8 @@
  *          CONFIG_DEFENDER_DEMO_ENABLED
  *          CONFIG_POSIX_DEMO_ENABLED
  *          CONFIG_OTA_UPDATE_DEMO_ENABLED
+ *          CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED
+ *          CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED
  *
  *  These defines are used in iot_demo_runner.h for demo selection */
 
diff --git a/vendors/cypress/boards/CYW943907AEVAL1F/aws_demos/config_files/iot_config.h b/vendors/cypress/boards/CYW943907AEVAL1F/aws_demos/config_files/iot_config.h
index 9d27ed1d3..6e78672a0 100644
--- a/vendors/cypress/boards/CYW943907AEVAL1F/aws_demos/config_files/iot_config.h
+++ b/vendors/cypress/boards/CYW943907AEVAL1F/aws_demos/config_files/iot_config.h
@@ -25,8 +25,8 @@
 #define IOT_CONFIG_H_
 
 /* MQTT demo configuration. */
-#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT    ( 10 )
-#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE     ( 2 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT       ( 10 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE        ( 2 )
 
 /* Shadow demo configuration. The demo publishes periodic Shadow updates and responds
  * to changing Shadows. */
@@ -45,9 +45,10 @@
 #define IOT_LOG_LEVEL_MQTT                      IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_SHADOW                IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_DEFENDER              IOT_LOG_INFO
+#define IOT_LOG_LEVEL_HTTPS                     IOT_LOG_INFO
 
 /* Platform thread priority. */
-#define IOT_THREAD_DEFAULT_PRIORITY      5
+#define IOT_THREAD_DEFAULT_PRIORITY             5
 
 /* Include the common configuration file for FreeRTOS. */
 #include "iot_config_common.h"
diff --git a/vendors/cypress/boards/CYW943907AEVAL1F/aws_tests/config_files/aws_test_runner_config.h b/vendors/cypress/boards/CYW943907AEVAL1F/aws_tests/config_files/aws_test_runner_config.h
index f57156db7..435fe3fac 100644
--- a/vendors/cypress/boards/CYW943907AEVAL1F/aws_tests/config_files/aws_test_runner_config.h
+++ b/vendors/cypress/boards/CYW943907AEVAL1F/aws_tests/config_files/aws_test_runner_config.h
@@ -62,6 +62,8 @@
 #define testrunnerFULL_SERIALIZER_ENABLED             0
 #define testrunnerUTIL_PLATFORM_CLOCK_ENABLED         0
 #define testrunnerUTIL_PLATFORM_THREADS_ENABLED       0
+#define testrunnerFULL_HTTPS_CLIENT_ENABLED           0
+
 
 /* On systems using FreeRTOS+TCP (such as this one) the TCP segments must be
  * cleaned up before running the memory leak check. */
diff --git a/vendors/cypress/boards/CYW954907AEVAL1F/aws_demos/config_files/aws_demo_config.h b/vendors/cypress/boards/CYW954907AEVAL1F/aws_demos/config_files/aws_demo_config.h
index ece0c8ce3..847016ff2 100644
--- a/vendors/cypress/boards/CYW954907AEVAL1F/aws_demos/config_files/aws_demo_config.h
+++ b/vendors/cypress/boards/CYW954907AEVAL1F/aws_demos/config_files/aws_demo_config.h
@@ -36,6 +36,8 @@
  *          CONFIG_DEFENDER_DEMO_ENABLED
  *          CONFIG_POSIX_DEMO_ENABLED
  *          CONFIG_OTA_UPDATE_DEMO_ENABLED
+ *          CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED
+ *          CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED
  *
  *  These defines are used in iot_demo_runner.h for demo selection */
 
diff --git a/vendors/cypress/boards/CYW954907AEVAL1F/aws_demos/config_files/iot_config.h b/vendors/cypress/boards/CYW954907AEVAL1F/aws_demos/config_files/iot_config.h
index 9d27ed1d3..6e78672a0 100644
--- a/vendors/cypress/boards/CYW954907AEVAL1F/aws_demos/config_files/iot_config.h
+++ b/vendors/cypress/boards/CYW954907AEVAL1F/aws_demos/config_files/iot_config.h
@@ -25,8 +25,8 @@
 #define IOT_CONFIG_H_
 
 /* MQTT demo configuration. */
-#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT    ( 10 )
-#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE     ( 2 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT       ( 10 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE        ( 2 )
 
 /* Shadow demo configuration. The demo publishes periodic Shadow updates and responds
  * to changing Shadows. */
@@ -45,9 +45,10 @@
 #define IOT_LOG_LEVEL_MQTT                      IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_SHADOW                IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_DEFENDER              IOT_LOG_INFO
+#define IOT_LOG_LEVEL_HTTPS                     IOT_LOG_INFO
 
 /* Platform thread priority. */
-#define IOT_THREAD_DEFAULT_PRIORITY      5
+#define IOT_THREAD_DEFAULT_PRIORITY             5
 
 /* Include the common configuration file for FreeRTOS. */
 #include "iot_config_common.h"
diff --git a/vendors/cypress/boards/CYW954907AEVAL1F/aws_tests/config_files/aws_test_runner_config.h b/vendors/cypress/boards/CYW954907AEVAL1F/aws_tests/config_files/aws_test_runner_config.h
index 73febfe93..96ff83d71 100644
--- a/vendors/cypress/boards/CYW954907AEVAL1F/aws_tests/config_files/aws_test_runner_config.h
+++ b/vendors/cypress/boards/CYW954907AEVAL1F/aws_tests/config_files/aws_test_runner_config.h
@@ -62,6 +62,7 @@
 #define testrunnerFULL_SERIALIZER_ENABLED             0
 #define testrunnerUTIL_PLATFORM_CLOCK_ENABLED         0
 #define testrunnerUTIL_PLATFORM_THREADS_ENABLED       0
+#define testrunnerFULL_HTTPS_CLIENT_ENABLED           0
 
 /* On systems using FreeRTOS+TCP (such as this one) the TCP segments must be
  * cleaned up before running the memory leak check. */
diff --git a/vendors/espressif/boards/esp32/.gitignore b/vendors/espressif/boards/esp32/.gitignore
new file mode 100644
index 000000000..2d0a09acc
--- /dev/null
+++ b/vendors/espressif/boards/esp32/.gitignore
@@ -0,0 +1,2 @@
+# Ignore the build artifacts in the projects.
+*build*
diff --git a/vendors/espressif/boards/esp32/aws_demos/application_code/espressif_code/amazon-freertos-common/component.mk b/vendors/espressif/boards/esp32/aws_demos/application_code/espressif_code/amazon-freertos-common/component.mk
index 1e5a84b57..ab2eaab63 100644
--- a/vendors/espressif/boards/esp32/aws_demos/application_code/espressif_code/amazon-freertos-common/component.mk
+++ b/vendors/espressif/boards/esp32/aws_demos/application_code/espressif_code/amazon-freertos-common/component.mk
@@ -33,6 +33,7 @@ COMPONENT_SRCDIRS := $(AMAZON_FREERTOS_SDK_DIR)/standard/mqtt/src \
         $(AMAZON_FREERTOS_SDK_DIR)/standard/ble/src/services/device_information \
         $(AMAZON_FREERTOS_SDK_DIR)/standard/ble/src/services/mqtt_ble \
         $(AMAZON_FREERTOS_SDK_DIR)/standard/ble/src/services/wifi_provisioning \
+        $(AMAZON_FREERTOS_SDK_DIR)/standard/https/src \
         $(AMAZON_FREERTOS_SDK_DIR)/standard/serializer/src \
         $(AMAZON_FREERTOS_SDK_DIR)/standard/serializer/src/cbor \
         $(AMAZON_FREERTOS_SDK_DIR)/standard/serializer/src/json \
@@ -51,6 +52,7 @@ COMPONENT_SRCDIRS := $(AMAZON_FREERTOS_SDK_DIR)/standard/mqtt/src \
         $(AMAZON_FREERTOS_ABSTRACTIONS_DIR)/pkcs11/mbedtls \
         $(AMAZON_FREERTOS_ABSTRACTIONS_DIR)/platform/freertos \
         $(AMAZON_FREERTOS_ABSTRACTIONS_DIR)/secure_sockets/freertos_plus_tcp \
+        $(AMAZON_FREERTOS_3RD_PARTY_DIR)/http-parser \
         $(AMAZON_FREERTOS_3RD_PARTY_DIR)/jsmn \
         $(AMAZON_FREERTOS_3RD_PARTY_DIR)/tinycbor \
         $(AMAZON_FREERTOS_3RD_PARTY_DIR)/pkcs11 \
@@ -64,6 +66,8 @@ COMPONENT_ADD_INCLUDEDIRS := $(AMAZON_FREERTOS_ARF_PLUS_DIR)/standard/freertos_p
                              $(AMAZON_FREERTOS_ARF_PLUS_DIR)/standard/freertos_plus_tcp/include \
                              $(AMAZON_FREERTOS_ARF_PLUS_DIR)/standard/freertos_plus_tcp/source/portable/Compiler/GCC \
                              $(AMAZON_FREERTOS_SDK_DIR)/standard/ble/include \
+                             $(AMAZON_FREERTOS_SDK_DIR)/standard/https/include \
+                             $(AMAZON_FREERTOS_3RD_PARTY_DIR)/http-parser \
                              $(AMAZON_FREERTOS_3RD_PARTY_DIR)/jsmn \
                              $(AMAZON_FREERTOS_3RD_PARTY_DIR)/tinycbor \
                              $(AMAZON_FREERTOS_ABSTRACTIONS_DIR)/platform/freertos/include \
@@ -98,6 +102,8 @@ COMPONENT_SRCDIRS += ../.. \
         $(AMAZON_FREERTOS_ESP32)/common \
         ${AMAZON_FREERTOS_SDK_DIR}/standard/common/test \
         ${AMAZON_FREERTOS_SDK_DIR}/standard/ble/test \
+        ${AMAZON_FREERTOS_SDK_DIR}/standard/https/test/system \
+        ${AMAZON_FREERTOS_SDK_DIR}/standard/https/test/unit \
         ${AMAZON_FREERTOS_SDK_DIR}/standard/mqtt/test \
         ${AMAZON_FREERTOS_SDK_DIR}/standard/mqtt/test/system \
         ${AMAZON_FREERTOS_SDK_DIR}/standard/mqtt/test/unit \
@@ -130,6 +136,7 @@ COMPONENT_ADD_INCLUDEDIRS += $(AMAZON_FREERTOS_TESTS_DIR)/include \
         ${AMAZON_FREERTOS_ARF_PLUS_DIR}/aws/ota/test \
         ${AMAZON_FREERTOS_ARF_PLUS_DIR}/standard/freertos_plus_tcp/test \
         $(AMAZON_FREERTOS_ABSTRACTIONS_DIR)/wifi/test \
+        ${AMAZON_FREERTOS_SDK_DIR}/standard/https/src \
         ${AMAZON_FREERTOS_SDK_DIR}/standard/mqtt/src \
         ${AMAZON_FREERTOS_SDK_DIR}/aws/defender/src/private \
         ${AMAZON_FREERTOS_SDK_DIR}/aws/shadow/src \
@@ -137,7 +144,9 @@ COMPONENT_ADD_INCLUDEDIRS += $(AMAZON_FREERTOS_TESTS_DIR)/include \
 
 COMPONENT_OBJEXCLUDE += $(AMAZON_FREERTOS_ARF_PLUS_DIR)/aws/ota/test/aws_test_ota_cbor.o \
 
-COMPONENT_PRIV_INCLUDEDIRS += $(AMAZON_FREERTOS_3RD_PARTY_DIR)/unity/extras/fixture/src ${AMAZON_FREERTOS_SDK_DIR}/standard/mqtt/test/access
+COMPONENT_PRIV_INCLUDEDIRS += $(AMAZON_FREERTOS_3RD_PARTY_DIR)/unity/extras/fixture/src \
+        ${AMAZON_FREERTOS_SDK_DIR}/standard/mqtt/test/access \
+        ${AMAZON_FREERTOS_SDK_DIR}/standard/https/test/access
 
 # Define the board to pass the SOCKETS_Socket_InvalidTooManySockets test.
 CFLAGS += -DESP32
@@ -152,6 +161,7 @@ COMPONENT_SRCDIRS += ../.. \
     $(AMAZON_FREERTOS_DEMOS_DIR)/demo_runner \
     $(AMAZON_FREERTOS_DEMOS_DIR)/shadow \
     $(AMAZON_FREERTOS_DEMOS_DIR)/defender \
+    $(AMAZON_FREERTOS_DEMOS_DIR)/https \
     $(AMAZON_FREERTOS_DEMOS_DIR)/mqtt \
     $(AMAZON_FREERTOS_DEMOS_DIR)/mqtt_v4 \
     $(AMAZON_FREERTOS_DEMOS_DIR)/mqtt_v4/network/bluetooth \
diff --git a/vendors/espressif/boards/esp32/aws_demos/config_files/aws_demo_config.h b/vendors/espressif/boards/esp32/aws_demos/config_files/aws_demo_config.h
index 7227f5dcc..b33c20438 100644
--- a/vendors/espressif/boards/esp32/aws_demos/config_files/aws_demo_config.h
+++ b/vendors/espressif/boards/esp32/aws_demos/config_files/aws_demo_config.h
@@ -36,7 +36,8 @@
  *          CONFIG_DEFENDER_DEMO_ENABLED
  *          CONFIG_OTA_UPDATE_DEMO_ENABLED
  *          CONFIG_BLE_GATT_SERVER_DEMO_ENABLED
- *
+ *          CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED
+ *          CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED
  *
  *  These defines are used in iot_demo_runner.h for demo selection */
 
diff --git a/vendors/espressif/boards/esp32/aws_demos/config_files/iot_config.h b/vendors/espressif/boards/esp32/aws_demos/config_files/iot_config.h
index 571d24c96..ceaaa806e 100644
--- a/vendors/espressif/boards/esp32/aws_demos/config_files/iot_config.h
+++ b/vendors/espressif/boards/esp32/aws_demos/config_files/iot_config.h
@@ -28,11 +28,11 @@
 #include <stdbool.h>
 
 /* How long the MQTT library will wait for PINGRESPs or PUBACKs. */
-#define IOT_MQTT_RESPONSE_WAIT_MS            ( 10000 )
+#define IOT_MQTT_RESPONSE_WAIT_MS               ( 10000 )
 
 /* MQTT demo configuration. */
-#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT    ( 10 )
-#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE     ( 2 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT       ( 10 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE        ( 2 )
 
 /* Shadow demo configuration. The demo publishes periodic Shadow updates and responds
  * to changing Shadows. */
@@ -51,10 +51,11 @@
 #define IOT_LOG_LEVEL_MQTT                      IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_SHADOW                IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_DEFENDER              IOT_LOG_INFO
+#define IOT_LOG_LEVEL_HTTPS                     IOT_LOG_INFO
 
 /* Platform thread stack size and priority. */
-#define IOT_THREAD_DEFAULT_STACK_SIZE    6000
-#define IOT_THREAD_DEFAULT_PRIORITY      5
+#define IOT_THREAD_DEFAULT_STACK_SIZE           6000
+#define IOT_THREAD_DEFAULT_PRIORITY             5
 
 /* This board supports MQTT-over-BLE, which uses a different serializer than normal
  * MQTT 3.1.1. Enable the serializer overrides of the MQTT library. */
@@ -63,13 +64,13 @@
 /* Provide additional serializer initialization functions. */
 extern bool IotBleMqtt_InitSerialize( void );
 extern void IotBleMqtt_CleanupSerialize( void );
-#define _IotMqtt_InitSerializeAdditional      IotBleMqtt_InitSerialize
-#define _IotMqtt_CleanupSerializeAdditional   IotBleMqtt_CleanupSerialize
+#define _IotMqtt_InitSerializeAdditional       IotBleMqtt_InitSerialize
+#define _IotMqtt_CleanupSerializeAdditional    IotBleMqtt_CleanupSerialize
 
 /* Provide a function to retrieve the serializer function pointers in the MQTT demo. */
 typedef struct IotMqttSerializer IotMqttSerializer_t;
 extern const IotMqttSerializer_t * demoGetMqttSerializer( void );
-#define IOT_DEMO_MQTT_SERIALIZER   demoGetMqttSerializer()
+#define IOT_DEMO_MQTT_SERIALIZER    demoGetMqttSerializer()
 
 /* Include the common configuration file for FreeRTOS. */
 #include "iot_config_common.h"
diff --git a/vendors/espressif/boards/esp32/aws_tests/application_code/espressif_code/amazon-freertos-tests/component.mk b/vendors/espressif/boards/esp32/aws_tests/application_code/espressif_code/amazon-freertos-tests/component.mk
index fe69096de..8464462f3 100644
--- a/vendors/espressif/boards/esp32/aws_tests/application_code/espressif_code/amazon-freertos-tests/component.mk
+++ b/vendors/espressif/boards/esp32/aws_tests/application_code/espressif_code/amazon-freertos-tests/component.mk
@@ -33,6 +33,7 @@ COMPONENT_SRCDIRS := $(AMAZON_FREERTOS_SDK_DIR)/standard/mqtt/src \
         $(AMAZON_FREERTOS_SDK_DIR)/standard/ble/src/services/device_information \
         $(AMAZON_FREERTOS_SDK_DIR)/standard/ble/src/services/mqtt_ble \
         $(AMAZON_FREERTOS_SDK_DIR)/standard/ble/src/services/wifi_provisioning \
+        $(AMAZON_FREERTOS_SDK_DIR)/standard/https/src \
         $(AMAZON_FREERTOS_SDK_DIR)/standard/serializer/src \
         $(AMAZON_FREERTOS_SDK_DIR)/standard/serializer/src/cbor \
         $(AMAZON_FREERTOS_SDK_DIR)/standard/serializer/src/json \
@@ -51,6 +52,7 @@ COMPONENT_SRCDIRS := $(AMAZON_FREERTOS_SDK_DIR)/standard/mqtt/src \
         $(AMAZON_FREERTOS_ABSTRACTIONS_DIR)/pkcs11/mbedtls \
         $(AMAZON_FREERTOS_ABSTRACTIONS_DIR)/platform/freertos \
         $(AMAZON_FREERTOS_ABSTRACTIONS_DIR)/secure_sockets/freertos_plus_tcp \
+        $(AMAZON_FREERTOS_3RD_PARTY_DIR)/http-parser \
         $(AMAZON_FREERTOS_3RD_PARTY_DIR)/jsmn \
         $(AMAZON_FREERTOS_3RD_PARTY_DIR)/tinycbor \
         $(AMAZON_FREERTOS_3RD_PARTY_DIR)/pkcs11 \
@@ -64,6 +66,8 @@ COMPONENT_ADD_INCLUDEDIRS := $(AMAZON_FREERTOS_ARF_PLUS_DIR)/standard/freertos_p
                              $(AMAZON_FREERTOS_ARF_PLUS_DIR)/standard/freertos_plus_tcp/include \
                              $(AMAZON_FREERTOS_ARF_PLUS_DIR)/standard/freertos_plus_tcp/source/portable/Compiler/GCC \
                              $(AMAZON_FREERTOS_SDK_DIR)/standard/ble/include \
+                             $(AMAZON_FREERTOS_SDK_DIR)/standard/https/include \
+                             $(AMAZON_FREERTOS_3RD_PARTY_DIR)/http-parser \
                              $(AMAZON_FREERTOS_3RD_PARTY_DIR)/jsmn \
                              $(AMAZON_FREERTOS_3RD_PARTY_DIR)/tinycbor \
                              $(AMAZON_FREERTOS_ABSTRACTIONS_DIR)/platform/freertos/include \
@@ -98,6 +102,8 @@ COMPONENT_SRCDIRS += ../.. \
         $(AMAZON_FREERTOS_ESP32)/common \
         ${AMAZON_FREERTOS_SDK_DIR}/standard/common/test \
         ${AMAZON_FREERTOS_SDK_DIR}/standard/ble/test \
+        ${AMAZON_FREERTOS_SDK_DIR}/standard/https/test/system \
+        ${AMAZON_FREERTOS_SDK_DIR}/standard/https/test/unit \
         ${AMAZON_FREERTOS_SDK_DIR}/standard/mqtt/test \
         ${AMAZON_FREERTOS_SDK_DIR}/standard/mqtt/test/system \
         ${AMAZON_FREERTOS_SDK_DIR}/standard/mqtt/test/unit \
@@ -132,6 +138,7 @@ COMPONENT_ADD_INCLUDEDIRS += $(AMAZON_FREERTOS_TESTS_DIR)/include \
         ${AMAZON_FREERTOS_ARF_PLUS_DIR}/standard/freertos_plus_tcp/test \
         $(AMAZON_FREERTOS_ABSTRACTIONS_DIR)/wifi/test \
 	${AMAZON_FREERTOS_ABSTRACTIONS_DIR}/ble_hal/test/include \
+        ${AMAZON_FREERTOS_SDK_DIR}/standard/https/src \
         ${AMAZON_FREERTOS_SDK_DIR}/standard/mqtt/src \
         ${AMAZON_FREERTOS_SDK_DIR}/aws/defender/src/private \
         ${AMAZON_FREERTOS_SDK_DIR}/aws/shadow/src \
@@ -139,7 +146,9 @@ COMPONENT_ADD_INCLUDEDIRS += $(AMAZON_FREERTOS_TESTS_DIR)/include \
 
 COMPONENT_OBJEXCLUDE += $(AMAZON_FREERTOS_ARF_PLUS_DIR)/aws/ota/test/aws_test_ota_cbor.o \
 
-COMPONENT_PRIV_INCLUDEDIRS += $(AMAZON_FREERTOS_3RD_PARTY_DIR)/unity/extras/fixture/src ${AMAZON_FREERTOS_SDK_DIR}/standard/mqtt/test/access
+COMPONENT_PRIV_INCLUDEDIRS += $(AMAZON_FREERTOS_3RD_PARTY_DIR)/unity/extras/fixture/src \
+        ${AMAZON_FREERTOS_SDK_DIR}/standard/mqtt/test/access \
+        ${AMAZON_FREERTOS_SDK_DIR}/standard/https/test/access
 
 # Define the board to pass the SOCKETS_Socket_InvalidTooManySockets test.
 CFLAGS += -DESP32
@@ -154,6 +163,7 @@ COMPONENT_SRCDIRS += ../.. \
     $(AMAZON_FREERTOS_DEMOS_DIR)/demo_runner \
     $(AMAZON_FREERTOS_DEMOS_DIR)/shadow \
     $(AMAZON_FREERTOS_DEMOS_DIR)/defender \
+    $(AMAZON_FREERTOS_DEMOS_DIR)/https \
     $(AMAZON_FREERTOS_DEMOS_DIR)/mqtt \
     $(AMAZON_FREERTOS_DEMOS_DIR)/mqtt_v4 \
     $(AMAZON_FREERTOS_DEMOS_DIR)/mqtt_v4/network/bluetooth \
diff --git a/vendors/espressif/boards/esp32/aws_tests/config_files/aws_test_runner_config.h b/vendors/espressif/boards/esp32/aws_tests/config_files/aws_test_runner_config.h
index 916109729..25dc4fc5b 100644
--- a/vendors/espressif/boards/esp32/aws_tests/config_files/aws_test_runner_config.h
+++ b/vendors/espressif/boards/esp32/aws_tests/config_files/aws_test_runner_config.h
@@ -32,8 +32,8 @@
 #define testrunnerUNSUPPORTED                       0
 
 /* Unsupported tests */
-#define testrunnerFULL_OTA_CBOR_ENABLED            testrunnerUNSUPPORTED
-#define testrunnerFULL_POSIX_ENABLED               testrunnerUNSUPPORTED
+#define testrunnerFULL_OTA_CBOR_ENABLED               testrunnerUNSUPPORTED
+#define testrunnerFULL_POSIX_ENABLED                  testrunnerUNSUPPORTED
 
 /* Enable tests by setting defines to 1 */
 #define testrunnerFULL_OTA_AGENT_ENABLED            0
@@ -62,5 +62,6 @@
 #define testrunnerFULL_LINEAR_CONTAINERS_ENABLED    0
 #define testrunnerUTIL_PLATFORM_THREADS_ENABLED     0
 #define testrunnerFULL_SERIALIZER_ENABLED           0
+#define testrunnerFULL_HTTPS_CLIENT_ENABLED         0
 
 #endif /* AWS_TEST_RUNNER_CONFIG_H */
diff --git a/vendors/espressif/boards/esp32/aws_tests/config_files/iot_test_pkcs11_config.h b/vendors/espressif/boards/esp32/aws_tests/config_files/iot_test_pkcs11_config.h
index 4186beac5..a7c59cb0a 100644
--- a/vendors/espressif/boards/esp32/aws_tests/config_files/iot_test_pkcs11_config.h
+++ b/vendors/espressif/boards/esp32/aws_tests/config_files/iot_test_pkcs11_config.h
@@ -138,4 +138,9 @@
  */
 #define pkcs11testLABEL_ROOT_CERTIFICATE                 pkcs11configLABEL_ROOT_CERTIFICATE
 
+/**
+ * @brief The size of the stack used for multithread tests.
+ */
+#define pkcs11testMULTI_TASK_STACK_SIZE                  4096
+
 #endif /* _AWS_TEST_PKCS11_CONFIG_H_ */
diff --git a/vendors/infineon/boards/xmc4800_iotkit/aws_demos/config_files/aws_demo_config.h b/vendors/infineon/boards/xmc4800_iotkit/aws_demos/config_files/aws_demo_config.h
index 56a24ced4..4d76dcdc1 100644
--- a/vendors/infineon/boards/xmc4800_iotkit/aws_demos/config_files/aws_demo_config.h
+++ b/vendors/infineon/boards/xmc4800_iotkit/aws_demos/config_files/aws_demo_config.h
@@ -35,6 +35,8 @@
  *          CONFIG_TCP_ECHO_CLIENT_DEMO_ENABLED
  *          CONFIG_DEFENDER_DEMO_ENABLED
  *          CONFIG_POSIX_DEMO_ENABLED
+ *          CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED
+ *          CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED
  *
  *  These defines are used in iot_demo_runner.h for demo selection */
 
diff --git a/vendors/infineon/boards/xmc4800_iotkit/aws_demos/config_files/iot_config.h b/vendors/infineon/boards/xmc4800_iotkit/aws_demos/config_files/iot_config.h
index 9d27ed1d3..6e78672a0 100644
--- a/vendors/infineon/boards/xmc4800_iotkit/aws_demos/config_files/iot_config.h
+++ b/vendors/infineon/boards/xmc4800_iotkit/aws_demos/config_files/iot_config.h
@@ -25,8 +25,8 @@
 #define IOT_CONFIG_H_
 
 /* MQTT demo configuration. */
-#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT    ( 10 )
-#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE     ( 2 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT       ( 10 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE        ( 2 )
 
 /* Shadow demo configuration. The demo publishes periodic Shadow updates and responds
  * to changing Shadows. */
@@ -45,9 +45,10 @@
 #define IOT_LOG_LEVEL_MQTT                      IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_SHADOW                IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_DEFENDER              IOT_LOG_INFO
+#define IOT_LOG_LEVEL_HTTPS                     IOT_LOG_INFO
 
 /* Platform thread priority. */
-#define IOT_THREAD_DEFAULT_PRIORITY      5
+#define IOT_THREAD_DEFAULT_PRIORITY             5
 
 /* Include the common configuration file for FreeRTOS. */
 #include "iot_config_common.h"
diff --git a/vendors/infineon/boards/xmc4800_iotkit/aws_tests/config_files/aws_test_runner_config.h b/vendors/infineon/boards/xmc4800_iotkit/aws_tests/config_files/aws_test_runner_config.h
index 1e926a434..d07132a87 100644
--- a/vendors/infineon/boards/xmc4800_iotkit/aws_tests/config_files/aws_test_runner_config.h
+++ b/vendors/infineon/boards/xmc4800_iotkit/aws_tests/config_files/aws_test_runner_config.h
@@ -38,12 +38,12 @@
 /* Enable tests by setting defines to 1 */
 #define testrunnerFULL_PKCS11_ENABLED              0
 #define testrunnerFULL_CRYPTO_ENABLED              0
-#define testrunnerFULL_TCP_ENABLED                 0
+#define testrunnerFULL_TCP_ENABLED                 1
 #define testrunnerFULL_GGD_ENABLED                 0
 #define testrunnerFULL_GGD_HELPER_ENABLED          0
 #define testrunnerFULL_SHADOWv4_ENABLED            0
 #define testrunnerFULL_SHADOW_ENABLED              0
-#define testrunnerFULL_MQTTv4_ENABLED              1
+#define testrunnerFULL_MQTTv4_ENABLED              0
 #define testrunnerFULL_MQTT_STRESS_TEST_ENABLED    0
 #define testrunnerFULL_MQTT_AGENT_ENABLED          0
 #define testrunnerFULL_MQTT_ENABLED                0
@@ -55,4 +55,6 @@
 #define testrunnerFULL_TASKPOOL_ENABLED            0
 #define testrunnerFULL_SERIALIZER_ENABLED          0
 #define testrunnerFULL_POSIX_ENABLED               0
+#define testrunnerFULL_HTTPS_CLIENT_ENABLED        0
+
 #endif /* AWS_TEST_RUNNER_CONFIG_H */
diff --git a/vendors/marvell/boards/mw300_rd/aws_demos/config_files/aws_demo_config.h b/vendors/marvell/boards/mw300_rd/aws_demos/config_files/aws_demo_config.h
index 91a02e18d..9da5675d8 100644
--- a/vendors/marvell/boards/mw300_rd/aws_demos/config_files/aws_demo_config.h
+++ b/vendors/marvell/boards/mw300_rd/aws_demos/config_files/aws_demo_config.h
@@ -35,6 +35,8 @@
  *          CONFIG_TCP_ECHO_CLIENT_DEMO_ENABLED
  *          CONFIG_DEFENDER_DEMO_ENABLED
  *          CONFIG_POSIX_DEMO_ENABLED
+ *          CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED
+ *          CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED
  *
  *  These defines are used in iot_demo_runner.h for demo selection */
 
diff --git a/vendors/marvell/boards/mw300_rd/aws_demos/config_files/iot_config.h b/vendors/marvell/boards/mw300_rd/aws_demos/config_files/iot_config.h
index acf91cbce..1173507dc 100644
--- a/vendors/marvell/boards/mw300_rd/aws_demos/config_files/iot_config.h
+++ b/vendors/marvell/boards/mw300_rd/aws_demos/config_files/iot_config.h
@@ -25,8 +25,8 @@
 #define IOT_CONFIG_H_
 
 /* MQTT demo configuration. */
-#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT    ( 10 )
-#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE     ( 2 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT       ( 10 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE        ( 2 )
 
 /* Shadow demo configuration. The demo publishes periodic Shadow updates and responds
  * to changing Shadows. */
@@ -45,10 +45,11 @@
 #define IOT_LOG_LEVEL_MQTT                      IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_SHADOW                IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_DEFENDER              IOT_LOG_INFO
+#define IOT_LOG_LEVEL_HTTPS                     IOT_LOG_INFO
 
 /* Platform thread stack size and priority. */
-#define IOT_THREAD_DEFAULT_STACK_SIZE    3840
-#define IOT_THREAD_DEFAULT_PRIORITY      5
+#define IOT_THREAD_DEFAULT_STACK_SIZE           3840
+#define IOT_THREAD_DEFAULT_PRIORITY             5
 
 /* Include the common configuration file for FreeRTOS. */
 #include "iot_config_common.h"
diff --git a/vendors/marvell/boards/mw300_rd/aws_tests/config_files/aws_test_runner_config.h b/vendors/marvell/boards/mw300_rd/aws_tests/config_files/aws_test_runner_config.h
index a5d62b7a5..ffd4857ff 100644
--- a/vendors/marvell/boards/mw300_rd/aws_tests/config_files/aws_test_runner_config.h
+++ b/vendors/marvell/boards/mw300_rd/aws_tests/config_files/aws_test_runner_config.h
@@ -27,7 +27,7 @@
 #define AWS_TEST_RUNNER_CONFIG_H
 
 /* Uncomment this line if you want to run AFQP tests only. */
-//#define testrunnerAFQP_ENABLED
+/*#define testrunnerAFQP_ENABLED */
 
 #define testrunnerUNSUPPORTED                      0
 
@@ -36,7 +36,7 @@
 #define testrunnerFULL_OTA_AGENT_ENABLED           0
 #define testrunnerFULL_OTA_PAL_ENABLED             0
 #define testrunnerFULL_MQTT_ALPN_ENABLED           0
-#define testrunnerFULL_PKCS11_ENABLED              1
+#define testrunnerFULL_PKCS11_ENABLED              0
 #define testrunnerFULL_CRYPTO_ENABLED              0
 #define testrunnerFULL_MQTT_STRESS_TEST_ENABLED    0
 #define testrunnerFULL_MQTT_AGENT_ENABLED          0
@@ -45,8 +45,9 @@
 #define testrunnerFULL_GGD_HELPER_ENABLED          0
 #define testrunnerFULL_SHADOW_ENABLED              0
 #define testrunnerFULL_MQTT_ENABLED                0
-#define testrunnerFULL_WIFI_ENABLED                1
+#define testrunnerFULL_WIFI_ENABLED                0
 #define testrunnerFULL_MEMORYLEAK_ENABLED          0
-#define testrunnerFULL_TLS_ENABLED                 1
+#define testrunnerFULL_TLS_ENABLED                 0
+#define testrunnerFULL_HTTPS_CLIENT_ENABLED        0
 
 #endif /* AWS_TEST_RUNNER_CONFIG_H */
diff --git a/vendors/mediatek/boards/mt7697hx-dev-kit/aws_demos/application_code/main.c b/vendors/mediatek/boards/mt7697hx-dev-kit/aws_demos/application_code/main.c
index ee2b70c92..740e119ac 100644
--- a/vendors/mediatek/boards/mt7697hx-dev-kit/aws_demos/application_code/main.c
+++ b/vendors/mediatek/boards/mt7697hx-dev-kit/aws_demos/application_code/main.c
@@ -53,6 +53,9 @@
 
 #define WIFI_FW_DEBUG_LOG_PORT
 
+/* Set the following to 1 to enable debugging. */
+#define MTK_DEBUGGER  0
+
 /**
  * @brief Application task startup hook for applications using Wi-Fi. If you are not
  * using Wi-Fi, then start network dependent applications in the vApplicationIPNetorkEventHook
@@ -94,6 +97,10 @@ static void prvMiscInitialization( void );
  */
 int main( void )
 {
+    #if ( MTK_DEBUGGER != 0 )
+        { volatile int wait_ice = 1 ; while ( wait_ice ) ; }
+    #endif
+
     /* Perform any hardware initialization that does not require the RTOS to be
      * running.  */
     prvMiscInitialization();
diff --git a/vendors/mediatek/boards/mt7697hx-dev-kit/aws_demos/config_files/aws_demo_config.h b/vendors/mediatek/boards/mt7697hx-dev-kit/aws_demos/config_files/aws_demo_config.h
index 5c9f72b8b..56572741a 100644
--- a/vendors/mediatek/boards/mt7697hx-dev-kit/aws_demos/config_files/aws_demo_config.h
+++ b/vendors/mediatek/boards/mt7697hx-dev-kit/aws_demos/config_files/aws_demo_config.h
@@ -36,6 +36,8 @@
  *          CONFIG_DEFENDER_DEMO_ENABLED
  *          CONFIG_POSIX_DEMO_ENABLED
  *          CONFIG_OTA_UPDATE_DEMO_ENABLED
+ *          CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED
+ *          CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED
  *
  *  These defines are used in iot_demo_runner.h for demo selection */
 
@@ -56,7 +58,7 @@
 #define democonfigMQTT_ECHO_TASK_PRIORITY                 ( tskIDLE_PRIORITY )
 
 /* Greengrass discovery example task parameters. */
-#define democonfigGREENGRASS_DISCOVERY_TASK_STACK_SIZE    ( configMINIMAL_STACK_SIZE * 5 )
+#define democonfigGREENGRASS_DISCOVERY_TASK_STACK_SIZE    ( configMINIMAL_STACK_SIZE * 8 )
 #define democonfigGREENGRASS_DISCOVERY_TASK_PRIORITY      ( tskIDLE_PRIORITY )
 
 
diff --git a/vendors/mediatek/boards/mt7697hx-dev-kit/aws_demos/config_files/iot_config.h b/vendors/mediatek/boards/mt7697hx-dev-kit/aws_demos/config_files/iot_config.h
index 55f5942d2..dd801e4b4 100644
--- a/vendors/mediatek/boards/mt7697hx-dev-kit/aws_demos/config_files/iot_config.h
+++ b/vendors/mediatek/boards/mt7697hx-dev-kit/aws_demos/config_files/iot_config.h
@@ -25,8 +25,8 @@
 #define IOT_CONFIG_H_
 
 /* MQTT demo configuration. */
-#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT    ( 10 )
-#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE     ( 2 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT       ( 10 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE        ( 2 )
 
 /* Shadow demo configuration. The demo publishes periodic Shadow updates and responds
  * to changing Shadows. */
@@ -45,10 +45,11 @@
 #define IOT_LOG_LEVEL_MQTT                      IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_SHADOW                IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_DEFENDER              IOT_LOG_INFO
+#define IOT_LOG_LEVEL_HTTPS                     IOT_LOG_INFO
 
 /* Set the task pool stack size and priority */
-#define IOT_THREAD_DEFAULT_STACK_SIZE    2048
-#define IOT_THREAD_DEFAULT_PRIORITY      5
+#define IOT_THREAD_DEFAULT_STACK_SIZE           2048
+#define IOT_THREAD_DEFAULT_PRIORITY             5
 
 /* Include the common configuration file for FreeRTOS. */
 #include "iot_config_common.h"
diff --git a/vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/application_code/main.c b/vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/application_code/main.c
index 7b618222d..884f9aece 100644
--- a/vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/application_code/main.c
+++ b/vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/application_code/main.c
@@ -53,6 +53,9 @@
 
 #define WIFI_FW_DEBUG_LOG_PORT
 
+/* Set the following to 1 to enable debugging. */
+#define MTK_DEBUGGER  0
+
 /**
  * @brief Application task startup hook for applications using Wi-Fi. If you are not
  * using Wi-Fi, then start network dependent applications in the vApplicationIPNetorkEventHook
@@ -92,6 +95,10 @@ static void prvMiscInitialization( void );
  */
 int main( void )
 {
+    #if ( MTK_DEBUGGER != 0 )
+        { volatile int wait_ice = 1 ; while ( wait_ice ) ; }
+    #endif
+
     /* Perform any hardware initialization that does not require the RTOS to be
      * running.  */
     prvMiscInitialization();
@@ -183,7 +190,7 @@ void vApplicationDaemonTaskStartupHook( void )
                      "RunTests_task",
                      mainTEST_RUNNER_TASK_STACK_SIZE,
                      NULL,
-                     tskIDLE_PRIORITY + 1,
+                     tskIDLE_PRIORITY,
                      NULL );
     }
 }
diff --git a/vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/config_files/FreeRTOSConfig.h b/vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/config_files/FreeRTOSConfig.h
index 14c259d6e..e9dd18575 100644
--- a/vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/config_files/FreeRTOSConfig.h
+++ b/vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/config_files/FreeRTOSConfig.h
@@ -52,7 +52,7 @@ CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 /* Hook function related definitions. */
 #define configUSE_TICK_HOOK                        0
 #define configUSE_IDLE_HOOK                        0
-#define configUSE_MALLOC_FAILED_HOOK               0
+#define configUSE_MALLOC_FAILED_HOOK               1
 #define configCHECK_FOR_STACK_OVERFLOW             2      /* Not applicable to the Win32 port. */
 
 #define configUSE_PORT_OPTIMISED_TASK_SELECTION    0
diff --git a/vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/config_files/aws_test_runner_config.h b/vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/config_files/aws_test_runner_config.h
index b2f3b7d5e..023f5cf8b 100644
--- a/vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/config_files/aws_test_runner_config.h
+++ b/vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/config_files/aws_test_runner_config.h
@@ -47,5 +47,6 @@
 #define testrunnerFULL_WIFI_ENABLED                0
 #define testrunnerFULL_MEMORYLEAK_ENABLED          0
 #define testrunnerFULL_TLS_ENABLED                 0
+#define testrunnerFULL_HTTPS_CLIENT_ENABLED        0
 
 #endif /* AWS_TEST_RUNNER_CONFIG_H */
diff --git a/vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/config_files/iot_config.h b/vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/config_files/iot_config.h
index 800ee538c..cff36ed8e 100644
--- a/vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/config_files/iot_config.h
+++ b/vendors/mediatek/boards/mt7697hx-dev-kit/aws_tests/config_files/iot_config.h
@@ -30,4 +30,10 @@
 /* Include the common configuration file for FreeRTOS. */
 #include "iot_config_common.h"
 
+/* Limit the number of Tx and Rx tasks to 1 for MQTT_Agent_MultiTaskTest.
+ * The default value is 2 which results in test failure because of malloc failure
+ * as we do not have enough RAM to do two simultaneous TLS handshakes. */
+#define mqttagenttestMULTI_TASK_TEST_NUM_RX_TASKS   1
+#define mqttagenttestMULTI_TASK_TEST_NUM_TX_TASKS   1
+
 #endif /* ifndef IOT_CONFIG_H_ */
diff --git a/vendors/mediatek/boards/mt7697hx-dev-kit/ports/wifi/iot_wifi.c b/vendors/mediatek/boards/mt7697hx-dev-kit/ports/wifi/iot_wifi.c
index 29b0ac319..46a6af6d2 100644
--- a/vendors/mediatek/boards/mt7697hx-dev-kit/ports/wifi/iot_wifi.c
+++ b/vendors/mediatek/boards/mt7697hx-dev-kit/ports/wifi/iot_wifi.c
@@ -1248,34 +1248,26 @@ WIFIReturnCode_t WIFI_Disconnect( void )
 
     xSemaphoreTake( _g_state.critical_section, portMAX_DELAY );
 
-    /*
-     * stop ip stack
-     */
-
-    _mtk_sta_ip_down( &_g_state );
-
     /*
      * early exit if already disconnected
      */
-
-    if( wifi_connection_get_link_status( &link_status ) >= 0 )
+    if( _g_state.connected == false )
     {
-        if( WIFI_STATUS_LINK_DISCONNECTED == link_status )
-        {
-            LOG_I( wifi, "%s: link down\n", __FUNCTION__ );
-            xSemaphoreGive( _g_state.critical_section );
-            return eWiFiSuccess;
-        }
-        else
-        {
-            LOG_I( wifi, "%s: link up\n", __FUNCTION__ );
-        }
+        LOG_I( wifi, "%s: Already disconnected.\n", __FUNCTION__ );
+        xSemaphoreGive( _g_state.critical_section );
+        return eWiFiSuccess;
     }
     else
     {
-        LOG_I( wifi, "%s: unable to get link status\n", __FUNCTION__ );
+        LOG_I( wifi, "%s: Connected. Proceeding to disconnect.\n", __FUNCTION__ );
     }
 
+    /*
+     * stop ip stack
+     */
+
+    _mtk_sta_ip_down( &_g_state );
+
     /*
      * disconnect AP
      */
diff --git a/vendors/mediatek/sdk/middleware/MTK/dhcpd/src/dhcpd.c b/vendors/mediatek/sdk/middleware/MTK/dhcpd/src/dhcpd.c
index 04c0c652c..5ad10d13c 100644
--- a/vendors/mediatek/sdk/middleware/MTK/dhcpd/src/dhcpd.c
+++ b/vendors/mediatek/sdk/middleware/MTK/dhcpd/src/dhcpd.c
@@ -1281,11 +1281,11 @@ void dhcpd_stop(void)
     dhcpd_mutex_lock();
     if (dhcpd_running == 1) {
         dhcpd_running = 0;
-        vTaskDelete(dhcpd_task_handle);
-        dhcpd_task_handle=0;
         wifi_connection_unregister_event_notifier(WIFI_EVENT_IOT_DISCONNECTED, dhcpd_wifi_api_rx_event_handler);
         close(dhcpd_socket);
         dhcpd_socket = -1;
+        vTaskDelete(dhcpd_task_handle);
+        dhcpd_task_handle=0;
 
 		dhcpd_release_alloc_info_lists();
 
diff --git a/vendors/microchip/boards/curiosity_pic32mzef/aws_demos/config_files/aws_demo_config.h b/vendors/microchip/boards/curiosity_pic32mzef/aws_demos/config_files/aws_demo_config.h
index ab03e1a66..10c4c64ef 100644
--- a/vendors/microchip/boards/curiosity_pic32mzef/aws_demos/config_files/aws_demo_config.h
+++ b/vendors/microchip/boards/curiosity_pic32mzef/aws_demos/config_files/aws_demo_config.h
@@ -36,6 +36,8 @@
  *          CONFIG_DEFENDER_DEMO_ENABLED
  *          CONFIG_POSIX_DEMO_ENABLED
  *          CONFIG_OTA_UPDATE_DEMO_ENABLED
+ *          CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED
+ *          CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED
  *
  *  These defines are used in iot_demo_runner.h for demo selection */
 
diff --git a/vendors/microchip/boards/curiosity_pic32mzef/aws_demos/config_files/iot_config.h b/vendors/microchip/boards/curiosity_pic32mzef/aws_demos/config_files/iot_config.h
index 9d27ed1d3..6e78672a0 100644
--- a/vendors/microchip/boards/curiosity_pic32mzef/aws_demos/config_files/iot_config.h
+++ b/vendors/microchip/boards/curiosity_pic32mzef/aws_demos/config_files/iot_config.h
@@ -25,8 +25,8 @@
 #define IOT_CONFIG_H_
 
 /* MQTT demo configuration. */
-#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT    ( 10 )
-#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE     ( 2 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT       ( 10 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE        ( 2 )
 
 /* Shadow demo configuration. The demo publishes periodic Shadow updates and responds
  * to changing Shadows. */
@@ -45,9 +45,10 @@
 #define IOT_LOG_LEVEL_MQTT                      IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_SHADOW                IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_DEFENDER              IOT_LOG_INFO
+#define IOT_LOG_LEVEL_HTTPS                     IOT_LOG_INFO
 
 /* Platform thread priority. */
-#define IOT_THREAD_DEFAULT_PRIORITY      5
+#define IOT_THREAD_DEFAULT_PRIORITY             5
 
 /* Include the common configuration file for FreeRTOS. */
 #include "iot_config_common.h"
diff --git a/vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_test_runner_config.h b/vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_test_runner_config.h
index 9a250cfc1..aba10f49b 100644
--- a/vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_test_runner_config.h
+++ b/vendors/microchip/boards/curiosity_pic32mzef/aws_tests/config_files/aws_test_runner_config.h
@@ -28,16 +28,16 @@
 /* Uncomment this line if you want to run AFQP tests only. */
 /* #define testrunnerAFQP_ENABLED */
 
-#define testrunnerUNSUPPORTED               0
+#define testrunnerUNSUPPORTED              0
 
 /* Unsupported tests. */
-#define testrunnerFULL_OTA_CBOR_ENABLED            testrunnerUNSUPPORTED
+#define testrunnerFULL_OTA_CBOR_ENABLED    testrunnerUNSUPPORTED
 
 /* Supported tests. 0 = Disabled, 1 = Enabled */
 
 /* This define should be available only if the Wi-Fi code is enabled. */
 #ifndef PIC32_USE_ETHERNET
-    #define testrunnerFULL_WIFI_ENABLED            0
+    #define testrunnerFULL_WIFI_ENABLED    0
 #endif
 
 /* clang-format off */
@@ -60,5 +60,6 @@
 #define testrunnerFULL_TLS_ENABLED                 0
 #define testrunnerFULL_OTA_AGENT_ENABLED           0
 #define testrunnerFULL_OTA_PAL_ENABLED             0
+#define testrunnerFULL_HTTPS_CLIENT_ENABLED        0
 
 #endif /* AWS_TEST_RUNNER_CONFIG_H */
diff --git a/vendors/nordic/boards/nrf52840-dk/CMakeLists.txt b/vendors/nordic/boards/nrf52840-dk/CMakeLists.txt
index b2aae10d0..5bef734d9 100644
--- a/vendors/nordic/boards/nrf52840-dk/CMakeLists.txt
+++ b/vendors/nordic/boards/nrf52840-dk/CMakeLists.txt
@@ -11,6 +11,15 @@ endif()
 
 set(AFR_MODULE_defender 0 CACHE INTERNAL "")
 
+# -------------------------------------------------------------------------------------------------
+# Amazon FreeRTOS disabled libraries
+# -------------------------------------------------------------------------------------------------
+
+# HTTPS is not supported for Nordic as this board does not have WiFi/Ethernet.
+afr_disable_public_modules(
+    https
+)
+
 # -------------------------------------------------------------------------------------------------
 # Amazon FreeRTOS Console metadata
 # -------------------------------------------------------------------------------------------------
diff --git a/vendors/nordic/boards/nrf52840-dk/aws_demos/application_code/main.c b/vendors/nordic/boards/nrf52840-dk/aws_demos/application_code/main.c
index c0fe2cc60..016e46b7c 100644
--- a/vendors/nordic/boards/nrf52840-dk/aws_demos/application_code/main.c
+++ b/vendors/nordic/boards/nrf52840-dk/aws_demos/application_code/main.c
@@ -57,9 +57,6 @@
 #include "app_uart.h"
 #include "queue.h"
 
-/* MQTT v4 include. */
-#include "iot_mqtt.h"
-
 #include "iot_ble.h"
 #include "iot_ble_numericComparison.h"
 #include "iot_network_manager_private.h"
diff --git a/vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_demo_config.h b/vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_demo_config.h
index e6b082263..ca0762121 100644
--- a/vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_demo_config.h
+++ b/vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/aws_demo_config.h
@@ -26,33 +26,35 @@
 #ifndef _AWS_DEMO_CONFIG_H_
 #define _AWS_DEMO_CONFIG_H_
 
-/* To run a particular demo you need to define one of these. 
-   Only one demo can be configured at a time
-            CONFIG_MQTT_DEMO_ENABLED
-            CONFIG_SHADOW_DEMO_ENABLED
-            CONFIG_GREENGRASS_DISCOVERY_DEMO_ENABLED
-            CONFIG_TCP_ECHO_CLIENT_DEMO_ENABLED
-            CONFIG_DEFENDER_DEMO_ENABLED
-            CONFIG_POSIX_DEMO_ENABLED
-            CONFIG_OTA_UPDATE_DEMO_ENABLED
-            
-    These defines are used in iot_demo_runner.h for demo selection */
-
-#define CONFIG_MQTT_DEMO_ENABLED 
+/* To run a particular demo you need to define one of these.
+ * Only one demo can be configured at a time
+ *          CONFIG_MQTT_DEMO_ENABLED
+ *          CONFIG_SHADOW_DEMO_ENABLED
+ *          CONFIG_GREENGRASS_DISCOVERY_DEMO_ENABLED
+ *          CONFIG_TCP_ECHO_CLIENT_DEMO_ENABLED
+ *          CONFIG_DEFENDER_DEMO_ENABLED
+ *          CONFIG_POSIX_DEMO_ENABLED
+ *          CONFIG_OTA_UPDATE_DEMO_ENABLED
+ *          CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED
+ *          CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED
+ *
+ *  These defines are used in iot_demo_runner.h for demo selection */
+
+#define CONFIG_MQTT_DEMO_ENABLED
 
 /* Default configuration for all demos. Individual demos can override these below */
-#define democonfigDEMO_STACKSIZE               ( configMINIMAL_STACK_SIZE * 20 )
-#define democonfigDEMO_PRIORITY                ( tskIDLE_PRIORITY + 5 )
-#define democonfigNETWORK_TYPES                ( AWSIOT_NETWORK_TYPE_WIFI )
+#define democonfigDEMO_STACKSIZE                       ( configMINIMAL_STACK_SIZE * 20 )
+#define democonfigDEMO_PRIORITY                        ( tskIDLE_PRIORITY + 5 )
+#define democonfigNETWORK_TYPES                        ( AWSIOT_NETWORK_TYPE_WIFI )
 
 
-#define democonfigSHADOW_DEMO_NUM_TASKS             ( 2 )
-#define democonfigSHADOW_DEMO_TASK_STACK_SIZE       ( configMINIMAL_STACK_SIZE * 4 )
-#define democonfigSHADOW_DEMO_TASK_PRIORITY         ( tskIDLE_PRIORITY + 1 )
-#define shadowDemoUPDATE_TASK_STACK_SIZE            ( configMINIMAL_STACK_SIZE * 5 )
+#define democonfigSHADOW_DEMO_NUM_TASKS                ( 2 )
+#define democonfigSHADOW_DEMO_TASK_STACK_SIZE          ( configMINIMAL_STACK_SIZE * 4 )
+#define democonfigSHADOW_DEMO_TASK_PRIORITY            ( tskIDLE_PRIORITY + 1 )
+#define shadowDemoUPDATE_TASK_STACK_SIZE               ( configMINIMAL_STACK_SIZE * 5 )
 
-#define democonfigMQTT_ECHO_TLS_NEGOTIATION_TIMEOUT pdMS_TO_TICKS( 12000 )
-#define democonfigMQTT_ECHO_TASK_PRIORITY           ( tskIDLE_PRIORITY )
+#define democonfigMQTT_ECHO_TLS_NEGOTIATION_TIMEOUT    pdMS_TO_TICKS( 12000 )
+#define democonfigMQTT_ECHO_TASK_PRIORITY              ( tskIDLE_PRIORITY )
 
 
 /* Number of sub pub tasks that connect to a broker that is not using TLS. */
@@ -72,9 +74,9 @@
 
 /* Timeout used when performing MQTT operations that do not need extra time
  * to perform a TLS negotiation. */
-#define democonfigMQTT_TIMEOUT                             pdMS_TO_TICKS( 2500 )
+#define democonfigMQTT_TIMEOUT                pdMS_TO_TICKS( 2500 )
 
 /* Send AWS IoT MQTT traffic encrypted. */
-#define democonfigMQTT_AGENT_CONNECT_FLAGS          	   ( mqttagentREQUIRE_TLS )
+#define democonfigMQTT_AGENT_CONNECT_FLAGS    ( mqttagentREQUIRE_TLS )
 
 #endif /* _AWS_DEMO_CONFIG_H_ */
diff --git a/vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/iot_config.h b/vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/iot_config.h
index 5931b57f4..ef203f537 100644
--- a/vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/iot_config.h
+++ b/vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_demos/config_files/iot_config.h
@@ -25,10 +25,10 @@
 #define IOT_CONFIG_H_
 
 /* How long the MQTT library will wait for PINGRESPs or PUBACKs. */
-#define IOT_MQTT_RESPONSE_WAIT_MS            ( 10000 )
+#define IOT_MQTT_RESPONSE_WAIT_MS               ( 10000 )
 /* MQTT demo configuration. */
-#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT    ( 10 )
-#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE     ( 2 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT       ( 10 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE        ( 2 )
 
 /* Shadow demo configuration. The demo publishes periodic Shadow updates and responds
  * to changing Shadows. */
@@ -47,10 +47,11 @@
 #define IOT_LOG_LEVEL_MQTT                      IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_SHADOW                IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_DEFENDER              IOT_LOG_INFO
+#define IOT_LOG_LEVEL_HTTPS                     IOT_LOG_INFO
 
 /* Set the task pool stack size and priority */
-#define IOT_THREAD_DEFAULT_STACK_SIZE    2048
-#define IOT_THREAD_DEFAULT_PRIORITY      5
+#define IOT_THREAD_DEFAULT_STACK_SIZE           2048
+#define IOT_THREAD_DEFAULT_PRIORITY             5
 #define IOT_MQTT_ENABLE_SERIALIZER_OVERRIDES    ( 0 )
 
 /* Include the common configuration file for FreeRTOS. */
diff --git a/vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/FreeRTOSConfig.h b/vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/FreeRTOSConfig.h
index 07b0cdfb2..7cf2aff82 100644
--- a/vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/FreeRTOSConfig.h
+++ b/vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/FreeRTOSConfig.h
@@ -28,6 +28,7 @@
 #define FREERTOS_CONFIG_H
 #include "unity_internals.h"
 #include "aws_test_runner_config.h"
+
 /*-----------------------------------------------------------
 * Application specific definitions.
 *
@@ -41,7 +42,7 @@
 *----------------------------------------------------------*/
 
 /* Ensure stdint is only used by the compiler, and not the assembler. */
-#if defined( __ICCARM__ ) || defined(__CC_ARM) || (defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)) || defined( __GNUC__ )
+#if defined( __ICCARM__ ) || defined( __CC_ARM ) || ( defined( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 ) ) || defined( __GNUC__ )
     #include <stdint.h>
     extern uint32_t SystemCoreClock;
 #endif
@@ -50,14 +51,14 @@
 
 #define configUSE_PREEMPTION                         1
 #define configUSE_IDLE_HOOK                          1
-#define configUSE_TICK_HOOK             1
+#define configUSE_TICK_HOOK                          1
 #define configUSE_TICKLESS_IDLE                      0
 #define configUSE_DAEMON_TASK_STARTUP_HOOK           1
 #define configCPU_CLOCK_HZ                           ( SystemCoreClock )
 #define configTICK_RATE_HZ                           ( ( TickType_t ) 1000 )
 #define configMAX_PRIORITIES                         ( 7 )
 #define configMINIMAL_STACK_SIZE                     ( ( uint16_t ) 100 )
-#define configTOTAL_HEAP_SIZE                        ( ( size_t ) ( 255 * 512 ) )//( 65 * 1024 ) )
+#define configTOTAL_HEAP_SIZE                        ( ( size_t ) ( 249 * 512 ) )
 #define configMAX_TASK_NAME_LEN                      ( 16 )
 #define configUSE_TRACE_FACILITY                     1
 #define configUSE_16_BIT_TICKS                       0
@@ -68,37 +69,37 @@
 #if defined(__ICCARM__)
 #define configCHECK_FOR_STACK_OVERFLOW               0      // IAR
 #else
-#define configCHECK_FOR_STACK_OVERFLOW               2      // Keil
+    #define configCHECK_FOR_STACK_OVERFLOW    2             /* Keil */
 #endif
-#define configUSE_RECURSIVE_MUTEXES                  1
-#define configUSE_MALLOC_FAILED_HOOK                 1
-#define configUSE_APPLICATION_TASK_TAG               1
-#define configUSE_COUNTING_SEMAPHORES                1
-#define configGENERATE_RUN_TIME_STATS                0
-//#define configRECORD_STACK_HIGH_ADDRESS              1
-#define configUSE_POSIX_ERRNO                        1
+#define configUSE_RECURSIVE_MUTEXES           1
+#define configUSE_MALLOC_FAILED_HOOK          1
+#define configUSE_APPLICATION_TASK_TAG        1
+#define configUSE_COUNTING_SEMAPHORES         1
+#define configGENERATE_RUN_TIME_STATS         0
+/*#define configRECORD_STACK_HIGH_ADDRESS              1 */
+#define configUSE_POSIX_ERRNO                 1
 
 /* Co-routine definitions. */
-#define configUSE_CO_ROUTINES                        0
-#define configMAX_CO_ROUTINE_PRIORITIES              ( 2 )
+#define configUSE_CO_ROUTINES                 0
+#define configMAX_CO_ROUTINE_PRIORITIES       ( 2 )
 
 /* Software timer definitions. */
-#define configUSE_TIMERS                             1
-#define configTIMER_TASK_PRIORITY                   ( configMAX_PRIORITIES - 2 )
-#define configTIMER_QUEUE_LENGTH                     2
-#define configTIMER_TASK_STACK_DEPTH                 ( configMINIMAL_STACK_SIZE * 2 )
+#define configUSE_TIMERS                      1
+#define configTIMER_TASK_PRIORITY             ( configMAX_PRIORITIES - 2 )
+#define configTIMER_QUEUE_LENGTH              2
+#define configTIMER_TASK_STACK_DEPTH          ( configMINIMAL_STACK_SIZE * 2 )
 
 /* Set the following definitions to 1 to include the API function, or zero
  * to exclude the API function. */
-#define INCLUDE_vTaskPrioritySet                     1
-#define INCLUDE_uxTaskPriorityGet                    1
-#define INCLUDE_vTaskDelete                          1
-#define INCLUDE_vTaskCleanUpResources                0
-#define INCLUDE_vTaskSuspend                         1
-#define INCLUDE_vTaskDelayUntil                      1
-#define INCLUDE_vTaskDelay                           1
-#define INCLUDE_xTaskGetSchedulerState               1
-#define INCLUDE_xSemaphoreGetMutexHolder             1
+#define INCLUDE_vTaskPrioritySet              1
+#define INCLUDE_uxTaskPriorityGet             1
+#define INCLUDE_vTaskDelete                   1
+#define INCLUDE_vTaskCleanUpResources         0
+#define INCLUDE_vTaskSuspend                  1
+#define INCLUDE_vTaskDelayUntil               1
+#define INCLUDE_vTaskDelay                    1
+#define INCLUDE_xTaskGetSchedulerState        1
+#define INCLUDE_xSemaphoreGetMutexHolder      1
 
 /* Cortex-M specific definitions. */
 #ifdef __NVIC_PRIO_BITS
@@ -128,26 +129,26 @@
 #define configMAX_SYSCALL_INTERRUPT_PRIORITY \
     ( configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY << ( 8 - configPRIO_BITS ) )
 
-#define configMAC_INTERRUPT_PRIORITY  (configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY + 1)
-    
+#define configMAC_INTERRUPT_PRIORITY    ( configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY + 1 )
+
 /* Normal assert() semantics without relying on the provision of an assert.h
  * header file. */
-#define configASSERT( x )                                        \
-    if( ( x ) == 0 )  TEST_ABORT()
+#define configASSERT( x ) \
+    if( ( x ) == 0 ) TEST_ABORT()
 
 /* Logging task definitions. */
 void vLoggingPrintf( const char * pcFormat,
                      ... );
 
 /* Map the FreeRTOS printf() to the logging task printf. */
-#define configPRINTF( x )          printf x //vLoggingPrintf x
+#define configPRINTF( x )    printf x       /*vLoggingPrintf x */
 
 
 /* Non-format version thread-safe print */
-#define configPRINT( X )                  vLoggingPrint( X )
+#define configPRINT( X )    vLoggingPrint( X )
 
 /* Map the logging task's printf to the board specific retarget output function. */
-#define configPRINT_STRING    printf
+#define configPRINT_STRING                          printf
 
 /* Sets the length of the buffers into which logging messages are written - so
  * also defines the maximum length of each log message. */
@@ -160,7 +161,7 @@ void vLoggingPrintf( const char * pcFormat,
 /* Pseudo random number generator, just used by demos so does not have to be
  * secure.  Do not use the standard C library rand() function as it can cause
  * unexpected behavior, such as calls to malloc(). */
-extern uint32_t numaker_ulRand(void);
+extern uint32_t numaker_ulRand( void );
 #define configRAND32()    numaker_ulRand()
 
 /* Demo specific macros that allow the application writer to insert code to be
@@ -170,7 +171,7 @@ extern uint32_t numaker_ulRand(void);
  * called pre and post the low power SLEEP mode being entered and exited.  These
  * macros can be used to turn turn off and on IO, clocks, the Flash etc. to obtain
  * the lowest power possible while the tick is off. */
-#if defined( __ICCARM__ ) || defined( __CC_ARM )|| (defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)) || defined( __GNUC__ )
+#if defined( __ICCARM__ ) || defined( __CC_ARM ) || ( defined( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 ) ) || defined( __GNUC__ )
     void vNuPreStopProcessing( void );
     void vNuPostStopProcessing( void );
 #endif /* defined(__ICCARM__) || defined(__CC_ARM) || defined(__GNUC__) */
@@ -180,14 +181,15 @@ extern uint32_t numaker_ulRand(void);
 
 /* Definitions that map the FreeRTOS port interrupt handlers to their CMSIS
  * standard names. */
-#define vPortSVCHandler SVC_Handler
-#define xPortPendSVHandler PendSV_Handler
+#define vPortSVCHandler               SVC_Handler
+#define xPortPendSVHandler            PendSV_Handler
 #define vHardFault_Handler            HardFault_Handler
-#define xPortSysTickHandler SysTick_Handler
+#define xPortSysTickHandler           SysTick_Handler
 
 /*********************************************
  * FreeRTOS specific demos
  ********************************************/
+
 /* If configINCLUDE_DEMO_DEBUG_STATS is set to one, then a few basic IP trace
  * macros are defined to gather some UDP stack statistics that can then be viewed
  * through the CLI interface. */
@@ -211,9 +213,9 @@ extern uint32_t numaker_ulRand(void);
  * results in the wired network being used, while setting
  * configNETWORK_INTERFACE_TO_USE to 2 results in the wireless network being
  * used. */
-#define configNETWORK_INTERFACE_TO_USE       4L//6L
+#define configNETWORK_INTERFACE_TO_USE       4L /*6L */
+
 
- 
 /* The address of an echo server that will be used by the two demo echo client
  * tasks.
  * http://www.freertos.org/FreeRTOS-Plus/FreeRTOS_Plus_TCP/TCP_Echo_Clients.html
@@ -225,7 +227,7 @@ extern uint32_t numaker_ulRand(void);
 #define configTCP_ECHO_CLIENT_PORT    7
 
 /* The platform FreeRTOS is running on. */
-#define configPLATFORM_NAME    "NuvotonNumakerM487"
+#define configPLATFORM_NAME           "NuvotonNumakerM487"
 
 /* Default MAC address configuration.  The demo creates a virtual network
  * connection that uses this MAC address by accessing the raw Ethernet/WiFi data
diff --git a/vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_test_runner_config.h b/vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_test_runner_config.h
index 70a1466bf..4e228bd07 100644
--- a/vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_test_runner_config.h
+++ b/vendors/nuvoton/boards/numaker_iot_m487_wifi/aws_tests/config_files/aws_test_runner_config.h
@@ -57,11 +57,12 @@
 #define testrunnerFULL_POSIX_ENABLED                  0
 #define testrunnerFULL_SHADOW_ENABLED                 0
 #define testrunnerFULL_SHADOWv4_ENABLED               0
-#define testrunnerFULL_TCP_ENABLED                    0
+#define testrunnerFULL_TCP_ENABLED                    1
 #define testrunnerFULL_TLS_ENABLED                    0
 #define testrunnerFULL_SERIALIZER_ENABLED             0
 #define testrunnerUTIL_PLATFORM_CLOCK_ENABLED         0
 #define testrunnerUTIL_PLATFORM_THREADS_ENABLED       0
+#define testrunnerFULL_HTTPS_CLIENT_ENABLED           0
 
 /* On systems using FreeRTOS+TCP (such as this one) the TCP segments must be
  * cleaned up before running the memory leak check. */
diff --git a/vendors/nxp/boards/lpc54018iotmodule/aws_demos/config_files/aws_demo_config.h b/vendors/nxp/boards/lpc54018iotmodule/aws_demos/config_files/aws_demo_config.h
index 6c870f81e..cd2672679 100644
--- a/vendors/nxp/boards/lpc54018iotmodule/aws_demos/config_files/aws_demo_config.h
+++ b/vendors/nxp/boards/lpc54018iotmodule/aws_demos/config_files/aws_demo_config.h
@@ -36,20 +36,22 @@
  *          CONFIG_DEFENDER_DEMO_ENABLED
  *          CONFIG_POSIX_DEMO_ENABLED
  *          CONFIG_OTA_UPDATE_DEMO_ENABLED
+ *          CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED
+ *          CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED
  *
  *  These defines are used in iot_demo_runner.h for demo selection */
 
 #define CONFIG_MQTT_DEMO_ENABLED
 
 /* Default configuration for all demos. Individual demos can override these below */
-#define democonfigDEMO_STACKSIZE                          ( configMINIMAL_STACK_SIZE * 15 )
+#define democonfigDEMO_STACKSIZE                          ( configMINIMAL_STACK_SIZE * 20 )
 #define democonfigDEMO_PRIORITY                           ( tskIDLE_PRIORITY + 1 )
 #define democonfigNETWORK_TYPES                           ( AWSIOT_NETWORK_TYPE_WIFI )
 
 #define democonfigSHADOW_DEMO_NUM_TASKS                   ( 2 )
-#define democonfigSHADOW_DEMO_TASK_STACK_SIZE             ( configMINIMAL_STACK_SIZE * 4 )
+#define democonfigSHADOW_DEMO_TASK_STACK_SIZE             ( configMINIMAL_STACK_SIZE * 15 )
 #define democonfigSHADOW_DEMO_TASK_PRIORITY               ( tskIDLE_PRIORITY + 1 )
-#define shadowDemoUPDATE_TASK_STACK_SIZE                  ( configMINIMAL_STACK_SIZE * 5 )
+#define shadowDemoUPDATE_TASK_STACK_SIZE                  ( configMINIMAL_STACK_SIZE * 10 )
 
 #define democonfigMQTT_ECHO_TLS_NEGOTIATION_TIMEOUT       pdMS_TO_TICKS( 12000 )
 #define democonfigMQTT_ECHO_TASK_STACK_SIZE               ( configMINIMAL_STACK_SIZE * 11 )
diff --git a/vendors/nxp/boards/lpc54018iotmodule/aws_demos/config_files/iot_config.h b/vendors/nxp/boards/lpc54018iotmodule/aws_demos/config_files/iot_config.h
index 2123efa22..65b190495 100644
--- a/vendors/nxp/boards/lpc54018iotmodule/aws_demos/config_files/iot_config.h
+++ b/vendors/nxp/boards/lpc54018iotmodule/aws_demos/config_files/iot_config.h
@@ -25,8 +25,8 @@
 #define IOT_CONFIG_H_
 
 /* MQTT demo configuration. */
-#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT    ( 10 )
-#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE     ( 2 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT       ( 10 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE        ( 2 )
 
 /* Shadow demo configuration. The demo publishes periodic Shadow updates and responds
  * to changing Shadows. */
@@ -45,10 +45,11 @@
 #define IOT_LOG_LEVEL_MQTT                      IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_SHADOW                IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_DEFENDER              IOT_LOG_INFO
+#define IOT_LOG_LEVEL_HTTPS                     IOT_LOG_INFO
 
 /* Platform thread stack size and priority. */
-#define IOT_THREAD_DEFAULT_STACK_SIZE    900
-#define IOT_THREAD_DEFAULT_PRIORITY      5
+#define IOT_THREAD_DEFAULT_STACK_SIZE           900
+#define IOT_THREAD_DEFAULT_PRIORITY             5
 
 /* Include the common configuration file for FreeRTOS. */
 #include "iot_config_common.h"
diff --git a/vendors/nxp/boards/lpc54018iotmodule/aws_tests/config_files/aws_test_runner_config.h b/vendors/nxp/boards/lpc54018iotmodule/aws_tests/config_files/aws_test_runner_config.h
index 5c8bc2fd7..d4af7d92d 100644
--- a/vendors/nxp/boards/lpc54018iotmodule/aws_tests/config_files/aws_test_runner_config.h
+++ b/vendors/nxp/boards/lpc54018iotmodule/aws_tests/config_files/aws_test_runner_config.h
@@ -50,6 +50,7 @@
 #define testrunnerFULL_MEMORYLEAK_ENABLED          0
 #define testrunnerFULL_TLS_ENABLED                 0
 #define testrunnerFULL_POSIX_ENABLED               0
+#define testrunnerFULL_HTTPS_CLIENT_ENABLED        0
 
 
 #endif /* AWS_TEST_RUNNER_CONFIG_H */
diff --git a/vendors/pc/boards/windows/aws_demos/config_files/FreeRTOSConfig.h b/vendors/pc/boards/windows/aws_demos/config_files/FreeRTOSConfig.h
index 10c365496..24d95eab5 100644
--- a/vendors/pc/boards/windows/aws_demos/config_files/FreeRTOSConfig.h
+++ b/vendors/pc/boards/windows/aws_demos/config_files/FreeRTOSConfig.h
@@ -124,7 +124,9 @@ void vConfigureTimerForRunTimeStats( void );
 /* Assert call defined for debug builds. */
 extern void vAssertCalled( const char * pcFile,
                            uint32_t ulLine );
+#ifndef configASSERT
 #define configASSERT( x )    if( ( x ) == 0 ) vAssertCalled( __FILE__, __LINE__ )
+#endif
 
 /* The function that implements FreeRTOS printf style output, and the macro
  * that maps the configPRINTF() macros to that function. */
diff --git a/vendors/pc/boards/windows/aws_demos/config_files/aws_demo_config.h b/vendors/pc/boards/windows/aws_demos/config_files/aws_demo_config.h
index 1ce2c0a3e..ae203e27b 100644
--- a/vendors/pc/boards/windows/aws_demos/config_files/aws_demo_config.h
+++ b/vendors/pc/boards/windows/aws_demos/config_files/aws_demo_config.h
@@ -36,6 +36,8 @@
  *          CONFIG_DEFENDER_DEMO_ENABLED
  *          CONFIG_POSIX_DEMO_ENABLED
  *          CONFIG_OTA_UPDATE_DEMO_ENABLED
+ *          CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED
+ *          CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED
  *
  *  These defines are used in iot_demo_runner.h for demo selection */
 
diff --git a/vendors/pc/boards/windows/aws_demos/config_files/iot_config.h b/vendors/pc/boards/windows/aws_demos/config_files/iot_config.h
index 307baa5f3..7cc27a67d 100644
--- a/vendors/pc/boards/windows/aws_demos/config_files/iot_config.h
+++ b/vendors/pc/boards/windows/aws_demos/config_files/iot_config.h
@@ -25,11 +25,11 @@
 #define IOT_CONFIG_H_
 
 /* How long the MQTT library will wait for PINGRESPs or PUBACKs. */
-#define IOT_MQTT_RESPONSE_WAIT_MS            ( 10000 )
+#define IOT_MQTT_RESPONSE_WAIT_MS               ( 10000 )
 
 /* MQTT demo configuration. */
-#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT    ( 10 )
-#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE     ( 2 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT       ( 10 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE        ( 2 )
 
 /* Shadow demo configuration. The demo publishes periodic Shadow updates and responds
  * to changing Shadows. */
@@ -48,10 +48,11 @@
 #define IOT_LOG_LEVEL_MQTT                      IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_SHADOW                IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_DEFENDER              IOT_LOG_INFO
+#define IOT_LOG_LEVEL_HTTPS                     IOT_LOG_INFO
 
 /* Platform thread stack size and priority. */
-#define IOT_THREAD_DEFAULT_STACK_SIZE    2048
-#define IOT_THREAD_DEFAULT_PRIORITY      5
+#define IOT_THREAD_DEFAULT_STACK_SIZE           2048
+#define IOT_THREAD_DEFAULT_PRIORITY             5
 
 /* Include the common configuration file for FreeRTOS. */
 #include "iot_config_common.h"
diff --git a/vendors/pc/boards/windows/aws_tests/config_files/aws_test_runner_config.h b/vendors/pc/boards/windows/aws_tests/config_files/aws_test_runner_config.h
index 7ea5d3561..06949cb62 100644
--- a/vendors/pc/boards/windows/aws_tests/config_files/aws_test_runner_config.h
+++ b/vendors/pc/boards/windows/aws_tests/config_files/aws_test_runner_config.h
@@ -61,6 +61,7 @@
 #define testrunnerFULL_SERIALIZER_ENABLED             0
 #define testrunnerUTIL_PLATFORM_CLOCK_ENABLED         0
 #define testrunnerUTIL_PLATFORM_THREADS_ENABLED       0
+#define testrunnerFULL_HTTPS_CLIENT_ENABLED           0
 
 /* On systems using FreeRTOS+TCP (such as this one) the TCP segments must be
  * cleaned up before running the memory leak check. */
diff --git a/vendors/renesas/boards/rx65n-rsk/aws_demos/config_files/aws_demo_config.h b/vendors/renesas/boards/rx65n-rsk/aws_demos/config_files/aws_demo_config.h
index 93ac4757a..19c1a5d33 100644
--- a/vendors/renesas/boards/rx65n-rsk/aws_demos/config_files/aws_demo_config.h
+++ b/vendors/renesas/boards/rx65n-rsk/aws_demos/config_files/aws_demo_config.h
@@ -36,6 +36,8 @@
  *          CONFIG_DEFENDER_DEMO_ENABLED
  *          CONFIG_POSIX_DEMO_ENABLED
  *          CONFIG_OTA_UPDATE_DEMO_ENABLED
+ *          CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED
+ *          CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED
  *
  *  These defines are used in iot_demo_runner.h for demo selection */
 
diff --git a/vendors/renesas/boards/rx65n-rsk/aws_demos/config_files/iot_config.h b/vendors/renesas/boards/rx65n-rsk/aws_demos/config_files/iot_config.h
index 226cef375..c4c1c18ab 100644
--- a/vendors/renesas/boards/rx65n-rsk/aws_demos/config_files/iot_config.h
+++ b/vendors/renesas/boards/rx65n-rsk/aws_demos/config_files/iot_config.h
@@ -25,11 +25,11 @@
 #define IOT_CONFIG_H_
 
 /* How long the MQTT library will wait for PINGRESPs or PUBACKs. */
-#define IOT_MQTT_RESPONSE_WAIT_MS            ( 10000 )
+#define IOT_MQTT_RESPONSE_WAIT_MS               ( 10000 )
 
 /* MQTT demo configuration. */
-#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT    ( 10 )
-#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE     ( 2 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT       ( 10 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE        ( 2 )
 
 /* Shadow demo configuration. The demo publishes periodic Shadow updates and responds
  * to changing Shadows. */
@@ -48,10 +48,11 @@
 #define IOT_LOG_LEVEL_MQTT                      IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_SHADOW                IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_DEFENDER              IOT_LOG_INFO
+#define IOT_LOG_LEVEL_HTTPS                     IOT_LOG_INFO
 
 /* Platform thread stack size and priority. */
-#define IOT_THREAD_DEFAULT_STACK_SIZE    1024
-#define IOT_THREAD_DEFAULT_PRIORITY      5
+#define IOT_THREAD_DEFAULT_STACK_SIZE           1024
+#define IOT_THREAD_DEFAULT_PRIORITY             5
 
 /* Include the common configuration file for FreeRTOS. */
 #include "iot_config_common.h"
diff --git a/vendors/renesas/boards/rx65n-rsk/aws_tests/config_files/aws_test_runner_config.h b/vendors/renesas/boards/rx65n-rsk/aws_tests/config_files/aws_test_runner_config.h
index eaeb5b7a8..ce005f26f 100644
--- a/vendors/renesas/boards/rx65n-rsk/aws_tests/config_files/aws_test_runner_config.h
+++ b/vendors/renesas/boards/rx65n-rsk/aws_tests/config_files/aws_test_runner_config.h
@@ -29,13 +29,13 @@
 /* Uncomment this line if you want to run AFQP tests only. */
 /* #define testrunnerAFQP_ENABLED */
 
-#define testrunnerUNSUPPORTED                      0
+#define testrunnerUNSUPPORTED               0
 
 /* Unsupported tests */
-#define testrunnerFULL_CBOR_ENABLED                testrunnerUNSUPPORTED
-#define testrunnerFULL_OTA_AGENT_ENABLED           testrunnerUNSUPPORTED
-#define testrunnerFULL_OTA_PAL_ENABLED             testrunnerUNSUPPORTED
-#define testrunnerFULL_WIFI_ENABLED                testrunnerUNSUPPORTED
+#define testrunnerFULL_CBOR_ENABLED         testrunnerUNSUPPORTED
+#define testrunnerFULL_OTA_AGENT_ENABLED    testrunnerUNSUPPORTED
+#define testrunnerFULL_OTA_PAL_ENABLED      testrunnerUNSUPPORTED
+#define testrunnerFULL_WIFI_ENABLED         testrunnerUNSUPPORTED
 
 /* Enable tests by setting defines to 1 */
 
@@ -51,5 +51,6 @@
 #define testrunnerFULL_MQTT_ENABLED                0
 #define testrunnerFULL_MEMORYLEAK_ENABLED          0
 #define testrunnerFULL_TLS_ENABLED                 0
+#define testrunnerFULL_HTTPS_CLIENT_ENABLED        0
 
 #endif /* AWS_TEST_RUNNER_CONFIG_H */
diff --git a/vendors/st/boards/stm32l475_discovery/aws_demos/application_code/main.c b/vendors/st/boards/stm32l475_discovery/aws_demos/application_code/main.c
index caa107651..469326bb3 100644
--- a/vendors/st/boards/stm32l475_discovery/aws_demos/application_code/main.c
+++ b/vendors/st/boards/stm32l475_discovery/aws_demos/application_code/main.c
@@ -656,7 +656,7 @@ int iMainRand32( void )
 static void prvInitializeHeap( void )
 {
     static uint8_t ucHeap1[ configTOTAL_HEAP_SIZE ];
-    static uint8_t ucHeap2[ 27 * 1024 ] __attribute__( ( section( ".freertos_heap2" ) ) );
+    static uint8_t ucHeap2[ 25 * 1024 ] __attribute__( ( section( ".freertos_heap2" ) ) );
 
     HeapRegion_t xHeapRegions[] =
     {
diff --git a/vendors/st/boards/stm32l475_discovery/aws_demos/config_files/aws_demo_config.h b/vendors/st/boards/stm32l475_discovery/aws_demos/config_files/aws_demo_config.h
index 45673d857..997b63bf8 100644
--- a/vendors/st/boards/stm32l475_discovery/aws_demos/config_files/aws_demo_config.h
+++ b/vendors/st/boards/stm32l475_discovery/aws_demos/config_files/aws_demo_config.h
@@ -36,6 +36,8 @@
  *          CONFIG_DEFENDER_DEMO_ENABLED
  *          CONFIG_POSIX_DEMO_ENABLED
  *          CONFIG_OTA_UPDATE_DEMO_ENABLED
+ *          CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED
+ *          CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED
  *
  *  These defines are used in iot_demo_runner.h for demo selection */
 
@@ -47,7 +49,7 @@
 #define democonfigNETWORK_TYPES                           ( AWSIOT_NETWORK_TYPE_WIFI )
 
 #define democonfigSHADOW_DEMO_NUM_TASKS                   ( 2 )
-#define democonfigSHADOW_DEMO_TASK_STACK_SIZE             ( configMINIMAL_STACK_SIZE * 4 )
+#define democonfigSHADOW_DEMO_TASK_STACK_SIZE             ( 1024 )
 #define democonfigSHADOW_DEMO_TASK_PRIORITY               ( tskIDLE_PRIORITY + 5 )
 #define shadowDemoUPDATE_TASK_STACK_SIZE                  ( configMINIMAL_STACK_SIZE * 5 )
 
diff --git a/vendors/st/boards/stm32l475_discovery/aws_demos/config_files/iot_config.h b/vendors/st/boards/stm32l475_discovery/aws_demos/config_files/iot_config.h
index 0c2f60149..4bf958615 100644
--- a/vendors/st/boards/stm32l475_discovery/aws_demos/config_files/iot_config.h
+++ b/vendors/st/boards/stm32l475_discovery/aws_demos/config_files/iot_config.h
@@ -25,8 +25,8 @@
 #define IOT_CONFIG_H_
 
 /* MQTT demo configuration. */
-#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT    ( 10 )
-#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE     ( 2 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT       ( 10 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE        ( 2 )
 
 /* Shadow demo configuration. The demo publishes periodic Shadow updates and responds
  * to changing Shadows. */
@@ -45,10 +45,11 @@
 #define IOT_LOG_LEVEL_MQTT                      IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_SHADOW                IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_DEFENDER              IOT_LOG_INFO
+#define IOT_LOG_LEVEL_HTTPS                     IOT_LOG_INFO
 
 /* Platform thread stack size and priority. */
-#define IOT_THREAD_DEFAULT_STACK_SIZE    2048
-#define IOT_THREAD_DEFAULT_PRIORITY      5
+#define IOT_THREAD_DEFAULT_STACK_SIZE           2048
+#define IOT_THREAD_DEFAULT_PRIORITY             5
 
 /* Include the common configuration file for FreeRTOS. */
 #include "iot_config_common.h"
diff --git a/vendors/st/boards/stm32l475_discovery/aws_tests/config_files/FreeRTOSConfig.h b/vendors/st/boards/stm32l475_discovery/aws_tests/config_files/FreeRTOSConfig.h
index 45be15cc2..512878491 100644
--- a/vendors/st/boards/stm32l475_discovery/aws_tests/config_files/FreeRTOSConfig.h
+++ b/vendors/st/boards/stm32l475_discovery/aws_tests/config_files/FreeRTOSConfig.h
@@ -56,7 +56,7 @@ CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #define configTICK_RATE_HZ                           ( ( TickType_t ) 1000 )
 #define configMAX_PRIORITIES                         ( 7 )
 #define configMINIMAL_STACK_SIZE                     ( ( uint16_t ) 256 )
-#define configTOTAL_HEAP_SIZE                        ( ( size_t ) ( 80 * 1024 ) )    /* 80 Kbytes. */
+#define configTOTAL_HEAP_SIZE                        ( ( size_t ) ( 78 * 1024 ) )    /* 78 Kbytes. */
 #define configMAX_TASK_NAME_LEN                      ( 16 )
 #define configUSE_TRACE_FACILITY                     1
 #define configUSE_16_BIT_TICKS                       0
diff --git a/vendors/st/boards/stm32l475_discovery/aws_tests/config_files/aws_test_runner_config.h b/vendors/st/boards/stm32l475_discovery/aws_tests/config_files/aws_test_runner_config.h
index 328894a89..e5a6dc0f9 100644
--- a/vendors/st/boards/stm32l475_discovery/aws_tests/config_files/aws_test_runner_config.h
+++ b/vendors/st/boards/stm32l475_discovery/aws_tests/config_files/aws_test_runner_config.h
@@ -53,5 +53,6 @@
 #define testrunnerFULL_MEMORYLEAK_ENABLED          0
 #define testrunnerFULL_TLS_ENABLED                 0
 #define testrunnerFULL_POSIX_ENABLED               0
+#define testrunnerFULL_HTTPS_CLIENT_ENABLED        0
 
 #endif /* AWS_TEST_RUNNER_CONFIG_H */
diff --git a/vendors/ti/boards/cc3220_launchpad/aws_demos/config_files/aws_demo_config.h b/vendors/ti/boards/cc3220_launchpad/aws_demos/config_files/aws_demo_config.h
index 8c5263fdc..ac99c4111 100644
--- a/vendors/ti/boards/cc3220_launchpad/aws_demos/config_files/aws_demo_config.h
+++ b/vendors/ti/boards/cc3220_launchpad/aws_demos/config_files/aws_demo_config.h
@@ -36,6 +36,8 @@
  *          CONFIG_DEFENDER_DEMO_ENABLED
  *          CONFIG_POSIX_DEMO_ENABLED
  *          CONFIG_OTA_UPDATE_DEMO_ENABLED
+ *          CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED
+ *          CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED
  *
  *  These defines are used in iot_demo_runner.h for demo selection */
 
@@ -52,7 +54,7 @@
 #endif
 
 #define democonfigSHADOW_DEMO_NUM_TASKS                ( 1 )
-#define democonfigSHADOW_DEMO_TASK_STACK_SIZE          ( configMINIMAL_STACK_SIZE * 4 )
+#define democonfigSHADOW_DEMO_TASK_STACK_SIZE          ( 1024 )
 #define democonfigSHADOW_DEMO_TASK_PRIORITY            ( tskIDLE_PRIORITY + 5 )
 #define shadowDemoUPDATE_TASK_STACK_SIZE               ( configMINIMAL_STACK_SIZE * 5 )
 
@@ -66,4 +68,6 @@
 /* Send AWS IoT MQTT traffic encrypted. */
 #define democonfigMQTT_AGENT_CONNECT_FLAGS             ( mqttagentREQUIRE_TLS )
 
+#define democonfigGREENGRASS_DISCOVERY_TASK_STACK_SIZE    ( configMINIMAL_STACK_SIZE * 14 )
+
 #endif /* _AWS_DEMO_CONFIG_H_ */
diff --git a/vendors/ti/boards/cc3220_launchpad/aws_demos/config_files/iot_config.h b/vendors/ti/boards/cc3220_launchpad/aws_demos/config_files/iot_config.h
index 59fb456a4..cb8179caa 100644
--- a/vendors/ti/boards/cc3220_launchpad/aws_demos/config_files/iot_config.h
+++ b/vendors/ti/boards/cc3220_launchpad/aws_demos/config_files/iot_config.h
@@ -28,8 +28,8 @@
 #include <stdbool.h>
 
 /* MQTT demo configuration. */
-#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT    ( 10 )
-#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE     ( 2 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT       ( 10 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE        ( 2 )
 
 /* Shadow demo configuration. The demo publishes periodic Shadow updates and responds
  * to changing Shadows. */
@@ -48,10 +48,11 @@
 #define IOT_LOG_LEVEL_MQTT                      IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_SHADOW                IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_DEFENDER              IOT_LOG_INFO
+#define IOT_LOG_LEVEL_HTTPS                     IOT_LOG_INFO
 
 /* Platform thread stack size and priority. */
-#define IOT_THREAD_DEFAULT_STACK_SIZE    2048
-#define IOT_THREAD_DEFAULT_PRIORITY      5
+#define IOT_THREAD_DEFAULT_STACK_SIZE           2048
+#define IOT_THREAD_DEFAULT_PRIORITY             5
 
 /* Include the common configuration file for FreeRTOS. */
 #include "iot_config_common.h"
diff --git a/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_test_runner_config.h b/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_test_runner_config.h
index effa6003d..43f5364a1 100644
--- a/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_test_runner_config.h
+++ b/vendors/ti/boards/cc3220_launchpad/aws_tests/config_files/aws_test_runner_config.h
@@ -41,8 +41,8 @@
 #define testrunnerFULL_TASKPOOL_ENABLED            0
 #define testrunnerFULL_MQTT_STRESS_TEST_ENABLED    0
 #define testrunnerFULL_MQTT_AGENT_ENABLED          0
-#define testrunnerFULL_MQTTv4_ENABLED              1
-#define testrunnerFULL_TCP_ENABLED                 0
+#define testrunnerFULL_MQTTv4_ENABLED              0
+#define testrunnerFULL_TCP_ENABLED                 1
 #define testrunnerFULL_GGD_ENABLED                 0
 #define testrunnerFULL_GGD_HELPER_ENABLED          0
 #define testrunnerFULL_SHADOW_ENABLED              0
@@ -53,5 +53,6 @@
 #define testrunnerFULL_OTA_AGENT_ENABLED           0
 #define testrunnerFULL_OTA_PAL_ENABLED             0
 #define testrunnerFULL_POSIX_ENABLED               0
+#define testrunnerFULL_HTTPS_CLIENT_ENABLED        0
 
 #endif /* AWS_TEST_RUNNER_CONFIG_H */
diff --git a/vendors/vendor/boards/board/aws_demos/config_files/aws_demo_config.h b/vendors/vendor/boards/board/aws_demos/config_files/aws_demo_config.h
index 9173342ad..fe407ba53 100644
--- a/vendors/vendor/boards/board/aws_demos/config_files/aws_demo_config.h
+++ b/vendors/vendor/boards/board/aws_demos/config_files/aws_demo_config.h
@@ -39,6 +39,8 @@
  *          CONFIG_OTA_UPDATE_DEMO_ENABLED
  *          CONFIG_BLE_GATT_SERVER_DEMO_ENABLED
  *          CONFIG_BLE_NUMERIC_COMPARISON_DEMO_ENABLED
+ *          CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED
+ *          CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED
  *
  *  These defines are used in iot_demo_runner.h for demo selection */
 
diff --git a/vendors/vendor/boards/board/aws_tests/config_files/aws_test_runner_config.h b/vendors/vendor/boards/board/aws_tests/config_files/aws_test_runner_config.h
index fd1197995..f0ffe6869 100644
--- a/vendors/vendor/boards/board/aws_tests/config_files/aws_test_runner_config.h
+++ b/vendors/vendor/boards/board/aws_tests/config_files/aws_test_runner_config.h
@@ -48,5 +48,6 @@
 #define testrunnerFULL_WIFI_ENABLED                0
 #define testrunnerFULL_MEMORYLEAK_ENABLED          0
 #define testrunnerFULL_TLS_ENABLED                 0
+#define testrunnerFULL_HTTPS_CLIENT_ENABLED        0
 
 #endif /* AWS_TEST_RUNNER_CONFIG_H */
diff --git a/vendors/xilinx/boards/microzed/aws_demos/config_files/aws_demo_config.h b/vendors/xilinx/boards/microzed/aws_demos/config_files/aws_demo_config.h
index 9c626f5ab..fb47cb52a 100644
--- a/vendors/xilinx/boards/microzed/aws_demos/config_files/aws_demo_config.h
+++ b/vendors/xilinx/boards/microzed/aws_demos/config_files/aws_demo_config.h
@@ -36,6 +36,8 @@
  *          CONFIG_DEFENDER_DEMO_ENABLED
  *          CONFIG_POSIX_DEMO_ENABLED
  *          CONFIG_OTA_UPDATE_DEMO_ENABLED
+ *          CONFIG_HTTPS_SYNC_DOWNLOAD_DEMO_ENABLED
+ *          CONFIG_HTTPS_ASYNC_DOWNLOAD_DEMO_ENABLED
  *
  *  These defines are used in iot_demo_runner.h for demo selection */
 
@@ -47,7 +49,7 @@
 #define democonfigNETWORK_TYPES                           ( AWSIOT_NETWORK_TYPE_ETH )
 
 #define democonfigSHADOW_DEMO_NUM_TASKS                   ( 2 )
-#define democonfigSHADOW_DEMO_TASK_STACK_SIZE             ( configMINIMAL_STACK_SIZE * 4 )
+#define democonfigSHADOW_DEMO_TASK_STACK_SIZE             ( 1024 )
 #define democonfigSHADOW_DEMO_TASK_PRIORITY               ( tskIDLE_PRIORITY )
 #define shadowDemoUPDATE_TASK_STACK_SIZE                  ( configMINIMAL_STACK_SIZE * 5 )
 
diff --git a/vendors/xilinx/boards/microzed/aws_demos/config_files/iot_config.h b/vendors/xilinx/boards/microzed/aws_demos/config_files/iot_config.h
index 59fb456a4..cb8179caa 100644
--- a/vendors/xilinx/boards/microzed/aws_demos/config_files/iot_config.h
+++ b/vendors/xilinx/boards/microzed/aws_demos/config_files/iot_config.h
@@ -28,8 +28,8 @@
 #include <stdbool.h>
 
 /* MQTT demo configuration. */
-#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT    ( 10 )
-#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE     ( 2 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_COUNT       ( 10 )
+#define IOT_DEMO_MQTT_PUBLISH_BURST_SIZE        ( 2 )
 
 /* Shadow demo configuration. The demo publishes periodic Shadow updates and responds
  * to changing Shadows. */
@@ -48,10 +48,11 @@
 #define IOT_LOG_LEVEL_MQTT                      IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_SHADOW                IOT_LOG_INFO
 #define AWS_IOT_LOG_LEVEL_DEFENDER              IOT_LOG_INFO
+#define IOT_LOG_LEVEL_HTTPS                     IOT_LOG_INFO
 
 /* Platform thread stack size and priority. */
-#define IOT_THREAD_DEFAULT_STACK_SIZE    2048
-#define IOT_THREAD_DEFAULT_PRIORITY      5
+#define IOT_THREAD_DEFAULT_STACK_SIZE           2048
+#define IOT_THREAD_DEFAULT_PRIORITY             5
 
 /* Include the common configuration file for FreeRTOS. */
 #include "iot_config_common.h"
diff --git a/vendors/xilinx/boards/microzed/aws_tests/config_files/aws_test_runner_config.h b/vendors/xilinx/boards/microzed/aws_tests/config_files/aws_test_runner_config.h
index 12fea0f19..5e2e5397d 100644
--- a/vendors/xilinx/boards/microzed/aws_tests/config_files/aws_test_runner_config.h
+++ b/vendors/xilinx/boards/microzed/aws_tests/config_files/aws_test_runner_config.h
@@ -27,7 +27,7 @@
 #define AWS_TEST_RUNNER_CONFIG_H
 
 /* Uncomment this line if you want to run AFQP tests only. */
-//#define testrunnerAFQP_ENABLED
+/*#define testrunnerAFQP_ENABLED */
 
 #define testrunnerUNSUPPORTED                      0
 
@@ -50,5 +50,6 @@
 #define testrunnerFULL_MQTT_ENABLED                0
 #define testrunnerFULL_MEMORYLEAK_ENABLED          0
 #define testrunnerFULL_TLS_ENABLED                 0
+#define testrunnerFULL_HTTPS_CLIENT_ENABLED        0
 
 #endif /* AWS_TEST_RUNNER_CONFIG_H */
